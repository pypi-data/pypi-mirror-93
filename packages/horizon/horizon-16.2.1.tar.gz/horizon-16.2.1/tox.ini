[tox]
minversion = 3.1
envlist = pep8,py27,py36,py37,py3-dj{111,21,22},releasenotes,npm
skipsdist = True
# Automatic envs (pyXX) will only use the python version appropriate to that
# env and ignore basepython inherited from [testenv] if we set
# ignore_basepython_conflict.
ignore_basepython_conflict = True

[testenv]
basepython = python3
usedevelop = True
setenv =
  VIRTUAL_ENV = {envdir}
  PYTHONDONTWRITEBYTECODE = 1
  PYTHONWARNINGS = once
  py{3,36,37}:PYTHONWARNINGS = once,ignore::ImportWarning:backports

whitelist_externals =
  bash
  find
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
commands =
  dj111: pip install django>=1.11,<2.0
  dj21: pip install django>=2.1,<2.2
  dj22: pip install django>=2.2,<2.3
  find . -type f -name "*.pyc" -delete
  bash {toxinidir}/tools/unit_tests.sh {envpython} {toxinidir} {posargs}

[testenv:lower-constraints]
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt

[testenv:venv]
commands = {posargs}

[testenv:pep8]
# NOTE: Due to doc dependencies, we don't share envdir with "venv".
# sphinx (precisely Pygments) needs to be installed to make doc8 work properly
deps =
  {[testenv]deps}
  -r{toxinidir}/doc/requirements.txt
setenv =
  DJANGO_SETTINGS_MODULE=openstack_dashboard.test.settings
commands =
  flake8 {posargs}
  {envpython} {toxinidir}/manage.py extract_messages --verbosity 0 --check-only
  bash {toxinidir}/tools/find_executables.sh
  doc8 doc/source releasenotes/source releasenotes/notes
  pylint -j 4 --verbose --rcfile=.pylintrc -f colorized openstack_dashboard openstack_auth horizon

[testenv:cover]
envdir = {toxworkdir}/venv
commands =
  coverage erase
  coverage run {toxinidir}/manage.py test horizon --settings=horizon.test.settings {posargs}
  coverage run -a {toxinidir}/manage.py test openstack_dashboard --settings=openstack_dashboard.test.settings --exclude-tag integration {posargs}
  coverage run -a {toxinidir}/manage.py test openstack_auth --settings=openstack_auth.tests.settings {posargs}
  coverage xml
  coverage html

[testenv:selenium]
envdir = {toxworkdir}/venv
setenv =
  {[testenv]setenv}
  WITH_SELENIUM=1
  SKIP_UNITTESTS=1

[testenv:selenium-headless]
envdir = {toxworkdir}/venv
setenv =
  {[testenv]setenv}
  SELENIUM_HEADLESS=1
  WITH_SELENIUM=1
  SKIP_UNITTESTS=1

[testenv:selenium-phantomjs]
envdir = {toxworkdir}/venv
setenv =
  {[testenv]setenv}
  SELENIUM_PHANTOMJS=1
  WITH_SELENIUM=1
  SKIP_UNITTESTS=1

[testenv:integration]
envdir = {toxworkdir}/venv
# Run integration tests only
passenv = AVCONV_INSTALLED
setenv =
  PYTHONHASHSEED=0
  INTEGRATION_TESTS=1
  SELENIUM_HEADLESS=1
commands = {envpython} {toxinidir}/manage.py test openstack_dashboard --settings=openstack_dashboard.test.settings --verbosity 2 --tag integration {posargs}

[testenv:npm]
passenv =
  HOME
  DISPLAY
commands =
  nodeenv -p
  npm install
  npm run {posargs:test}

[testenv:tests_system_packages]
# Provide an environment for system packagers that dont want anything from pip
# Any extra deps needed for this env can be passed by setting TOX_EXTRA_DEPS
sitepackages = True
passenv = TOX_EXTRA_DEPS http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
# Sets deps to an empty list so nothing is installed from pip
deps =
commands =
  pip install -U {env:TOX_EXTRA_DEPS:}
  {[testenv]commands}

[testenv:docs]
# We need to install horizon dependecies to build module references
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/train}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -W -b html doc/source doc/build/html

[testenv:pdf-docs]
basepython = python3
envdir = {toxworkdir}/docs
deps = {[testenv:docs]deps}
whitelist_externals =
  make
commands =
  sphinx-build -W -b latex doc/source doc/build/pdf
  make -C doc/build/pdf

[testenv:releasenotes]
envdir = {toxworkdir}/docs
deps = {[testenv:docs]deps}
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:manage]
envdir = {toxworkdir}/venv
commands = {envpython} {toxinidir}/manage.py {posargs}

[testenv:runserver]
envdir = {toxworkdir}/venv
commands =
    {envpython} {toxinidir}/manage.py compilemessages
    {envpython} {toxinidir}/manage.py collectstatic -c --noinput
    {envpython} {toxinidir}/manage.py runserver {posargs}

[testenv:bandit]
envdir = {toxworkdir}/venv
commands = bandit -r horizon openstack_auth openstack_dashboard -n5 -x tests -ll

[testenv:bandit-baseline]
envdir = {toxworkdir}/venv
commands = bandit-baseline -r horizon  openstack_auth openstack_dashboard -n5 -x tests -ii -ll

[flake8]
filename = *.py,django.wsgi
exclude = .git,.tox,dist,*lib/python*,*egg,build,panel_template,dash_template,local_settings.py,*/local/*,*/test/test_plugins/*,.ropeproject,node_modules,openstack_dashboard/enabled/*,horizon_wsgi.py
# W504 line break after binary operator
# (W503 and W504 are incompatible and we need to choose one of them.
#  Existing codes follows W503, so we disable W504.)
# F405 TEMPLATES may be undefined, or defined from star imports
# (because it is not easy to avoid this in openstack_dashboard.test.settings)
ignore = W504,F405
# Enable the following hacking rules which are disabled by default
# H106 Do not put vim configuration in source files.
# H203 Use assertIs(Not)None to check for None.
# H204 Use assert(Not)Equal to check for equality.
# H205 Use assert(Greater|Less)(Equal) for comparison.
# H904 Delay string interpolations at logging calls.
enable-extensions=H106,H203,H204,H205,H904
max-complexity = 20
max_line_length = 80

# flake8-import-order configurations
import-order-style = pep8
application-import-names = horizon,openstack_dashboard

[hacking]
local-check-factory = horizon.hacking.checks.factory

[doc8]
# File extensions to check
extensions = .rst, .yaml
# Maximal line length should be 80 but we have some overlong lines.
# Let's not get far more in.
max-line-length = 80
# Disable some doc8 checks:
# D000: Check RST validity
# - cannot handle "none" for code-block directive
ignore = D000
