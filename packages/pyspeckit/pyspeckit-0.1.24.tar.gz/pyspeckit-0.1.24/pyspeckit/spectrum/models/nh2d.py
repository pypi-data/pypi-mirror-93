"""
===========
NH2D fitter: ortho- and para- in the same file, but not modeled together
===========
Reference for line params:

F. Daniel et al. (2016) line frequencies and line strengths.
It includes HFS due to D
http://adsabs.harvard.edu/abs/2016A%26A...586L...4D

"""
from . import hyperfine
import astropy.units as u

freq_dict_cen ={
                'o-1_01-1_11':  85.926263e9,
                'p-1_01-1_11': 110.153599e9,
                'o-1_01-0_00': 332.82251e9,
                'p-1_01-0_00': 332.78189e9,
               }

freq_dict={
    ####### ortho-NH2D J=1_01-1_11
    'o-1_01-1_11_01': 85.924691e9,
    'o-1_01-1_11_02': 85.924749e9,
    'o-1_01-1_11_03': 85.924781e9,
    'o-1_01-1_11_04': 85.925273e9,
    'o-1_01-1_11_05': 85.925370e9,
    'o-1_01-1_11_06': 85.925644e9,
    'o-1_01-1_11_07': 85.925662e9,
    'o-1_01-1_11_08': 85.925688e9,
    'o-1_01-1_11_09': 85.925694e9,
    'o-1_01-1_11_10': 85.925702e9,
    'o-1_01-1_11_11': 85.925734e9,
    'o-1_01-1_11_12': 85.926186e9,
    'o-1_01-1_11_13': 85.926191e9,
    'o-1_01-1_11_14': 85.926212e9,
    'o-1_01-1_11_15': 85.926225e9,
    'o-1_01-1_11_16': 85.926243e9,
    'o-1_01-1_11_17': 85.926244e9,
    'o-1_01-1_11_18': 85.926270e9,
    'o-1_01-1_11_19': 85.926282e9,
    'o-1_01-1_11_20': 85.926284e9,
    'o-1_01-1_11_21': 85.926288e9,
    'o-1_01-1_11_22': 85.926301e9,
    'o-1_01-1_11_23': 85.926314e9,
    'o-1_01-1_11_24': 85.926323e9,
    'o-1_01-1_11_25': 85.926333e9,
    'o-1_01-1_11_26': 85.926806e9,
    'o-1_01-1_11_27': 85.926825e9,
    'o-1_01-1_11_28': 85.926864e9,
    'o-1_01-1_11_29': 85.926877e9,
    'o-1_01-1_11_30': 85.926904e9,
    'o-1_01-1_11_31': 85.926922e9,
    'o-1_01-1_11_32': 85.927104e9,
    'o-1_01-1_11_33': 85.927143e9,
    'o-1_01-1_11_34': 85.927698e9,
    'o-1_01-1_11_35': 85.927724e9,
    'o-1_01-1_11_36': 85.927743e9,
    ####### ortho-NH2D J=1_01-0_00
    'o-1_01-0_00_01': 332.780875e9,
    'o-1_01-0_00_02': 332.780875e9,
    'o-1_01-0_00_03': 332.780875e9,
    'o-1_01-0_00_04': 332.781695e9,
    'o-1_01-0_00_05': 332.781695e9,
    'o-1_01-0_00_06': 332.781695e9,
    'o-1_01-0_00_07': 332.781735e9,
    'o-1_01-0_00_08': 332.781793e9,
    'o-1_01-0_00_09': 332.781793e9,
    'o-1_01-0_00_10': 332.782285e9,
    'o-1_01-0_00_11': 332.782285e9,
    'o-1_01-0_00_12': 332.782285e9,
    'o-1_01-0_00_13': 332.782317e9,
    'o-1_01-0_00_14': 332.782317e9,
    'o-1_01-0_00_15': 332.782375e9,
    ####### para-NH2D J=1_01-1_11
    'p-1_01-1_11_01': 110.151982e9,
    'p-1_01-1_11_02': 110.152040e9,
    'p-1_01-1_11_03': 110.152072e9,
    'p-1_01-1_11_04': 110.152565e9,
    'p-1_01-1_11_05': 110.152662e9,
    'p-1_01-1_11_06': 110.152935e9,
    'p-1_01-1_11_07': 110.152954e9,
    'p-1_01-1_11_08': 110.152980e9,
    'p-1_01-1_11_09': 110.152986e9,
    'p-1_01-1_11_10': 110.152993e9,
    'p-1_01-1_11_11': 110.153025e9,
    'p-1_01-1_11_12': 110.153478e9,
    'p-1_01-1_11_13': 110.153484e9,
    'p-1_01-1_11_14': 110.153504e9,
    'p-1_01-1_11_15': 110.153517e9,
    'p-1_01-1_11_16': 110.153534e9,
    'p-1_01-1_11_17': 110.153536e9,
    'p-1_01-1_11_18': 110.153562e9,
    'p-1_01-1_11_19': 110.153574e9,
    'p-1_01-1_11_20': 110.153576e9,
    'p-1_01-1_11_21': 110.153580e9,
    'p-1_01-1_11_22': 110.153592e9,
    'p-1_01-1_11_23': 110.153606e9,
    'p-1_01-1_11_24': 110.153615e9,
    'p-1_01-1_11_25': 110.153625e9,
    'p-1_01-1_11_26': 110.154098e9,
    'p-1_01-1_11_27': 110.154117e9,
    'p-1_01-1_11_28': 110.154156e9,
    'p-1_01-1_11_29': 110.154170e9,
    'p-1_01-1_11_30': 110.154196e9,
    'p-1_01-1_11_31': 110.154215e9,
    'p-1_01-1_11_32': 110.154397e9,
    'p-1_01-1_11_33': 110.154437e9,
    'p-1_01-1_11_34': 110.154991e9,
    'p-1_01-1_11_35': 110.155017e9,
    'p-1_01-1_11_36': 110.155036e9,
    ####### para-NH2D J=1_01-0_00
    'p-1_01-0_00_01': 332.821618e9,
    'p-1_01-0_00_02': 332.821618e9,
    'p-1_01-0_00_03': 332.821618e9,
    'p-1_01-0_00_04': 332.822439e9,
    'p-1_01-0_00_05': 332.822439e9,
    'p-1_01-0_00_06': 332.822439e9,
    'p-1_01-0_00_07': 332.822479e9,
    'p-1_01-0_00_08': 332.822537e9,
    'p-1_01-0_00_09': 332.822537e9,
    'p-1_01-0_00_10': 332.823029e9,
    'p-1_01-0_00_11': 332.823029e9,
    'p-1_01-0_00_12': 332.823029e9,
    'p-1_01-0_00_13': 332.823062e9,
    'p-1_01-0_00_14': 332.823062e9,
    'p-1_01-0_00_15': 332.823120e9
    }


line_strength_dict = {
    ####### ortho-NH2D J=1_01-1_11
    'o-1_01-1_11_01': 0.01310,
    'o-1_01-1_11_02': 0.06187,
    'o-1_01-1_11_03': 0.03562,
    'o-1_01-1_11_04': 0.00016,
    'o-1_01-1_11_05': 0.00035,
    'o-1_01-1_11_06': 0.01595,
    'o-1_01-1_11_07': 0.01758,
    'o-1_01-1_11_08': 0.05965,
    'o-1_01-1_11_09': 0.04054,
    'o-1_01-1_11_10': 0.00064,
    'o-1_01-1_11_11': 0.00556,
    'o-1_01-1_11_12': 0.09296,
    'o-1_01-1_11_13': 0.00000,
    'o-1_01-1_11_14': 0.02677,
    'o-1_01-1_11_15': 0.02341,
    'o-1_01-1_11_16': 0.00798,
    'o-1_01-1_11_17': 0.01984,
    'o-1_01-1_11_18': 0.17288,
    'o-1_01-1_11_19': 0.03609,
    'o-1_01-1_11_20': 0.01423,
    'o-1_01-1_11_21': 0.01265,
    'o-1_01-1_11_22': 0.00934,
    'o-1_01-1_11_23': 0.01131,
    'o-1_01-1_11_24': 0.06547,
    'o-1_01-1_11_25': 0.00541,
    'o-1_01-1_11_26': 0.00769,
    'o-1_01-1_11_27': 0.03419,
    'o-1_01-1_11_28': 0.06657,
    'o-1_01-1_11_29': 0.01395,
    'o-1_01-1_11_30': 0.00325,
    'o-1_01-1_11_31': 0.01385,
    'o-1_01-1_11_32': 0.00002,
    'o-1_01-1_11_33': 0.00006,
    'o-1_01-1_11_34': 0.01043,
    'o-1_01-1_11_35': 0.06026,
    'o-1_01-1_11_36': 0.04034,
    ####### ortho-NH2D J=1_01-0_00
    'o-1_01-0_00_01': 0.06298,
    'o-1_01-0_00_02': 0.03129,
    'o-1_01-0_00_03': 0.01683,
    'o-1_01-0_00_04': 0.00007,
    'o-1_01-0_00_05': 0.04185,
    'o-1_01-0_00_06': 0.06918,
    'o-1_01-0_00_07': 0.25920,
    'o-1_01-0_00_08': 0.05735,
    'o-1_01-0_00_09': 0.12788,
    'o-1_01-0_00_10': 0.03796,
    'o-1_01-0_00_11': 0.04805,
    'o-1_01-0_00_12': 0.02509,
    'o-1_01-0_00_13': 0.05735,
    'o-1_01-0_00_14': 0.12788,
    'o-1_01-0_00_15': 0.03703,
    ####### para-NH2D J=1_01-1_11
    'p-1_01-1_11_01': 0.01310,
    'p-1_01-1_11_02': 0.06188,
    'p-1_01-1_11_03': 0.03562,
    'p-1_01-1_11_04': 0.00016,
    'p-1_01-1_11_05': 0.00035,
    'p-1_01-1_11_06': 0.01595,
    'p-1_01-1_11_07': 0.01758,
    'p-1_01-1_11_08': 0.05965,
    'p-1_01-1_11_09': 0.04054,
    'p-1_01-1_11_10': 0.00064,
    'p-1_01-1_11_11': 0.00556,
    'p-1_01-1_11_12': 0.09296,
    'p-1_01-1_11_13': 0.00000,
    'p-1_01-1_11_14': 0.02675,
    'p-1_01-1_11_15': 0.02341,
    'p-1_01-1_11_16': 0.00798,
    'p-1_01-1_11_17': 0.01984,
    'p-1_01-1_11_18': 0.17288,
    'p-1_01-1_11_19': 0.03609,
    'p-1_01-1_11_20': 0.01424,
    'p-1_01-1_11_21': 0.01266,
    'p-1_01-1_11_22': 0.00934,
    'p-1_01-1_11_23': 0.01131,
    'p-1_01-1_11_24': 0.06546,
    'p-1_01-1_11_25': 0.00541,
    'p-1_01-1_11_26': 0.00769,
    'p-1_01-1_11_27': 0.03419,
    'p-1_01-1_11_28': 0.06658,
    'p-1_01-1_11_29': 0.01395,
    'p-1_01-1_11_30': 0.00325,
    'p-1_01-1_11_31': 0.01385,
    'p-1_01-1_11_32': 0.00002,
    'p-1_01-1_11_33': 0.00006,
    'p-1_01-1_11_34': 0.01043,
    'p-1_01-1_11_35': 0.06026,
    'p-1_01-1_11_36': 0.04034,
    ####### para-NH2D J=1_01-0_00
    'p-1_01-0_00_01': 0.06298,
    'p-1_01-0_00_02': 0.03130,
    'p-1_01-0_00_03': 0.01683,
    'p-1_01-0_00_04': 0.00007,
    'p-1_01-0_00_05': 0.04185,
    'p-1_01-0_00_06': 0.06918,
    'p-1_01-0_00_07': 0.25920,
    'p-1_01-0_00_08': 0.05734,
    'p-1_01-0_00_09': 0.12788,
    'p-1_01-0_00_10': 0.03795,
    'p-1_01-0_00_11': 0.04805,
    'p-1_01-0_00_12': 0.02510,
    'p-1_01-0_00_13': 0.05734,
    'p-1_01-0_00_14': 0.12788,
    'p-1_01-0_00_15': 0.03703,
}

# Get offset velocity dictionary in km/s based on the lines frequencies and rest frequency
conv_o1_1=u.doppler_radio(freq_dict_cen['o-1_01-1_11']*u.Hz)
conv_p1_1=u.doppler_radio(freq_dict_cen['p-1_01-1_11']*u.Hz)
conv_o1_0=u.doppler_radio(freq_dict_cen['o-1_01-0_00']*u.Hz)
conv_p1_0=u.doppler_radio(freq_dict_cen['p-1_01-0_00']*u.Hz)

voff_lines_dict = {
    name: ((freq_dict[name]*u.Hz).to(u.km/u.s, equivalencies=conv_o1_1).value) for name in freq_dict.keys() if "o-1_01-1_11" in name
    }
voff_lines_dict.update({
	name: ((freq_dict[name]*u.Hz).to(u.km/u.s, equivalencies=conv_p1_1).value) for name in freq_dict.keys() if "p-1_01-1_11" in name
    })
voff_lines_dict.update({
	name: ((freq_dict[name]*u.Hz).to(u.km/u.s, equivalencies=conv_o1_0).value) for name in freq_dict.keys() if "o-1_01-0_00" in name
    })
voff_lines_dict.update({
	name: ((freq_dict[name]*u.Hz).to(u.km/u.s, equivalencies=conv_p1_0).value) for name in freq_dict.keys() if "p-1_01-0_00" in name
    })

# I don't know yet how to use this parameter... in CLASS it does not exist
# Note to Jaime: this is the sum of the degeneracy values for all hyperfines
# for a given line; it gives the relative weights between the J=2-1 and J=3-2
# lines, for example (the hyperfine weights are treated as normalized within
# one rotational transition)
wo1_1 = sum(val for name,val in line_strength_dict.items() if 'o-1_01-1_11' in name)
wp1_1 = sum(val for name,val in line_strength_dict.items() if 'p-1_01-1_11' in name)
wo1_0 = sum(val for name,val in line_strength_dict.items() if 'o-1_01-0_00' in name)
wp1_0 = sum(val for name,val in line_strength_dict.items() if 'p-1_01-0_00' in name)
relative_strength_total_degeneracy = {
    name : wo1_1 for name  in line_strength_dict.keys() if "o-1_01-1_11" in name
    }
relative_strength_total_degeneracy.update({
    name : wp1_1 for name  in line_strength_dict.keys() if "p-1_01-1_11" in name
    })
relative_strength_total_degeneracy.update({
    name : wo1_0 for name  in line_strength_dict.keys() if "o-1_01-0_00" in name
    })
relative_strength_total_degeneracy.update({
    name : wp1_0 for name  in line_strength_dict.keys() if "p-1_01-0_00" in name
    })
# Get the list of line names from the previous lists
line_names = [name for name in voff_lines_dict.keys()]

nh2d_vtau = hyperfine.hyperfinemodel(line_names, voff_lines_dict, freq_dict,
                                     line_strength_dict,
                                     relative_strength_total_degeneracy)
nh2d_vtau_fitter = nh2d_vtau.fitter
nh2d_vtau_vheight_fitter = nh2d_vtau.vheight_fitter
nh2d_vtau_tbg_fitter = nh2d_vtau.background_fitter
