from peek_abstract_chunked_data_loader._private.PluginNames import abstracDataLoaderFilt
from peek_abstract_chunked_data_loader._private.PluginNames import abstracDataLoaderObservableName
from peek_abstract_chunked_data_loader._private.server.controller.MainController import \
    MainController
from peek_abstract_chunked_data_loader._private.server.tuple_providers.LoaderStatusTupleProvider import \
    LoaderStatusTupleProvider
from peek_abstract_chunked_data_loader._private.tuples.LoaderStatusTuple import \
    LoaderStatusTuple
from vortex.handler.TupleDataObservableHandler import TupleDataObservableHandler


def makeTupleDataObservableHandler(ormSessionCreator, mainController: MainController):
    """" Make Tuple Data Observable Handler

    This method creates the observable object, registers the tuple providers and then
    returns it.

    :param mainController: The Main Controller
    :param ormSessionCreator: A function that returns a SQLAlchemy session when called

    :return: An instance of :code:`TupleDataObservableHandler`

    """
    tupleObservable = TupleDataObservableHandler(
        observableName=abstracDataLoaderObservableName,
        additionalFilt=abstracDataLoaderFilt)

    # Register TupleProviders here
    tupleObservable.addTupleProvider(LoaderStatusTuple.tupleName(),
                                     LoaderStatusTupleProvider(mainController))
    return tupleObservable
