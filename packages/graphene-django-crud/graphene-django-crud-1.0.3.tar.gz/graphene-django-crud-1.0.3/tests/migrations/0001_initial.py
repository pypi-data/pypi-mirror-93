# Generated by Django 3.1.5 on 2021-01-25 15:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ModelTestGenerateSchemaA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('binary_field', models.BinaryField()),
                ('boolean_field', models.BooleanField()),
                ('boolean_field_nullable', models.BooleanField(blank=True, null=True)),
                ('null_boolean_field', models.NullBooleanField()),
                ('char_field', models.CharField(max_length=100)),
                ('char_field_unique', models.CharField(max_length=100, unique=True)),
                ('char_field_nullable', models.CharField(blank=True, max_length=100, null=True)),
                ('date_field', models.DateField()),
                ('datetime_field', models.DateTimeField()),
                ('time_field', models.TimeField()),
                ('decimal_field', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_field', models.DurationField()),
                ('email_field', models.EmailField(max_length=254)),
                ('float_field', models.FloatField()),
                ('integer_field', models.IntegerField()),
                ('integer_field_unique', models.IntegerField(unique=True)),
                ('small_integer_field', models.SmallIntegerField()),
                ('small_integer_field_unique', models.SmallIntegerField(unique=True)),
                ('positive_integer_field', models.PositiveIntegerField()),
                ('positive_integer_field_unique', models.PositiveIntegerField(unique=True)),
                ('positive_big_integer_field', models.PositiveBigIntegerField()),
                ('positive_big_integer_field_unique', models.PositiveBigIntegerField(unique=True)),
                ('positive_small_integer_field', models.PositiveSmallIntegerField()),
                ('positive_small_integer_field_unique', models.PositiveSmallIntegerField(unique=True)),
                ('slug_field', models.SlugField()),
                ('slug_field_unique', models.SlugField(unique=True)),
                ('text_field', models.TextField()),
                ('text_field_nullable', models.TextField(blank=True, null=True)),
                ('url_field', models.URLField()),
                ('url_field_unique', models.URLField(unique=True)),
                ('uuid_field', models.UUIDField()),
                ('uuid_field_unique', models.UUIDField(unique=True)),
                ('foreign_key_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foreign_key_related', to='tests.modeltestgenerateschemaa')),
                ('manytomany_field', models.ManyToManyField(related_name='many_to_many_related', to='tests.ModelTestGenerateSchemaA')),
                ('one_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='one_to_one_related', to='tests.modeltestgenerateschemaa')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('father', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='childs', to='tests.person')),
                ('friends', models.ManyToManyField(related_name='_person_friends_+', to='tests.Person')),
            ],
        ),
        migrations.CreateModel(
            name='ModelTestGenerateSchemaB',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foreign_key_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foreign_key_B_related', to='tests.modeltestgenerateschemaa')),
                ('manytomany_field', models.ManyToManyField(related_name='many_to_many_B_related', to='tests.ModelTestGenerateSchemaA')),
                ('one_to_one_field', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='one_to_one_B_related', to='tests.modeltestgenerateschemaa')),
            ],
        ),
    ]
