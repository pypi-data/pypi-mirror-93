# coding: utf-8

"""
    Hydrogen Integration API

    The Hydrogen Integration API  # noqa: E501

    OpenAPI spec version: 1.2.1
    Contact: info@hydrogenplatform.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AccountingFinalResponseVO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'integration_type': 'str',
        'message': 'str',
        'nucleus_customer_revenues': 'list[AccountingCustomerRevenueResponseVO]',
        'nucleus_customers': 'list[AccountingCustomerResponseVO]',
        'nucleus_financial_statement': 'AccountingStatsResponseVO',
        'nucleus_invoice_payments': 'list[AccountingInvoicePaymentResponseVO]',
        'nucleus_invoices': 'list[AccountingInvoiceResponseVO]',
        'vendor_name': 'str'
    }

    attribute_map = {
        'integration_type': 'integration_type',
        'message': 'message',
        'nucleus_customer_revenues': 'nucleus_customer_revenues',
        'nucleus_customers': 'nucleus_customers',
        'nucleus_financial_statement': 'nucleus_financial_statement',
        'nucleus_invoice_payments': 'nucleus_invoice_payments',
        'nucleus_invoices': 'nucleus_invoices',
        'vendor_name': 'vendor_name'
    }

    def __init__(self, integration_type=None, message=None, nucleus_customer_revenues=None, nucleus_customers=None, nucleus_financial_statement=None, nucleus_invoice_payments=None, nucleus_invoices=None, vendor_name=None):  # noqa: E501
        """AccountingFinalResponseVO - a model defined in Swagger"""  # noqa: E501

        self._integration_type = None
        self._message = None
        self._nucleus_customer_revenues = None
        self._nucleus_customers = None
        self._nucleus_financial_statement = None
        self._nucleus_invoice_payments = None
        self._nucleus_invoices = None
        self._vendor_name = None
        self.discriminator = None

        if integration_type is not None:
            self.integration_type = integration_type
        if message is not None:
            self.message = message
        if nucleus_customer_revenues is not None:
            self.nucleus_customer_revenues = nucleus_customer_revenues
        if nucleus_customers is not None:
            self.nucleus_customers = nucleus_customers
        if nucleus_financial_statement is not None:
            self.nucleus_financial_statement = nucleus_financial_statement
        if nucleus_invoice_payments is not None:
            self.nucleus_invoice_payments = nucleus_invoice_payments
        if nucleus_invoices is not None:
            self.nucleus_invoices = nucleus_invoices
        if vendor_name is not None:
            self.vendor_name = vendor_name

    @property
    def integration_type(self):
        """Gets the integration_type of this AccountingFinalResponseVO.  # noqa: E501


        :return: The integration_type of this AccountingFinalResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._integration_type

    @integration_type.setter
    def integration_type(self, integration_type):
        """Sets the integration_type of this AccountingFinalResponseVO.


        :param integration_type: The integration_type of this AccountingFinalResponseVO.  # noqa: E501
        :type: str
        """

        self._integration_type = integration_type

    @property
    def message(self):
        """Gets the message of this AccountingFinalResponseVO.  # noqa: E501


        :return: The message of this AccountingFinalResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this AccountingFinalResponseVO.


        :param message: The message of this AccountingFinalResponseVO.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def nucleus_customer_revenues(self):
        """Gets the nucleus_customer_revenues of this AccountingFinalResponseVO.  # noqa: E501


        :return: The nucleus_customer_revenues of this AccountingFinalResponseVO.  # noqa: E501
        :rtype: list[AccountingCustomerRevenueResponseVO]
        """
        return self._nucleus_customer_revenues

    @nucleus_customer_revenues.setter
    def nucleus_customer_revenues(self, nucleus_customer_revenues):
        """Sets the nucleus_customer_revenues of this AccountingFinalResponseVO.


        :param nucleus_customer_revenues: The nucleus_customer_revenues of this AccountingFinalResponseVO.  # noqa: E501
        :type: list[AccountingCustomerRevenueResponseVO]
        """

        self._nucleus_customer_revenues = nucleus_customer_revenues

    @property
    def nucleus_customers(self):
        """Gets the nucleus_customers of this AccountingFinalResponseVO.  # noqa: E501


        :return: The nucleus_customers of this AccountingFinalResponseVO.  # noqa: E501
        :rtype: list[AccountingCustomerResponseVO]
        """
        return self._nucleus_customers

    @nucleus_customers.setter
    def nucleus_customers(self, nucleus_customers):
        """Sets the nucleus_customers of this AccountingFinalResponseVO.


        :param nucleus_customers: The nucleus_customers of this AccountingFinalResponseVO.  # noqa: E501
        :type: list[AccountingCustomerResponseVO]
        """

        self._nucleus_customers = nucleus_customers

    @property
    def nucleus_financial_statement(self):
        """Gets the nucleus_financial_statement of this AccountingFinalResponseVO.  # noqa: E501


        :return: The nucleus_financial_statement of this AccountingFinalResponseVO.  # noqa: E501
        :rtype: AccountingStatsResponseVO
        """
        return self._nucleus_financial_statement

    @nucleus_financial_statement.setter
    def nucleus_financial_statement(self, nucleus_financial_statement):
        """Sets the nucleus_financial_statement of this AccountingFinalResponseVO.


        :param nucleus_financial_statement: The nucleus_financial_statement of this AccountingFinalResponseVO.  # noqa: E501
        :type: AccountingStatsResponseVO
        """

        self._nucleus_financial_statement = nucleus_financial_statement

    @property
    def nucleus_invoice_payments(self):
        """Gets the nucleus_invoice_payments of this AccountingFinalResponseVO.  # noqa: E501


        :return: The nucleus_invoice_payments of this AccountingFinalResponseVO.  # noqa: E501
        :rtype: list[AccountingInvoicePaymentResponseVO]
        """
        return self._nucleus_invoice_payments

    @nucleus_invoice_payments.setter
    def nucleus_invoice_payments(self, nucleus_invoice_payments):
        """Sets the nucleus_invoice_payments of this AccountingFinalResponseVO.


        :param nucleus_invoice_payments: The nucleus_invoice_payments of this AccountingFinalResponseVO.  # noqa: E501
        :type: list[AccountingInvoicePaymentResponseVO]
        """

        self._nucleus_invoice_payments = nucleus_invoice_payments

    @property
    def nucleus_invoices(self):
        """Gets the nucleus_invoices of this AccountingFinalResponseVO.  # noqa: E501


        :return: The nucleus_invoices of this AccountingFinalResponseVO.  # noqa: E501
        :rtype: list[AccountingInvoiceResponseVO]
        """
        return self._nucleus_invoices

    @nucleus_invoices.setter
    def nucleus_invoices(self, nucleus_invoices):
        """Sets the nucleus_invoices of this AccountingFinalResponseVO.


        :param nucleus_invoices: The nucleus_invoices of this AccountingFinalResponseVO.  # noqa: E501
        :type: list[AccountingInvoiceResponseVO]
        """

        self._nucleus_invoices = nucleus_invoices

    @property
    def vendor_name(self):
        """Gets the vendor_name of this AccountingFinalResponseVO.  # noqa: E501


        :return: The vendor_name of this AccountingFinalResponseVO.  # noqa: E501
        :rtype: str
        """
        return self._vendor_name

    @vendor_name.setter
    def vendor_name(self, vendor_name):
        """Sets the vendor_name of this AccountingFinalResponseVO.


        :param vendor_name: The vendor_name of this AccountingFinalResponseVO.  # noqa: E501
        :type: str
        """

        self._vendor_name = vendor_name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AccountingFinalResponseVO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AccountingFinalResponseVO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
