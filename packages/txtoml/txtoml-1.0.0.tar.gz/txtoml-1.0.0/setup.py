# -*- coding: utf-8 -*-
from setuptools import setup

package_dir = \
{'': 'src'}

packages = \
['txtoml']

package_data = \
{'': ['*']}

install_requires = \
['click>=7.1.2,<8.0.0', 'toml>=0.10.2,<0.11.0']

entry_points = \
{'console_scripts': ['txtoml = txtoml.txtoml:txtoml']}

setup_kwargs = {
    'name': 'txtoml',
    'version': '1.0.0',
    'description': 'A command-line utility that allows you to quickly and easily copy dependencies from a Poetry pyproject.toml file to a pip requirements.txt file.',
    'long_description': '# txtoml\n\nA command-line utility that allows you to quickly and easily copy dependencies from a [Poetry pyproject.toml](https://python-poetry.org/docs/dependency-specification/)\nfile to a pip requirements.txt file.\n\n## Installation\n\n```\n$ pip install txtoml\n```\n\n## Usage\n\n```\n$ txtoml [SOURCE] [OUTPUT]\n```\n\nwhere `[SOURCE]` is the path to a `pyproject.toml` file and `[OUTPUT]` is the path to a `requirements.txt` file (txtoml\nwill create a `requirements.txt` file in the absence of one at the specified path, but the `pyproject.toml` file must\nalready exist).\n\nFor example, this:\n\n```toml\n# pyproject.toml\n\n[tool.poetry.dependencies]\npython = "^3.9.0"\nDjango = "^3.1.5"\nclick = "^7.1.2"\ntoml = "^0.10.2"\npathvalidate = "^2.3.2"\npath = "^15.0.1"\ncolorama = "^0.4.4"\ndj-database-url = "^0.5.0"\n```\n\nafter running this:\n\n```\n$ txtoml pyproject.toml requirements.txt\n```\n\nbecomes this:\n\n```requirements.txt\n# requirements.txt\n\n# Generated by txtoml on Fri Jan 29 at 15:48:43 UTC\n\n# Dependencies\nDjango>=3.1.5, <4.0.0\nclick>=7.1.2, <8.0.0\ntoml>=0.10.2, <0.11.0\npathvalidate>=2.3.2, <3.0.0\npath>=15.0.1, <16.0.0\ncolorama>=0.4.4, <0.5.0\ndj-database-url>=0.5.0, <0.6.0\n```\n\nIf you noticed the `python` dependency from the `pyproject.toml` file isn\'t present in the `requirements.txt` file,\nthat\'s intended behavior. Poetry automatically includes it in `pyproject.toml` files it generates, but pip will throw\nan error if you include it in a `requirements.txt`, so txtoml excludes it during the copying process.\n\n### Development Dependencies\n\nYou can append the `--include-dev` flag to the `txtoml` command to include dependencies that are listed as development\ndependencies in the `pyproject.toml` file.\n\nFor example, this:\n\n```toml\n# pyproject.toml\n\n[tool.poetry.dependencies]\npython = "^3.9.0"\nDjango = "^3.1.5"\nclick = "^7.1.2"\ntoml = "^0.10.2"\npathvalidate = "^2.3.2"\npath = "^15.0.1"\ncolorama = "^0.4.4"\ndj-database-url = "^0.5.0"\n\n[tool.poetry.dev-dependencies]\nSphinx = "^3.4.3"\nsphinx-rtd-theme = "^0.5.1"\nsphinx-click = "^2.5.0"\n```\n\nafter running this:\n\n```\n$ txtoml pyproject.toml requirements.txt --include-dev\n```\n\nbecomes this:\n\n```requirements.txt\n# requirements.txt\n\n# Generated by txtoml on Fri Jan 29 at 15:52:32 UTC\n\n# Dependencies\nDjango>=3.1.5, <4.0.0\nclick>=7.1.2, <8.0.0\ntoml>=0.10.2, <0.11.0\npathvalidate>=2.3.2, <3.0.0\npath>=15.0.1, <16.0.0\ncolorama>=0.4.4, <0.5.0\ndj-database-url>=0.5.0, <0.6.0\n\n# Development dependencies\nSphinx>=3.4.3, <4.0.0\nsphinx-rtd-theme>=0.5.1, <0.6.0\nsphinx-click>=2.5.0, <3.0.0\n```\n\n## Additional notes\n\ntxtoml does not support dependencies hosted on a repository other than the [Python Package Index](https://pypi.org),\nnor does it support more complex Poetry dependency specifications such as Python restricted dependencies or environment\nmarkers.\n\n\n## License\n\ntxtoml is released under the MIT License.',
    'author': 'Jason Tolbert Jr.',
    'author_email': 'jasonalantolbert@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/jasonalantolbert/txtoml',
    'package_dir': package_dir,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.9.0,<4.0.0',
}


setup(**setup_kwargs)
