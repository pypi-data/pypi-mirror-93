#!/bin/sh
set -eu

metadir={{ shlex_quote(_meta_directory) }}
num_subjobs={{ _num_subjobs }}

if test $num_subjobs -eq 1
then
    "$metadir/runscript" 0 1>"$metadir/stdout.0" 2>"$metadir/stderr.0" &
else
    dryerr=0
    echo '' | parallel --will-cite echo >/dev/null 2>&1 || dryerr=$?

    if test $dryerr -ne 0
    then
       err="GNU parallel is required to run concurrent jobs locally"
       if test $dryerr -ne 127
       then
           err="$err. An incompatible 'parallel' program (likely from moreutils) is installed."
       fi
       echo "$err" >&2
       exit 1
    fi

    # Use relative path to meta directory because that doesn't need any special
    # quoting, and the parallel call below wouldn't handle quoting properly.
    metadir_rel={{ shlex_quote(_meta_directory_rel) }}
    workdir={{ shlex_quote(working_directory) }}

    # Note: Orchestrator.submit() notifies the caller about the expectation to
    # cite GNU Parallel.
    cd "$workdir"
    seq 0 $(($num_subjobs - 1)) |
        parallel \
            --will-cite \
            -q \
            sh -c \
            "$metadir_rel/runscript {} 1>$metadir_rel/stdout.{} 2>$metadir_rel/stderr.{}" \
            1>"$metadir_rel/stdout" 2>"$metadir_rel/stderr" &
fi

RUNSCRIPT_PID=$!
printf "%d" $RUNSCRIPT_PID
