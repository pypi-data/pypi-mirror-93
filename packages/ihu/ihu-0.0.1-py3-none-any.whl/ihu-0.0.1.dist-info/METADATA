Metadata-Version: 2.1
Name: ihu
Version: 0.0.1
Summary: Evolve any unitary using solve_ivp
Home-page: https://github.com/TejasAvinashShetty/ihu/blob/master/
Author: Tejas Shetty
Author-email: tejas.shetty@iitb.ac.in
License: Apache Software License 2.0
Keywords: fast.ai nbdev quantum-mechanics quantum-computing quantum-control
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: fastcore
Requires-Dist: numpy
Requires-Dist: pytest
Requires-Dist: qutip
Requires-Dist: scipy
Requires-Dist: matplotlib

# ihu
> Evolve any unitary using solve_ivp


The package will allow you to evolve a unitary, give the
Hamiltonian. We assume closed system dynamics.
So, no lindbladians allowed !!!
One needs to give 
- unitary at time zero, 
- Hamiltonian as a function which depends on time.
- evolution time

From the unitary at time zero we will determine the
shape of the Unitary.
We hope that the hamiltonian that you provide will
be of same shape as that of the unitary

## Install

`pip install ihu`

## How to use

Fill me in please! Don't forget code examples:

```python
1+1
```




    2




