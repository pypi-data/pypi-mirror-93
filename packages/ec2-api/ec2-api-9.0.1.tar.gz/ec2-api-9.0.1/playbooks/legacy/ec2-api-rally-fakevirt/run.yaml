- hosts: all
  name: Autoconverted job legacy-ec2-api-rally-dsvm-fakevirt from old job ec2-api-rally-dsvm-fakevirt-ubuntu-xenial-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin ec2-api https://opendev.org/openstack/ec2-api
          enable_plugin rally https://opendev.org/openstack/rally

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PROJECTS="openstack/ec2-api $PROJECTS"
          export PROJECTS="openstack/rally $PROJECTS"
          export DEVSTACK_GATE_VIRT_DRIVER=fake
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_GATE_TEMPEST_NOTESTS=1

          export RALLY_SCENARIO=ec2-api-fakevirt
          export CEILOMETER_NOTIFICATION_TOPICS=notifications,profiler

          function post_test_hook {
              # run needed preparation steps for third-party project
              if [ -f $BASE/new/ec2-api/rally-scenarios/post_test_hook.sh ] ; then
                  $BASE/new/ec2-api/rally-scenarios/post_test_hook.sh
              fi
              $BASE/new/rally/tests/ci/rally-gate.sh
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
