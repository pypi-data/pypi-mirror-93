- hosts: all
  name: Autoconverted job legacy-ec2-api-functional-neutron-dsvm-full from old job
    ec2-api-functional-neutron-dsvm-full-ubuntu-xenial-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin ec2-api https://opendev.org/openstack/ec2-api
          enable_plugin neutron-tempest-plugin https://opendev.org/openstack/neutron-tempest-plugin
          TEMPEST_PLUGINS='/opt/stack/new/ec2api-tempest-plugin'
          RUN_LONG_TESTS=1

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=1
          export TEMPEST_CONCURRENCY=2
          export DEVSTACK_GATE_NEUTRON=1

          export PROJECTS="openstack/ec2-api $PROJECTS"
          export PROJECTS="x/swift3 $PROJECTS"
          export PROJECTS="openstack/neutron-tempest-plugin $PROJECTS"
          export ENABLED_SERVICES+=,swift3
          export PROJECTS="openstack/ec2api-tempest-plugin $PROJECTS"
          export DEVSTACK_GATE_TEMPEST_REGEX="ec2api_tempest_plugin"

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
