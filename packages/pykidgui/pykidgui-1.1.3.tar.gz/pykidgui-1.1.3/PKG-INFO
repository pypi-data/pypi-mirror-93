Metadata-Version: 2.1
Name: pykidgui
Version: 1.1.3
Summary: Simple gui de python para uso rapido e pratico / Simple python gui for quick and practical use
Home-page: https://github.com/ronanbastos/pykidgui
Author: Ronan Bastos
Author-email: Ronanbastos@hotmail.com
License: UNKNOWN
Description: With simple and dynamic goal you can create a direct access class layer using import pykidgui as pk, then Be able to create your interface using pk or even create without it using pure tkinter element. Basic commands are used to call the class tkinter.
        
        Line of logic is (pk.add_build_map = creating layer view // pk.new_checkbox = creating checkbox)
        #_________________________________________________
        
        Ex.: import pykidgui as pk
        
        def msg():
        	pk.new_message_erro("msg")
        
        pk.add_build_map ('checkbox: LEFT')
        
        
        pk.new_checkbox ('check2')
        
        
        pk.new_label("button 1")
        
        
        pk.add_build_map("label")
        
        
        pk.new_click_text("message teste") 
        
        
        pk.new_on_click(msg)
        
        
        pk.add_build_map("on_click")
        
        
        pk.new_label("button 2")
        
        
        pk.add_build_map("label")
        
        
        pk.new_click_text("Resultado")
        
        
        pk.new_on_click(x)
        
        
        pk.add_build_map("on_click")
        
        
        pk.text_title="test title"
        
        
        
        pk.window_geometry="200x200"
        
        #_________________________________________________
        
        pk.gui()
        Canvas simple script
        [without needing the gui()]
        
        import pykidgui as pk
        
        C = pk.Canvas(bg ="yellow",height = 250, width = 300) 
        
        line = C.create_line(108, 120,320, 40,fill ="green") 
        
        arc = C.create_arc(180, 150, 80, 210, start = 0,extent = 220,fill ="red") 
        
        oval = C.create_oval(80, 30, 140,150,fill ="blue") 
        
        C.pack()
        #_________________________________________________
        
        # Pk simple script
        [without needing the gui()]
        
        import pykidgui as pk
        
        pk.text_title = "TEST btn"
        
        
        pk.window_geometry = "200x200"
        
        
        pk.Label(text ="button1").pack()
        
        
        pk.Button(text="btn1").pack()
        
        
        pk.Label(text ="button2").pack()
        
        
        pk.Button(text="btn2").pack()
        Simple grid in pykidgui
        x1 = pk.Label(text ="user")
        e1 = pk.Entry()
        
        
        x1.grid(row=0,column=1)
        
        
        e1.grid(row=0, column=2)
        GET Entry in pykidgui
        def pri():
        	 user = pk.entry[0].get()
        
        	 print(user)
        
        pk.new_entry("0")
        
        
        pk.add_build_map("entry")
        
        
        pk.new_click_text("Resultado") 
        
        
        pk.new_on_click(pri)
        
        
        pk.add_build_map("on_click")
        
        pk.gui()
        #_________________________________________________
        
        [without needing the gui()]
        
        
        def http():
        	 user = e1.get()
        
        
        	 webbrowser.open(str(user), new=0, autoraise=True)
        
        
        	 print(user)
        
        
        import webbrowser
        
        e1 = pk.Entry()
        
        
        x1 = pk.Label(text ="link:")
        
        e1.grid(row=0, column=2)
        
        
        x1.grid(row=0,column=1)
        
        
        btn = pk.Button(text="Go",command =http)
        
        
        btn.grid(row=2,column=1)
        
        #_________________________________________________
        
         GET Entry Login in pykidgui
        
        def perfil():
        	  pk.messagebox.showinfo("Perfil", "Logado com sucesso!")
        
        def user():
        
        
        	 user = pk.entry[0].get()
        
        
        	 senha = pk.entry[1].get()
        
        
        	 if user == "ronan" and senha == "123":
        
        
        		  perfil()
        
        
        	 else:
        
        		 pk.messagebox.showwarning("Erro de Login", "Senha ou Usuario nÃ£o esta correto!")
        
        
        pk.new_label("Usuario")
        
        
        
        pk.add_build_map("label")
        
        
        pk.new_entry("1")
        
        
        pk.add_build_map("entry")
        
        
        pk.new_label("Senha")
        
        
        pk.add_build_map("label")
        
        
        pk.new_entry("2")
        
        #pk.add_build_map("entry:password") = *******
        
        pk.add_build_map("entry")
        
        
        pk.new_label("")
        
        
        pk.add_build_map("label")
        
        
        pk.new_click_text("login") 
        
        
        pk.new_on_click(user)
        
        
        pk.add_build_map("on_click")
        
        
        
        pk.text_title="Login"
        
        
        pk.window_geometry="200x200"
        
        
        pk.gui()
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
