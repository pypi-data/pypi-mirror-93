from airium import Airium, from_html_to_airium

PYTHON_LOGO_URL_SVG = "https://upload.wikimedia.org/wikipedia/commons/f/f8/Python_logo_and_wordmark.svg"


def test_hello_world(local_file):
    a = Airium('  ')
    a('<!DOCTYPE html>')
    with a.html(lang="pl"):
        with a.head():
            a.meta(charset="utf-8")
            a.title(_t="Airium example")

        with a.body():
            with a.h3(id="id23409231", klass='main_header'):
                a("Hello World.")

    reference = local_file('documents', 'hello_world.html')
    if not 'store':
        # you may enter here for regenerating test data
        reference.store(str(a))

    expected = reference.contents()
    assert str(a) == expected
    return reference


def test_backward(local_file):
    html_str = """\
<!DOCTYPE html>
<html lang="pl">
  <head>
    <meta charset="utf-8" />
    <title>Airium example</title>
  </head>
  <body>
    <h3 id="id23409231" class="main_header">
      Hello World.
    </h3>
  </body>
</html>
"""

    py_str = from_html_to_airium(html_str)
    assert py_str == """\
#!/usr/bin/env python
# File generated by reverse AIRIUM translator (version 0.2.2).
# Any change will be overridden on next run.
# flake8: noqa E501 (line too long)

from airium import Airium

a = Airium()

a('<!DOCTYPE html>')
with a.html(lang='pl'):
    with a.head():
        a.meta(charset='utf-8')
        a.title(_t='Airium example')
    with a.body():
        a.h3(klass='main_header', id='id23409231', _t='Hello World.')
"""


def test_boiler_plate(local_file):
    """ This is an airium implementation of W3 CSS "architect" template.
        Demo: https://www.w3schools.com/w3css/tryw3css_templates_architect.htm
        TryIt: https://www.w3schools.com/w3css/tryit.asp?filename=tryw3css_templates_architect&stacked=h
    """

    lorem_ipsum = """\
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
        eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip
        ex ea commodo consequat. Excepteur sint
              occaecat cupidatat non proident, sunt in culpa qui officia
        deserunt mollit anim id est laborum consectetur adipiscing elit, sed do
        eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
        minim veniam, quis nostrud exercitation ullamco
              laboris nisi ut aliquip ex ea commodo consequat."""

    a = Airium('  ')
    a('<!DOCTYPE html>')
    with a.html(lang="pl"):
        with a.head():
            a.meta(charset="utf-8")
            a.meta(name="viewport", content="width=device-width, initial-scale=1")
            a.title(_t="Airium example")
            a.link(rel="icon", href="/img/favicon.ico", type="image/png")
            a.link(rel="stylesheet", href="https://www.w3schools.com/w3css/4/w3.css")
            a.script(src="https://code.jquery.com/jquery-3.2.1.slim.min.js")

        with a.body():
            with a.div(klass="w3-top"):
                with a.div(klass="w3-bar w3-white w3-wide w3-padding w3-card"):
                    with a.a(href="#home", klass="w3-bar-item w3-button"):
                        a.b(_t="Airium")
                        a("HTML to python (and reverse) translator")

            with a.header(klass="w3-display-container w3-content w3-wide", style="max-width:1200px;", id="home"):
                a.img(klass="w3-image", src="https://www.w3schools.com/w3images/architect.jpg", alt="Architecture",
                      width="1500", height="800")

                with a.div(klass="w3-display-middle w3-margin-top w3-center"):
                    with a.div(klass="w3-xxlarge w3-text-dark-grey w3-padding w3-card w3-round-xlarge",
                               style="background: #FAFEFEC9;"):
                        a.b(_t="Airium")
                        with a.a(href="https://pypi.org/project/airium"):
                            a.img(klass="w3-image", src=PYTHON_LOGO_URL_SVG, width="100px")

            with a.div(klass="w3-content w3-padding", style="max-width:1564px"):
                with a.h3(klass="w3-border-bottom w3-border-light-grey w3-padding-16"):
                    a("That's just an example.")

                a(lorem_ipsum)

            with a.footer(klass="w3-center w3-black w3-padding-small"):
                with a.p(_t="Powered by "):
                    with a.a(href="https://www.w3schools.com/w3css/default.asp", title="W3.CSS", target="_blank",
                             klass="w3-hover-text-green"):
                        a("w3.css")
                    a("&")
                    with a.a(href="https://pypi.org/project/airium", title="Airium", target="_blank",
                             klass="w3-hover-text-green"):
                        a("Airium")

    reference = local_file('documents', 'boiler_plate.html')
    if not 'store':
        # you may enter here for regenerating test data
        reference.store(str(a))

    expected = reference.contents()
    assert str(a) == expected
