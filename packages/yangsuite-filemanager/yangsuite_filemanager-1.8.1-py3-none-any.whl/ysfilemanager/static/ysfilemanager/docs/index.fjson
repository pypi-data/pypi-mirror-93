{"parents": [], "prev": null, "next": {"link": "create_repository/", "title": "Constructing and populating a YANG module repository"}, "title": "Managing YANG module files in YANG Suite", "meta": {}, "body": "<div class=\"section\" id=\"managing-yang-module-files-in-yang-suite\">\n<h1>Managing YANG module files in YANG Suite<a class=\"headerlink\" href=\"#managing-yang-module-files-in-yang-suite\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>In YANG Suite, a <strong>\u201cYANG repository\u201d</strong> is a self-contained collection of\nrelated YANG models.\nIn general you might have one repository for each Cisco OS release,\none repository per class of routers or switches,\nor whatever other organizational method you find most convenient.</p>\n<p>Each YANG repository will have one or more associated YANG model sets.\nA <strong>\u201cYANG set\u201d</strong> is a subset of a YANG repository, consisting of a set of\nmodules of interest and any necessary dependencies they have.</p>\n<p>A YANG set could be as large as the entire repository\u2019s contents,\nbut it\u2019s often more efficient to narrow the set down to only the models that\nyou\u2019re really interested in for a given application. For example, you might\nhave a YANG repository of all models supported by the Cisco CSR 1000V platform\nrunning IOS XE 16.9.1, then have a YANG set for the models in this repository\nthat apply to BGP configuration and state, another YANG set (which may overlap\nwith the other set) for the models that apply to interface configuration and\nstate, a third YANG set containing only supported OpenConfig models, etc.</p>\n<p>For more information on how to create and manage both repositories and sets,\nrefer to the following pages.</p>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"create_repository/\">Constructing and populating a YANG module repository</a><ul>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"upload_schemas/\">Uploading YANG files from the local filesystem to a YANG repository</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"download_schemas/\">Downloading YANG files via NETCONF from a device to a YANG repository</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"scp_schemas/\">Copying YANG modules via SCP from a server to a YANG repository</a></li>\n<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"git_schemas/\">Importing YANG modules from a Git repository to a YANG repository</a></li>\n</ul>\n</li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"define_yangset/\">Defining a YANG module set</a></li>\n</ul>\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["create_repository", "Constructing and populating a YANG module repository", "N", "next"]], "sourcename": "index.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Managing YANG module files in YANG Suite</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "index", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.12"}