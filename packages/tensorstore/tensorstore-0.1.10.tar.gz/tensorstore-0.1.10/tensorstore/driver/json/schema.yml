$schema: http://json-schema.org/draft-07/schema#
$id: https://github.com/google/tensorstore/json-schema/driver/json
title: '``json`` Driver'
allOf:
- $ref: https://github.com/google/tensorstore/json-schema/tensorstore
- type: object
  properties:
    driver:
      const: json
    dtype:
      const: json
      description: |
        Optional.  If specified, must be :json:`"json"`.
    rank:
      const: 0
      description: |
        Optional.  If specified, must be :json:`0`.
    kvstore:
      $ref: https://github.com/google/tensorstore/json-schema/key-value-store
      description: >-
        Specifies the underlying storage mechanism.
    path:
      type: string
      examples:
      - path/to/data.json
      description: >-
        Path to the JSON file within the
        :json-schema:`https://github.com/google/tensorstore/json-schema/key-value-store`
        specified by :json-member:`kvstore`.
    cache_pool:
      $ref: https://github.com/google/tensorstore/json-schema/context-resource
      description: >-
        Specifies or references a previously defined
        :json-schema:`https://github.com/google/tensorstore/json-schema/context/cache_pool`.
        It is normally more convenient to specify a default
        :json-member:`cache_pool` in the :json-member:`context`.
      default: cache_pool
    data_copy_concurrency:
      $ref: https://github.com/google/tensorstore/json-schema/context-resource
      description: >-
        Specifies or references a previously defined
        :json-schema:`https://github.com/google/tensorstore/json-schema/context/data_copy_concurrency`.
        It is normally more convenient to specify a default
        :json-member:`data_copy_concurrency` in the :json-member:`context`.
      default: data_copy_concurrency
    recheck_cached_data:
      $ref: https://github.com/google/tensorstore/json-schema/cache-revalidation-bound
      default: "open"
      description: |
        Time after which cached data is assumed to be fresh.  Cached data older
        than the specified time is revalidated prior to being returned from a
        read operation.  Writes are always consistent regardless of the value of
        this option.

        Specifying :json:`true` means that the data will be revalidated prior to
        every read operation.  With the default value of :json:`"open"`, any
        cached data is revalidated when the TensorStore is opened but is not
        rechecked for each read operation.
    json_pointer:
      type: string
      default: ""
      description: |
        JSON Pointer (:rfc:`6901`) specifying a path within the JSON file.  With
        the default value of :json:`""`, read and write operations apply to the
        entire JSON file.  Specifying a non-empty pointer permits
        reading/writing a sub-value within the full JSON file.  For example, if
        the full JSON file contains :json:`{"a": {"b": 42}}`, specifying a
        :json-member:`json_pointer` of :json:`"/a/b"` refers to the value
        :json:`42`.  If the pointer refers to a non-existent member, read
        operations return an error.  Write operations attempt to create the
        member (and any ancestor objects), and return an error if the pointer is
        inconsistent with the existing value; for example, it is an error to
        write to a pointer that references a member of a non-object, non-array
        value.
examples:
- driver: json
  "kvstore":
    driver: gcs
    bucket: my-bucket
  path: path/to/attributes.json
  json_pointer: "/a/2/b"
