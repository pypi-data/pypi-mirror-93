- hosts: all
  name: manila-tempest-minimal-dsvm-cephfs-nfs
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin manila https://opendev.org/openstack/manila
          enable_plugin manila-tempest-plugin https://opendev.org/openstack/manila-tempest-plugin
          enable_plugin neutron-dynamic-routing https://opendev.org/openstack/neutron-dynamic-routing
          enable_plugin devstack-plugin-ceph https://opendev.org/openstack/devstack-plugin-ceph

          # Enable CephFS as the backend for Manila.
          ENABLE_CEPH_MANILA=True

          # Disable Ceph as the storage backend for Nova.
          ENABLE_CEPH_NOVA=False

          # Disable Ceph as the storage backend for Glance.
          ENABLE_CEPH_GLANCE=False

          # Disable Ceph as the storage backend for Cinder.
          ENABLE_CEPH_CINDER=False

          # Disable Ceph as the storage backend for Cinder backup.
          ENABLE_CEPH_C_BAK=False

          # Set native or NFS variant of ceph driver
          MANILA_CEPH_DRIVER=cephfsnfs

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_NEUTRON=1
          export DEVSTACK_PROJECT_FROM_GIT="python-manilaclient"
          export MANILA_INSTALL_TEMPEST_PLUGIN_SYSTEMWIDE=False
          export MANILA_ALLOW_NAS_SERVER_PORTS_ON_HOST=True

          export MANILA_SETUP_IPV6=True
          export RUN_MANILA_IPV6_TESTS=True

          # Basic services needed for minimal job
          OVERRIDE_ENABLED_SERVICES=key,mysql,rabbit,tempest
          # Enable glance for scenario tests
          OVERRIDE_ENABLED_SERVICES+=,g-api
          # Enable nova for scenario tests
          OVERRIDE_ENABLED_SERVICES+=,n-api,n-cpu,n-cond,n-sch,n-crt,n-cauth,n-obj
          # Enable neutron for scenario tests
          OVERRIDE_ENABLED_SERVICES+=,q-svc,q-dhcp,q-meta,q-l3,q-agt
          # Enable tls-proxy
          OVERRIDE_ENABLED_SERVICES+=,tls-proxy
          OVERRIDE_ENABLED_SERVICES+=,placement-api,placement-client
          export OVERRIDE_ENABLED_SERVICES

          # Keep localrc to be able to set some vars in pre_test_hook
          export KEEP_LOCALRC=1
          PROJECTS="openstack/devstack-plugin-ceph $PROJECTS"
          PROJECTS="openstack/manila-tempest-plugin $PROJECTS"
          PROJECTS="openstack/neutron-dynamic-routing $PROJECTS"
          export PROJECTS

          export DEVSTACK_GATE_USE_PYTHON3=True

          function pre_test_hook {
              # Configure Manila with a CephFS Native or NFS driver backend.
              # Refer to job-template pre_test_hook for more details on the
              # arguments.
              source $BASE/new/devstack-plugin-ceph/manila/pre_test_hook.sh \
                  false cephfsnfs singlebackend
          }
          export -f pre_test_hook

          function post_test_hook {
              # Configure and run Tempest API tests on Manila with a
              # CephFSNative driver backend.
              # Refer to job-template post_test_hook for more details on the
              # arguments.
              source $BASE/new/devstack-plugin-ceph/manila/post_test_hook.sh \
                  singlebackend cephfsnfs api_with_scenario
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
