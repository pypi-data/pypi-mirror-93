[metadata]
name = fluidsim
description = Framework for studying fluid dynamics with simulations.
keywords = Fluid dynamics, research
license = CeCILL License

[options]
python_requires = >= 3.6

[options.extras_require]
doc = 
	sphinx
	sphinx_rtd_theme
	numpydoc
	nbsphinx
	jupyter
	pandas
	scipy
fft = 
	pyfftw >= 0.10.4
	fluidfft >= 0.2.7
sphere = fluidsht >= 0.0.3a0
mpi = mpi4py
test = 
	pytest
	pytest-cov
	ipython
dev = 
	%(doc)s
	%(test)s
	%(mpi)s
	%(fft)s
	%(sphere)s
full = 
	%(dev)s

[options.entry_points]
console_scripts = 
	fluidsim = fluidsim.util.console.__main__:run
	fluidsim-create-xml-description = fluidsim.base.output:run
	fluidsim-profile = fluidsim.util.console.__main__:run_profile
	fluidsim-bench = fluidsim.util.console.__main__:run_bench
	fluidsim-bench-analysis = fluidsim.util.console.__main__:run_bench_analysis
	fluidsim-test = fluidsim.util.testing:run
fluidsim.solvers = 
	basil = fluidsim.base.basilisk.solver
	dedalus = fluidsim.base.dedalus.solver
	Base = fluidsim.base.solvers.base
	BasePS = fluidsim.base.solvers.pseudo_spect
	BaseSH = fluidsim.base.sphericalharmo.solver
	ad1d = fluidsim.solvers.ad1d.solver
	ad1d.pseudo_spect = fluidsim.solvers.ad1d.pseudo_spect.solver
	burgers1d = fluidsim.solvers.burgers1d.solver
	models0d.lorenz = fluidsim.solvers.models0d.lorenz.solver
	models0d.predaprey = fluidsim.solvers.models0d.predaprey.solver
	nl1d = fluidsim.solvers.nl1d.solver
	ns2d = fluidsim.solvers.ns2d.solver
	ns2d.bouss = fluidsim.solvers.ns2d.bouss.solver
	ns2d.strat = fluidsim.solvers.ns2d.strat.solver
	ns3d = fluidsim.solvers.ns3d.solver
	ns3d.bouss = fluidsim.solvers.ns3d.bouss.solver
	ns3d.strat = fluidsim.solvers.ns3d.strat.solver
	plate2d = fluidsim.solvers.plate2d.solver
	sphere.ns2d = fluidsim.solvers.sphere.ns2d.solver
	sphere.sw1l = fluidsim.solvers.sphere.sw1l.solver
	sw1l = fluidsim.solvers.sw1l.solver
	sw1l.exactlin = fluidsim.solvers.sw1l.exactlin.solver
	sw1l.exactlin.modified = fluidsim.solvers.sw1l.exactlin.modified.solver
	sw1l.modified = fluidsim.solvers.sw1l.modified.solver
	sw1l.onlywaves = fluidsim.solvers.sw1l.onlywaves.solver
	waves2d = fluidsim.solvers.waves2d.solver

[flake8]
ignore = E501,E225,E226,E303,E201,E202,E203,W503

[coverage:run]
source = 
	./fluidsim
	./lib
data_file = .coverage/coverage
omit = 
	*/test*.py
	*/try_*.py
	*/_old_*.py

[coverage:report]
show_missing = True
exclude_lines = 
	if __name__ == .__main__.:
	if "sphinx" in sys.modules:
	raise ValueError
	raise NotImplementedError
	except KeyError:
	except ImportError:
	except AttributeError:
	except NotImplementedError:

[coverage:html]
directory = .coverage

[coverage:xml]
output = .coverage/coverage.xml

[egg_info]
tag_build = 
tag_date = 0

