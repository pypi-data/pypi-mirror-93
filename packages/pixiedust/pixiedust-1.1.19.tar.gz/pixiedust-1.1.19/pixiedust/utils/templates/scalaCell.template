package com.ibm.pixiedust{{cl}}

import com.ibm.pixiedust._
import org.apache.spark.SparkContext
import org.apache.spark.sql.SQLContext
import collection.JavaConversions._

object PixiedustScalaRun {
    var sc:SparkContext = null;
    var sqlContext:SQLContext = null;

    {%for var,value in variables | iteritems %}
    {%if scalaVersion[1] >= 11%}@scala.beans.BeanProperty{%else%}@scala.reflect.BeanProperty{%endif%}
    var {{var}}:{{value["type"]}} = {{value["codeValue"] or "null"}};
    {%endfor%}

    def init(sc:SparkContext, sqlContext:SQLContext){
        this.sc = sc;
        this.sqlContext = sqlContext;
    }

    def runCell():Map[String, Any]={
        {{cell}}

        Map({%for var in returnVars%}{%if not loop.first%},{%endif%} "{{var}}"->{{var}} {%endfor%})
    }
}