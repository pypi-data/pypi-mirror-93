{"name": "test delete", "status": "broken", "statusDetails": {"message": "yaml.scanner.ScannerError: mapping values are not allowed here\n  in \"D:\\TestScriptDir\\opensourcetest\\opensourcetest\\httpmodel/Parameter\\Login\\Login.yaml\", line 34, column 11", "trace": "@pytest.fixture(scope=\"session\")\n    def token():\n        params = {\"username\": \"zouzou\", \"password\": \"zouzou\"}\n>       result = start_run_case(Login, 0, (\"status_code\", 200, \"GTE\"), json=params)\n\n..\\conftest.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Base\\requestEngine.py:19: in start_run_case\n    ost_req_resp = ost_http_runner(params_object, params_mark, base_url=BASE_URL, verify=VERIFY, checker=checker,\n..\\..\\builtin\\ostHttp.py:28: in ost_http_runner\n    params_obj = params_object()\n..\\Parameter\\yamlChoice.py:8: in __init__\n    super(Login, self).__init__(self.__class__.__name__)\n..\\..\\builtin\\autoParamInjection.py:29: in __init__\n    self.__read_yaml(*args)\n..\\..\\builtin\\autoParamInjection.py:58: in __read_yaml\n    self.interface_info = YamlFileOption().read_yaml(yaml_path)['parameters']\n..\\..\\common\\yamlOperation.py:29: in read_yaml\n    yaml_info = yaml.safe_load(fr)\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\__init__.py:162: in safe_load\n    return load(stream, SafeLoader)\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\__init__.py:114: in load\n    return loader.get_single_data()\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\constructor.py:49: in get_single_data\n    node = self.get_single_node()\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\composer.py:36: in get_single_node\n    document = self.compose_document()\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\composer.py:55: in compose_document\n    node = self.compose_node(None, None)\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\composer.py:84: in compose_node\n    node = self.compose_mapping_node(anchor)\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\composer.py:133: in compose_mapping_node\n    item_value = self.compose_node(node, item_key)\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\composer.py:82: in compose_node\n    node = self.compose_sequence_node(anchor)\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\composer.py:111: in compose_sequence_node\n    node.value.append(self.compose_node(node, index))\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\composer.py:84: in compose_node\n    node = self.compose_mapping_node(anchor)\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\composer.py:127: in compose_mapping_node\n    while not self.check_event(MappingEndEvent):\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\parser.py:98: in check_event\n    self.current_event = self.state()\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\parser.py:428: in parse_block_mapping_key\n    if self.check_token(KeyToken):\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\scanner.py:116: in check_token\n    self.fetch_more_tokens()\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\scanner.py:223: in fetch_more_tokens\n    return self.fetch_value()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <yaml.loader.SafeLoader object at 0x000002746E851790>\n\n    def fetch_value(self):\n    \n        # Do we determine a simple key?\n        if self.flow_level in self.possible_simple_keys:\n    \n            # Add KEY.\n            key = self.possible_simple_keys[self.flow_level]\n            del self.possible_simple_keys[self.flow_level]\n            self.tokens.insert(key.token_number-self.tokens_taken,\n                    KeyToken(key.mark, key.mark))\n    \n            # If this key starts a new block mapping, we need to add\n            # BLOCK-MAPPING-START.\n            if not self.flow_level:\n                if self.add_indent(key.column):\n                    self.tokens.insert(key.token_number-self.tokens_taken,\n                            BlockMappingStartToken(key.mark, key.mark))\n    \n            # There cannot be two simple keys one after another.\n            self.allow_simple_key = False\n    \n        # It must be a part of a complex key.\n        else:\n    \n            # Block context needs additional checks.\n            # (Do we really need them? They will be caught by the parser\n            # anyway.)\n            if not self.flow_level:\n    \n                # We are allowed to start a complex value if and only if\n                # we can start a simple key.\n                if not self.allow_simple_key:\n>                   raise ScannerError(None, None,\n                            \"mapping values are not allowed here\",\n                            self.get_mark())\nE                   yaml.scanner.ScannerError: mapping values are not allowed here\nE                     in \"D:\\TestScriptDir\\opensourcetest\\opensourcetest\\httpmodel/Parameter\\Login\\Login.yaml\", line 34, column 11\n\nC:\\Users\\luozhongwen\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\opensourcetest-6s4qBPQO-py3.8\\lib\\site-packages\\yaml\\scanner.py:577: ScannerError"}, "attachments": [{"name": "log", "source": "fc05c3f2-65fa-460d-9e33-ff2d3aec1aeb-attachment.txt", "type": "text/plain"}], "start": 1612144835369, "stop": 1612144835369, "uuid": "5e92ae6e-0801-4588-96af-e6df9d189fe9", "historyId": "cca860800731c9a85a6b304fd6e2e96e", "testCaseId": "2ff3b0c68c7eb03cb9bda3a95410e229", "fullName": "TestCases.test_login.TestLogin#test_delete", "labels": [{"name": "feature", "value": "Login"}, {"name": "severity", "value": "blocker"}, {"name": "story", "value": "Test delete"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-NTLLTVC"}, {"name": "thread", "value": "15800-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_login"}]}