# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


class Link(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'type': 'str',
        'url': 'str',
        'relative_url': 'str'
    }

    attribute_map = {
        'type': 'type',
        'url': 'url',
        'relative_url': 'relativeUrl'
    }

    def __init__(self, type=None, url=None, relative_url=None, teamcity=None):  # noqa: E501
        """Link - a model defined in Swagger"""  # noqa: E501

        self._type = None
        self._url = None
        self._relative_url = None
        self.discriminator = None

        if type is not None:
            self.type = type
        if url is not None:
            self.url = url
        if relative_url is not None:
            self.relative_url = relative_url
        super(Link, self).__init__(teamcity=teamcity)

    @property
    def type(self):
        """Gets the type of this Link.  # noqa: E501


        :return: The type of this Link.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Link.


        :param type: The type of this Link.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def url(self):
        """Gets the url of this Link.  # noqa: E501


        :return: The url of this Link.  # noqa: E501
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Link.


        :param url: The url of this Link.  # noqa: E501
        :type: str
        """

        self._url = url

    @property
    def relative_url(self):
        """Gets the relative_url of this Link.  # noqa: E501


        :return: The relative_url of this Link.  # noqa: E501
        :rtype: str
        """
        return self._relative_url

    @relative_url.setter
    def relative_url(self, relative_url):
        """Sets the relative_url of this Link.


        :param relative_url: The relative_url of this Link.  # noqa: E501
        :type: str
        """

        self._relative_url = relative_url
