# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.stack_trace_element import StackTraceElement  # noqa: F401,E501
# from dohq_teamcity.models.throwable import Throwable  # noqa: F401,E501


class Exception(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'cause': 'Throwable',
        'stack_trace': 'list[StackTraceElement]',
        'message': 'str',
        'localized_message': 'str',
        'suppressed': 'list[Throwable]'
    }

    attribute_map = {
        'cause': 'cause',
        'stack_trace': 'stackTrace',
        'message': 'message',
        'localized_message': 'localizedMessage',
        'suppressed': 'suppressed'
    }

    def __init__(self, cause=None, stack_trace=None, message=None, localized_message=None, suppressed=None, teamcity=None):  # noqa: E501
        """Exception - a model defined in Swagger"""  # noqa: E501

        self._cause = None
        self._stack_trace = None
        self._message = None
        self._localized_message = None
        self._suppressed = None
        self.discriminator = None

        if cause is not None:
            self.cause = cause
        if stack_trace is not None:
            self.stack_trace = stack_trace
        if message is not None:
            self.message = message
        if localized_message is not None:
            self.localized_message = localized_message
        if suppressed is not None:
            self.suppressed = suppressed
        super(Exception, self).__init__(teamcity=teamcity)

    @property
    def cause(self):
        """Gets the cause of this Exception.  # noqa: E501


        :return: The cause of this Exception.  # noqa: E501
        :rtype: Throwable
        """
        return self._cause

    @cause.setter
    def cause(self, cause):
        """Sets the cause of this Exception.


        :param cause: The cause of this Exception.  # noqa: E501
        :type: Throwable
        """

        self._cause = cause

    @property
    def stack_trace(self):
        """Gets the stack_trace of this Exception.  # noqa: E501


        :return: The stack_trace of this Exception.  # noqa: E501
        :rtype: list[StackTraceElement]
        """
        return self._stack_trace

    @stack_trace.setter
    def stack_trace(self, stack_trace):
        """Sets the stack_trace of this Exception.


        :param stack_trace: The stack_trace of this Exception.  # noqa: E501
        :type: list[StackTraceElement]
        """

        self._stack_trace = stack_trace

    @property
    def message(self):
        """Gets the message of this Exception.  # noqa: E501


        :return: The message of this Exception.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Exception.


        :param message: The message of this Exception.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def localized_message(self):
        """Gets the localized_message of this Exception.  # noqa: E501


        :return: The localized_message of this Exception.  # noqa: E501
        :rtype: str
        """
        return self._localized_message

    @localized_message.setter
    def localized_message(self, localized_message):
        """Sets the localized_message of this Exception.


        :param localized_message: The localized_message of this Exception.  # noqa: E501
        :type: str
        """

        self._localized_message = localized_message

    @property
    def suppressed(self):
        """Gets the suppressed of this Exception.  # noqa: E501


        :return: The suppressed of this Exception.  # noqa: E501
        :rtype: list[Throwable]
        """
        return self._suppressed

    @suppressed.setter
    def suppressed(self, suppressed):
        """Sets the suppressed of this Exception.


        :param suppressed: The suppressed of this Exception.  # noqa: E501
        :type: list[Throwable]
        """

        self._suppressed = suppressed
