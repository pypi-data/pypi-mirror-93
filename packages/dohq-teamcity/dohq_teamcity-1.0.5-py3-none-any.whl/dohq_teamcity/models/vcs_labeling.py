# coding: utf-8

from dohq_teamcity.custom.base_model import TeamCityObject


# from dohq_teamcity.models.vcs_roots import VcsRoots  # noqa: F401,E501


class VcsLabeling(TeamCityObject):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'label_name': 'str',
        'type': 'str',
        'branch_filter': 'str',
        'vcs_roots': 'VcsRoots'
    }

    attribute_map = {
        'label_name': 'labelName',
        'type': 'type',
        'branch_filter': 'branchFilter',
        'vcs_roots': 'vcsRoots'
    }

    def __init__(self, label_name=None, type=None, branch_filter=None, vcs_roots=None, teamcity=None):  # noqa: E501
        """VcsLabeling - a model defined in Swagger"""  # noqa: E501

        self._label_name = None
        self._type = None
        self._branch_filter = None
        self._vcs_roots = None
        self.discriminator = None

        if label_name is not None:
            self.label_name = label_name
        if type is not None:
            self.type = type
        if branch_filter is not None:
            self.branch_filter = branch_filter
        if vcs_roots is not None:
            self.vcs_roots = vcs_roots
        super(VcsLabeling, self).__init__(teamcity=teamcity)

    @property
    def label_name(self):
        """Gets the label_name of this VcsLabeling.  # noqa: E501


        :return: The label_name of this VcsLabeling.  # noqa: E501
        :rtype: str
        """
        return self._label_name

    @label_name.setter
    def label_name(self, label_name):
        """Sets the label_name of this VcsLabeling.


        :param label_name: The label_name of this VcsLabeling.  # noqa: E501
        :type: str
        """

        self._label_name = label_name

    @property
    def type(self):
        """Gets the type of this VcsLabeling.  # noqa: E501


        :return: The type of this VcsLabeling.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this VcsLabeling.


        :param type: The type of this VcsLabeling.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def branch_filter(self):
        """Gets the branch_filter of this VcsLabeling.  # noqa: E501


        :return: The branch_filter of this VcsLabeling.  # noqa: E501
        :rtype: str
        """
        return self._branch_filter

    @branch_filter.setter
    def branch_filter(self, branch_filter):
        """Sets the branch_filter of this VcsLabeling.


        :param branch_filter: The branch_filter of this VcsLabeling.  # noqa: E501
        :type: str
        """

        self._branch_filter = branch_filter

    @property
    def vcs_roots(self):
        """Gets the vcs_roots of this VcsLabeling.  # noqa: E501


        :return: The vcs_roots of this VcsLabeling.  # noqa: E501
        :rtype: VcsRoots
        """
        return self._vcs_roots

    @vcs_roots.setter
    def vcs_roots(self, vcs_roots):
        """Sets the vcs_roots of this VcsLabeling.


        :param vcs_roots: The vcs_roots of this VcsLabeling.  # noqa: E501
        :type: VcsRoots
        """

        self._vcs_roots = vcs_roots
