{"parents": [], "prev": {"link": "../", "title": "Using NETCONF with YANG Suite"}, "next": {"link": "../notifications/", "title": "Working with NETCONF Notification Streams"}, "title": "Using NETCONF RPCs", "meta": {}, "body": "<div class=\"section\" id=\"using-netconf-rpcs\">\n<h1>Using NETCONF RPCs<a class=\"headerlink\" href=\"#using-netconf-rpcs\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>After creating a YANG set to work with and exploring the contents,\nit is now time to try creating NETCONF messages.\nFrom the sidebar on any YANG Suite page, select\n\u201cProtocols \u2192 NETCONF\u201d and choose the YANG set you have created.</p>\n<img alt=\"Screenshot of dropdown menu displaying the sets available\" src=\"../_images/yangsetchoice.png\" />\n<p>After selecting the YANG set, select the \u201cModule(s)\u201d area, start typing in\nthe name or a portion of the name of the YANG file you wish to work from,\nand pick one or more module(s).\nKeep in mind, if the module you pick is just a supporting module for other\nmodules, there will probably be nothing to explore,\nbut we keep all the files on the list for completeness,\nand some support modules do have explorable leaves.</p>\n<img alt=\"Screenshot of dropdown menu displaying the YANG models available\" src=\"../_images/yangpick.png\" />\n<p>I\u2019ll go ahead and choose \u201cietf-interfaces\u201d and click on the \u201cLoad module(s)\u201d\nbutton.  After that, I expand the tree by clicking on the small triangle\nnext to \u201cietf-interfaces\u201d, then \u201cinterfaces\u201d.\nNote that \u201cinterface\u201d, as the only child of \u201cinterfaces\u201d, automatically\nexpands as well.\nI then right click on \u201cinterface\u201d and a context menu appears.</p>\n<img alt=\"Screenshot displaying properties menu of ietf-interfaces when right-clicked\" src=\"../_images/ietf-int.png\" />\n<p>Let\u2019s look at the properties. We can see this is a \u201clist\u201d nodetype and it\nis capable of edit-config, get-config, and get operations.\nIf you want to learn more about the different nodetypes, open the module in\n\u201cOperations \u2192 Explore YANG\u201d.</p>\n<img alt=\"Screenshot of dialog box displaying properties of ietf-interfaces\" src=\"../_images/ietf-int-prop.png\" />\n<p>Let\u2019s look at an entry in the \u201cinterface\u201d list.\nAs you can see, a list entry can contain many parameters.</p>\n<p>Click in the Value column next to the leaf you want to set and you will get\na hint of what to enter or, in the case of an enum, boolean, or identityref,\nyou may get a pulldown menu of specific choices. In the example below,\n\u201cname\u201d is a string (I typed in \u201cGigabitEthernet2\u201d), \u201cdescription\u201d is a string,\nand \u201ctype\u201d is an identityref pulldown menu.</p>\n<p>Each icon and badge to the left of the name has a significant meaning. For\nexample, \u201cname\u201d is a leaf (leaf icon) that is the key to the list (key badge),\nand \u201ctype\u201d is a leaf that is mandatory (exclamation point badge).\nThe \u201cProperties\u201d dialog from the context menu can help explain differing icons,\nwhich could be important to the forming of the netconf message.</p>\n<img alt=\"Screenshot of dropdown menu displaying the available values for interface type\" src=\"../_images/value.png\" />\n<p>You may be wondering what the \u201cOperation\u201d column is about.\nWhen the \u201cedit-config\u201d protocol operation is selected,\nyou can perform config operations on specific leaves.\nBy default, config operations are set to \u201cmerge\u201d so you will probably not\nhave to set this, however, if you want to delete a value in the config, you\nneed to set \u201cdelete\u201d in the proper location.</p>\n<p>In this example, I want to delete the description of a particular interface,\nwhich I accomplish by specifying the list key (\u201cname\u201d leaf), then setting\nthe \u201cdelete\u201d operation next to the \u201cdescription\u201d leaf.</p>\n<img alt=\"Screenshot of dropdown menu displaying the operations available for the selection\" src=\"../_images/config-mode.png\" />\n<p>Let\u2019s try a \u201cget-config\u201d, so click on the \u201cClear Values\u201d button for a fresh start\n(there is also a context menu for the \u201cValues\u201d and \u201cOperations\u201d columns\nto clear individual entries).</p>\n<p>I will choose to get the entire interface list because it is so hard to remember\nthe correct \u201ctype\u201d value out of the dozens offered.</p>\n<p>Make sure that the device is selected (from the \u201cDevice\u201d dropdown).\nFor this example, I have selected  my CSR1K device.\nNow click on the \u201cBuild RPC\u201d button and a dialog will appear prompting for any\nadditional information needed \u2013 here, the datastore to query.\nI will choose the \u201crunning\u201d datastore, corresponding to the running-config.\nThe datastores available to choose will depend on the device, and the contents\nof this dialog (if any) will depend on the NETCONF operation you have selected.</p>\n<img alt=\"Screenshot of dialog prompting for get-config parameters\" src=\"../_images/get-config-dialog.png\" />\n<p>Now click on the \u201cBuild RPC\u201d button and the RPC will appear in the text window\nbelow along with the module name and revision.</p>\n<img alt=\"Screenshot showing the selected YangModel, various parameters such as the selected value, mode, datastore, and RPC window with the RPC textbox displaying the RPC\" src=\"../_images/get-config.png\" />\n<p>Now click on \u201cRun RPC\u201d. A dialog window will appear with the results.\nThe configuration of the device\u2019s interfaces should be displayed\nif everything worked.</p>\n<img alt=\"Screenshot showing the dialog box with the reply RPC\" src=\"../_images/get-config-popup.png\" />\n<p>The get-config is always good to start with because it will give you an idea\nof what the NETCONF server on the device is expecting\n(such as an interface type of <code class=\"docutils literal notranslate\"><span class=\"pre\">ianaift:ethernetCsmacd</span></code> for your interfaces).</p>\n<p>Now go ahead and start making changes!</p>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["notifications", "Working with NETCONF Notification Streams", "N", "next"], ["index", "Using NETCONF with YANG Suite", "P", "previous"]], "sourcename": "rpcs.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Using NETCONF RPCs</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "rpcs", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.12"}