name: workflow

on:
  push:
    branches:
      - main
    tags:
      - v[0-9].[0-9]+.[0-9]+
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Install and build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        python-version: ['3.7', '3.8']

    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v2

      -
        name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      -
        name: Install
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel  # https://stackoverflow.com/questions/34819221
          python -m pip install cython --install-option='--no-cython-compile'
          python -m pip install --no-cache-dir -e .[dev]

      -
        name: Test
        run: |
          invoke test

      -
        name: Build docs
        run: |
          invoke docs

      -
        name: Upload docs for other jobs
        uses: actions/upload-artifact@v2
        if: matrix.python-version == '3.8' && matrix.os == 'ubuntu-latest'
        with:
          name: docs-dir
          path: dist/docs/
          if-no-files-found: error
          retention-days: 1

      -
        name: Build package
        run: |
          invoke build

      -
        name: Upload package artifacts for other jobs
        uses: actions/upload-artifact@v2
        if: >-
          github.event_name == 'push' &&
          startsWith(github.ref, 'refs/tags') &&
          matrix.python-version == '3.8' &&
          matrix.os == 'ubuntu-latest'
        with:
          name: dist-files
          path: |
            dist/*.whl
            dist/*.tar.gz
          if-no-files-found: error
          retention-days: 1

  publish_docs:
    name: Publish docs
    needs: build
    if: github.event_name == 'push' && ! startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      -
        name: Download docs directory from build job
        uses: actions/download-artifact@v2
        with:
          name: docs-dir
          path: docs

      -
        name: Publish docs on branch gh-pages
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: gh-pages
          build_dir: docs
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_pkg:
    name: Publish package on pypi and GitHub
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      -
        name: Checkout code  # This is needed for creating release on GitHub
        uses: actions/checkout@v2

      -
        name: Download dist directory from build job
        uses: actions/download-artifact@v2
        with:
          name: dist-files
          path: dist

      -
        name: Upload and release package on PyPi
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

      -
        name: Create GitHub release and upload assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
