- hosts: all
  name: legacy-blazar-devstack-dsvm-py35
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin blazar https://opendev.org/openstack/blazar
          # Swift is not ready for python3 yet
          disable_service s-account
          disable_service s-container
          disable_service s-object
          disable_service s-proxy
          # Without Swift, c-bak cannot run (in the Gate at least)
          disable_service c-bak
          # Enable Tempest plugin
          TEMPEST_PLUGINS='/opt/stack/new/blazar-tempest-plugin'
          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export DEVSTACK_GATE_USE_PYTHON3=True
          export PYTHONUNBUFFERED=true
          export DEVSTACK_GATE_TEMPEST=1
          export ENABLED_SERVICES=blazar,blazar-a,blazar-m,tempest
          export PROJECTS="openstack/blazar $PROJECTS"
          export PROJECTS="openstack/blazar-nova $PROJECTS"
          export PROJECTS="openstack/python-blazarclient $PROJECTS"
          export PROJECTS="openstack/blazar-tempest-plugin $PROJECTS"
          export DEVSTACK_GATE_TEMPEST_REGEX="blazar_tempest_plugin"
          export TEMPEST_CONCURRENCY=1
          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
