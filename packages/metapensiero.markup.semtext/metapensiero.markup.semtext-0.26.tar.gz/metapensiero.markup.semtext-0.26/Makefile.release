# -*- mode: makefile-gmake; coding: utf-8 -*-
# :Project:   metapensiero.markup.semtext -- a Simple Enough Markup
# :Created:   Wed 23 Nov 2016 09:14:23 CET
# :Author:    Lele Gaifax <lele@metapensiero.it>
# :License:   GNU General Public License version 3 or later
# :Copyright: © 2016, 2017 Arstecnica s.r.l.
# :Copyright: © 2018, 2019 Lele Gaifax
#

PYTHON := $(BINDIR)python
BUMPER := $(BINDIR)bump_version
VERSION_TXT := version.txt
VERSION = $(shell cat $(VERSION_TXT))
PACKAGE_NAME = $(shell $(PYTHON) setup.py --name)
TWINE := $(BINDIR)twine

help::
	@printf "\nRelease management\n"
	@printf "==================\n\n"

.PHONY: assert-clean-tree
assert-clean-tree:
	@(test -z "$(shell git status -s --untracked=no)" || \
	  (echo "UNCOMMITTED STUFF" && false))

.PHONY: assert-master-branch
assert-master-branch:
	@(test "$(shell git rev-parse --abbrev-ref HEAD)" = "master" || \
	  (echo "NOT IN MASTER BRANCH" && false))

help::
	@printf "release\n\tBump version number\n"

.PHONY: release
release: assert-master-branch assert-clean-tree
	$(BUMPER) $(VERSION_TXT)
	@echo ">>>"
	@echo ">>> Do your duties (update CHANGES.rst for example), then"
	@echo ">>> execute “make tag-release”."
	@echo ">>>"

help::
	@printf "tag-release\n\tComplete the release tagging the working tree\n"

.PHONY: tag-release
tag-release: assert-master-branch check-release-date check-long-description-markup
	git commit -a -m "Release $(VERSION)"
	git tag -a -m "Version $(VERSION)" v$(VERSION)

.PHONY: check-long-description-markup
check-long-description-markup:
	@$(PYTHON) setup.py --quiet sdist
	@$(TWINE) check dist/$(PACKAGE_NAME)-$(VERSION).tar.gz

.PHONY: check-release-date
check-release-date:
	@fgrep -q "$(VERSION) ($(shell date --iso-8601))" CHANGES.rst \
	  || (echo "ERROR: release date of version $(VERSION) not set in CHANGES.rst"; exit 1)

help::
	@printf "pypi-upload\n\tUpload the source distribution to PyPI\n"

.PHONY: pypi-upload
pypi-upload: assert-master-branch assert-clean-tree
	@$(PYTHON) setup.py sdist
	@$(TWINE) upload dist/$(PACKAGE_NAME)-$(VERSION).tar.gz

help::
	@printf "publish\n\tUpload to PyPI, push changes and tags to the remote repo\n"

.PHONY: publish
publish: pypi-upload
	git push --follow-tags
