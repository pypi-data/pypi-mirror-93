import sys
import numpy as np
import ctypes as ct
# Stub code for OpenCL setup.

import pyopencl as cl
import numpy as np
import sys

if cl.version.VERSION < (2015,2):
    raise Exception('Futhark requires at least PyOpenCL version 2015.2.  Installed version is %s.' %
                    cl.version.VERSION_TEXT)

def parse_preferred_device(s):
    pref_num = 0
    if len(s) > 1 and s[0] == '#':
        i = 1
        while i < len(s):
            if not s[i].isdigit():
                break
            else:
                pref_num = pref_num * 10 + int(s[i])
            i += 1
        while i < len(s) and s[i].isspace():
            i += 1
        return (s[i:], pref_num)
    else:
        return (s, 0)

def get_prefered_context(interactive=False, platform_pref=None, device_pref=None):
    if device_pref != None:
        (device_pref, device_num) = parse_preferred_device(device_pref)
    else:
        device_num = 0

    if interactive:
        return cl.create_some_context(interactive=True)

    def blacklisted(p, d):
        return platform_pref == None and device_pref == None and \
            p.name == "Apple" and d.name.find("Intel(R) Core(TM)") >= 0
    def platform_ok(p):
        return not platform_pref or p.name.find(platform_pref) >= 0
    def device_ok(d):
        return not device_pref or d.name.find(device_pref) >= 0

    device_matches = 0

    for p in cl.get_platforms():
        if not platform_ok(p):
            continue
        for d in p.get_devices():
            if blacklisted(p,d) or not device_ok(d):
                continue
            if device_matches == device_num:
                return cl.Context(devices=[d])
            else:
                device_matches += 1
    raise Exception('No OpenCL platform and device matching constraints found.')

def size_assignment(s):
    name, value = s.split('=')
    return (name, int(value))

def check_types(self, required_types):
    if 'f64' in required_types:
        if self.device.get_info(cl.device_info.PREFERRED_VECTOR_WIDTH_DOUBLE) == 0:
            raise Exception('Program uses double-precision floats, but this is not supported on chosen device: %s' % self.device.name)

def apply_size_heuristics(self, size_heuristics, sizes):
    for (platform_name, device_type, size, valuef) in size_heuristics:
        if sizes[size] == None \
           and self.platform.name.find(platform_name) >= 0 \
           and (self.device.type & device_type) == device_type:
               sizes[size] = valuef(self.device)
    return sizes

def initialise_opencl_object(self,
                             program_src='',
                             command_queue=None,
                             interactive=False,
                             platform_pref=None,
                             device_pref=None,
                             default_group_size=None,
                             default_num_groups=None,
                             default_tile_size=None,
                             default_reg_tile_size=None,
                             default_threshold=None,
                             size_heuristics=[],
                             required_types=[],
                             all_sizes={},
                             user_sizes={}):
    if command_queue is None:
        self.ctx = get_prefered_context(interactive, platform_pref, device_pref)
        self.queue = cl.CommandQueue(self.ctx)
    else:
        self.ctx = command_queue.context
        self.queue = command_queue
    self.device = self.queue.device
    self.platform = self.device.platform
    self.pool = cl.tools.MemoryPool(cl.tools.ImmediateAllocator(self.queue))
    device_type = self.device.type

    check_types(self, required_types)

    max_group_size = int(self.device.max_work_group_size)
    max_tile_size = int(np.sqrt(self.device.max_work_group_size))

    self.max_group_size = max_group_size
    self.max_tile_size = max_tile_size
    self.max_threshold = 0
    self.max_num_groups = 0

    self.max_local_memory = int(self.device.local_mem_size)

    # Futhark reserves 4 bytes of local memory for its own purposes.
    self.max_local_memory -= 4

    # See comment in rts/c/opencl.h.
    if self.platform.name.find('NVIDIA CUDA') >= 0:
        self.max_local_memory -= 12
    elif self.platform.name.find('AMD') >= 0:
        self.max_local_memory -= 16

    self.free_list = {}

    self.global_failure = self.pool.allocate(np.int32().itemsize)
    cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)
    self.global_failure_args = self.pool.allocate(np.int64().itemsize *
                                                  (self.global_failure_args_max+1))
    self.failure_is_an_option = np.int32(0)

    if 'default_group_size' in sizes:
        default_group_size = sizes['default_group_size']
        del sizes['default_group_size']

    if 'default_num_groups' in sizes:
        default_num_groups = sizes['default_num_groups']
        del sizes['default_num_groups']

    if 'default_tile_size' in sizes:
        default_tile_size = sizes['default_tile_size']
        del sizes['default_tile_size']

    if 'default_reg_tile_size' in sizes:
        default_reg_tile_size = sizes['default_reg_tile_size']
        del sizes['default_reg_tile_size']

    if 'default_threshold' in sizes:
        default_threshold = sizes['default_threshold']
        del sizes['default_threshold']

    default_group_size_set = default_group_size != None
    default_tile_size_set = default_tile_size != None
    default_sizes = apply_size_heuristics(self, size_heuristics,
                                          {'group_size': default_group_size,
                                           'tile_size': default_tile_size,
                                           'reg_tile_size': default_reg_tile_size,
                                           'num_groups': default_num_groups,
                                           'lockstep_width': None,
                                           'threshold': default_threshold})
    default_group_size = default_sizes['group_size']
    default_num_groups = default_sizes['num_groups']
    default_threshold = default_sizes['threshold']
    default_tile_size = default_sizes['tile_size']
    default_reg_tile_size = default_sizes['reg_tile_size']
    lockstep_width = default_sizes['lockstep_width']

    if default_group_size > max_group_size:
        if default_group_size_set:
            sys.stderr.write('Note: Device limits group size to {} (down from {})\n'.
                             format(max_tile_size, default_group_size))
        default_group_size = max_group_size

    if default_tile_size > max_tile_size:
        if default_tile_size_set:
            sys.stderr.write('Note: Device limits tile size to {} (down from {})\n'.
                             format(max_tile_size, default_tile_size))
        default_tile_size = max_tile_size

    for (k,v) in user_sizes.items():
        if k in all_sizes:
            all_sizes[k]['value'] = v
        else:
            raise Exception('Unknown size: {}\nKnown sizes: {}'.format(k, ' '.join(all_sizes.keys())))

    self.sizes = {}
    for (k,v) in all_sizes.items():
        if v['class'] == 'group_size':
            max_value = max_group_size
            default_value = default_group_size
        elif v['class'] == 'num_groups':
            max_value = max_group_size # Intentional!
            default_value = default_num_groups
        elif v['class'] == 'tile_size':
            max_value = max_tile_size
            default_value = default_tile_size
        elif v['class'] == 'reg_tile_size':
            max_value = None
            default_value = default_reg_tile_size
        elif v['class'].startswith('threshold'):
            max_value = None
            default_value = default_threshold
        else:
            # Bespoke sizes have no limit or default.
            max_value = None
        if v['value'] == None:
            self.sizes[k] = default_value
        elif max_value != None and v['value'] > max_value:
            sys.stderr.write('Note: Device limits {} to {} (down from {}\n'.
                             format(k, max_value, v['value']))
            self.sizes[k] = max_value
        else:
            self.sizes[k] = v['value']

    # XXX: we perform only a subset of z-encoding here.  Really, the
    # compiler should provide us with the variables to which
    # parameters are mapped.
    if (len(program_src) >= 0):
        return cl.Program(self.ctx, program_src).build(
            ["-DLOCKSTEP_WIDTH={}".format(lockstep_width)]
            + ["-D{}={}".format(s.replace('z', 'zz').replace('.', 'zi').replace('#', 'zh'),v) for (s,v) in self.sizes.items()])

def opencl_alloc(self, min_size, tag):
    min_size = 1 if min_size == 0 else min_size
    assert min_size > 0
    return self.pool.allocate(min_size)

def opencl_free_all(self):
    self.pool.free_held()

def sync(self):
    failure = np.empty(1, dtype=np.int32)
    cl.enqueue_copy(self.queue, failure, self.global_failure, is_blocking=True)
    self.failure_is_an_option = np.int32(0)
    if failure[0] >= 0:
        # Reset failure information.
        cl.enqueue_fill_buffer(self.queue, self.global_failure, np.int32(-1), 0, np.int32().itemsize)

        # Read failure args.
        failure_args = np.empty(self.global_failure_args_max+1, dtype=np.int64)
        cl.enqueue_copy(self.queue, failure_args, self.global_failure_args, is_blocking=True)

        raise Exception(self.failure_msgs[failure[0]].format(*failure_args))
import pyopencl.array
import time
import argparse
sizes = {}
synchronous = False
preferred_platform = None
preferred_device = None
default_threshold = None
default_group_size = None
default_num_groups = None
default_tile_size = None
default_reg_tile_size = None
fut_opencl_src = """#ifdef cl_clang_storage_class_specifiers
#pragma OPENCL EXTENSION cl_clang_storage_class_specifiers : enable
#endif
#pragma OPENCL EXTENSION cl_khr_byte_addressable_store : enable
__kernel void dummy_kernel(__global unsigned char *dummy, int n)
{
    const int thread_gid = get_global_id(0);
    
    if (thread_gid >= n)
        return;
}
typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long int64_t;
typedef uchar uint8_t;
typedef ushort uint16_t;
typedef uint uint32_t;
typedef ulong uint64_t;
#ifdef cl_nv_pragma_unroll
static inline void mem_fence_global()
{
    asm("membar.gl;");
}
#else
static inline void mem_fence_global()
{
    mem_fence(CLK_LOCAL_MEM_FENCE | CLK_GLOBAL_MEM_FENCE);
}
#endif
static inline void mem_fence_local()
{
    mem_fence(CLK_LOCAL_MEM_FENCE);
}
static inline uint8_t add8(uint8_t x, uint8_t y)
{
    return x + y;
}
static inline uint16_t add16(uint16_t x, uint16_t y)
{
    return x + y;
}
static inline uint32_t add32(uint32_t x, uint32_t y)
{
    return x + y;
}
static inline uint64_t add64(uint64_t x, uint64_t y)
{
    return x + y;
}
static inline uint8_t sub8(uint8_t x, uint8_t y)
{
    return x - y;
}
static inline uint16_t sub16(uint16_t x, uint16_t y)
{
    return x - y;
}
static inline uint32_t sub32(uint32_t x, uint32_t y)
{
    return x - y;
}
static inline uint64_t sub64(uint64_t x, uint64_t y)
{
    return x - y;
}
static inline uint8_t mul8(uint8_t x, uint8_t y)
{
    return x * y;
}
static inline uint16_t mul16(uint16_t x, uint16_t y)
{
    return x * y;
}
static inline uint32_t mul32(uint32_t x, uint32_t y)
{
    return x * y;
}
static inline uint64_t mul64(uint64_t x, uint64_t y)
{
    return x * y;
}
static inline uint8_t udiv8(uint8_t x, uint8_t y)
{
    return x / y;
}
static inline uint16_t udiv16(uint16_t x, uint16_t y)
{
    return x / y;
}
static inline uint32_t udiv32(uint32_t x, uint32_t y)
{
    return x / y;
}
static inline uint64_t udiv64(uint64_t x, uint64_t y)
{
    return x / y;
}
static inline uint8_t udiv_up8(uint8_t x, uint8_t y)
{
    return (x + y - 1) / y;
}
static inline uint16_t udiv_up16(uint16_t x, uint16_t y)
{
    return (x + y - 1) / y;
}
static inline uint32_t udiv_up32(uint32_t x, uint32_t y)
{
    return (x + y - 1) / y;
}
static inline uint64_t udiv_up64(uint64_t x, uint64_t y)
{
    return (x + y - 1) / y;
}
static inline uint8_t umod8(uint8_t x, uint8_t y)
{
    return x % y;
}
static inline uint16_t umod16(uint16_t x, uint16_t y)
{
    return x % y;
}
static inline uint32_t umod32(uint32_t x, uint32_t y)
{
    return x % y;
}
static inline uint64_t umod64(uint64_t x, uint64_t y)
{
    return x % y;
}
static inline uint8_t udiv_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint16_t udiv_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint32_t udiv_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint64_t udiv_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline uint8_t udiv_up_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint16_t udiv_up_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint32_t udiv_up_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint64_t udiv_up_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : (x + y - 1) / y;
}
static inline uint8_t umod_safe8(uint8_t x, uint8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint16_t umod_safe16(uint16_t x, uint16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint32_t umod_safe32(uint32_t x, uint32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline uint64_t umod_safe64(uint64_t x, uint64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t sdiv8(int8_t x, int8_t y)
{
    int8_t q = x / y;
    int8_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int16_t sdiv16(int16_t x, int16_t y)
{
    int16_t q = x / y;
    int16_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int32_t sdiv32(int32_t x, int32_t y)
{
    int32_t q = x / y;
    int32_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int64_t sdiv64(int64_t x, int64_t y)
{
    int64_t q = x / y;
    int64_t r = x % y;
    
    return q - ((r != 0 && r < 0 != y < 0) ? 1 : 0);
}
static inline int8_t sdiv_up8(int8_t x, int8_t y)
{
    return sdiv8(x + y - 1, y);
}
static inline int16_t sdiv_up16(int16_t x, int16_t y)
{
    return sdiv16(x + y - 1, y);
}
static inline int32_t sdiv_up32(int32_t x, int32_t y)
{
    return sdiv32(x + y - 1, y);
}
static inline int64_t sdiv_up64(int64_t x, int64_t y)
{
    return sdiv64(x + y - 1, y);
}
static inline int8_t smod8(int8_t x, int8_t y)
{
    int8_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int16_t smod16(int16_t x, int16_t y)
{
    int16_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int32_t smod32(int32_t x, int32_t y)
{
    int32_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int64_t smod64(int64_t x, int64_t y)
{
    int64_t r = x % y;
    
    return r + (r == 0 || (x > 0 && y > 0) || (x < 0 && y < 0) ? 0 : y);
}
static inline int8_t sdiv_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : sdiv8(x, y);
}
static inline int16_t sdiv_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : sdiv16(x, y);
}
static inline int32_t sdiv_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : sdiv32(x, y);
}
static inline int64_t sdiv_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : sdiv64(x, y);
}
static inline int8_t sdiv_up_safe8(int8_t x, int8_t y)
{
    return sdiv_safe8(x + y - 1, y);
}
static inline int16_t sdiv_up_safe16(int16_t x, int16_t y)
{
    return sdiv_safe16(x + y - 1, y);
}
static inline int32_t sdiv_up_safe32(int32_t x, int32_t y)
{
    return sdiv_safe32(x + y - 1, y);
}
static inline int64_t sdiv_up_safe64(int64_t x, int64_t y)
{
    return sdiv_safe64(x + y - 1, y);
}
static inline int8_t smod_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : smod8(x, y);
}
static inline int16_t smod_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : smod16(x, y);
}
static inline int32_t smod_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : smod32(x, y);
}
static inline int64_t smod_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : smod64(x, y);
}
static inline int8_t squot8(int8_t x, int8_t y)
{
    return x / y;
}
static inline int16_t squot16(int16_t x, int16_t y)
{
    return x / y;
}
static inline int32_t squot32(int32_t x, int32_t y)
{
    return x / y;
}
static inline int64_t squot64(int64_t x, int64_t y)
{
    return x / y;
}
static inline int8_t srem8(int8_t x, int8_t y)
{
    return x % y;
}
static inline int16_t srem16(int16_t x, int16_t y)
{
    return x % y;
}
static inline int32_t srem32(int32_t x, int32_t y)
{
    return x % y;
}
static inline int64_t srem64(int64_t x, int64_t y)
{
    return x % y;
}
static inline int8_t squot_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int16_t squot_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int32_t squot_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int64_t squot_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x / y;
}
static inline int8_t srem_safe8(int8_t x, int8_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int16_t srem_safe16(int16_t x, int16_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int32_t srem_safe32(int32_t x, int32_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int64_t srem_safe64(int64_t x, int64_t y)
{
    return y == 0 ? 0 : x % y;
}
static inline int8_t smin8(int8_t x, int8_t y)
{
    return x < y ? x : y;
}
static inline int16_t smin16(int16_t x, int16_t y)
{
    return x < y ? x : y;
}
static inline int32_t smin32(int32_t x, int32_t y)
{
    return x < y ? x : y;
}
static inline int64_t smin64(int64_t x, int64_t y)
{
    return x < y ? x : y;
}
static inline uint8_t umin8(uint8_t x, uint8_t y)
{
    return x < y ? x : y;
}
static inline uint16_t umin16(uint16_t x, uint16_t y)
{
    return x < y ? x : y;
}
static inline uint32_t umin32(uint32_t x, uint32_t y)
{
    return x < y ? x : y;
}
static inline uint64_t umin64(uint64_t x, uint64_t y)
{
    return x < y ? x : y;
}
static inline int8_t smax8(int8_t x, int8_t y)
{
    return x < y ? y : x;
}
static inline int16_t smax16(int16_t x, int16_t y)
{
    return x < y ? y : x;
}
static inline int32_t smax32(int32_t x, int32_t y)
{
    return x < y ? y : x;
}
static inline int64_t smax64(int64_t x, int64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t umax8(uint8_t x, uint8_t y)
{
    return x < y ? y : x;
}
static inline uint16_t umax16(uint16_t x, uint16_t y)
{
    return x < y ? y : x;
}
static inline uint32_t umax32(uint32_t x, uint32_t y)
{
    return x < y ? y : x;
}
static inline uint64_t umax64(uint64_t x, uint64_t y)
{
    return x < y ? y : x;
}
static inline uint8_t shl8(uint8_t x, uint8_t y)
{
    return x << y;
}
static inline uint16_t shl16(uint16_t x, uint16_t y)
{
    return x << y;
}
static inline uint32_t shl32(uint32_t x, uint32_t y)
{
    return x << y;
}
static inline uint64_t shl64(uint64_t x, uint64_t y)
{
    return x << y;
}
static inline uint8_t lshr8(uint8_t x, uint8_t y)
{
    return x >> y;
}
static inline uint16_t lshr16(uint16_t x, uint16_t y)
{
    return x >> y;
}
static inline uint32_t lshr32(uint32_t x, uint32_t y)
{
    return x >> y;
}
static inline uint64_t lshr64(uint64_t x, uint64_t y)
{
    return x >> y;
}
static inline int8_t ashr8(int8_t x, int8_t y)
{
    return x >> y;
}
static inline int16_t ashr16(int16_t x, int16_t y)
{
    return x >> y;
}
static inline int32_t ashr32(int32_t x, int32_t y)
{
    return x >> y;
}
static inline int64_t ashr64(int64_t x, int64_t y)
{
    return x >> y;
}
static inline uint8_t and8(uint8_t x, uint8_t y)
{
    return x & y;
}
static inline uint16_t and16(uint16_t x, uint16_t y)
{
    return x & y;
}
static inline uint32_t and32(uint32_t x, uint32_t y)
{
    return x & y;
}
static inline uint64_t and64(uint64_t x, uint64_t y)
{
    return x & y;
}
static inline uint8_t or8(uint8_t x, uint8_t y)
{
    return x | y;
}
static inline uint16_t or16(uint16_t x, uint16_t y)
{
    return x | y;
}
static inline uint32_t or32(uint32_t x, uint32_t y)
{
    return x | y;
}
static inline uint64_t or64(uint64_t x, uint64_t y)
{
    return x | y;
}
static inline uint8_t xor8(uint8_t x, uint8_t y)
{
    return x ^ y;
}
static inline uint16_t xor16(uint16_t x, uint16_t y)
{
    return x ^ y;
}
static inline uint32_t xor32(uint32_t x, uint32_t y)
{
    return x ^ y;
}
static inline uint64_t xor64(uint64_t x, uint64_t y)
{
    return x ^ y;
}
static inline bool ult8(uint8_t x, uint8_t y)
{
    return x < y;
}
static inline bool ult16(uint16_t x, uint16_t y)
{
    return x < y;
}
static inline bool ult32(uint32_t x, uint32_t y)
{
    return x < y;
}
static inline bool ult64(uint64_t x, uint64_t y)
{
    return x < y;
}
static inline bool ule8(uint8_t x, uint8_t y)
{
    return x <= y;
}
static inline bool ule16(uint16_t x, uint16_t y)
{
    return x <= y;
}
static inline bool ule32(uint32_t x, uint32_t y)
{
    return x <= y;
}
static inline bool ule64(uint64_t x, uint64_t y)
{
    return x <= y;
}
static inline bool slt8(int8_t x, int8_t y)
{
    return x < y;
}
static inline bool slt16(int16_t x, int16_t y)
{
    return x < y;
}
static inline bool slt32(int32_t x, int32_t y)
{
    return x < y;
}
static inline bool slt64(int64_t x, int64_t y)
{
    return x < y;
}
static inline bool sle8(int8_t x, int8_t y)
{
    return x <= y;
}
static inline bool sle16(int16_t x, int16_t y)
{
    return x <= y;
}
static inline bool sle32(int32_t x, int32_t y)
{
    return x <= y;
}
static inline bool sle64(int64_t x, int64_t y)
{
    return x <= y;
}
static inline int8_t pow8(int8_t x, int8_t y)
{
    int8_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int16_t pow16(int16_t x, int16_t y)
{
    int16_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int32_t pow32(int32_t x, int32_t y)
{
    int32_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline int64_t pow64(int64_t x, int64_t y)
{
    int64_t res = 1, rem = y;
    
    while (rem != 0) {
        if (rem & 1)
            res *= x;
        rem >>= 1;
        x *= x;
    }
    return res;
}
static inline bool itob_i8_bool(int8_t x)
{
    return x;
}
static inline bool itob_i16_bool(int16_t x)
{
    return x;
}
static inline bool itob_i32_bool(int32_t x)
{
    return x;
}
static inline bool itob_i64_bool(int64_t x)
{
    return x;
}
static inline int8_t btoi_bool_i8(bool x)
{
    return x;
}
static inline int16_t btoi_bool_i16(bool x)
{
    return x;
}
static inline int32_t btoi_bool_i32(bool x)
{
    return x;
}
static inline int64_t btoi_bool_i64(bool x)
{
    return x;
}
#define sext_i8_i8(x) ((int8_t) (int8_t) x)
#define sext_i8_i16(x) ((int16_t) (int8_t) x)
#define sext_i8_i32(x) ((int32_t) (int8_t) x)
#define sext_i8_i64(x) ((int64_t) (int8_t) x)
#define sext_i16_i8(x) ((int8_t) (int16_t) x)
#define sext_i16_i16(x) ((int16_t) (int16_t) x)
#define sext_i16_i32(x) ((int32_t) (int16_t) x)
#define sext_i16_i64(x) ((int64_t) (int16_t) x)
#define sext_i32_i8(x) ((int8_t) (int32_t) x)
#define sext_i32_i16(x) ((int16_t) (int32_t) x)
#define sext_i32_i32(x) ((int32_t) (int32_t) x)
#define sext_i32_i64(x) ((int64_t) (int32_t) x)
#define sext_i64_i8(x) ((int8_t) (int64_t) x)
#define sext_i64_i16(x) ((int16_t) (int64_t) x)
#define sext_i64_i32(x) ((int32_t) (int64_t) x)
#define sext_i64_i64(x) ((int64_t) (int64_t) x)
#define zext_i8_i8(x) ((int8_t) (uint8_t) x)
#define zext_i8_i16(x) ((int16_t) (uint8_t) x)
#define zext_i8_i32(x) ((int32_t) (uint8_t) x)
#define zext_i8_i64(x) ((int64_t) (uint8_t) x)
#define zext_i16_i8(x) ((int8_t) (uint16_t) x)
#define zext_i16_i16(x) ((int16_t) (uint16_t) x)
#define zext_i16_i32(x) ((int32_t) (uint16_t) x)
#define zext_i16_i64(x) ((int64_t) (uint16_t) x)
#define zext_i32_i8(x) ((int8_t) (uint32_t) x)
#define zext_i32_i16(x) ((int16_t) (uint32_t) x)
#define zext_i32_i32(x) ((int32_t) (uint32_t) x)
#define zext_i32_i64(x) ((int64_t) (uint32_t) x)
#define zext_i64_i8(x) ((int8_t) (uint64_t) x)
#define zext_i64_i16(x) ((int16_t) (uint64_t) x)
#define zext_i64_i32(x) ((int32_t) (uint64_t) x)
#define zext_i64_i64(x) ((int64_t) (uint64_t) x)
#if defined(__OPENCL_VERSION__)
static int32_t futrts_popc8(int8_t x)
{
    return popcount(x);
}
static int32_t futrts_popc16(int16_t x)
{
    return popcount(x);
}
static int32_t futrts_popc32(int32_t x)
{
    return popcount(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return popcount(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_popc8(int8_t x)
{
    return __popc(zext_i8_i32(x));
}
static int32_t futrts_popc16(int16_t x)
{
    return __popc(zext_i16_i32(x));
}
static int32_t futrts_popc32(int32_t x)
{
    return __popc(x);
}
static int32_t futrts_popc64(int64_t x)
{
    return __popcll(x);
}
#else
static int32_t futrts_popc8(int8_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc16(int16_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc32(int32_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
static int32_t futrts_popc64(int64_t x)
{
    int c = 0;
    
    for (; x; ++c)
        x &= x - 1;
    return c;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    return mul_hi(a, b);
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    return mul_hi(a, b);
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mul_hi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul_hi(a, b);
}
#elif defined(__CUDA_ARCH__)
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    return mulhi(a, b);
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    return mul64hi(a, b);
}
#else
static uint8_t futrts_mul_hi8(uint8_t a, uint8_t b)
{
    uint16_t aa = a;
    uint16_t bb = b;
    
    return aa * bb >> 8;
}
static uint16_t futrts_mul_hi16(uint16_t a, uint16_t b)
{
    uint32_t aa = a;
    uint32_t bb = b;
    
    return aa * bb >> 16;
}
static uint32_t futrts_mul_hi32(uint32_t a, uint32_t b)
{
    uint64_t aa = a;
    uint64_t bb = b;
    
    return aa * bb >> 32;
}
static uint64_t futrts_mul_hi64(uint64_t a, uint64_t b)
{
    __uint128_t aa = a;
    __uint128_t bb = b;
    
    return aa * bb >> 64;
}
#endif
#if defined(__OPENCL_VERSION__)
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return mad_hi(a, b, c);
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return mad_hi(a, b, c);
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return mad_hi(a, b, c);
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return mad_hi(a, b, c);
}
#else
static uint8_t futrts_mad_hi8(uint8_t a, uint8_t b, uint8_t c)
{
    return futrts_mul_hi8(a, b) + c;
}
static uint16_t futrts_mad_hi16(uint16_t a, uint16_t b, uint16_t c)
{
    return futrts_mul_hi16(a, b) + c;
}
static uint32_t futrts_mad_hi32(uint32_t a, uint32_t b, uint32_t c)
{
    return futrts_mul_hi32(a, b) + c;
}
static uint64_t futrts_mad_hi64(uint64_t a, uint64_t b, uint64_t c)
{
    return futrts_mul_hi64(a, b) + c;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_clzz8(int8_t x)
{
    return clz(x);
}
static int32_t futrts_clzz16(int16_t x)
{
    return clz(x);
}
static int32_t futrts_clzz32(int32_t x)
{
    return clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return clz(x);
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_clzz8(int8_t x)
{
    return __clz(zext_i8_i32(x)) - 24;
}
static int32_t futrts_clzz16(int16_t x)
{
    return __clz(zext_i16_i32(x)) - 16;
}
static int32_t futrts_clzz32(int32_t x)
{
    return __clz(x);
}
static int32_t futrts_clzz64(int64_t x)
{
    return __clzll(x);
}
#else
static int32_t futrts_clzz8(int8_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz16(int16_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz32(int32_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
static int32_t futrts_clzz64(int64_t x)
{
    int n = 0;
    int bits = sizeof(x) * 8;
    
    for (int i = 0; i < bits; i++) {
        if (x < 0)
            break;
        n++;
        x <<= 1;
    }
    return n;
}
#endif
#if defined(__OPENCL_VERSION__)
static int32_t futrts_ctzz8(int8_t x)
{
    int i = 0;
    
    for (; i < 8 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int i = 0;
    
    for (; i < 16 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int i = 0;
    
    for (; i < 32 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int i = 0;
    
    for (; i < 64 && (x & 1) == 0; i++, x >>= 1)
        ;
    return i;
}
#elif defined(__CUDA_ARCH__)
static int32_t futrts_ctzz8(int8_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 8 : y - 1;
}
static int32_t futrts_ctzz16(int16_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 16 : y - 1;
}
static int32_t futrts_ctzz32(int32_t x)
{
    int y = __ffs(x);
    
    return y == 0 ? 32 : y - 1;
}
static int32_t futrts_ctzz64(int64_t x)
{
    int y = __ffsll(x);
    
    return y == 0 ? 64 : y - 1;
}
#else
static int32_t futrts_ctzz8(int8_t x)
{
    return x == 0 ? 8 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz16(int16_t x)
{
    return x == 0 ? 16 : __builtin_ctz((uint32_t) x);
}
static int32_t futrts_ctzz32(int32_t x)
{
    return x == 0 ? 32 : __builtin_ctz(x);
}
static int32_t futrts_ctzz64(int64_t x)
{
    return x == 0 ? 64 : __builtin_ctzll(x);
}
#endif
static inline float fdiv32(float x, float y)
{
    return x / y;
}
static inline float fadd32(float x, float y)
{
    return x + y;
}
static inline float fsub32(float x, float y)
{
    return x - y;
}
static inline float fmul32(float x, float y)
{
    return x * y;
}
static inline float fmin32(float x, float y)
{
    return fmin(x, y);
}
static inline float fmax32(float x, float y)
{
    return fmax(x, y);
}
static inline float fpow32(float x, float y)
{
    return pow(x, y);
}
static inline bool cmplt32(float x, float y)
{
    return x < y;
}
static inline bool cmple32(float x, float y)
{
    return x <= y;
}
static inline float sitofp_i8_f32(int8_t x)
{
    return (float) x;
}
static inline float sitofp_i16_f32(int16_t x)
{
    return (float) x;
}
static inline float sitofp_i32_f32(int32_t x)
{
    return (float) x;
}
static inline float sitofp_i64_f32(int64_t x)
{
    return (float) x;
}
static inline float uitofp_i8_f32(uint8_t x)
{
    return (float) x;
}
static inline float uitofp_i16_f32(uint16_t x)
{
    return (float) x;
}
static inline float uitofp_i32_f32(uint32_t x)
{
    return (float) x;
}
static inline float uitofp_i64_f32(uint64_t x)
{
    return (float) x;
}
static inline int8_t fptosi_f32_i8(float x)
{
    return (int8_t) x;
}
static inline int16_t fptosi_f32_i16(float x)
{
    return (int16_t) x;
}
static inline int32_t fptosi_f32_i32(float x)
{
    return (int32_t) x;
}
static inline int64_t fptosi_f32_i64(float x)
{
    return (int64_t) x;
}
static inline uint8_t fptoui_f32_i8(float x)
{
    return (uint8_t) x;
}
static inline uint16_t fptoui_f32_i16(float x)
{
    return (uint16_t) x;
}
static inline uint32_t fptoui_f32_i32(float x)
{
    return (uint32_t) x;
}
static inline uint64_t fptoui_f32_i64(float x)
{
    return (uint64_t) x;
}
static inline float futrts_log32(float x)
{
    return log(x);
}
static inline float futrts_log2_32(float x)
{
    return log2(x);
}
static inline float futrts_log10_32(float x)
{
    return log10(x);
}
static inline float futrts_sqrt32(float x)
{
    return sqrt(x);
}
static inline float futrts_exp32(float x)
{
    return exp(x);
}
static inline float futrts_cos32(float x)
{
    return cos(x);
}
static inline float futrts_sin32(float x)
{
    return sin(x);
}
static inline float futrts_tan32(float x)
{
    return tan(x);
}
static inline float futrts_acos32(float x)
{
    return acos(x);
}
static inline float futrts_asin32(float x)
{
    return asin(x);
}
static inline float futrts_atan32(float x)
{
    return atan(x);
}
static inline float futrts_cosh32(float x)
{
    return cosh(x);
}
static inline float futrts_sinh32(float x)
{
    return sinh(x);
}
static inline float futrts_tanh32(float x)
{
    return tanh(x);
}
static inline float futrts_acosh32(float x)
{
    return acosh(x);
}
static inline float futrts_asinh32(float x)
{
    return asinh(x);
}
static inline float futrts_atanh32(float x)
{
    return atanh(x);
}
static inline float futrts_atan2_32(float x, float y)
{
    return atan2(x, y);
}
static inline float futrts_gamma32(float x)
{
    return tgamma(x);
}
static inline float futrts_lgamma32(float x)
{
    return lgamma(x);
}
static inline bool futrts_isnan32(float x)
{
    return isnan(x);
}
static inline bool futrts_isinf32(float x)
{
    return isinf(x);
}
static inline int32_t futrts_to_bits32(float x)
{
    union {
        float f;
        int32_t t;
    } p;
    
    p.f = x;
    return p.t;
}
static inline float futrts_from_bits32(int32_t x)
{
    union {
        int32_t f;
        float t;
    } p;
    
    p.f = x;
    return p.t;
}
#ifdef __OPENCL_VERSION__
static inline float fmod32(float x, float y)
{
    return fmod(x, y);
}
static inline float futrts_round32(float x)
{
    return rint(x);
}
static inline float futrts_floor32(float x)
{
    return floor(x);
}
static inline float futrts_ceil32(float x)
{
    return ceil(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return mix(v0, v1, t);
}
static inline float futrts_mad32(float a, float b, float c)
{
    return mad(a, b, c);
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fma(a, b, c);
}
#else
static inline float fmod32(float x, float y)
{
    return fmodf(x, y);
}
static inline float futrts_round32(float x)
{
    return rintf(x);
}
static inline float futrts_floor32(float x)
{
    return floorf(x);
}
static inline float futrts_ceil32(float x)
{
    return ceilf(x);
}
static inline float futrts_lerp32(float v0, float v1, float t)
{
    return v0 + (v1 - v0) * t;
}
static inline float futrts_mad32(float a, float b, float c)
{
    return a * b + c;
}
static inline float futrts_fma32(float a, float b, float c)
{
    return fmaf(a, b, c);
}
#endif
// Start of atomics.h

inline int32_t atomic_add_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline int32_t atomic_add_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((int32_t*)p, x);
#else
  return atomic_add(p, x);
#endif
}

inline float atomic_fadd_f32_global(volatile __global float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __global int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline float atomic_fadd_f32_local(volatile __local float *p, float x) {
#ifdef FUTHARK_CUDA
  return atomicAdd((float*)p, x);
#else
  union { int32_t i; float f; } old;
  union { int32_t i; float f; } assumed;
  old.f = *p;
  do {
    assumed.f = old.f;
    old.f = old.f + x;
    old.i = atomic_cmpxchg((volatile __local int32_t*)p, assumed.i, old.i);
  } while (assumed.i != old.i);
  return old.f;
#endif
}

inline int32_t atomic_smax_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smax_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((int32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline int32_t atomic_smin_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_smin_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((int32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umax_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umax_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMax((uint32_t*)p, x);
#else
  return atomic_max(p, x);
#endif
}

inline uint32_t atomic_umin_i32_global(volatile __global uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline uint32_t atomic_umin_i32_local(volatile __local uint32_t *p, uint32_t x) {
#ifdef FUTHARK_CUDA
  return atomicMin((uint32_t*)p, x);
#else
  return atomic_min(p, x);
#endif
}

inline int32_t atomic_and_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_and_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicAnd((int32_t*)p, x);
#else
  return atomic_and(p, x);
#endif
}

inline int32_t atomic_or_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_or_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicOr((int32_t*)p, x);
#else
  return atomic_or(p, x);
#endif
}

inline int32_t atomic_xor_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xor_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicXor((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_global(volatile __global int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_xchg_i32_local(volatile __local int32_t *p, int32_t x) {
#ifdef FUTHARK_CUDA
  return atomicExch((int32_t*)p, x);
#else
  return atomic_xor(p, x);
#endif
}

inline int32_t atomic_cmpxchg_i32_global(volatile __global int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

inline int32_t atomic_cmpxchg_i32_local(volatile __local int32_t *p,
                                         int32_t cmp, int32_t val) {
#ifdef FUTHARK_CUDA
  return atomicCAS((int32_t*)p, cmp, val);
#else
  return atomic_cmpxchg(p, cmp, val);
#endif
}

// End of atomics.h




__kernel void builtinzhreplicate_f32zireplicate_44709(int32_t num_elems_44706,
                                                      float val_44707, __global
                                                      unsigned char *mem_44705)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_44709;
    int32_t replicate_ltid_44710;
    int32_t replicate_gid_44711;
    
    replicate_gtid_44709 = get_global_id(0);
    replicate_ltid_44710 = get_local_id(0);
    replicate_gid_44711 = get_group_id(0);
    if (slt64(replicate_gtid_44709, num_elems_44706)) {
        ((__global float *) mem_44705)[sext_i32_i64(replicate_gtid_44709)] =
            val_44707;
    }
    
  error_0:
    return;
}
__kernel void builtinzhreplicate_i32zireplicate_44718(int32_t num_elems_44715,
                                                      int32_t val_44716,
                                                      __global
                                                      unsigned char *mem_44714)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t replicate_gtid_44718;
    int32_t replicate_ltid_44719;
    int32_t replicate_gid_44720;
    
    replicate_gtid_44718 = get_global_id(0);
    replicate_ltid_44719 = get_local_id(0);
    replicate_gid_44720 = get_group_id(0);
    if (slt64(replicate_gtid_44718, num_elems_44715)) {
        ((__global int32_t *) mem_44714)[sext_i32_i64(replicate_gtid_44718)] =
            val_44716;
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32(__local volatile
                                    int64_t *block_9_backing_aligned_0,
                                    int32_t destoffset_1, int32_t srcoffset_3,
                                    int32_t num_arrays_4, int32_t x_elems_5,
                                    int32_t y_elems_6, int32_t mulx_7,
                                    int32_t muly_8, __global
                                    unsigned char *destmem_0, __global
                                    unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_global_id_0_37;
    int32_t y_index_32 = get_group_id_1_41 * 32 + get_local_id_1_39;
    
    if (slt32(x_index_31, x_elems_5)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_in_35 = (y_index_32 + j_43 * 8) * x_elems_5 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, y_elems_6)) {
                ((__local float *) block_9)[sext_i32_i64((get_local_id_1_39 +
                                                          j_43 * 8) * 33 +
                                            get_local_id_0_38)] = ((__global
                                                                    float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                                       index_in_35)];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 32 + get_local_id_0_38;
    y_index_32 = get_group_id_0_40 * 32 + get_local_id_1_39;
    if (slt32(x_index_31, y_elems_6)) {
        for (int32_t j_43 = 0; j_43 < 4; j_43++) {
            int32_t index_out_36 = (y_index_32 + j_43 * 8) * y_elems_6 +
                    x_index_31;
            
            if (slt32(y_index_32 + j_43 * 8, x_elems_5)) {
                ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                               index_out_36)] = ((__local
                                                                  float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                                    33 +
                                                                                    get_local_id_1_39 +
                                                                                    j_43 *
                                                                                    8)];
            }
        }
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_height(__local volatile
                                               int64_t *block_9_backing_aligned_0,
                                               int32_t destoffset_1,
                                               int32_t srcoffset_3,
                                               int32_t num_arrays_4,
                                               int32_t x_elems_5,
                                               int32_t y_elems_6,
                                               int32_t mulx_7, int32_t muly_8,
                                               __global
                                               unsigned char *destmem_0,
                                               __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_0_38 +
            srem32(get_local_id_1_39, mulx_7) * 16;
    int32_t y_index_32 = get_group_id_1_41 * 16 + squot32(get_local_id_1_39,
                                                          mulx_7);
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 + squot32(get_local_id_0_38, mulx_7);
    y_index_32 = get_group_id_0_40 * 16 * mulx_7 + get_local_id_1_39 +
        srem32(get_local_id_0_38, mulx_7) * 16;
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_low_width(__local volatile
                                              int64_t *block_9_backing_aligned_0,
                                              int32_t destoffset_1,
                                              int32_t srcoffset_3,
                                              int32_t num_arrays_4,
                                              int32_t x_elems_5,
                                              int32_t y_elems_6, int32_t mulx_7,
                                              int32_t muly_8, __global
                                              unsigned char *destmem_0, __global
                                              unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = get_group_id_2_42 * x_elems_5 * y_elems_6;
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t x_index_31 = get_group_id_0_40 * 16 + squot32(get_local_id_0_38,
                                                          muly_8);
    int32_t y_index_32 = get_group_id_1_41 * 16 * muly_8 + get_local_id_1_39 +
            srem32(get_local_id_0_38, muly_8) * 16;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    
    if (slt32(x_index_31, x_elems_5) && slt32(y_index_32, y_elems_6)) {
        ((__local float *) block_9)[sext_i32_i64(get_local_id_1_39 * 17 +
                                    get_local_id_0_38)] = ((__global
                                                            float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                               index_in_35)];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    x_index_31 = get_group_id_1_41 * 16 * muly_8 + get_local_id_0_38 +
        srem32(get_local_id_1_39, muly_8) * 16;
    y_index_32 = get_group_id_0_40 * 16 + squot32(get_local_id_1_39, muly_8);
    
    int32_t index_out_36 = y_index_32 * y_elems_6 + x_index_31;
    
    if (slt32(x_index_31, y_elems_6) && slt32(y_index_32, x_elems_5)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__local
                                                          float *) block_9)[sext_i32_i64(get_local_id_0_38 *
                                                                            17 +
                                                                            get_local_id_1_39)];
    }
    
  error_0:
    return;
}
__kernel void gpu_map_transpose_f32_small(__local volatile
                                          int64_t *block_9_backing_aligned_0,
                                          int32_t destoffset_1,
                                          int32_t srcoffset_3,
                                          int32_t num_arrays_4,
                                          int32_t x_elems_5, int32_t y_elems_6,
                                          int32_t mulx_7, int32_t muly_8,
                                          __global unsigned char *destmem_0,
                                          __global unsigned char *srcmem_2)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict block_9_backing_0 = (__local volatile
                                                         char *) block_9_backing_aligned_0;
    __local char *block_9;
    
    block_9 = (__local char *) block_9_backing_0;
    
    int32_t get_global_id_0_37;
    
    get_global_id_0_37 = get_global_id(0);
    
    int32_t get_local_id_0_38;
    
    get_local_id_0_38 = get_local_id(0);
    
    int32_t get_local_id_1_39;
    
    get_local_id_1_39 = get_local_id(1);
    
    int32_t get_group_id_0_40;
    
    get_group_id_0_40 = get_group_id(0);
    
    int32_t get_group_id_1_41;
    
    get_group_id_1_41 = get_group_id(1);
    
    int32_t get_group_id_2_42;
    
    get_group_id_2_42 = get_group_id(2);
    
    int32_t our_array_offset_30 = squot32(get_global_id_0_37, y_elems_6 *
                                          x_elems_5) * (y_elems_6 * x_elems_5);
    int32_t x_index_31 = squot32(srem32(get_global_id_0_37, y_elems_6 *
                                        x_elems_5), y_elems_6);
    int32_t y_index_32 = srem32(get_global_id_0_37, y_elems_6);
    int32_t odata_offset_33 = squot32(destoffset_1, 4) + our_array_offset_30;
    int32_t idata_offset_34 = squot32(srcoffset_3, 4) + our_array_offset_30;
    int32_t index_in_35 = y_index_32 * x_elems_5 + x_index_31;
    int32_t index_out_36 = x_index_31 * y_elems_6 + y_index_32;
    
    if (slt32(get_global_id_0_37, x_elems_5 * y_elems_6 * num_arrays_4)) {
        ((__global float *) destmem_0)[sext_i32_i64(odata_offset_33 +
                                       index_out_36)] = ((__global
                                                          float *) srcmem_2)[sext_i32_i64(idata_offset_34 +
                                                                             index_in_35)];
    }
    
  error_0:
    return;
}
__kernel void mainzicopy_44240(int64_t m_28886, int64_t i32_res_29034,
                               int64_t ctx_param_ext_43040,
                               int64_t ctx_param_ext_43041,
                               int64_t ctx_param_ext_43043, __global
                               unsigned char *mem_param_43045, __global
                               unsigned char *mem_43050)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44240;
    int32_t copy_ltid_44241;
    int32_t copy_gid_44242;
    
    copy_gtid_44240 = get_global_id(0);
    copy_ltid_44241 = get_local_id(0);
    copy_gid_44242 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44240), m_28886 * i32_res_29034)) {
        ((__global float *) mem_43050)[(sext_i32_i64(copy_gtid_44240) -
                                        squot64(sext_i32_i64(copy_gtid_44240),
                                                i32_res_29034) *
                                        i32_res_29034) * m_28886 +
                                       squot64(sext_i32_i64(copy_gtid_44240),
                                               i32_res_29034)] = ((__global
                                                                   float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44240),
                                                                                                      i32_res_29034) *
                                                                                              ctx_param_ext_43041 +
                                                                                              (sext_i32_i64(copy_gtid_44240) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44240),
                                                                                                       i32_res_29034) *
                                                                                               i32_res_29034) *
                                                                                              ctx_param_ext_43043)];
    }
    
  error_0:
    return;
}
__kernel void mainziscan_stage1_39693(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44652_backing_aligned_0,
                                      int64_t N_28885, int64_t m_28886,
                                      int32_t num_threads_44646, __global
                                      unsigned char *images_mem_42841, __global
                                      unsigned char *defunc_3_map_res_mem_43600,
                                      __global unsigned char *mem_43623,
                                      __global unsigned char *mem_43626)
{
    #define segscan_group_sizze_39710 (mainzisegscan_group_sizze_39687)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44652_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44652_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44647;
    int32_t local_tid_44648;
    int64_t group_sizze_44651;
    int32_t wave_sizze_44650;
    int32_t group_tid_44649;
    
    global_tid_44647 = get_global_id(0);
    local_tid_44648 = get_local_id(0);
    group_sizze_44651 = get_local_size(0);
    wave_sizze_44650 = LOCKSTEP_WIDTH;
    group_tid_44649 = get_group_id(0);
    
    int32_t phys_tid_39693;
    
    phys_tid_39693 = global_tid_44647;
    
    __local char *scan_arr_mem_44652;
    
    scan_arr_mem_44652 = (__local char *) scan_arr_mem_44652_backing_0;
    
    int64_t x_39715;
    int64_t x_39716;
    
    x_39715 = (int64_t) 0;
    for (int64_t j_44654 = 0; j_44654 < sdiv_up64(m_28886 * N_28885,
                                                  sext_i32_i64(num_threads_44646));
         j_44654++) {
        int64_t chunk_offset_44655 = segscan_group_sizze_39710 * j_44654 +
                sext_i32_i64(group_tid_44649) * (segscan_group_sizze_39710 *
                                                 sdiv_up64(m_28886 * N_28885,
                                                           sext_i32_i64(num_threads_44646)));
        int64_t flat_idx_44656 = chunk_offset_44655 +
                sext_i32_i64(local_tid_44648);
        int64_t gtid_39684 = squot64(flat_idx_44656, N_28885);
        int64_t gtid_39692 = flat_idx_44656 - squot64(flat_idx_44656, N_28885) *
                N_28885;
        
        // threads in bounds read input
        {
            if (slt64(gtid_39684, m_28886) && slt64(gtid_39692, N_28885)) {
                float x_39720 = ((__global
                                  float *) images_mem_42841)[gtid_39684 *
                                                             N_28885 +
                                                             gtid_39692];
                bool isnan_res_39722;
                
                isnan_res_39722 = futrts_isnan32(x_39720);
                
                bool cond_39723 = !isnan_res_39722;
                float defunc_0_f_res_39724;
                
                if (cond_39723) {
                    float x_39721 = ((__global
                                      float *) defunc_3_map_res_mem_43600)[gtid_39684 *
                                                                           N_28885 +
                                                                           gtid_39692];
                    float defunc_0_f_res_t_res_39725 = x_39720 - x_39721;
                    
                    defunc_0_f_res_39724 = defunc_0_f_res_t_res_39725;
                } else {
                    defunc_0_f_res_39724 = NAN;
                }
                
                bool isnan_res_39726;
                
                isnan_res_39726 = futrts_isnan32(defunc_0_f_res_39724);
                
                bool defunc_0_p_res_39727 = !isnan_res_39726;
                int64_t defunc_0_f_res_39728 =
                        btoi_bool_i64(defunc_0_p_res_39727);
                
                // write to-scan values to parameters
                {
                    x_39716 = defunc_0_f_res_39728;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43626)[gtid_39684 * N_28885 +
                                                   gtid_39692] =
                        defunc_0_f_res_39724;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_39684, m_28886) && slt64(gtid_39692,
                                                          N_28885))) {
                    x_39716 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_39717 = add64(x_39715, x_39716);
                
                ((__local
                  int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648)] =
                    defunc_1_op_res_39717;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44657;
            int64_t x_44658;
            int64_t x_44660;
            int64_t x_44661;
            bool ltid_in_bounds_44663;
            
            ltid_in_bounds_44663 = slt64(sext_i32_i64(local_tid_44648),
                                         segscan_group_sizze_39710);
            
            int32_t skip_threads_44664;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44663) {
                    x_44658 = ((volatile __local
                                int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648)];
                    if ((local_tid_44648 - squot32(local_tid_44648, 32) * 32) ==
                        0) {
                        x_44657 = x_44658;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44664 = 1;
                while (slt32(skip_threads_44664, 32)) {
                    if (sle32(skip_threads_44664, local_tid_44648 -
                              squot32(local_tid_44648, 32) * 32) &&
                        ltid_in_bounds_44663) {
                        // read operands
                        {
                            x_44657 = ((volatile __local
                                        int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648) -
                                                                       sext_i32_i64(skip_threads_44664)];
                        }
                        // perform operation
                        {
                            bool inactive_44665 =
                                 slt64(srem64(sext_i32_i64(local_tid_44648) +
                                              chunk_offset_44655, N_28885),
                                       sext_i32_i64(local_tid_44648) +
                                       chunk_offset_44655 -
                                       (sext_i32_i64(local_tid_44648 -
                                        skip_threads_44664) +
                                        chunk_offset_44655));
                            
                            if (inactive_44665) {
                                x_44657 = x_44658;
                            }
                            if (!inactive_44665) {
                                int64_t defunc_1_op_res_44659 = add64(x_44657,
                                                                      x_44658);
                                
                                x_44657 = defunc_1_op_res_44659;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44650, skip_threads_44664)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44664, local_tid_44648 -
                              squot32(local_tid_44648, 32) * 32) &&
                        ltid_in_bounds_44663) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648)] =
                                x_44657;
                            x_44658 = x_44657;
                        }
                    }
                    if (sle32(wave_sizze_44650, skip_threads_44664)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44664 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44648 - squot32(local_tid_44648, 32) * 32) ==
                    31 && ltid_in_bounds_44663) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44652)[sext_i32_i64(squot32(local_tid_44648,
                                                                          32))] =
                        x_44657;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44666;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44648, 32) == 0 &&
                        ltid_in_bounds_44663) {
                        x_44661 = ((volatile __local
                                    int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648)];
                        if ((local_tid_44648 - squot32(local_tid_44648, 32) *
                             32) == 0) {
                            x_44660 = x_44661;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44666 = 1;
                    while (slt32(skip_threads_44666, 32)) {
                        if (sle32(skip_threads_44666, local_tid_44648 -
                                  squot32(local_tid_44648, 32) * 32) &&
                            (squot32(local_tid_44648, 32) == 0 &&
                             ltid_in_bounds_44663)) {
                            // read operands
                            {
                                x_44660 = ((volatile __local
                                            int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648) -
                                                                           sext_i32_i64(skip_threads_44666)];
                            }
                            // perform operation
                            {
                                bool inactive_44667 =
                                     slt64(srem64(sext_i32_i64(local_tid_44648 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44655, N_28885),
                                           sext_i32_i64(local_tid_44648 * 32 +
                                           32 - 1) + chunk_offset_44655 -
                                           (sext_i32_i64((local_tid_44648 -
                                                          skip_threads_44666) *
                                            32 + 32 - 1) + chunk_offset_44655));
                                
                                if (inactive_44667) {
                                    x_44660 = x_44661;
                                }
                                if (!inactive_44667) {
                                    int64_t defunc_1_op_res_44662 =
                                            add64(x_44660, x_44661);
                                    
                                    x_44660 = defunc_1_op_res_44662;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44650, skip_threads_44666)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44666, local_tid_44648 -
                                  squot32(local_tid_44648, 32) * 32) &&
                            (squot32(local_tid_44648, 32) == 0 &&
                             ltid_in_bounds_44663)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648)] =
                                    x_44660;
                                x_44661 = x_44660;
                            }
                        }
                        if (sle32(wave_sizze_44650, skip_threads_44666)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44666 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44648, 32) == 0 ||
                      !ltid_in_bounds_44663)) {
                    // read operands
                    {
                        x_44658 = x_44657;
                        x_44657 = ((__local
                                    int64_t *) scan_arr_mem_44652)[sext_i32_i64(squot32(local_tid_44648,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44668 =
                             slt64(srem64(sext_i32_i64(local_tid_44648) +
                                          chunk_offset_44655, N_28885),
                                   sext_i32_i64(local_tid_44648) +
                                   chunk_offset_44655 -
                                   (sext_i32_i64(squot32(local_tid_44648, 32) *
                                    32 - 1) + chunk_offset_44655));
                        
                        if (inactive_44668) {
                            x_44657 = x_44658;
                        }
                        if (!inactive_44668) {
                            int64_t defunc_1_op_res_44659 = add64(x_44657,
                                                                  x_44658);
                            
                            x_44657 = defunc_1_op_res_44659;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648)] =
                            x_44657;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44648, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648)] =
                        x_44658;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_39684, m_28886) && slt64(gtid_39692, N_28885)) {
                    ((__global int64_t *) mem_43623)[gtid_39684 * N_28885 +
                                                     gtid_39692] = ((__local
                                                                     int64_t *) scan_arr_mem_44652)[sext_i32_i64(local_tid_44648)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44669 = slt64(srem64(chunk_offset_44655 +
                                                          segscan_group_sizze_39710,
                                                          N_28885),
                                                   chunk_offset_44655 +
                                                   segscan_group_sizze_39710 -
                                                   (chunk_offset_44655 +
                                                    segscan_group_sizze_39710 -
                                                    (int64_t) 1));
                bool should_load_carry_44670 = local_tid_44648 == 0 &&
                     !crosses_segment_44669;
                
                if (should_load_carry_44670) {
                    x_39715 = ((__local
                                int64_t *) scan_arr_mem_44652)[segscan_group_sizze_39710 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44670) {
                    x_39715 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_39710
}
__kernel void mainziscan_stage1_40677(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45035_backing_aligned_0,
                                      int64_t N_28885, int64_t m_28886,
                                      int64_t iota32_arg_29281,
                                      int32_t num_threads_45029, __global
                                      unsigned char *defunc_4_map_res_mem_43638,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_43704,
                                      __global
                                      unsigned char *defunc_3_map_res_mem_43705,
                                      __global
                                      unsigned char *defunc_0_f_res_mem_43739,
                                      __global unsigned char *mem_43758,
                                      __global unsigned char *mem_43762)
{
    #define segscan_group_sizze_40755 (mainzisegscan_group_sizze_40671)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45035_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45035_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45030;
    int32_t local_tid_45031;
    int64_t group_sizze_45034;
    int32_t wave_sizze_45033;
    int32_t group_tid_45032;
    
    global_tid_45030 = get_global_id(0);
    local_tid_45031 = get_local_id(0);
    group_sizze_45034 = get_local_size(0);
    wave_sizze_45033 = LOCKSTEP_WIDTH;
    group_tid_45032 = get_group_id(0);
    
    int32_t phys_tid_40677;
    
    phys_tid_40677 = global_tid_45030;
    
    __local char *scan_arr_mem_45035;
    
    scan_arr_mem_45035 = (__local char *) scan_arr_mem_45035_backing_0;
    
    float x_40759;
    float x_40760;
    
    x_40759 = 0.0F;
    for (int64_t j_45037 = 0; j_45037 < sdiv_up64(m_28886 * iota32_arg_29281,
                                                  sext_i32_i64(num_threads_45029));
         j_45037++) {
        int64_t chunk_offset_45038 = segscan_group_sizze_40755 * j_45037 +
                sext_i32_i64(group_tid_45032) * (segscan_group_sizze_40755 *
                                                 sdiv_up64(m_28886 *
                                                           iota32_arg_29281,
                                                           sext_i32_i64(num_threads_45029)));
        int64_t flat_idx_45039 = chunk_offset_45038 +
                sext_i32_i64(local_tid_45031);
        int64_t gtid_40668 = squot64(flat_idx_45039, iota32_arg_29281);
        int64_t gtid_40676 = flat_idx_45039 - squot64(flat_idx_45039,
                                                      iota32_arg_29281) *
                iota32_arg_29281;
        
        // threads in bounds read input
        {
            if (slt64(gtid_40668, m_28886) && slt64(gtid_40676,
                                                    iota32_arg_29281)) {
                int32_t y_40766 = ((__global int32_t *) mem_43758)[gtid_40668];
                int32_t index_primexp_40944 = sext_i64_i32(gtid_40676);
                bool cond_40769 = sle32(y_40766, index_primexp_40944);
                float defunc_0_f_res_40770;
                
                if (cond_40769) {
                    defunc_0_f_res_40770 = 0.0F;
                } else {
                    int32_t x_40762 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_40668];
                    int32_t x_40763 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43704)[gtid_40668];
                    float x_40764 = ((__global
                                      float *) defunc_0_f_res_mem_43739)[gtid_40668];
                    bool cond_40771 = index_primexp_40944 == 0;
                    float defunc_0_f_res_f_res_40772;
                    
                    if (cond_40771) {
                        defunc_0_f_res_f_res_40772 = x_40764;
                    } else {
                        int32_t i_40773 = add32(x_40762, index_primexp_40944);
                        int64_t i_40774 = sext_i32_i64(i_40773);
                        float x_40775 = ((__global
                                          float *) defunc_4_map_res_mem_43638)[gtid_40668 *
                                                                               N_28885 +
                                                                               i_40774];
                        int32_t x_40776 = sub32(x_40762, x_40763);
                        int32_t i_40777 = add32(x_40776, index_primexp_40944);
                        int64_t i_40778 = sext_i32_i64(i_40777);
                        float y_40779 = ((__global
                                          float *) defunc_4_map_res_mem_43638)[gtid_40668 *
                                                                               N_28885 +
                                                                               i_40778];
                        float defunc_0_f_res_f_res_f_res_40780 = x_40775 -
                              y_40779;
                        
                        defunc_0_f_res_f_res_40772 =
                            defunc_0_f_res_f_res_f_res_40780;
                    }
                    defunc_0_f_res_40770 = defunc_0_f_res_f_res_40772;
                }
                // write to-scan values to parameters
                {
                    x_40760 = defunc_0_f_res_40770;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_40668, m_28886) && slt64(gtid_40676,
                                                          iota32_arg_29281))) {
                    x_40760 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_40761 = x_40759 + x_40760;
                
                ((__local
                  float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031)] =
                    defunc_1_op_res_40761;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45040;
            float x_45041;
            float x_45043;
            float x_45044;
            bool ltid_in_bounds_45046;
            
            ltid_in_bounds_45046 = slt64(sext_i32_i64(local_tid_45031),
                                         segscan_group_sizze_40755);
            
            int32_t skip_threads_45047;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45046) {
                    x_45041 = ((volatile __local
                                float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031)];
                    if ((local_tid_45031 - squot32(local_tid_45031, 32) * 32) ==
                        0) {
                        x_45040 = x_45041;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45047 = 1;
                while (slt32(skip_threads_45047, 32)) {
                    if (sle32(skip_threads_45047, local_tid_45031 -
                              squot32(local_tid_45031, 32) * 32) &&
                        ltid_in_bounds_45046) {
                        // read operands
                        {
                            x_45040 = ((volatile __local
                                        float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031) -
                                                                     sext_i32_i64(skip_threads_45047)];
                        }
                        // perform operation
                        {
                            bool inactive_45048 =
                                 slt64(srem64(sext_i32_i64(local_tid_45031) +
                                              chunk_offset_45038,
                                              iota32_arg_29281),
                                       sext_i32_i64(local_tid_45031) +
                                       chunk_offset_45038 -
                                       (sext_i32_i64(local_tid_45031 -
                                        skip_threads_45047) +
                                        chunk_offset_45038));
                            
                            if (inactive_45048) {
                                x_45040 = x_45041;
                            }
                            if (!inactive_45048) {
                                float defunc_1_op_res_45042 = x_45040 + x_45041;
                                
                                x_45040 = defunc_1_op_res_45042;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45033, skip_threads_45047)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45047, local_tid_45031 -
                              squot32(local_tid_45031, 32) * 32) &&
                        ltid_in_bounds_45046) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031)] =
                                x_45040;
                            x_45041 = x_45040;
                        }
                    }
                    if (sle32(wave_sizze_45033, skip_threads_45047)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45047 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45031 - squot32(local_tid_45031, 32) * 32) ==
                    31 && ltid_in_bounds_45046) {
                    ((volatile __local
                      float *) scan_arr_mem_45035)[sext_i32_i64(squot32(local_tid_45031,
                                                                        32))] =
                        x_45040;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45049;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45031, 32) == 0 &&
                        ltid_in_bounds_45046) {
                        x_45044 = ((volatile __local
                                    float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031)];
                        if ((local_tid_45031 - squot32(local_tid_45031, 32) *
                             32) == 0) {
                            x_45043 = x_45044;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45049 = 1;
                    while (slt32(skip_threads_45049, 32)) {
                        if (sle32(skip_threads_45049, local_tid_45031 -
                                  squot32(local_tid_45031, 32) * 32) &&
                            (squot32(local_tid_45031, 32) == 0 &&
                             ltid_in_bounds_45046)) {
                            // read operands
                            {
                                x_45043 = ((volatile __local
                                            float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031) -
                                                                         sext_i32_i64(skip_threads_45049)];
                            }
                            // perform operation
                            {
                                bool inactive_45050 =
                                     slt64(srem64(sext_i32_i64(local_tid_45031 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45038,
                                                  iota32_arg_29281),
                                           sext_i32_i64(local_tid_45031 * 32 +
                                           32 - 1) + chunk_offset_45038 -
                                           (sext_i32_i64((local_tid_45031 -
                                                          skip_threads_45049) *
                                            32 + 32 - 1) + chunk_offset_45038));
                                
                                if (inactive_45050) {
                                    x_45043 = x_45044;
                                }
                                if (!inactive_45050) {
                                    float defunc_1_op_res_45045 = x_45043 +
                                          x_45044;
                                    
                                    x_45043 = defunc_1_op_res_45045;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45033, skip_threads_45049)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45049, local_tid_45031 -
                                  squot32(local_tid_45031, 32) * 32) &&
                            (squot32(local_tid_45031, 32) == 0 &&
                             ltid_in_bounds_45046)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031)] =
                                    x_45043;
                                x_45044 = x_45043;
                            }
                        }
                        if (sle32(wave_sizze_45033, skip_threads_45049)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45049 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45031, 32) == 0 ||
                      !ltid_in_bounds_45046)) {
                    // read operands
                    {
                        x_45041 = x_45040;
                        x_45040 = ((__local
                                    float *) scan_arr_mem_45035)[sext_i32_i64(squot32(local_tid_45031,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_45051 =
                             slt64(srem64(sext_i32_i64(local_tid_45031) +
                                          chunk_offset_45038, iota32_arg_29281),
                                   sext_i32_i64(local_tid_45031) +
                                   chunk_offset_45038 -
                                   (sext_i32_i64(squot32(local_tid_45031, 32) *
                                    32 - 1) + chunk_offset_45038));
                        
                        if (inactive_45051) {
                            x_45040 = x_45041;
                        }
                        if (!inactive_45051) {
                            float defunc_1_op_res_45042 = x_45040 + x_45041;
                            
                            x_45040 = defunc_1_op_res_45042;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031)] =
                            x_45040;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45031, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031)] =
                        x_45041;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_40668, m_28886) && slt64(gtid_40676,
                                                        iota32_arg_29281)) {
                    ((__global float *) mem_43762)[gtid_40668 *
                                                   iota32_arg_29281 +
                                                   gtid_40676] = ((__local
                                                                   float *) scan_arr_mem_45035)[sext_i32_i64(local_tid_45031)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45052 = slt64(srem64(chunk_offset_45038 +
                                                          segscan_group_sizze_40755,
                                                          iota32_arg_29281),
                                                   chunk_offset_45038 +
                                                   segscan_group_sizze_40755 -
                                                   (chunk_offset_45038 +
                                                    segscan_group_sizze_40755 -
                                                    (int64_t) 1));
                bool should_load_carry_45053 = local_tid_45031 == 0 &&
                     !crosses_segment_45052;
                
                if (should_load_carry_45053) {
                    x_40759 = ((__local
                                float *) scan_arr_mem_45035)[segscan_group_sizze_40755 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_45053) {
                    x_40759 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_40755
}
__kernel void mainziscan_stage2_39693(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_44676_backing_aligned_0,
                                      int64_t N_28885, int64_t m_28886,
                                      int64_t stage1_num_groups_44645,
                                      int32_t num_threads_44646, __global
                                      unsigned char *mem_43623)
{
    #define segscan_group_sizze_39710 (mainzisegscan_group_sizze_39687)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44676_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44676_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44671;
    int32_t local_tid_44672;
    int64_t group_sizze_44675;
    int32_t wave_sizze_44674;
    int32_t group_tid_44673;
    
    global_tid_44671 = get_global_id(0);
    local_tid_44672 = get_local_id(0);
    group_sizze_44675 = get_local_size(0);
    wave_sizze_44674 = LOCKSTEP_WIDTH;
    group_tid_44673 = get_group_id(0);
    
    int32_t phys_tid_39693;
    
    phys_tid_39693 = global_tid_44671;
    
    __local char *scan_arr_mem_44676;
    
    scan_arr_mem_44676 = (__local char *) scan_arr_mem_44676_backing_0;
    
    int64_t flat_idx_44678;
    
    flat_idx_44678 = (sext_i32_i64(local_tid_44672) + (int64_t) 1) *
        (segscan_group_sizze_39710 * sdiv_up64(m_28886 * N_28885,
                                               sext_i32_i64(num_threads_44646))) -
        (int64_t) 1;
    
    int64_t gtid_39684;
    
    gtid_39684 = squot64(flat_idx_44678, N_28885);
    
    int64_t gtid_39692;
    
    gtid_39692 = flat_idx_44678 - squot64(flat_idx_44678, N_28885) * N_28885;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_39684, m_28886) && slt64(gtid_39692, N_28885)) {
            ((__local
              int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)] =
                ((__global int64_t *) mem_43623)[gtid_39684 * N_28885 +
                                                 gtid_39692];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_39715;
    int64_t x_39716;
    int64_t x_44679;
    int64_t x_44680;
    bool ltid_in_bounds_44682;
    
    ltid_in_bounds_44682 = slt64(sext_i32_i64(local_tid_44672),
                                 stage1_num_groups_44645);
    
    int32_t skip_threads_44683;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44682) {
            x_39716 = ((volatile __local
                        int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)];
            if ((local_tid_44672 - squot32(local_tid_44672, 32) * 32) == 0) {
                x_39715 = x_39716;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44683 = 1;
        while (slt32(skip_threads_44683, 32)) {
            if (sle32(skip_threads_44683, local_tid_44672 -
                      squot32(local_tid_44672, 32) * 32) &&
                ltid_in_bounds_44682) {
                // read operands
                {
                    x_39715 = ((volatile __local
                                int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672) -
                                                               sext_i32_i64(skip_threads_44683)];
                }
                // perform operation
                {
                    bool inactive_44684 =
                         slt64(srem64((sext_i32_i64(local_tid_44672) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_39710 *
                                       sdiv_up64(m_28886 * N_28885,
                                                 sext_i32_i64(num_threads_44646))) -
                                      (int64_t) 1, N_28885),
                               (sext_i32_i64(local_tid_44672) + (int64_t) 1) *
                               (segscan_group_sizze_39710 * sdiv_up64(m_28886 *
                                                                      N_28885,
                                                                      sext_i32_i64(num_threads_44646))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44672 -
                                               skip_threads_44683) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_39710 *
                                               sdiv_up64(m_28886 * N_28885,
                                                         sext_i32_i64(num_threads_44646))) -
                                              (int64_t) 1));
                    
                    if (inactive_44684) {
                        x_39715 = x_39716;
                    }
                    if (!inactive_44684) {
                        int64_t defunc_1_op_res_39717 = add64(x_39715, x_39716);
                        
                        x_39715 = defunc_1_op_res_39717;
                    }
                }
            }
            if (sle32(wave_sizze_44674, skip_threads_44683)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44683, local_tid_44672 -
                      squot32(local_tid_44672, 32) * 32) &&
                ltid_in_bounds_44682) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)] =
                        x_39715;
                    x_39716 = x_39715;
                }
            }
            if (sle32(wave_sizze_44674, skip_threads_44683)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44683 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44672 - squot32(local_tid_44672, 32) * 32) == 31 &&
            ltid_in_bounds_44682) {
            ((volatile __local
              int64_t *) scan_arr_mem_44676)[sext_i32_i64(squot32(local_tid_44672,
                                                                  32))] =
                x_39715;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44685;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44672, 32) == 0 && ltid_in_bounds_44682) {
                x_44680 = ((volatile __local
                            int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)];
                if ((local_tid_44672 - squot32(local_tid_44672, 32) * 32) ==
                    0) {
                    x_44679 = x_44680;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44685 = 1;
            while (slt32(skip_threads_44685, 32)) {
                if (sle32(skip_threads_44685, local_tid_44672 -
                          squot32(local_tid_44672, 32) * 32) &&
                    (squot32(local_tid_44672, 32) == 0 &&
                     ltid_in_bounds_44682)) {
                    // read operands
                    {
                        x_44679 = ((volatile __local
                                    int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672) -
                                                                   sext_i32_i64(skip_threads_44685)];
                    }
                    // perform operation
                    {
                        bool inactive_44686 =
                             slt64(srem64((sext_i32_i64(local_tid_44672 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_39710 *
                                           sdiv_up64(m_28886 * N_28885,
                                                     sext_i32_i64(num_threads_44646))) -
                                          (int64_t) 1, N_28885),
                                   (sext_i32_i64(local_tid_44672 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_39710 *
                                    sdiv_up64(m_28886 * N_28885,
                                              sext_i32_i64(num_threads_44646))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44672 -
                                                   skip_threads_44685) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_39710 *
                                     sdiv_up64(m_28886 * N_28885,
                                               sext_i32_i64(num_threads_44646))) -
                                    (int64_t) 1));
                        
                        if (inactive_44686) {
                            x_44679 = x_44680;
                        }
                        if (!inactive_44686) {
                            int64_t defunc_1_op_res_44681 = add64(x_44679,
                                                                  x_44680);
                            
                            x_44679 = defunc_1_op_res_44681;
                        }
                    }
                }
                if (sle32(wave_sizze_44674, skip_threads_44685)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44685, local_tid_44672 -
                          squot32(local_tid_44672, 32) * 32) &&
                    (squot32(local_tid_44672, 32) == 0 &&
                     ltid_in_bounds_44682)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)] =
                            x_44679;
                        x_44680 = x_44679;
                    }
                }
                if (sle32(wave_sizze_44674, skip_threads_44685)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44685 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44672, 32) == 0 || !ltid_in_bounds_44682)) {
            // read operands
            {
                x_39716 = x_39715;
                x_39715 = ((__local
                            int64_t *) scan_arr_mem_44676)[sext_i32_i64(squot32(local_tid_44672,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44687 =
                     slt64(srem64((sext_i32_i64(local_tid_44672) +
                                   (int64_t) 1) * (segscan_group_sizze_39710 *
                                                   sdiv_up64(m_28886 * N_28885,
                                                             sext_i32_i64(num_threads_44646))) -
                                  (int64_t) 1, N_28885),
                           (sext_i32_i64(local_tid_44672) + (int64_t) 1) *
                           (segscan_group_sizze_39710 * sdiv_up64(m_28886 *
                                                                  N_28885,
                                                                  sext_i32_i64(num_threads_44646))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44672,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_39710 *
                                           sdiv_up64(m_28886 * N_28885,
                                                     sext_i32_i64(num_threads_44646))) -
                                          (int64_t) 1));
                
                if (inactive_44687) {
                    x_39715 = x_39716;
                }
                if (!inactive_44687) {
                    int64_t defunc_1_op_res_39717 = add64(x_39715, x_39716);
                    
                    x_39715 = defunc_1_op_res_39717;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)] =
                    x_39715;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44672, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)] =
                x_39716;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_39684, m_28886) && slt64(gtid_39692, N_28885)) {
            ((__global int64_t *) mem_43623)[gtid_39684 * N_28885 +
                                             gtid_39692] = ((__local
                                                             int64_t *) scan_arr_mem_44676)[sext_i32_i64(local_tid_44672)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_39710
}
__kernel void mainziscan_stage2_40677(__global int *global_failure,
                                      __local volatile
                                      int64_t *scan_arr_mem_45059_backing_aligned_0,
                                      int64_t m_28886, int64_t iota32_arg_29281,
                                      int64_t stage1_num_groups_45028,
                                      int32_t num_threads_45029, __global
                                      unsigned char *mem_43762)
{
    #define segscan_group_sizze_40755 (mainzisegscan_group_sizze_40671)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45059_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45059_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45054;
    int32_t local_tid_45055;
    int64_t group_sizze_45058;
    int32_t wave_sizze_45057;
    int32_t group_tid_45056;
    
    global_tid_45054 = get_global_id(0);
    local_tid_45055 = get_local_id(0);
    group_sizze_45058 = get_local_size(0);
    wave_sizze_45057 = LOCKSTEP_WIDTH;
    group_tid_45056 = get_group_id(0);
    
    int32_t phys_tid_40677;
    
    phys_tid_40677 = global_tid_45054;
    
    __local char *scan_arr_mem_45059;
    
    scan_arr_mem_45059 = (__local char *) scan_arr_mem_45059_backing_0;
    
    int64_t flat_idx_45061;
    
    flat_idx_45061 = (sext_i32_i64(local_tid_45055) + (int64_t) 1) *
        (segscan_group_sizze_40755 * sdiv_up64(m_28886 * iota32_arg_29281,
                                               sext_i32_i64(num_threads_45029))) -
        (int64_t) 1;
    
    int64_t gtid_40668;
    
    gtid_40668 = squot64(flat_idx_45061, iota32_arg_29281);
    
    int64_t gtid_40676;
    
    gtid_40676 = flat_idx_45061 - squot64(flat_idx_45061, iota32_arg_29281) *
        iota32_arg_29281;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_40668, m_28886) && slt64(gtid_40676, iota32_arg_29281)) {
            ((__local
              float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)] =
                ((__global float *) mem_43762)[gtid_40668 * iota32_arg_29281 +
                                               gtid_40676];
        } else {
            ((__local
              float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_40759;
    float x_40760;
    float x_45062;
    float x_45063;
    bool ltid_in_bounds_45065;
    
    ltid_in_bounds_45065 = slt64(sext_i32_i64(local_tid_45055),
                                 stage1_num_groups_45028);
    
    int32_t skip_threads_45066;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45065) {
            x_40760 = ((volatile __local
                        float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)];
            if ((local_tid_45055 - squot32(local_tid_45055, 32) * 32) == 0) {
                x_40759 = x_40760;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45066 = 1;
        while (slt32(skip_threads_45066, 32)) {
            if (sle32(skip_threads_45066, local_tid_45055 -
                      squot32(local_tid_45055, 32) * 32) &&
                ltid_in_bounds_45065) {
                // read operands
                {
                    x_40759 = ((volatile __local
                                float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055) -
                                                             sext_i32_i64(skip_threads_45066)];
                }
                // perform operation
                {
                    bool inactive_45067 =
                         slt64(srem64((sext_i32_i64(local_tid_45055) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_40755 *
                                       sdiv_up64(m_28886 * iota32_arg_29281,
                                                 sext_i32_i64(num_threads_45029))) -
                                      (int64_t) 1, iota32_arg_29281),
                               (sext_i32_i64(local_tid_45055) + (int64_t) 1) *
                               (segscan_group_sizze_40755 * sdiv_up64(m_28886 *
                                                                      iota32_arg_29281,
                                                                      sext_i32_i64(num_threads_45029))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_45055 -
                                               skip_threads_45066) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_40755 *
                                               sdiv_up64(m_28886 *
                                                         iota32_arg_29281,
                                                         sext_i32_i64(num_threads_45029))) -
                                              (int64_t) 1));
                    
                    if (inactive_45067) {
                        x_40759 = x_40760;
                    }
                    if (!inactive_45067) {
                        float defunc_1_op_res_40761 = x_40759 + x_40760;
                        
                        x_40759 = defunc_1_op_res_40761;
                    }
                }
            }
            if (sle32(wave_sizze_45057, skip_threads_45066)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45066, local_tid_45055 -
                      squot32(local_tid_45055, 32) * 32) &&
                ltid_in_bounds_45065) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)] =
                        x_40759;
                    x_40760 = x_40759;
                }
            }
            if (sle32(wave_sizze_45057, skip_threads_45066)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45066 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45055 - squot32(local_tid_45055, 32) * 32) == 31 &&
            ltid_in_bounds_45065) {
            ((volatile __local
              float *) scan_arr_mem_45059)[sext_i32_i64(squot32(local_tid_45055,
                                                                32))] = x_40759;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45068;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45055, 32) == 0 && ltid_in_bounds_45065) {
                x_45063 = ((volatile __local
                            float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)];
                if ((local_tid_45055 - squot32(local_tid_45055, 32) * 32) ==
                    0) {
                    x_45062 = x_45063;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45068 = 1;
            while (slt32(skip_threads_45068, 32)) {
                if (sle32(skip_threads_45068, local_tid_45055 -
                          squot32(local_tid_45055, 32) * 32) &&
                    (squot32(local_tid_45055, 32) == 0 &&
                     ltid_in_bounds_45065)) {
                    // read operands
                    {
                        x_45062 = ((volatile __local
                                    float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055) -
                                                                 sext_i32_i64(skip_threads_45068)];
                    }
                    // perform operation
                    {
                        bool inactive_45069 =
                             slt64(srem64((sext_i32_i64(local_tid_45055 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_40755 *
                                           sdiv_up64(m_28886 * iota32_arg_29281,
                                                     sext_i32_i64(num_threads_45029))) -
                                          (int64_t) 1, iota32_arg_29281),
                                   (sext_i32_i64(local_tid_45055 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_40755 *
                                    sdiv_up64(m_28886 * iota32_arg_29281,
                                              sext_i32_i64(num_threads_45029))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_45055 -
                                                   skip_threads_45068) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_40755 *
                                     sdiv_up64(m_28886 * iota32_arg_29281,
                                               sext_i32_i64(num_threads_45029))) -
                                    (int64_t) 1));
                        
                        if (inactive_45069) {
                            x_45062 = x_45063;
                        }
                        if (!inactive_45069) {
                            float defunc_1_op_res_45064 = x_45062 + x_45063;
                            
                            x_45062 = defunc_1_op_res_45064;
                        }
                    }
                }
                if (sle32(wave_sizze_45057, skip_threads_45068)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45068, local_tid_45055 -
                          squot32(local_tid_45055, 32) * 32) &&
                    (squot32(local_tid_45055, 32) == 0 &&
                     ltid_in_bounds_45065)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)] =
                            x_45062;
                        x_45063 = x_45062;
                    }
                }
                if (sle32(wave_sizze_45057, skip_threads_45068)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45068 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45055, 32) == 0 || !ltid_in_bounds_45065)) {
            // read operands
            {
                x_40760 = x_40759;
                x_40759 = ((__local
                            float *) scan_arr_mem_45059)[sext_i32_i64(squot32(local_tid_45055,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_45070 =
                     slt64(srem64((sext_i32_i64(local_tid_45055) +
                                   (int64_t) 1) * (segscan_group_sizze_40755 *
                                                   sdiv_up64(m_28886 *
                                                             iota32_arg_29281,
                                                             sext_i32_i64(num_threads_45029))) -
                                  (int64_t) 1, iota32_arg_29281),
                           (sext_i32_i64(local_tid_45055) + (int64_t) 1) *
                           (segscan_group_sizze_40755 * sdiv_up64(m_28886 *
                                                                  iota32_arg_29281,
                                                                  sext_i32_i64(num_threads_45029))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_45055,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_40755 *
                                           sdiv_up64(m_28886 * iota32_arg_29281,
                                                     sext_i32_i64(num_threads_45029))) -
                                          (int64_t) 1));
                
                if (inactive_45070) {
                    x_40759 = x_40760;
                }
                if (!inactive_45070) {
                    float defunc_1_op_res_40761 = x_40759 + x_40760;
                    
                    x_40759 = defunc_1_op_res_40761;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)] =
                    x_40759;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45055, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)] =
                x_40760;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_40668, m_28886) && slt64(gtid_40676, iota32_arg_29281)) {
            ((__global float *) mem_43762)[gtid_40668 * iota32_arg_29281 +
                                           gtid_40676] = ((__local
                                                           float *) scan_arr_mem_45059)[sext_i32_i64(local_tid_45055)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40755
}
__kernel void mainziscan_stage3_39693(__global int *global_failure,
                                      int64_t N_28885, int64_t m_28886,
                                      int64_t num_groups_39711,
                                      int32_t num_threads_44646,
                                      int32_t required_groups_44688, __global
                                      unsigned char *mem_43623)
{
    #define segscan_group_sizze_39710 (mainzisegscan_group_sizze_39687)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44689;
    int32_t local_tid_44690;
    int64_t group_sizze_44693;
    int32_t wave_sizze_44692;
    int32_t group_tid_44691;
    
    global_tid_44689 = get_global_id(0);
    local_tid_44690 = get_local_id(0);
    group_sizze_44693 = get_local_size(0);
    wave_sizze_44692 = LOCKSTEP_WIDTH;
    group_tid_44691 = get_group_id(0);
    
    int32_t phys_tid_39693;
    
    phys_tid_39693 = global_tid_44689;
    
    int32_t phys_group_id_44694;
    
    phys_group_id_44694 = get_group_id(0);
    for (int32_t i_44695 = 0; i_44695 < sdiv_up32(required_groups_44688 -
                                                  phys_group_id_44694,
                                                  sext_i64_i32(num_groups_39711));
         i_44695++) {
        int32_t virt_group_id_44696 = phys_group_id_44694 + i_44695 *
                sext_i64_i32(num_groups_39711);
        int64_t flat_idx_44697 = sext_i32_i64(virt_group_id_44696) *
                segscan_group_sizze_39710 + sext_i32_i64(local_tid_44690);
        int64_t gtid_39684 = squot64(flat_idx_44697, N_28885);
        int64_t gtid_39692 = flat_idx_44697 - squot64(flat_idx_44697, N_28885) *
                N_28885;
        int64_t orig_group_44698 = squot64(flat_idx_44697,
                                           segscan_group_sizze_39710 *
                                           sdiv_up64(m_28886 * N_28885,
                                                     sext_i32_i64(num_threads_44646)));
        int64_t carry_in_flat_idx_44699 = orig_group_44698 *
                (segscan_group_sizze_39710 * sdiv_up64(m_28886 * N_28885,
                                                       sext_i32_i64(num_threads_44646))) -
                (int64_t) 1;
        
        if (slt64(gtid_39684, m_28886) && slt64(gtid_39692, N_28885)) {
            if (!(orig_group_44698 == (int64_t) 0 || (flat_idx_44697 ==
                                                      (orig_group_44698 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_39710 *
                                                       sdiv_up64(m_28886 *
                                                                 N_28885,
                                                                 sext_i32_i64(num_threads_44646))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44697,
                                                                   N_28885),
                                                            flat_idx_44697 -
                                                            carry_in_flat_idx_44699)))) {
                int64_t x_39715;
                int64_t x_39716;
                
                x_39715 = ((__global
                            int64_t *) mem_43623)[squot64(carry_in_flat_idx_44699,
                                                          N_28885) * N_28885 +
                                                  (carry_in_flat_idx_44699 -
                                                   squot64(carry_in_flat_idx_44699,
                                                           N_28885) * N_28885)];
                x_39716 = ((__global int64_t *) mem_43623)[gtid_39684 *
                                                           N_28885 +
                                                           gtid_39692];
                
                int64_t defunc_1_op_res_39717;
                
                defunc_1_op_res_39717 = add64(x_39715, x_39716);
                x_39715 = defunc_1_op_res_39717;
                ((__global int64_t *) mem_43623)[gtid_39684 * N_28885 +
                                                 gtid_39692] = x_39715;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_39710
}
__kernel void mainziscan_stage3_40677(__global int *global_failure,
                                      int64_t m_28886, int64_t iota32_arg_29281,
                                      int64_t num_groups_40756,
                                      int32_t num_threads_45029,
                                      int32_t required_groups_45071, __global
                                      unsigned char *mem_43762)
{
    #define segscan_group_sizze_40755 (mainzisegscan_group_sizze_40671)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45072;
    int32_t local_tid_45073;
    int64_t group_sizze_45076;
    int32_t wave_sizze_45075;
    int32_t group_tid_45074;
    
    global_tid_45072 = get_global_id(0);
    local_tid_45073 = get_local_id(0);
    group_sizze_45076 = get_local_size(0);
    wave_sizze_45075 = LOCKSTEP_WIDTH;
    group_tid_45074 = get_group_id(0);
    
    int32_t phys_tid_40677;
    
    phys_tid_40677 = global_tid_45072;
    
    int32_t phys_group_id_45077;
    
    phys_group_id_45077 = get_group_id(0);
    for (int32_t i_45078 = 0; i_45078 < sdiv_up32(required_groups_45071 -
                                                  phys_group_id_45077,
                                                  sext_i64_i32(num_groups_40756));
         i_45078++) {
        int32_t virt_group_id_45079 = phys_group_id_45077 + i_45078 *
                sext_i64_i32(num_groups_40756);
        int64_t flat_idx_45080 = sext_i32_i64(virt_group_id_45079) *
                segscan_group_sizze_40755 + sext_i32_i64(local_tid_45073);
        int64_t gtid_40668 = squot64(flat_idx_45080, iota32_arg_29281);
        int64_t gtid_40676 = flat_idx_45080 - squot64(flat_idx_45080,
                                                      iota32_arg_29281) *
                iota32_arg_29281;
        int64_t orig_group_45081 = squot64(flat_idx_45080,
                                           segscan_group_sizze_40755 *
                                           sdiv_up64(m_28886 * iota32_arg_29281,
                                                     sext_i32_i64(num_threads_45029)));
        int64_t carry_in_flat_idx_45082 = orig_group_45081 *
                (segscan_group_sizze_40755 * sdiv_up64(m_28886 *
                                                       iota32_arg_29281,
                                                       sext_i32_i64(num_threads_45029))) -
                (int64_t) 1;
        
        if (slt64(gtid_40668, m_28886) && slt64(gtid_40676, iota32_arg_29281)) {
            if (!(orig_group_45081 == (int64_t) 0 || (flat_idx_45080 ==
                                                      (orig_group_45081 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_40755 *
                                                       sdiv_up64(m_28886 *
                                                                 iota32_arg_29281,
                                                                 sext_i32_i64(num_threads_45029))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_45080,
                                                                   iota32_arg_29281),
                                                            flat_idx_45080 -
                                                            carry_in_flat_idx_45082)))) {
                float x_40759;
                float x_40760;
                
                x_40759 = ((__global
                            float *) mem_43762)[squot64(carry_in_flat_idx_45082,
                                                        iota32_arg_29281) *
                                                iota32_arg_29281 +
                                                (carry_in_flat_idx_45082 -
                                                 squot64(carry_in_flat_idx_45082,
                                                         iota32_arg_29281) *
                                                 iota32_arg_29281)];
                x_40760 = ((__global float *) mem_43762)[gtid_40668 *
                                                         iota32_arg_29281 +
                                                         gtid_40676];
                
                float defunc_1_op_res_40761;
                
                defunc_1_op_res_40761 = x_40759 + x_40760;
                x_40759 = defunc_1_op_res_40761;
                ((__global float *) mem_43762)[gtid_40668 * iota32_arg_29281 +
                                               gtid_40676] = x_40759;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_40755
}
__kernel void mainzisegmap_37616(__global int *global_failure, int64_t N_28885,
                                 float freq_28890, int64_t i32_res_28901,
                                 __global
                                 unsigned char *mappingindices_mem_42840,
                                 __global unsigned char *mem_42845)
{
    #define segmap_group_sizze_37689 (mainzisegmap_group_sizze_37619)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44070;
    int32_t local_tid_44071;
    int64_t group_sizze_44074;
    int32_t wave_sizze_44073;
    int32_t group_tid_44072;
    
    global_tid_44070 = get_global_id(0);
    local_tid_44071 = get_local_id(0);
    group_sizze_44074 = get_local_size(0);
    wave_sizze_44073 = LOCKSTEP_WIDTH;
    group_tid_44072 = get_group_id(0);
    
    int32_t phys_tid_37616;
    
    phys_tid_37616 = global_tid_44070;
    
    int64_t gtid_37614;
    
    gtid_37614 = squot64(sext_i32_i64(group_tid_44072) *
                         segmap_group_sizze_37689 +
                         sext_i32_i64(local_tid_44071), N_28885);
    
    int64_t gtid_37615;
    
    gtid_37615 = sext_i32_i64(group_tid_44072) * segmap_group_sizze_37689 +
        sext_i32_i64(local_tid_44071) - squot64(sext_i32_i64(group_tid_44072) *
                                                segmap_group_sizze_37689 +
                                                sext_i32_i64(local_tid_44071),
                                                N_28885) * N_28885;
    if (slt64(gtid_37614, i32_res_28901) && slt64(gtid_37615, N_28885)) {
        int32_t index_primexp_40883 = sext_i64_i32(gtid_37614);
        bool index_primexp_40880 = index_primexp_40883 == 0;
        float defunc_0_f_res_37695;
        
        if (index_primexp_40880) {
            defunc_0_f_res_37695 = 1.0F;
        } else {
            int32_t x_37694 = ((__global
                                int32_t *) mappingindices_mem_42840)[gtid_37615];
            bool cond_37696 = index_primexp_40883 == 1;
            float defunc_0_f_res_f_res_37697;
            
            if (cond_37696) {
                float i32_res_37698 = sitofp_i32_f32(x_37694);
                
                defunc_0_f_res_f_res_37697 = i32_res_37698;
            } else {
                int32_t r32_arg_37699 = sdiv32(index_primexp_40883, 2);
                float i32_res_37700 = sitofp_i32_f32(r32_arg_37699);
                float i32_res_37701 = sitofp_i32_f32(x_37694);
                float x_37702 = 6.2831855F * i32_res_37700;
                float x_37703 = i32_res_37701 * x_37702;
                float angle_37704 = x_37703 / freq_28890;
                int32_t x_37705 = smod32(index_primexp_40883, 2);
                bool cond_37706 = x_37705 == 0;
                float defunc_0_f_res_f_res_f_res_37707;
                
                if (cond_37706) {
                    float sin_res_37708;
                    
                    sin_res_37708 = futrts_sin32(angle_37704);
                    defunc_0_f_res_f_res_f_res_37707 = sin_res_37708;
                } else {
                    float cos_res_37709;
                    
                    cos_res_37709 = futrts_cos32(angle_37704);
                    defunc_0_f_res_f_res_f_res_37707 = cos_res_37709;
                }
                defunc_0_f_res_f_res_37697 = defunc_0_f_res_f_res_f_res_37707;
            }
            defunc_0_f_res_37695 = defunc_0_f_res_f_res_37697;
        }
        ((__global float *) mem_42845)[gtid_37614 * N_28885 + gtid_37615] =
            defunc_0_f_res_37695;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37689
}
__kernel void mainzisegmap_37794(__global int *global_failure, int64_t N_28885,
                                 float freq_28890, int64_t i32_res_28901,
                                 __global
                                 unsigned char *mappingindices_mem_42840,
                                 __global unsigned char *mem_42849)
{
    #define segmap_group_sizze_37863 (mainzisegmap_group_sizze_37797)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44075;
    int32_t local_tid_44076;
    int64_t group_sizze_44079;
    int32_t wave_sizze_44078;
    int32_t group_tid_44077;
    
    global_tid_44075 = get_global_id(0);
    local_tid_44076 = get_local_id(0);
    group_sizze_44079 = get_local_size(0);
    wave_sizze_44078 = LOCKSTEP_WIDTH;
    group_tid_44077 = get_group_id(0);
    
    int32_t phys_tid_37794;
    
    phys_tid_37794 = global_tid_44075;
    
    int64_t gtid_37792;
    
    gtid_37792 = squot64(sext_i32_i64(group_tid_44077) *
                         segmap_group_sizze_37863 +
                         sext_i32_i64(local_tid_44076), N_28885);
    
    int64_t gtid_37793;
    
    gtid_37793 = sext_i32_i64(group_tid_44077) * segmap_group_sizze_37863 +
        sext_i32_i64(local_tid_44076) - squot64(sext_i32_i64(group_tid_44077) *
                                                segmap_group_sizze_37863 +
                                                sext_i32_i64(local_tid_44076),
                                                N_28885) * N_28885;
    if (slt64(gtid_37792, i32_res_28901) && slt64(gtid_37793, N_28885)) {
        int32_t index_primexp_40892 = sext_i64_i32(gtid_37792);
        bool index_primexp_40889 = index_primexp_40892 == 0;
        float defunc_0_f_res_37869;
        
        if (index_primexp_40889) {
            defunc_0_f_res_37869 = 1.0F;
        } else {
            int32_t x_37868 = ((__global
                                int32_t *) mappingindices_mem_42840)[gtid_37793];
            int32_t i_37870 = add32(1, index_primexp_40892);
            int32_t r32_arg_37871 = sdiv32(i_37870, 2);
            float i32_res_37872 = sitofp_i32_f32(r32_arg_37871);
            float i32_res_37873 = sitofp_i32_f32(x_37868);
            float x_37874 = 6.2831855F * i32_res_37872;
            float x_37875 = i32_res_37873 * x_37874;
            float angle_37876 = x_37875 / freq_28890;
            int32_t x_37877 = smod32(i_37870, 2);
            bool cond_37878 = x_37877 == 0;
            float defunc_0_f_res_f_res_37879;
            
            if (cond_37878) {
                float sin_res_37880;
                
                sin_res_37880 = futrts_sin32(angle_37876);
                defunc_0_f_res_f_res_37879 = sin_res_37880;
            } else {
                float cos_res_37881;
                
                cos_res_37881 = futrts_cos32(angle_37876);
                defunc_0_f_res_f_res_37879 = cos_res_37881;
            }
            defunc_0_f_res_37869 = defunc_0_f_res_f_res_37879;
        }
        ((__global float *) mem_42849)[gtid_37792 * N_28885 + gtid_37793] =
            defunc_0_f_res_37869;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37863
}
__kernel void mainzisegmap_37922(__global int *global_failure, int64_t N_28885,
                                 int64_t i32_res_28901, float i32_res_28966,
                                 __global unsigned char *mem_42853, __global
                                 unsigned char *mem_42857)
{
    #define segmap_group_sizze_37946 (mainzisegmap_group_sizze_37925)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44080;
    int32_t local_tid_44081;
    int64_t group_sizze_44084;
    int32_t wave_sizze_44083;
    int32_t group_tid_44082;
    
    global_tid_44080 = get_global_id(0);
    local_tid_44081 = get_local_id(0);
    group_sizze_44084 = get_local_size(0);
    wave_sizze_44083 = LOCKSTEP_WIDTH;
    group_tid_44082 = get_group_id(0);
    
    int32_t phys_tid_37922;
    
    phys_tid_37922 = global_tid_44080;
    
    int64_t gtid_37920;
    
    gtid_37920 = squot64(sext_i32_i64(group_tid_44082) *
                         segmap_group_sizze_37946 +
                         sext_i32_i64(local_tid_44081), i32_res_28901);
    
    int64_t gtid_37921;
    
    gtid_37921 = sext_i32_i64(group_tid_44082) * segmap_group_sizze_37946 +
        sext_i32_i64(local_tid_44081) - squot64(sext_i32_i64(group_tid_44082) *
                                                segmap_group_sizze_37946 +
                                                sext_i32_i64(local_tid_44081),
                                                i32_res_28901) * i32_res_28901;
    if (slt64(gtid_37920, N_28885) && slt64(gtid_37921, i32_res_28901)) {
        float x_37949 = ((__global float *) mem_42853)[gtid_37920 *
                                                       i32_res_28901 +
                                                       gtid_37921];
        float defunc_0_f_res_37950 = i32_res_28966 + x_37949;
        
        ((__global float *) mem_42857)[gtid_37920 * i32_res_28901 +
                                       gtid_37921] = defunc_0_f_res_37950;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37946
}
__kernel void mainzisegmap_37955(__global int *global_failure, int64_t N_28885,
                                 int64_t m_28886, int32_t n_28889,
                                 int32_t k2p2zq_28899, int64_t i32_res_28901,
                                 int64_t num_groups_37980, __global
                                 unsigned char *binop_p_mem_42850, __global
                                 unsigned char *mem_42857, __global
                                 unsigned char *mem_42860, __global
                                 unsigned char *mem_42864, __global
                                 unsigned char *mem_42906)
{
    #define segmap_group_sizze_37979 (mainzisegmap_group_sizze_37957)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44088;
    int32_t local_tid_44089;
    int64_t group_sizze_44092;
    int32_t wave_sizze_44091;
    int32_t group_tid_44090;
    
    global_tid_44088 = get_global_id(0);
    local_tid_44089 = get_local_id(0);
    group_sizze_44092 = get_local_size(0);
    wave_sizze_44091 = LOCKSTEP_WIDTH;
    group_tid_44090 = get_group_id(0);
    
    int32_t phys_tid_37955;
    
    phys_tid_37955 = global_tid_44088;
    
    int32_t phys_group_id_44093;
    
    phys_group_id_44093 = get_group_id(0);
    for (int32_t i_44094 = 0; i_44094 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886, segmap_group_sizze_37979)) -
                   phys_group_id_44093, sext_i64_i32(num_groups_37980));
         i_44094++) {
        int32_t virt_group_id_44095 = phys_group_id_44093 + i_44094 *
                sext_i64_i32(num_groups_37980);
        int64_t gtid_37954 = sext_i32_i64(virt_group_id_44095) *
                segmap_group_sizze_37979 + sext_i32_i64(local_tid_44089);
        
        if (slt64(gtid_37954, m_28886)) {
            for (int32_t i_42824 = 0; i_42824 < k2p2zq_28899; i_42824++) {
                int64_t i_42776 = sext_i32_i64(i_42824);
                
                for (int32_t i_42823 = 0; i_42823 < k2p2zq_28899; i_42823++) {
                    int64_t i_42780 = sext_i32_i64(i_42823);
                    float defunc_2_reduce_res_37988;
                    float redout_42782 = 0.0F;
                    
                    for (int32_t i_42822 = 0; i_42822 < n_28889; i_42822++) {
                        int64_t i_42783 = sext_i32_i64(i_42822);
                        float x_37992 = ((__global float *) mem_42860)[i_42783 *
                                                                       m_28886 +
                                                                       gtid_37954];
                        float x_37993 = ((__global
                                          float *) binop_p_mem_42850)[i_42776 *
                                                                      N_28885 +
                                                                      i_42783];
                        float x_37994 = ((__global float *) mem_42857)[i_42783 *
                                                                       i32_res_28901 +
                                                                       i_42780];
                        float x_37995 = x_37993 * x_37994;
                        bool isnan_res_37996;
                        
                        isnan_res_37996 = futrts_isnan32(x_37992);
                        
                        float y_37997;
                        
                        if (isnan_res_37996) {
                            y_37997 = 0.0F;
                        } else {
                            y_37997 = 1.0F;
                        }
                        
                        float defunc_2_f_res_37998 = x_37995 * y_37997;
                        float defunc_1_op_res_37991 = defunc_2_f_res_37998 +
                              redout_42782;
                        float redout_tmp_44098 = defunc_1_op_res_37991;
                        
                        redout_42782 = redout_tmp_44098;
                    }
                    defunc_2_reduce_res_37988 = redout_42782;
                    ((__global float *) mem_42864)[phys_tid_37955 + (i_42776 *
                                                                     (num_groups_37980 *
                                                                      segmap_group_sizze_37979 *
                                                                      i32_res_28901) +
                                                                     i_42780 *
                                                                     (num_groups_37980 *
                                                                      segmap_group_sizze_37979))] =
                        defunc_2_reduce_res_37988;
                }
            }
            for (int64_t i_44099 = 0; i_44099 < i32_res_28901; i_44099++) {
                for (int64_t i_44100 = 0; i_44100 < i32_res_28901; i_44100++) {
                    ((__global float *) mem_42906)[i_44099 * (m_28886 *
                                                              i32_res_28901) +
                                                   i_44100 * m_28886 +
                                                   gtid_37954] = ((__global
                                                                   float *) mem_42864)[phys_tid_37955 +
                                                                                       (i_44099 *
                                                                                        (num_groups_37980 *
                                                                                         segmap_group_sizze_37979 *
                                                                                         i32_res_28901) +
                                                                                        i_44100 *
                                                                                        (num_groups_37980 *
                                                                                         segmap_group_sizze_37979))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37979
}
__kernel void mainzisegmap_38001(__global int *global_failure, int64_t N_28885,
                                 int64_t m_28886, int32_t n_28889,
                                 int32_t k2p2zq_28899, int64_t i32_res_28901,
                                 int64_t num_groups_38157, __global
                                 unsigned char *images_mem_42841, __global
                                 unsigned char *mem_42853, __global
                                 unsigned char *mem_42857, __global
                                 unsigned char *mem_42909, __global
                                 unsigned char *mem_42925)
{
    #define segmap_group_sizze_38156 (mainzisegmap_group_sizze_38004)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44101;
    int32_t local_tid_44102;
    int64_t group_sizze_44105;
    int32_t wave_sizze_44104;
    int32_t group_tid_44103;
    
    global_tid_44101 = get_global_id(0);
    local_tid_44102 = get_local_id(0);
    group_sizze_44105 = get_local_size(0);
    wave_sizze_44104 = LOCKSTEP_WIDTH;
    group_tid_44103 = get_group_id(0);
    
    int32_t phys_tid_38001;
    
    phys_tid_38001 = global_tid_44101;
    
    int32_t phys_group_id_44106;
    
    phys_group_id_44106 = get_group_id(0);
    for (int32_t i_44107 = 0; i_44107 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886 * i32_res_28901,
                                          segmap_group_sizze_38156)) -
                   phys_group_id_44106, sext_i64_i32(num_groups_38157));
         i_44107++) {
        int32_t virt_group_id_44108 = phys_group_id_44106 + i_44107 *
                sext_i64_i32(num_groups_38157);
        int64_t gtid_37999 = squot64(sext_i32_i64(virt_group_id_44108) *
                                     segmap_group_sizze_38156 +
                                     sext_i32_i64(local_tid_44102),
                                     i32_res_28901);
        int64_t gtid_38000 = sext_i32_i64(virt_group_id_44108) *
                segmap_group_sizze_38156 + sext_i32_i64(local_tid_44102) -
                squot64(sext_i32_i64(virt_group_id_44108) *
                        segmap_group_sizze_38156 +
                        sext_i32_i64(local_tid_44102), i32_res_28901) *
                i32_res_28901;
        
        if (slt64(gtid_37999, m_28886) && slt64(gtid_38000, i32_res_28901)) {
            for (int32_t i_42826 = 0; i_42826 < k2p2zq_28899; i_42826++) {
                int64_t i_42786 = sext_i32_i64(i_42826);
                float defunc_2_reduce_res_38168;
                float redout_42788 = 0.0F;
                
                for (int32_t i_42825 = 0; i_42825 < n_28889; i_42825++) {
                    int64_t i_42789 = sext_i32_i64(i_42825);
                    float x_38172 = ((__global
                                      float *) images_mem_42841)[gtid_37999 *
                                                                 N_28885 +
                                                                 i_42789];
                    float x_38173 = ((__global float *) mem_42853)[i_42789 *
                                                                   i32_res_28901 +
                                                                   gtid_38000];
                    float x_38174 = ((__global float *) mem_42857)[i_42789 *
                                                                   i32_res_28901 +
                                                                   i_42786];
                    float x_38175 = x_38173 * x_38174;
                    bool isnan_res_38176;
                    
                    isnan_res_38176 = futrts_isnan32(x_38172);
                    
                    float y_38177;
                    
                    if (isnan_res_38176) {
                        y_38177 = 0.0F;
                    } else {
                        y_38177 = 1.0F;
                    }
                    
                    float defunc_2_f_res_38178 = x_38175 * y_38177;
                    float defunc_1_op_res_38171 = defunc_2_f_res_38178 +
                          redout_42788;
                    float redout_tmp_44110 = defunc_1_op_res_38171;
                    
                    redout_42788 = redout_tmp_44110;
                }
                defunc_2_reduce_res_38168 = redout_42788;
                ((__global float *) mem_42909)[phys_tid_38001 + i_42786 *
                                               (num_groups_38157 *
                                                segmap_group_sizze_38156)] =
                    defunc_2_reduce_res_38168;
            }
            for (int64_t i_44111 = 0; i_44111 < i32_res_28901; i_44111++) {
                ((__global float *) mem_42925)[i_44111 * (i32_res_28901 *
                                                          m_28886) +
                                               gtid_37999 * i32_res_28901 +
                                               gtid_38000] = ((__global
                                                               float *) mem_42909)[phys_tid_38001 +
                                                                                   i_44111 *
                                                                                   (num_groups_38157 *
                                                                                    segmap_group_sizze_38156)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38156
}
__kernel void mainzisegmap_38485(__global int *global_failure, int64_t m_28886,
                                 int64_t i32_res_28901, int64_t i32_res_29034,
                                 int64_t i32_res_29049, int64_t x_29050,
                                 int64_t j_m_i_29053,
                                 int64_t gauss_jordan_res_r_ixfn_43077,
                                 int64_t gauss_jordan_res_r_ixfn_43078,
                                 int64_t gauss_jordan_res_r_ixfn_43080, __global
                                 unsigned char *gauss_jordan_res_r_mem_43082,
                                 __global unsigned char *mem_43087)
{
    #define segmap_group_sizze_39036 (mainzisegmap_group_sizze_38489)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44268;
    int32_t local_tid_44269;
    int64_t group_sizze_44272;
    int32_t wave_sizze_44271;
    int32_t group_tid_44270;
    
    global_tid_44268 = get_global_id(0);
    local_tid_44269 = get_local_id(0);
    group_sizze_44272 = get_local_size(0);
    wave_sizze_44271 = LOCKSTEP_WIDTH;
    group_tid_44270 = get_group_id(0);
    
    int32_t phys_tid_38485;
    
    phys_tid_38485 = global_tid_44268;
    
    int64_t gtid_38482;
    
    gtid_38482 = squot64(sext_i32_i64(group_tid_44270) *
                         segmap_group_sizze_39036 +
                         sext_i32_i64(local_tid_44269), i32_res_28901 *
                         j_m_i_29053);
    
    int64_t gtid_slice_38480;
    
    gtid_slice_38480 = squot64(sext_i32_i64(group_tid_44270) *
                               segmap_group_sizze_39036 +
                               sext_i32_i64(local_tid_44269) -
                               squot64(sext_i32_i64(group_tid_44270) *
                                       segmap_group_sizze_39036 +
                                       sext_i32_i64(local_tid_44269),
                                       i32_res_28901 * j_m_i_29053) *
                               (i32_res_28901 * j_m_i_29053), j_m_i_29053);
    
    int64_t gtid_slice_38481;
    
    gtid_slice_38481 = sext_i32_i64(group_tid_44270) *
        segmap_group_sizze_39036 + sext_i32_i64(local_tid_44269) -
        squot64(sext_i32_i64(group_tid_44270) * segmap_group_sizze_39036 +
                sext_i32_i64(local_tid_44269), i32_res_28901 * j_m_i_29053) *
        (i32_res_28901 * j_m_i_29053) - squot64(sext_i32_i64(group_tid_44270) *
                                                segmap_group_sizze_39036 +
                                                sext_i32_i64(local_tid_44269) -
                                                squot64(sext_i32_i64(group_tid_44270) *
                                                        segmap_group_sizze_39036 +
                                                        sext_i32_i64(local_tid_44269),
                                                        i32_res_28901 *
                                                        j_m_i_29053) *
                                                (i32_res_28901 * j_m_i_29053),
                                                j_m_i_29053) * j_m_i_29053;
    if ((slt64(gtid_38482, m_28886) && slt64(gtid_slice_38480,
                                             i32_res_28901)) &&
        slt64(gtid_slice_38481, j_m_i_29053)) {
        int64_t slice_39040 = i32_res_28901 + gtid_slice_38481;
        int64_t binop_x_40950 = x_29050 * gtid_38482;
        int64_t binop_y_40951 = i32_res_29049 * gtid_slice_38480;
        int64_t binop_x_40952 = binop_x_40950 + binop_y_40951;
        int64_t binop_x_40953 = slice_39040 + binop_x_40952;
        int64_t new_index_40954 = squot64(binop_x_40953, i32_res_29034);
        int64_t binop_y_40966 = i32_res_29034 * new_index_40954;
        int64_t new_index_40967 = binop_x_40953 - binop_y_40966;
        float v_39041 = ((__global
                          float *) gauss_jordan_res_r_mem_43082)[gauss_jordan_res_r_ixfn_43077 +
                                                                 (new_index_40954 *
                                                                  gauss_jordan_res_r_ixfn_43078 +
                                                                  new_index_40967 *
                                                                  gauss_jordan_res_r_ixfn_43080)];
        
        ((__global float *) mem_43087)[gtid_38482 * (j_m_i_29053 *
                                                     i32_res_28901) +
                                       gtid_slice_38480 * j_m_i_29053 +
                                       gtid_slice_38481] = v_39041;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39036
}
__kernel void mainzisegmap_38651(__global int *global_failure, int64_t m_28886,
                                 int64_t i32_res_29034,
                                 int64_t ctx_param_ext_43040,
                                 int64_t ctx_param_ext_43041,
                                 int64_t ctx_param_ext_43043, __global
                                 unsigned char *mem_param_43045, __global
                                 unsigned char *mem_43065)
{
    #define segmap_group_sizze_39024 (mainzisegmap_group_sizze_38654)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44262;
    int32_t local_tid_44263;
    int64_t group_sizze_44266;
    int32_t wave_sizze_44265;
    int32_t group_tid_44264;
    
    global_tid_44262 = get_global_id(0);
    local_tid_44263 = get_local_id(0);
    group_sizze_44266 = get_local_size(0);
    wave_sizze_44265 = LOCKSTEP_WIDTH;
    group_tid_44264 = get_group_id(0);
    
    int32_t phys_tid_38651;
    
    phys_tid_38651 = global_tid_44262;
    
    int64_t gtid_38649;
    
    gtid_38649 = squot64(sext_i32_i64(group_tid_44264) *
                         segmap_group_sizze_39024 +
                         sext_i32_i64(local_tid_44263), i32_res_29034);
    
    int64_t gtid_38650;
    
    gtid_38650 = sext_i32_i64(group_tid_44264) * segmap_group_sizze_39024 +
        sext_i32_i64(local_tid_44263) - squot64(sext_i32_i64(group_tid_44264) *
                                                segmap_group_sizze_39024 +
                                                sext_i32_i64(local_tid_44263),
                                                i32_res_29034) * i32_res_29034;
    if (slt64(gtid_38649, m_28886) && slt64(gtid_38650, i32_res_29034)) {
        float write_value_39030 = ((__global float *) mem_43065)[gtid_38649 *
                                                                 i32_res_29034 +
                                                                 gtid_38650];
        
        if ((sle64((int64_t) 0, gtid_38649) && slt64(gtid_38649, m_28886)) &&
            (sle64((int64_t) 0, gtid_38650) && slt64(gtid_38650,
                                                     i32_res_29034))) {
            ((__global float *) mem_param_43045)[ctx_param_ext_43040 +
                                                 (gtid_38649 *
                                                  ctx_param_ext_43041 +
                                                  gtid_38650 *
                                                  ctx_param_ext_43043)] =
                write_value_39030;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39024
}
__kernel void mainzisegmap_38705(__global int *global_failure, int64_t m_28886,
                                 int32_t k2p2zq_28899, int32_t m_29032,
                                 int64_t i32_res_29034, int32_t i_38927,
                                 int64_t i32_res_38929,
                                 int64_t ctx_param_ext_43040,
                                 int64_t ctx_param_ext_43041,
                                 int64_t ctx_param_ext_43043, __global
                                 unsigned char *mem_param_43045, __global
                                 unsigned char *mem_43061, __global
                                 unsigned char *mem_43065)
{
    #define segmap_group_sizze_38990 (mainzisegmap_group_sizze_38708)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44257;
    int32_t local_tid_44258;
    int64_t group_sizze_44261;
    int32_t wave_sizze_44260;
    int32_t group_tid_44259;
    
    global_tid_44257 = get_global_id(0);
    local_tid_44258 = get_local_id(0);
    group_sizze_44261 = get_local_size(0);
    wave_sizze_44260 = LOCKSTEP_WIDTH;
    group_tid_44259 = get_group_id(0);
    
    int32_t phys_tid_38705;
    
    phys_tid_38705 = global_tid_44257;
    
    int64_t gtid_38703;
    
    gtid_38703 = squot64(sext_i32_i64(group_tid_44259) *
                         segmap_group_sizze_38990 +
                         sext_i32_i64(local_tid_44258), i32_res_29034);
    
    int64_t gtid_38704;
    
    gtid_38704 = sext_i32_i64(group_tid_44259) * segmap_group_sizze_38990 +
        sext_i32_i64(local_tid_44258) - squot64(sext_i32_i64(group_tid_44259) *
                                                segmap_group_sizze_38990 +
                                                sext_i32_i64(local_tid_44258),
                                                i32_res_29034) * i32_res_29034;
    if (slt64(gtid_38703, m_28886) && slt64(gtid_38704, i32_res_29034)) {
        bool cond_38995 = ((__global bool *) mem_43061)[gtid_38703];
        int32_t defunc_0_f_res_38997 = sext_i64_i32(gtid_38704);
        int32_t defunc_0_f_res_38998 = sdiv32(defunc_0_f_res_38997, m_29032);
        int32_t defunc_0_f_res_38999 = smod32(defunc_0_f_res_38997, m_29032);
        float defunc_0_f_res_39000;
        
        if (cond_38995) {
            int32_t x_39001 = mul32(m_29032, defunc_0_f_res_38998);
            int32_t i32_arg_39002 = add32(defunc_0_f_res_38999, x_39001);
            int64_t i32_res_39003 = sext_i32_i64(i32_arg_39002);
            float defunc_0_f_res_t_res_39004 = ((__global
                                                 float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                           (gtid_38703 *
                                                                            ctx_param_ext_43041 +
                                                                            i32_res_39003 *
                                                                            ctx_param_ext_43043)];
            
            defunc_0_f_res_39000 = defunc_0_f_res_t_res_39004;
        } else {
            float v1_38994 = ((__global
                               float *) mem_param_43045)[ctx_param_ext_43040 +
                                                         (gtid_38703 *
                                                          ctx_param_ext_43041 +
                                                          i32_res_38929 *
                                                          ctx_param_ext_43043)];
            int64_t i32_res_39005 = sext_i32_i64(defunc_0_f_res_38999);
            float x_39006 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_38703 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_39005 *
                                                         ctx_param_ext_43043)];
            float x_39007 = x_39006 / v1_38994;
            int32_t y_39008 = sub32(k2p2zq_28899, 1);
            bool cond_39009 = slt32(defunc_0_f_res_38998, y_39008);
            float defunc_0_f_res_f_res_39010;
            
            if (cond_39009) {
                int32_t x_39011 = add32(1, defunc_0_f_res_38998);
                int32_t x_39012 = mul32(m_29032, x_39011);
                int32_t i32_arg_39013 = add32(defunc_0_f_res_38999, x_39012);
                int64_t i32_res_39014 = sext_i32_i64(i32_arg_39013);
                float x_39015 = ((__global
                                  float *) mem_param_43045)[ctx_param_ext_43040 +
                                                            (gtid_38703 *
                                                             ctx_param_ext_43041 +
                                                             i32_res_39014 *
                                                             ctx_param_ext_43043)];
                int32_t i32_arg_39016 = add32(i_38927, x_39012);
                int64_t i32_res_39017 = sext_i32_i64(i32_arg_39016);
                float x_39018 = ((__global
                                  float *) mem_param_43045)[ctx_param_ext_43040 +
                                                            (gtid_38703 *
                                                             ctx_param_ext_43041 +
                                                             i32_res_39017 *
                                                             ctx_param_ext_43043)];
                float y_39019 = x_39007 * x_39018;
                float defunc_0_f_res_f_res_t_res_39020 = x_39015 - y_39019;
                
                defunc_0_f_res_f_res_39010 = defunc_0_f_res_f_res_t_res_39020;
            } else {
                defunc_0_f_res_f_res_39010 = x_39007;
            }
            defunc_0_f_res_39000 = defunc_0_f_res_f_res_39010;
        }
        ((__global float *) mem_43065)[gtid_38703 * i32_res_29034 +
                                       gtid_38704] = defunc_0_f_res_39000;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38990
}
__kernel void mainzisegmap_38773(__global int *global_failure, int64_t m_28886,
                                 int64_t i32_res_38929,
                                 int64_t ctx_param_ext_43040,
                                 int64_t ctx_param_ext_43041,
                                 int64_t ctx_param_ext_43043, __global
                                 unsigned char *mem_param_43045, __global
                                 unsigned char *mem_43061)
{
    #define segmap_group_sizze_38974 (mainzisegmap_group_sizze_38775)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44252;
    int32_t local_tid_44253;
    int64_t group_sizze_44256;
    int32_t wave_sizze_44255;
    int32_t group_tid_44254;
    
    global_tid_44252 = get_global_id(0);
    local_tid_44253 = get_local_id(0);
    group_sizze_44256 = get_local_size(0);
    wave_sizze_44255 = LOCKSTEP_WIDTH;
    group_tid_44254 = get_group_id(0);
    
    int32_t phys_tid_38773;
    
    phys_tid_38773 = global_tid_44252;
    
    int64_t gtid_38772;
    
    gtid_38772 = sext_i32_i64(group_tid_44254) * segmap_group_sizze_38974 +
        sext_i32_i64(local_tid_44253);
    if (slt64(gtid_38772, m_28886)) {
        float v1_38979 = ((__global
                           float *) mem_param_43045)[ctx_param_ext_43040 +
                                                     (gtid_38772 *
                                                      ctx_param_ext_43041 +
                                                      i32_res_38929 *
                                                      ctx_param_ext_43043)];
        bool cond_38980 = v1_38979 == 0.0F;
        
        ((__global bool *) mem_43061)[gtid_38772] = cond_38980;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38974
}
__kernel void mainzisegmap_38866(__global int *global_failure, int64_t m_28886,
                                 int32_t k2p2zq_28899, int64_t i32_res_28901,
                                 int32_t m_29032, int64_t i32_res_29034,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43009,
                                 __global unsigned char *mem_43037)
{
    #define segmap_group_sizze_38910 (mainzisegmap_group_sizze_38869)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44219;
    int32_t local_tid_44220;
    int64_t group_sizze_44223;
    int32_t wave_sizze_44222;
    int32_t group_tid_44221;
    
    global_tid_44219 = get_global_id(0);
    local_tid_44220 = get_local_id(0);
    group_sizze_44223 = get_local_size(0);
    wave_sizze_44222 = LOCKSTEP_WIDTH;
    group_tid_44221 = get_group_id(0);
    
    int32_t phys_tid_38866;
    
    phys_tid_38866 = global_tid_44219;
    
    int64_t gtid_38864;
    
    gtid_38864 = squot64(sext_i32_i64(group_tid_44221) *
                         segmap_group_sizze_38910 +
                         sext_i32_i64(local_tid_44220), i32_res_29034);
    
    int64_t gtid_38865;
    
    gtid_38865 = sext_i32_i64(group_tid_44221) * segmap_group_sizze_38910 +
        sext_i32_i64(local_tid_44220) - squot64(sext_i32_i64(group_tid_44221) *
                                                segmap_group_sizze_38910 +
                                                sext_i32_i64(local_tid_44220),
                                                i32_res_29034) * i32_res_29034;
    if (slt64(gtid_38864, m_28886) && slt64(gtid_38865, i32_res_29034)) {
        int32_t index_primexp_40904 = sext_i64_i32(gtid_38865);
        int32_t defunc_0_f_res_38915 = sdiv32(index_primexp_40904, m_29032);
        int32_t defunc_0_f_res_38916 = smod32(index_primexp_40904, m_29032);
        bool cond_38917 = slt32(defunc_0_f_res_38916, k2p2zq_28899);
        float defunc_0_f_res_38918;
        
        if (cond_38917) {
            int64_t i_38919 = sext_i32_i64(defunc_0_f_res_38915);
            int64_t j_38920 = sext_i32_i64(defunc_0_f_res_38916);
            float defunc_0_f_res_t_res_38921 = ((__global
                                                 float *) defunc_3_map_res_mem_43009)[gtid_38864 *
                                                                                      (i32_res_28901 *
                                                                                       i32_res_28901) +
                                                                                      i_38919 *
                                                                                      i32_res_28901 +
                                                                                      j_38920];
            
            defunc_0_f_res_38918 = defunc_0_f_res_t_res_38921;
        } else {
            int32_t y_38922 = add32(k2p2zq_28899, defunc_0_f_res_38915);
            bool cond_38923 = defunc_0_f_res_38916 == y_38922;
            float defunc_0_f_res_f_res_38924;
            
            if (cond_38923) {
                defunc_0_f_res_f_res_38924 = 1.0F;
            } else {
                defunc_0_f_res_f_res_38924 = 0.0F;
            }
            defunc_0_f_res_38918 = defunc_0_f_res_f_res_38924;
        }
        ((__global float *) mem_43037)[gtid_38864 * i32_res_29034 +
                                       gtid_38865] = defunc_0_f_res_38918;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_38910
}
__kernel void mainzisegmap_39047(__global int *global_failure, int64_t N_28885,
                                 int64_t m_28886, int32_t n_28889,
                                 int32_t k2p2zq_28899, int64_t i32_res_28901,
                                 int64_t num_groups_39068, __global
                                 unsigned char *binop_p_mem_42850, __global
                                 unsigned char *mem_43092, __global
                                 unsigned char *mem_43095, __global
                                 unsigned char *mem_43110)
{
    #define segmap_group_sizze_39067 (mainzisegmap_group_sizze_39049)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44276;
    int32_t local_tid_44277;
    int64_t group_sizze_44280;
    int32_t wave_sizze_44279;
    int32_t group_tid_44278;
    
    global_tid_44276 = get_global_id(0);
    local_tid_44277 = get_local_id(0);
    group_sizze_44280 = get_local_size(0);
    wave_sizze_44279 = LOCKSTEP_WIDTH;
    group_tid_44278 = get_group_id(0);
    
    int32_t phys_tid_39047;
    
    phys_tid_39047 = global_tid_44276;
    
    int32_t phys_group_id_44281;
    
    phys_group_id_44281 = get_group_id(0);
    for (int32_t i_44282 = 0; i_44282 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886, segmap_group_sizze_39067)) -
                   phys_group_id_44281, sext_i64_i32(num_groups_39068));
         i_44282++) {
        int32_t virt_group_id_44283 = phys_group_id_44281 + i_44282 *
                sext_i64_i32(num_groups_39068);
        int64_t gtid_39046 = sext_i32_i64(virt_group_id_44283) *
                segmap_group_sizze_39067 + sext_i32_i64(local_tid_44277);
        
        if (slt64(gtid_39046, m_28886)) {
            for (int32_t i_42828 = 0; i_42828 < k2p2zq_28899; i_42828++) {
                int64_t i_42792 = sext_i32_i64(i_42828);
                float defunc_2_reduce_res_39074;
                float redout_42794 = 0.0F;
                
                for (int32_t i_42827 = 0; i_42827 < n_28889; i_42827++) {
                    int64_t i_42795 = sext_i32_i64(i_42827);
                    float x_39079 = ((__global float *) mem_43092)[i_42795 *
                                                                   m_28886 +
                                                                   gtid_39046];
                    bool isnan_res_39080;
                    
                    isnan_res_39080 = futrts_isnan32(x_39079);
                    
                    float defunc_1_f_res_39081;
                    
                    if (isnan_res_39080) {
                        defunc_1_f_res_39081 = 0.0F;
                    } else {
                        float x_39078 = ((__global
                                          float *) binop_p_mem_42850)[i_42792 *
                                                                      N_28885 +
                                                                      i_42795];
                        float defunc_1_f_res_f_res_39082 = x_39078 * x_39079;
                        
                        defunc_1_f_res_39081 = defunc_1_f_res_f_res_39082;
                    }
                    
                    float defunc_1_op_res_39077 = defunc_1_f_res_39081 +
                          redout_42794;
                    float redout_tmp_44285 = defunc_1_op_res_39077;
                    
                    redout_42794 = redout_tmp_44285;
                }
                defunc_2_reduce_res_39074 = redout_42794;
                ((__global float *) mem_43095)[phys_tid_39047 + i_42792 *
                                               (num_groups_39068 *
                                                segmap_group_sizze_39067)] =
                    defunc_2_reduce_res_39074;
            }
            for (int64_t i_44286 = 0; i_44286 < i32_res_28901; i_44286++) {
                ((__global float *) mem_43110)[i_44286 * m_28886 + gtid_39046] =
                    ((__global float *) mem_43095)[phys_tid_39047 + i_44286 *
                                                   (num_groups_39068 *
                                                    segmap_group_sizze_39067)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39067
}
__kernel void mainzisegmap_39188(__global int *global_failure, int64_t m_28886,
                                 int32_t k2p2zq_28899, int64_t i32_res_28901,
                                 int64_t num_groups_39208, __global
                                 unsigned char *mem_43314, __global
                                 unsigned char *mem_43317, __global
                                 unsigned char *mem_43320, __global
                                 unsigned char *mem_43335)
{
    #define segmap_group_sizze_39207 (mainzisegmap_group_sizze_39190)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44408;
    int32_t local_tid_44409;
    int64_t group_sizze_44412;
    int32_t wave_sizze_44411;
    int32_t group_tid_44410;
    
    global_tid_44408 = get_global_id(0);
    local_tid_44409 = get_local_id(0);
    group_sizze_44412 = get_local_size(0);
    wave_sizze_44411 = LOCKSTEP_WIDTH;
    group_tid_44410 = get_group_id(0);
    
    int32_t phys_tid_39188;
    
    phys_tid_39188 = global_tid_44408;
    
    int32_t phys_group_id_44413;
    
    phys_group_id_44413 = get_group_id(0);
    for (int32_t i_44414 = 0; i_44414 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886, segmap_group_sizze_39207)) -
                   phys_group_id_44413, sext_i64_i32(num_groups_39208));
         i_44414++) {
        int32_t virt_group_id_44415 = phys_group_id_44413 + i_44414 *
                sext_i64_i32(num_groups_39208);
        int64_t gtid_39187 = sext_i32_i64(virt_group_id_44415) *
                segmap_group_sizze_39207 + sext_i32_i64(local_tid_44409);
        
        if (slt64(gtid_39187, m_28886)) {
            for (int32_t i_42830 = 0; i_42830 < k2p2zq_28899; i_42830++) {
                int64_t i_42798 = sext_i32_i64(i_42830);
                float defunc_0_f_res_39215;
                float redout_42800 = 0.0F;
                
                for (int32_t i_42829 = 0; i_42829 < k2p2zq_28899; i_42829++) {
                    int64_t i_42801 = sext_i32_i64(i_42829);
                    float x_39219 = ((__global float *) mem_43317)[i_42801 *
                                                                   m_28886 +
                                                                   gtid_39187];
                    float x_39220 = ((__global float *) mem_43314)[i_42798 *
                                                                   (m_28886 *
                                                                    i32_res_28901) +
                                                                   i_42801 *
                                                                   m_28886 +
                                                                   gtid_39187];
                    float defunc_1_f_res_39221 = x_39219 * x_39220;
                    float defunc_1_op_res_39218 = defunc_1_f_res_39221 +
                          redout_42800;
                    float redout_tmp_44417 = defunc_1_op_res_39218;
                    
                    redout_42800 = redout_tmp_44417;
                }
                defunc_0_f_res_39215 = redout_42800;
                ((__global float *) mem_43320)[phys_tid_39188 + i_42798 *
                                               (num_groups_39208 *
                                                segmap_group_sizze_39207)] =
                    defunc_0_f_res_39215;
            }
            for (int64_t i_44418 = 0; i_44418 < i32_res_28901; i_44418++) {
                ((__global float *) mem_43335)[i_44418 * m_28886 + gtid_39187] =
                    ((__global float *) mem_43320)[phys_tid_39188 + i_44418 *
                                                   (num_groups_39208 *
                                                    segmap_group_sizze_39207)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39207
}
__kernel void mainzisegmap_39320(__global int *global_failure, int64_t N_28885,
                                 int64_t m_28886, int32_t k2p2zq_28899,
                                 int64_t i32_res_28901,
                                 int64_t num_groups_39339, __global
                                 unsigned char *mem_42857, __global
                                 unsigned char *mem_43379, __global
                                 unsigned char *mem_43382, __global
                                 unsigned char *mem_43397)
{
    #define segmap_group_sizze_39338 (mainzisegmap_group_sizze_39322)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44496;
    int32_t local_tid_44497;
    int64_t group_sizze_44500;
    int32_t wave_sizze_44499;
    int32_t group_tid_44498;
    
    global_tid_44496 = get_global_id(0);
    local_tid_44497 = get_local_id(0);
    group_sizze_44500 = get_local_size(0);
    wave_sizze_44499 = LOCKSTEP_WIDTH;
    group_tid_44498 = get_group_id(0);
    
    int32_t phys_tid_39320;
    
    phys_tid_39320 = global_tid_44496;
    
    int32_t phys_group_id_44501;
    
    phys_group_id_44501 = get_group_id(0);
    for (int32_t i_44502 = 0; i_44502 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886, segmap_group_sizze_39338)) -
                   phys_group_id_44501, sext_i64_i32(num_groups_39339));
         i_44502++) {
        int32_t virt_group_id_44503 = phys_group_id_44501 + i_44502 *
                sext_i64_i32(num_groups_39339);
        int64_t gtid_39319 = sext_i32_i64(virt_group_id_44503) *
                segmap_group_sizze_39338 + sext_i32_i64(local_tid_44497);
        
        if (slt64(gtid_39319, m_28886)) {
            for (int64_t i_42808 = 0; i_42808 < N_28885; i_42808++) {
                float defunc_0_f_res_39345;
                float redout_42810 = 0.0F;
                
                for (int32_t i_42833 = 0; i_42833 < k2p2zq_28899; i_42833++) {
                    int64_t i_42811 = sext_i32_i64(i_42833);
                    float x_39349 = ((__global float *) mem_43379)[i_42811 *
                                                                   m_28886 +
                                                                   gtid_39319];
                    float x_39350 = ((__global float *) mem_42857)[i_42808 *
                                                                   i32_res_28901 +
                                                                   i_42811];
                    float defunc_1_f_res_39351 = x_39349 * x_39350;
                    float defunc_1_op_res_39348 = defunc_1_f_res_39351 +
                          redout_42810;
                    float redout_tmp_44505 = defunc_1_op_res_39348;
                    
                    redout_42810 = redout_tmp_44505;
                }
                defunc_0_f_res_39345 = redout_42810;
                ((__global float *) mem_43382)[phys_tid_39320 + i_42808 *
                                               (num_groups_39339 *
                                                segmap_group_sizze_39338)] =
                    defunc_0_f_res_39345;
            }
            for (int64_t i_44506 = 0; i_44506 < N_28885; i_44506++) {
                ((__global float *) mem_43397)[i_44506 * m_28886 + gtid_39319] =
                    ((__global float *) mem_43382)[phys_tid_39320 + i_44506 *
                                                   (num_groups_39339 *
                                                    segmap_group_sizze_39338)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39338
}
__kernel void mainzisegmap_39600(__global int *global_failure, int64_t N_28885,
                                 int64_t m_28886, __global
                                 unsigned char *mem_43623, __global
                                 unsigned char *mem_43626, __global
                                 unsigned char *mem_43632, __global
                                 unsigned char *mem_43635)
{
    #define segmap_group_sizze_39766 (mainzisegmap_group_sizze_39603)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44723;
    int32_t local_tid_44724;
    int64_t group_sizze_44727;
    int32_t wave_sizze_44726;
    int32_t group_tid_44725;
    
    global_tid_44723 = get_global_id(0);
    local_tid_44724 = get_local_id(0);
    group_sizze_44727 = get_local_size(0);
    wave_sizze_44726 = LOCKSTEP_WIDTH;
    group_tid_44725 = get_group_id(0);
    
    int32_t phys_tid_39600;
    
    phys_tid_39600 = global_tid_44723;
    
    int64_t gtid_39598;
    
    gtid_39598 = squot64(sext_i32_i64(group_tid_44725) *
                         segmap_group_sizze_39766 +
                         sext_i32_i64(local_tid_44724), N_28885);
    
    int64_t gtid_39599;
    
    gtid_39599 = sext_i32_i64(group_tid_44725) * segmap_group_sizze_39766 +
        sext_i32_i64(local_tid_44724) - squot64(sext_i32_i64(group_tid_44725) *
                                                segmap_group_sizze_39766 +
                                                sext_i32_i64(local_tid_44724),
                                                N_28885) * N_28885;
    if (slt64(gtid_39598, m_28886) && slt64(gtid_39599, N_28885)) {
        float x_39774 = ((__global float *) mem_43626)[gtid_39598 * N_28885 +
                                                       gtid_39599];
        int32_t index_primexp_40920 = sext_i64_i32(gtid_39599);
        bool isnan_res_39777;
        
        isnan_res_39777 = futrts_isnan32(x_39774);
        
        bool defunc_0_p_res_39778 = !isnan_res_39777;
        int64_t defunc_1_f_res_39779;
        
        if (defunc_0_p_res_39778) {
            int64_t x_39775 = ((__global int64_t *) mem_43623)[gtid_39598 *
                                                               N_28885 +
                                                               gtid_39599];
            int64_t defunc_1_f_res_t_res_39780 = sub64(x_39775, (int64_t) 1);
            
            defunc_1_f_res_39779 = defunc_1_f_res_t_res_39780;
        } else {
            defunc_1_f_res_39779 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_39598) && slt64(gtid_39598, m_28886)) &&
            (sle64((int64_t) 0, defunc_1_f_res_39779) &&
             slt64(defunc_1_f_res_39779, N_28885))) {
            ((__global int32_t *) mem_43635)[gtid_39598 * N_28885 +
                                             defunc_1_f_res_39779] =
                index_primexp_40920;
        }
        if ((sle64((int64_t) 0, gtid_39598) && slt64(gtid_39598, m_28886)) &&
            (sle64((int64_t) 0, defunc_1_f_res_39779) &&
             slt64(defunc_1_f_res_39779, N_28885))) {
            ((__global float *) mem_43632)[gtid_39598 * N_28885 +
                                           defunc_1_f_res_39779] = x_39774;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39766
}
__kernel void mainzisegmap_39676(__global int *global_failure, int64_t N_28885,
                                 int64_t m_28886, int64_t i_29161, __global
                                 unsigned char *mem_43623, __global
                                 unsigned char *mem_43629)
{
    #define segmap_group_sizze_39730 (mainzisegmap_group_sizze_39678)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44700;
    int32_t local_tid_44701;
    int64_t group_sizze_44704;
    int32_t wave_sizze_44703;
    int32_t group_tid_44702;
    
    global_tid_44700 = get_global_id(0);
    local_tid_44701 = get_local_id(0);
    group_sizze_44704 = get_local_size(0);
    wave_sizze_44703 = LOCKSTEP_WIDTH;
    group_tid_44702 = get_group_id(0);
    
    int32_t phys_tid_39676;
    
    phys_tid_39676 = global_tid_44700;
    
    int64_t gtid_39675;
    
    gtid_39675 = sext_i32_i64(group_tid_44702) * segmap_group_sizze_39730 +
        sext_i32_i64(local_tid_44701);
    if (slt64(gtid_39675, m_28886)) {
        int64_t last_res_39734 = ((__global int64_t *) mem_43623)[gtid_39675 *
                                                                  N_28885 +
                                                                  i_29161];
        int32_t defunc_0_f_res_39735 = sext_i64_i32(last_res_39734);
        
        ((__global int32_t *) mem_43629)[gtid_39675] = defunc_0_f_res_39735;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_39730
}
__kernel void mainzisegmap_39927(__global int *global_failure, int64_t m_28886,
                                 float hfrac_28891, int32_t k2p2_28897, __global
                                 unsigned char *mem_43692, __global
                                 unsigned char *mem_43695, __global
                                 unsigned char *mem_43698, __global
                                 unsigned char *mem_43700)
{
    #define segmap_group_sizze_40012 (mainzisegmap_group_sizze_39929)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44876;
    int32_t local_tid_44877;
    int64_t group_sizze_44880;
    int32_t wave_sizze_44879;
    int32_t group_tid_44878;
    
    global_tid_44876 = get_global_id(0);
    local_tid_44877 = get_local_id(0);
    group_sizze_44880 = get_local_size(0);
    wave_sizze_44879 = LOCKSTEP_WIDTH;
    group_tid_44878 = get_group_id(0);
    
    int32_t phys_tid_39927;
    
    phys_tid_39927 = global_tid_44876;
    
    int64_t gtid_39926;
    
    gtid_39926 = sext_i32_i64(group_tid_44878) * segmap_group_sizze_40012 +
        sext_i32_i64(local_tid_44877);
    if (slt64(gtid_39926, m_28886)) {
        int32_t defunc_0_f_res_40016 = ((__global
                                         int32_t *) mem_43692)[gtid_39926];
        float defunc_0_f_res_40017 = ((__global float *) mem_43695)[gtid_39926];
        int32_t r32_arg_40018 = sub32(defunc_0_f_res_40016, k2p2_28897);
        float i32_res_40019 = sitofp_i32_f32(r32_arg_40018);
        float sqrt_arg_40020 = defunc_0_f_res_40017 / i32_res_40019;
        float sqrt_res_40021;
        
        sqrt_res_40021 = futrts_sqrt32(sqrt_arg_40020);
        
        float i32_res_40022 = sitofp_i32_f32(defunc_0_f_res_40016);
        float t32_arg_40023 = hfrac_28891 * i32_res_40022;
        int32_t f32_res_40024 = fptosi_f32_i32(t32_arg_40023);
        
        ((__global int32_t *) mem_43698)[gtid_39926] = f32_res_40024;
        ((__global float *) mem_43700)[gtid_39926] = sqrt_res_40021;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40012
}
__kernel void mainzisegmap_40198(__global int *global_failure, float lam_28892,
                                 int64_t iota32_arg_29281, int32_t x_29286,
                                 float i32_res_29294, __global
                                 unsigned char *mappingindices_mem_42840,
                                 __global unsigned char *mem_43742, __global
                                 unsigned char *mem_43744)
{
    #define segmap_group_sizze_40217 (mainzisegmap_group_sizze_40200)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44986;
    int32_t local_tid_44987;
    int64_t group_sizze_44990;
    int32_t wave_sizze_44989;
    int32_t group_tid_44988;
    
    global_tid_44986 = get_global_id(0);
    local_tid_44987 = get_local_id(0);
    group_sizze_44990 = get_local_size(0);
    wave_sizze_44989 = LOCKSTEP_WIDTH;
    group_tid_44988 = get_group_id(0);
    
    int32_t phys_tid_40198;
    
    phys_tid_40198 = global_tid_44986;
    
    int64_t gtid_40197;
    
    gtid_40197 = sext_i32_i64(group_tid_44988) * segmap_group_sizze_40217 +
        sext_i32_i64(local_tid_44987);
    if (slt64(gtid_40197, iota32_arg_29281)) {
        int32_t defunc_0_f_res_40222 = sext_i64_i32(gtid_40197);
        int32_t t_40223 = add32(x_29286, defunc_0_f_res_40222);
        int32_t i_40224 = sub32(t_40223, 1);
        int64_t i_40225 = sext_i32_i64(i_40224);
        int32_t time_40226 = ((__global
                               int32_t *) mappingindices_mem_42840)[i_40225];
        float i32_res_40227 = sitofp_i32_f32(time_40226);
        float logplus_arg_40228 = i32_res_40227 / i32_res_29294;
        bool cond_40229 = 2.7182817F < logplus_arg_40228;
        float logplus_res_40230;
        
        if (cond_40229) {
            float log_res_40231;
            
            log_res_40231 = futrts_log32(logplus_arg_40228);
            logplus_res_40230 = log_res_40231;
        } else {
            logplus_res_40230 = 1.0F;
        }
        
        float sqrt_res_40232;
        
        sqrt_res_40232 = futrts_sqrt32(logplus_res_40230);
        
        float defunc_0_f_res_40233 = lam_28892 * sqrt_res_40232;
        
        ((__global int32_t *) mem_43742)[gtid_40197] = defunc_0_f_res_40222;
        ((__global float *) mem_43744)[gtid_40197] = defunc_0_f_res_40233;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40217
}
__kernel void mainzisegmap_40568(__global int *global_failure, int64_t N_28885,
                                 int64_t m_28886, int32_t n_28889, __global
                                 unsigned char *defunc_4_map_res_mem_43639,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43705,
                                 __global unsigned char *mem_43758, __global
                                 unsigned char *mem_43765, __global
                                 unsigned char *mem_43767, __global
                                 unsigned char *mem_43769, __global
                                 unsigned char *mem_43772, __global
                                 unsigned char *mem_43774)
{
    #define segmap_group_sizze_40832 (mainzisegmap_group_sizze_40570)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45181;
    int32_t local_tid_45182;
    int64_t group_sizze_45185;
    int32_t wave_sizze_45184;
    int32_t group_tid_45183;
    
    global_tid_45181 = get_global_id(0);
    local_tid_45182 = get_local_id(0);
    group_sizze_45185 = get_local_size(0);
    wave_sizze_45184 = LOCKSTEP_WIDTH;
    group_tid_45183 = get_group_id(0);
    
    int32_t phys_tid_40568;
    
    phys_tid_40568 = global_tid_45181;
    
    int64_t gtid_40567;
    
    gtid_40567 = sext_i32_i64(group_tid_45183) * segmap_group_sizze_40832 +
        sext_i32_i64(local_tid_45182);
    if (slt64(gtid_40567, m_28886)) {
        int32_t x_40836 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_40567];
        int32_t y_40838 = ((__global int32_t *) mem_43758)[gtid_40567];
        bool acc0_40840 = ((__global bool *) mem_43765)[gtid_40567];
        bool x_40845 = acc0_40840 && acc0_40840;
        int32_t defunc_1_op_res_f_res_40849;
        
        if (acc0_40840) {
            int32_t acc0_40841 = ((__global int32_t *) mem_43767)[gtid_40567];
            
            defunc_1_op_res_f_res_40849 = acc0_40841;
        } else {
            defunc_1_op_res_f_res_40849 = -1;
        }
        
        bool cond_40855 = y_40838 == 0;
        float defunc_0_f_res_40856;
        
        if (cond_40855) {
            defunc_0_f_res_40856 = 0.0F;
        } else {
            float acc0_40842 = ((__global float *) mem_43769)[gtid_40567];
            float i32_res_40857 = sitofp_i32_f32(y_40838);
            float defunc_0_f_res_f_res_40858 = acc0_40842 / i32_res_40857;
            
            defunc_0_f_res_40856 = defunc_0_f_res_f_res_40858;
        }
        
        bool cond_40859 = !x_40845;
        int32_t fst_breakzq_40860;
        
        if (cond_40859) {
            fst_breakzq_40860 = -1;
        } else {
            bool cond_40861 = slt32(defunc_1_op_res_f_res_40849, y_40838);
            int32_t adjustValInds_res_40862;
            
            if (cond_40861) {
                int32_t i_40863 = add32(x_40836, defunc_1_op_res_f_res_40849);
                int64_t i_40864 = sext_i32_i64(i_40863);
                int32_t x_40865 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43639)[gtid_40567 *
                                                                           N_28885 +
                                                                           i_40864];
                int32_t adjustValInds_res_t_res_40866 = sub32(x_40865, n_28889);
                
                adjustValInds_res_40862 = adjustValInds_res_t_res_40866;
            } else {
                adjustValInds_res_40862 = -1;
            }
            fst_breakzq_40860 = adjustValInds_res_40862;
        }
        
        bool cond_40867 = sle32(x_40836, 5);
        bool cond_f_res_40868 = sle32(y_40838, 5);
        bool x_40869 = !cond_40867;
        bool y_40870 = cond_f_res_40868 && x_40869;
        bool cond_40871 = cond_40867 || y_40870;
        int32_t fst_breakzq_40872;
        
        if (cond_40871) {
            fst_breakzq_40872 = -2;
        } else {
            fst_breakzq_40872 = fst_breakzq_40860;
        }
        ((__global int32_t *) mem_43772)[gtid_40567] = fst_breakzq_40872;
        ((__global float *) mem_43774)[gtid_40567] = defunc_0_f_res_40856;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40832
}
__kernel void mainzisegmap_40710(__global int *global_failure, int64_t m_28886,
                                 int64_t num_groups_40733, __global
                                 unsigned char *defunc_4_map_res_mem_43637,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43705,
                                 __global
                                 unsigned char *defunc_3_map_res_mem_43706,
                                 __global unsigned char *mem_43756, __global
                                 unsigned char *mem_43758)
{
    #define segmap_group_sizze_40732 (mainzisegmap_group_sizze_40712)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45019;
    int32_t local_tid_45020;
    int64_t group_sizze_45023;
    int32_t wave_sizze_45022;
    int32_t group_tid_45021;
    
    global_tid_45019 = get_global_id(0);
    local_tid_45020 = get_local_id(0);
    group_sizze_45023 = get_local_size(0);
    wave_sizze_45022 = LOCKSTEP_WIDTH;
    group_tid_45021 = get_group_id(0);
    
    int32_t phys_tid_40710;
    
    phys_tid_40710 = global_tid_45019;
    
    int32_t phys_group_id_45024;
    
    phys_group_id_45024 = get_group_id(0);
    for (int32_t i_45025 = 0; i_45025 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886, segmap_group_sizze_40732)) -
                   phys_group_id_45024, sext_i64_i32(num_groups_40733));
         i_45025++) {
        int32_t virt_group_id_45026 = phys_group_id_45024 + i_45025 *
                sext_i64_i32(num_groups_40733);
        int64_t gtid_40709 = sext_i32_i64(virt_group_id_45026) *
                segmap_group_sizze_40732 + sext_i32_i64(local_tid_45020);
        
        if (slt64(gtid_40709, m_28886)) {
            int32_t x_40739 = ((__global
                                int32_t *) defunc_4_map_res_mem_43637)[gtid_40709];
            int32_t x_40740 = ((__global
                                int32_t *) defunc_3_map_res_mem_43705)[gtid_40709];
            float x_40741 = ((__global
                              float *) defunc_3_map_res_mem_43706)[gtid_40709];
            int32_t y_40742 = sub32(x_40739, x_40740);
            float i32_res_40743 = sitofp_i32_f32(x_40740);
            float sqrt_res_40744;
            
            sqrt_res_40744 = futrts_sqrt32(i32_res_40743);
            
            float y_40745 = x_40741 * sqrt_res_40744;
            
            ((__global float *) mem_43756)[gtid_40709] = y_40745;
            ((__global int32_t *) mem_43758)[gtid_40709] = y_40742;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_40732
}
__kernel void mainzisegmap_intragroup_38305(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43023_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43013_backing_aligned_1,
                                            int32_t k2p2zq_28899,
                                            int64_t i32_res_28901,
                                            int32_t m_29032,
                                            int64_t i32_res_29034,
                                            int64_t i32_res_29049, __global
                                            unsigned char *defunc_3_map_res_mem_43009,
                                            __global unsigned char *mem_43033)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43023_backing_1 = (__local volatile
                                                           char *) mem_43023_backing_aligned_0;
    __local volatile char *restrict mem_43013_backing_0 = (__local volatile
                                                           char *) mem_43013_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44211;
    int32_t local_tid_44212;
    int64_t group_sizze_44215;
    int32_t wave_sizze_44214;
    int32_t group_tid_44213;
    
    global_tid_44211 = get_global_id(0);
    local_tid_44212 = get_local_id(0);
    group_sizze_44215 = get_local_size(0);
    wave_sizze_44214 = LOCKSTEP_WIDTH;
    group_tid_44213 = get_group_id(0);
    
    int32_t phys_tid_38305;
    
    phys_tid_38305 = group_tid_44213;
    
    int32_t ltid_pre_44216;
    
    ltid_pre_44216 = local_tid_44212;
    
    int64_t gtid_38260;
    
    gtid_38260 = sext_i32_i64(group_tid_44213);
    
    __local char *mem_43013;
    
    mem_43013 = (__local char *) mem_43013_backing_0;
    
    int64_t gtid_38263 = sext_i32_i64(ltid_pre_44216);
    int32_t phys_tid_38264 = local_tid_44212;
    int32_t index_primexp_40897 = sext_i64_i32(gtid_38263);
    int32_t defunc_0_f_res_38430 = sdiv32(index_primexp_40897, m_29032);
    int32_t defunc_0_f_res_38431 = smod32(index_primexp_40897, m_29032);
    bool cond_38432 = slt32(defunc_0_f_res_38431, k2p2zq_28899);
    float defunc_0_f_res_38433;
    
    if (cond_38432) {
        int64_t i_38434 = sext_i32_i64(defunc_0_f_res_38430);
        int64_t j_38435 = sext_i32_i64(defunc_0_f_res_38431);
        float defunc_0_f_res_t_res_38436 = ((__global
                                             float *) defunc_3_map_res_mem_43009)[gtid_38260 *
                                                                                  (i32_res_28901 *
                                                                                   i32_res_28901) +
                                                                                  i_38434 *
                                                                                  i32_res_28901 +
                                                                                  j_38435];
        
        defunc_0_f_res_38433 = defunc_0_f_res_t_res_38436;
    } else {
        int32_t y_38437 = add32(k2p2zq_28899, defunc_0_f_res_38430);
        bool cond_38438 = defunc_0_f_res_38431 == y_38437;
        float defunc_0_f_res_f_res_38439;
        
        if (cond_38438) {
            defunc_0_f_res_f_res_38439 = 1.0F;
        } else {
            defunc_0_f_res_f_res_38439 = 0.0F;
        }
        defunc_0_f_res_38433 = defunc_0_f_res_f_res_38439;
    }
    ((__local float *) mem_43013)[gtid_38263] = defunc_0_f_res_38433;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43023;
    
    mem_43023 = (__local char *) mem_43023_backing_1;
    for (int32_t i_38441 = 0; i_38441 < k2p2zq_28899; i_38441++) {
        int64_t i32_res_38443 = sext_i32_i64(i_38441);
        float v1_38444 = ((__local float *) mem_43013)[i32_res_38443];
        bool cond_38445 = v1_38444 == 0.0F;
        int64_t gtid_38276 = sext_i32_i64(ltid_pre_44216);
        int32_t phys_tid_38277 = local_tid_44212;
        int32_t defunc_0_f_res_38448 = sext_i64_i32(gtid_38276);
        int32_t defunc_0_f_res_38449 = sdiv32(defunc_0_f_res_38448, m_29032);
        int32_t defunc_0_f_res_38450 = smod32(defunc_0_f_res_38448, m_29032);
        float defunc_0_f_res_38451;
        
        if (cond_38445) {
            int32_t x_38452 = mul32(m_29032, defunc_0_f_res_38449);
            int32_t i32_arg_38453 = add32(defunc_0_f_res_38450, x_38452);
            int64_t i32_res_38454 = sext_i32_i64(i32_arg_38453);
            float defunc_0_f_res_t_res_38455 = ((__local
                                                 float *) mem_43013)[i32_res_38454];
            
            defunc_0_f_res_38451 = defunc_0_f_res_t_res_38455;
        } else {
            int64_t i32_res_38456 = sext_i32_i64(defunc_0_f_res_38450);
            float x_38457 = ((__local float *) mem_43013)[i32_res_38456];
            float x_38458 = x_38457 / v1_38444;
            int32_t y_38459 = sub32(k2p2zq_28899, 1);
            bool cond_38460 = slt32(defunc_0_f_res_38449, y_38459);
            float defunc_0_f_res_f_res_38461;
            
            if (cond_38460) {
                int32_t x_38462 = add32(1, defunc_0_f_res_38449);
                int32_t x_38463 = mul32(m_29032, x_38462);
                int32_t i32_arg_38464 = add32(defunc_0_f_res_38450, x_38463);
                int64_t i32_res_38465 = sext_i32_i64(i32_arg_38464);
                float x_38466 = ((__local float *) mem_43013)[i32_res_38465];
                int32_t i32_arg_38467 = add32(i_38441, x_38463);
                int64_t i32_res_38468 = sext_i32_i64(i32_arg_38467);
                float x_38469 = ((__local float *) mem_43013)[i32_res_38468];
                float y_38470 = x_38458 * x_38469;
                float defunc_0_f_res_f_res_t_res_38471 = x_38466 - y_38470;
                
                defunc_0_f_res_f_res_38461 = defunc_0_f_res_f_res_t_res_38471;
            } else {
                defunc_0_f_res_f_res_38461 = x_38458;
            }
            defunc_0_f_res_38451 = defunc_0_f_res_f_res_38461;
        }
        ((__local float *) mem_43023)[gtid_38276] = defunc_0_f_res_38451;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_38303 = sext_i32_i64(ltid_pre_44216);
        int32_t phys_tid_38304 = local_tid_44212;
        float write_value_38474 = ((__local float *) mem_43023)[write_i_38303];
        
        if (sle64((int64_t) 0, write_i_38303) && slt64(write_i_38303,
                                                       i32_res_29034)) {
            ((__local float *) mem_43013)[write_i_38303] = write_value_38474;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44218 = 0; i_44218 < sdiv_up64(i32_res_28901 *
                                                  i32_res_28901 -
                                                  sext_i32_i64(local_tid_44212),
                                                  i32_res_29034); i_44218++) {
        ((__global float *) mem_43033)[gtid_38260 * (i32_res_28901 *
                                                     i32_res_28901) +
                                       squot64(i_44218 * i32_res_29034 +
                                               sext_i32_i64(local_tid_44212),
                                               i32_res_28901) * i32_res_28901 +
                                       (i_44218 * i32_res_29034 +
                                        sext_i32_i64(local_tid_44212) -
                                        squot64(i_44218 * i32_res_29034 +
                                                sext_i32_i64(local_tid_44212),
                                                i32_res_28901) *
                                        i32_res_28901)] = ((__local
                                                            float *) mem_43013)[i32_res_28901 +
                                                                                (squot64(i_44218 *
                                                                                         i32_res_29034 +
                                                                                         sext_i32_i64(local_tid_44212),
                                                                                         i32_res_28901) *
                                                                                 i32_res_29049 +
                                                                                 (i_44218 *
                                                                                  i32_res_29034 +
                                                                                  sext_i32_i64(local_tid_44212) -
                                                                                  squot64(i_44218 *
                                                                                          i32_res_29034 +
                                                                                          sext_i32_i64(local_tid_44212),
                                                                                          i32_res_28901) *
                                                                                  i32_res_28901))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_38532(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43054_backing_aligned_0,
                                            int64_t m_28886,
                                            int32_t k2p2zq_28899,
                                            int32_t m_29032,
                                            int64_t i32_res_29034,
                                            int32_t i_38927,
                                            int64_t i32_res_38929,
                                            int64_t ctx_param_ext_43040,
                                            int64_t ctx_param_ext_43041,
                                            int64_t ctx_param_ext_43043,
                                            __global
                                            unsigned char *mem_param_43045,
                                            __global unsigned char *mem_43050,
                                            __global unsigned char *mem_43058)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43054_backing_0 = (__local volatile
                                                           char *) mem_43054_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44245;
    int32_t local_tid_44246;
    int64_t group_sizze_44249;
    int32_t wave_sizze_44248;
    int32_t group_tid_44247;
    
    global_tid_44245 = get_global_id(0);
    local_tid_44246 = get_local_id(0);
    group_sizze_44249 = get_local_size(0);
    wave_sizze_44248 = LOCKSTEP_WIDTH;
    group_tid_44247 = get_group_id(0);
    
    int32_t phys_tid_38532;
    
    phys_tid_38532 = group_tid_44247;
    
    int32_t ltid_pre_44250;
    
    ltid_pre_44250 = local_tid_44246;
    
    int64_t gtid_38500;
    
    gtid_38500 = sext_i32_i64(group_tid_44247);
    
    float v1_38942 = ((__global float *) mem_param_43045)[ctx_param_ext_43040 +
                                                          (gtid_38500 *
                                                           ctx_param_ext_43041 +
                                                           i32_res_38929 *
                                                           ctx_param_ext_43043)];
    bool cond_38943 = v1_38942 == 0.0F;
    __local char *mem_43054;
    
    mem_43054 = (__local char *) mem_43054_backing_0;
    
    int64_t gtid_38503 = sext_i32_i64(ltid_pre_44250);
    int32_t phys_tid_38504 = local_tid_44246;
    int32_t defunc_0_f_res_38946 = sext_i64_i32(gtid_38503);
    int32_t defunc_0_f_res_38947 = sdiv32(defunc_0_f_res_38946, m_29032);
    int32_t defunc_0_f_res_38948 = smod32(defunc_0_f_res_38946, m_29032);
    float defunc_0_f_res_38949;
    
    if (cond_38943) {
        int32_t x_38950 = mul32(m_29032, defunc_0_f_res_38947);
        int32_t i32_arg_38951 = add32(defunc_0_f_res_38948, x_38950);
        int64_t i32_res_38952 = sext_i32_i64(i32_arg_38951);
        float defunc_0_f_res_t_res_38953 = ((__global
                                             float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                       (gtid_38500 *
                                                                        ctx_param_ext_43041 +
                                                                        i32_res_38952 *
                                                                        ctx_param_ext_43043)];
        
        defunc_0_f_res_38949 = defunc_0_f_res_t_res_38953;
    } else {
        int64_t i32_res_38954 = sext_i32_i64(defunc_0_f_res_38948);
        float x_38955 = ((__global
                          float *) mem_param_43045)[ctx_param_ext_43040 +
                                                    (gtid_38500 *
                                                     ctx_param_ext_43041 +
                                                     i32_res_38954 *
                                                     ctx_param_ext_43043)];
        float x_38956 = x_38955 / v1_38942;
        int32_t y_38957 = sub32(k2p2zq_28899, 1);
        bool cond_38958 = slt32(defunc_0_f_res_38947, y_38957);
        float defunc_0_f_res_f_res_38959;
        
        if (cond_38958) {
            int32_t x_38960 = add32(1, defunc_0_f_res_38947);
            int32_t x_38961 = mul32(m_29032, x_38960);
            int32_t i32_arg_38962 = add32(defunc_0_f_res_38948, x_38961);
            int64_t i32_res_38963 = sext_i32_i64(i32_arg_38962);
            float x_38964 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_38500 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_38963 *
                                                         ctx_param_ext_43043)];
            int32_t i32_arg_38965 = add32(i_38927, x_38961);
            int64_t i32_res_38966 = sext_i32_i64(i32_arg_38965);
            float x_38967 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_38500 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_38966 *
                                                         ctx_param_ext_43043)];
            float y_38968 = x_38956 * x_38967;
            float defunc_0_f_res_f_res_t_res_38969 = x_38964 - y_38968;
            
            defunc_0_f_res_f_res_38959 = defunc_0_f_res_f_res_t_res_38969;
        } else {
            defunc_0_f_res_f_res_38959 = x_38956;
        }
        defunc_0_f_res_38949 = defunc_0_f_res_f_res_38959;
    }
    ((__local float *) mem_43054)[gtid_38503] = defunc_0_f_res_38949;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_38530 = sext_i32_i64(ltid_pre_44250);
    int32_t phys_tid_38531 = local_tid_44246;
    float write_value_38972 = ((__local float *) mem_43054)[write_i_38530];
    
    if (sle64((int64_t) 0, write_i_38530) && slt64(write_i_38530,
                                                   i32_res_29034)) {
        ((__global float *) mem_43050)[gtid_38500 + write_i_38530 * m_28886] =
            write_value_38972;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44246 == 0) {
        for (int64_t i_44251 = 0; i_44251 < i32_res_29034; i_44251++) {
            ((__global float *) mem_43058)[gtid_38500 * i32_res_29034 +
                                           i_44251] = ((__global
                                                        float *) mem_43050)[gtid_38500 +
                                                                            i_44251 *
                                                                            m_28886];
        }
    }
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39483(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43610_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43608_backing_aligned_1,
                                            __local volatile
                                            int64_t *mem_43606_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43604_backing_aligned_3,
                                            int64_t N_28885, int64_t i_29161,
                                            __global
                                            unsigned char *images_mem_42841,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43600,
                                            __global unsigned char *mem_43613,
                                            __global unsigned char *mem_43616,
                                            __global unsigned char *mem_43619)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43610_backing_3 = (__local volatile
                                                           char *) mem_43610_backing_aligned_0;
    __local volatile char *restrict mem_43608_backing_2 = (__local volatile
                                                           char *) mem_43608_backing_aligned_1;
    __local volatile char *restrict mem_43606_backing_1 = (__local volatile
                                                           char *) mem_43606_backing_aligned_2;
    __local volatile char *restrict mem_43604_backing_0 = (__local volatile
                                                           char *) mem_43604_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44627;
    int32_t local_tid_44628;
    int64_t group_sizze_44631;
    int32_t wave_sizze_44630;
    int32_t group_tid_44629;
    
    global_tid_44627 = get_global_id(0);
    local_tid_44628 = get_local_id(0);
    group_sizze_44631 = get_local_size(0);
    wave_sizze_44630 = LOCKSTEP_WIDTH;
    group_tid_44629 = get_group_id(0);
    
    int32_t phys_tid_39483;
    
    phys_tid_39483 = group_tid_44629;
    
    int32_t ltid_pre_44632;
    
    ltid_pre_44632 = local_tid_44628;
    
    int64_t gtid_39476;
    
    gtid_39476 = sext_i32_i64(group_tid_44629);
    
    __local char *mem_43604;
    
    mem_43604 = (__local char *) mem_43604_backing_0;
    
    __local char *mem_43606;
    
    mem_43606 = (__local char *) mem_43606_backing_1;
    
    int64_t gtid_39479 = sext_i32_i64(ltid_pre_44632);
    int32_t phys_tid_39480 = local_tid_44628;
    float x_39572 = ((__global float *) images_mem_42841)[gtid_39476 * N_28885 +
                                                          gtid_39479];
    bool isnan_res_39574;
    
    isnan_res_39574 = futrts_isnan32(x_39572);
    
    bool cond_39575 = !isnan_res_39574;
    float defunc_0_f_res_39576;
    
    if (cond_39575) {
        float x_39573 = ((__global
                          float *) defunc_3_map_res_mem_43600)[gtid_39476 *
                                                               N_28885 +
                                                               gtid_39479];
        float defunc_0_f_res_t_res_39577 = x_39572 - x_39573;
        
        defunc_0_f_res_39576 = defunc_0_f_res_t_res_39577;
    } else {
        defunc_0_f_res_39576 = NAN;
    }
    
    bool isnan_res_39578;
    
    isnan_res_39578 = futrts_isnan32(defunc_0_f_res_39576);
    
    bool defunc_0_p_res_39579 = !isnan_res_39578;
    int64_t defunc_0_f_res_39580 = btoi_bool_i64(defunc_0_p_res_39579);
    
    ((__local int64_t *) mem_43604)[gtid_39479] = defunc_0_f_res_39580;
    ((__local float *) mem_43606)[gtid_39479] = defunc_0_f_res_39576;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44633;
    
    dims_flat_44633 = N_28885;
    
    int64_t x_39569;
    int64_t x_39570;
    int64_t x_44635;
    int64_t x_44636;
    bool ltid_in_bounds_44638;
    
    ltid_in_bounds_44638 = slt64(sext_i32_i64(local_tid_44628), N_28885);
    
    int32_t skip_threads_44639;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44638) {
            x_39570 = ((volatile __local
                        int64_t *) mem_43604)[sext_i32_i64(local_tid_44628)];
            if ((local_tid_44628 - squot32(local_tid_44628, 32) * 32) == 0) {
                x_39569 = x_39570;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44639 = 1;
        while (slt32(skip_threads_44639, 32)) {
            if (sle32(skip_threads_44639, local_tid_44628 -
                      squot32(local_tid_44628, 32) * 32) &&
                ltid_in_bounds_44638) {
                // read operands
                {
                    x_39569 = ((volatile __local
                                int64_t *) mem_43604)[sext_i32_i64(local_tid_44628) -
                                                      sext_i32_i64(skip_threads_44639)];
                }
                // perform operation
                {
                    bool inactive_44640 =
                         slt64(srem64(sext_i32_i64(local_tid_44628), N_28885),
                               sext_i32_i64(local_tid_44628) -
                               sext_i32_i64(local_tid_44628 -
                               skip_threads_44639));
                    
                    if (inactive_44640) {
                        x_39569 = x_39570;
                    }
                    if (!inactive_44640) {
                        int64_t defunc_1_op_res_39571 = add64(x_39569, x_39570);
                        
                        x_39569 = defunc_1_op_res_39571;
                    }
                }
            }
            if (sle32(wave_sizze_44630, skip_threads_44639)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44639, local_tid_44628 -
                      squot32(local_tid_44628, 32) * 32) &&
                ltid_in_bounds_44638) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43604)[sext_i32_i64(local_tid_44628)] =
                        x_39569;
                    x_39570 = x_39569;
                }
            }
            if (sle32(wave_sizze_44630, skip_threads_44639)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44639 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44628 - squot32(local_tid_44628, 32) * 32) == 31 &&
            ltid_in_bounds_44638) {
            ((volatile __local
              int64_t *) mem_43604)[sext_i32_i64(squot32(local_tid_44628,
                                                         32))] = x_39569;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44641;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44628, 32) == 0 && ltid_in_bounds_44638) {
                x_44636 = ((volatile __local
                            int64_t *) mem_43604)[sext_i32_i64(local_tid_44628)];
                if ((local_tid_44628 - squot32(local_tid_44628, 32) * 32) ==
                    0) {
                    x_44635 = x_44636;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44641 = 1;
            while (slt32(skip_threads_44641, 32)) {
                if (sle32(skip_threads_44641, local_tid_44628 -
                          squot32(local_tid_44628, 32) * 32) &&
                    (squot32(local_tid_44628, 32) == 0 &&
                     ltid_in_bounds_44638)) {
                    // read operands
                    {
                        x_44635 = ((volatile __local
                                    int64_t *) mem_43604)[sext_i32_i64(local_tid_44628) -
                                                          sext_i32_i64(skip_threads_44641)];
                    }
                    // perform operation
                    {
                        bool inactive_44642 =
                             slt64(srem64(sext_i32_i64(local_tid_44628 * 32 +
                                          32 - 1), N_28885),
                                   sext_i32_i64(local_tid_44628 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44628 -
                                                 skip_threads_44641) * 32 + 32 -
                                   1));
                        
                        if (inactive_44642) {
                            x_44635 = x_44636;
                        }
                        if (!inactive_44642) {
                            int64_t defunc_1_op_res_44637 = add64(x_44635,
                                                                  x_44636);
                            
                            x_44635 = defunc_1_op_res_44637;
                        }
                    }
                }
                if (sle32(wave_sizze_44630, skip_threads_44641)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44641, local_tid_44628 -
                          squot32(local_tid_44628, 32) * 32) &&
                    (squot32(local_tid_44628, 32) == 0 &&
                     ltid_in_bounds_44638)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43604)[sext_i32_i64(local_tid_44628)] =
                            x_44635;
                        x_44636 = x_44635;
                    }
                }
                if (sle32(wave_sizze_44630, skip_threads_44641)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44641 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44628, 32) == 0 || !ltid_in_bounds_44638)) {
            // read operands
            {
                x_39570 = x_39569;
                x_39569 = ((__local
                            int64_t *) mem_43604)[sext_i32_i64(squot32(local_tid_44628,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44643 =
                     slt64(srem64(sext_i32_i64(local_tid_44628), N_28885),
                           sext_i32_i64(local_tid_44628) -
                           sext_i32_i64(squot32(local_tid_44628, 32) * 32 - 1));
                
                if (inactive_44643) {
                    x_39569 = x_39570;
                }
                if (!inactive_44643) {
                    int64_t defunc_1_op_res_39571 = add64(x_39569, x_39570);
                    
                    x_39569 = defunc_1_op_res_39571;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43604)[sext_i32_i64(local_tid_44628)] =
                    x_39569;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44628, 32) == 0) {
            ((__local int64_t *) mem_43604)[sext_i32_i64(local_tid_44628)] =
                x_39570;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_39581 = ((__local int64_t *) mem_43604)[i_29161];
    int32_t defunc_0_f_res_39582 = sext_i64_i32(last_res_39581);
    __local char *mem_43608;
    
    mem_43608 = (__local char *) mem_43608_backing_2;
    ((__local float *) mem_43608)[sext_i32_i64(local_tid_44628)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43610;
    
    mem_43610 = (__local char *) mem_43610_backing_3;
    ((__local int32_t *) mem_43610)[sext_i32_i64(local_tid_44628)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_39481 = sext_i32_i64(ltid_pre_44632);
    int32_t phys_tid_39482 = local_tid_44628;
    float x_39587 = ((__local float *) mem_43606)[write_i_39481];
    int32_t index_primexp_40917 = sext_i64_i32(write_i_39481);
    bool isnan_res_39590;
    
    isnan_res_39590 = futrts_isnan32(x_39587);
    
    bool defunc_0_p_res_39591 = !isnan_res_39590;
    int64_t defunc_1_f_res_39592;
    
    if (defunc_0_p_res_39591) {
        int64_t x_39588 = ((__local int64_t *) mem_43604)[write_i_39481];
        int64_t defunc_1_f_res_t_res_39593 = sub64(x_39588, (int64_t) 1);
        
        defunc_1_f_res_39592 = defunc_1_f_res_t_res_39593;
    } else {
        defunc_1_f_res_39592 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_39592) && slt64(defunc_1_f_res_39592,
                                                          N_28885)) {
        ((__local int32_t *) mem_43610)[defunc_1_f_res_39592] =
            index_primexp_40917;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_39592) && slt64(defunc_1_f_res_39592,
                                                          N_28885)) {
        ((__local float *) mem_43608)[defunc_1_f_res_39592] = x_39587;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44628 == 0) {
        ((__global int32_t *) mem_43613)[gtid_39476] = defunc_0_f_res_39582;
    }
    ((__global float *) mem_43616)[gtid_39476 * N_28885 +
                                   sext_i32_i64(local_tid_44628)] = ((__local
                                                                      float *) mem_43608)[sext_i32_i64(local_tid_44628)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43619)[gtid_39476 * N_28885 +
                                     sext_i32_i64(local_tid_44628)] = ((__local
                                                                        int32_t *) mem_43610)[sext_i32_i64(local_tid_44628)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainzisegmap_intragroup_39823(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_44752_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_44748_backing_aligned_1,
                                            int64_t N_28885, float hfrac_28891,
                                            int64_t i32_res_28895,
                                            int32_t k2p2_28897, __global
                                            unsigned char *images_mem_42841,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43638,
                                            __global unsigned char *mem_43685,
                                            __global unsigned char *mem_43687,
                                            __global unsigned char *mem_43689)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44752_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44752_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44748_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44748_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44742;
    int32_t local_tid_44743;
    int64_t group_sizze_44746;
    int32_t wave_sizze_44745;
    int32_t group_tid_44744;
    
    global_tid_44742 = get_global_id(0);
    local_tid_44743 = get_local_id(0);
    group_sizze_44746 = get_local_size(0);
    wave_sizze_44745 = LOCKSTEP_WIDTH;
    group_tid_44744 = get_group_id(0);
    
    int32_t phys_tid_39823;
    
    phys_tid_39823 = group_tid_44744;
    
    int32_t ltid_pre_44747;
    
    ltid_pre_44747 = local_tid_44743;
    
    int64_t gtid_39816;
    
    gtid_39816 = sext_i32_i64(group_tid_44744);
    
    int32_t defunc_0_f_res_39900;
    int64_t gtid_39819 = sext_i32_i64(ltid_pre_44747);
    int32_t phys_tid_39820 = local_tid_44743;
    __local char *red_arr_mem_44748;
    
    red_arr_mem_44748 = (__local char *) red_arr_mem_44748_backing_0;
    
    float x_39904;
    
    x_39904 = ((__global float *) images_mem_42841)[gtid_39816 * N_28885 +
                                                    gtid_39819];
    
    bool isnan_res_39905;
    
    isnan_res_39905 = futrts_isnan32(x_39904);
    
    bool cond_39906 = !isnan_res_39905;
    int32_t defunc_0_f_res_39907 = btoi_bool_i32(cond_39906);
    
    ((__local int32_t *) red_arr_mem_44748)[gtid_39819] = defunc_0_f_res_39907;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44750;
    int32_t skip_waves_44751;
    
    skip_waves_44751 = 1;
    
    int32_t x_39901;
    int32_t x_39902;
    
    offset_44750 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44743, sext_i64_i32(i32_res_28895))) {
            x_39901 = ((__local
                        int32_t *) red_arr_mem_44748)[sext_i32_i64(local_tid_44743 +
                                                      offset_44750)];
        }
    }
    offset_44750 = 1;
    while (slt32(offset_44750, wave_sizze_44745)) {
        if (slt32(local_tid_44743 + offset_44750,
                  sext_i64_i32(i32_res_28895)) && ((local_tid_44743 -
                                                    squot32(local_tid_44743,
                                                            wave_sizze_44745) *
                                                    wave_sizze_44745) & (2 *
                                                                         offset_44750 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39902 = ((volatile __local
                            int32_t *) red_arr_mem_44748)[sext_i32_i64(local_tid_44743 +
                                                          offset_44750)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39903 = add32(x_39901, x_39902);
                
                x_39901 = defunc_1_op_res_39903;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44748)[sext_i32_i64(local_tid_44743)] =
                    x_39901;
            }
        }
        offset_44750 *= 2;
    }
    while (slt32(skip_waves_44751, squot32(sext_i64_i32(i32_res_28895) +
                                           wave_sizze_44745 - 1,
                                           wave_sizze_44745))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44750 = skip_waves_44751 * wave_sizze_44745;
        if (slt32(local_tid_44743 + offset_44750,
                  sext_i64_i32(i32_res_28895)) && ((local_tid_44743 -
                                                    squot32(local_tid_44743,
                                                            wave_sizze_44745) *
                                                    wave_sizze_44745) == 0 &&
                                                   (squot32(local_tid_44743,
                                                            wave_sizze_44745) &
                                                    (2 * skip_waves_44751 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39902 = ((__local
                            int32_t *) red_arr_mem_44748)[sext_i32_i64(local_tid_44743 +
                                                          offset_44750)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_39903 = add32(x_39901, x_39902);
                
                x_39901 = defunc_1_op_res_39903;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44748)[sext_i32_i64(local_tid_44743)] =
                    x_39901;
            }
        }
        skip_waves_44751 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39900 = ((__local int32_t *) red_arr_mem_44748)[(int64_t) 0];
    
    float defunc_0_f_res_39908;
    int64_t gtid_39821 = sext_i32_i64(ltid_pre_44747);
    int32_t phys_tid_39822 = local_tid_44743;
    __local char *red_arr_mem_44752;
    
    red_arr_mem_44752 = (__local char *) red_arr_mem_44752_backing_1;
    
    int32_t index_primexp_40925;
    
    index_primexp_40925 = sext_i64_i32(gtid_39821);
    
    bool cond_39913 = slt32(index_primexp_40925, defunc_0_f_res_39900);
    float defunc_0_f_res_39914;
    
    if (cond_39913) {
        int64_t i_39915 = sext_i32_i64(index_primexp_40925);
        float defunc_0_f_res_t_res_39916 = ((__global
                                             float *) defunc_4_map_res_mem_43638)[gtid_39816 *
                                                                                  N_28885 +
                                                                                  i_39915];
        
        defunc_0_f_res_39914 = defunc_0_f_res_t_res_39916;
    } else {
        defunc_0_f_res_39914 = 0.0F;
    }
    
    float defunc_0_f_res_39917 = defunc_0_f_res_39914 * defunc_0_f_res_39914;
    
    ((__local float *) red_arr_mem_44752)[gtid_39821] = defunc_0_f_res_39917;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44754;
    int32_t skip_waves_44755;
    
    skip_waves_44755 = 1;
    
    float x_39909;
    float x_39910;
    
    offset_44754 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44743, sext_i64_i32(i32_res_28895))) {
            x_39909 = ((__local
                        float *) red_arr_mem_44752)[sext_i32_i64(local_tid_44743 +
                                                    offset_44754)];
        }
    }
    offset_44754 = 1;
    while (slt32(offset_44754, wave_sizze_44745)) {
        if (slt32(local_tid_44743 + offset_44754,
                  sext_i64_i32(i32_res_28895)) && ((local_tid_44743 -
                                                    squot32(local_tid_44743,
                                                            wave_sizze_44745) *
                                                    wave_sizze_44745) & (2 *
                                                                         offset_44754 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_39910 = ((volatile __local
                            float *) red_arr_mem_44752)[sext_i32_i64(local_tid_44743 +
                                                        offset_44754)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39911 = x_39909 + x_39910;
                
                x_39909 = defunc_1_op_res_39911;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44752)[sext_i32_i64(local_tid_44743)] =
                    x_39909;
            }
        }
        offset_44754 *= 2;
    }
    while (slt32(skip_waves_44755, squot32(sext_i64_i32(i32_res_28895) +
                                           wave_sizze_44745 - 1,
                                           wave_sizze_44745))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44754 = skip_waves_44755 * wave_sizze_44745;
        if (slt32(local_tid_44743 + offset_44754,
                  sext_i64_i32(i32_res_28895)) && ((local_tid_44743 -
                                                    squot32(local_tid_44743,
                                                            wave_sizze_44745) *
                                                    wave_sizze_44745) == 0 &&
                                                   (squot32(local_tid_44743,
                                                            wave_sizze_44745) &
                                                    (2 * skip_waves_44755 -
                                                     1)) == 0)) {
            // read array element
            {
                x_39910 = ((__local
                            float *) red_arr_mem_44752)[sext_i32_i64(local_tid_44743 +
                                                        offset_44754)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_39911 = x_39909 + x_39910;
                
                x_39909 = defunc_1_op_res_39911;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44752)[sext_i32_i64(local_tid_44743)] =
                    x_39909;
            }
        }
        skip_waves_44755 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_39908 = ((__local float *) red_arr_mem_44752)[(int64_t) 0];
    
    int32_t r32_arg_39918 = sub32(defunc_0_f_res_39900, k2p2_28897);
    float i32_res_39919 = sitofp_i32_f32(r32_arg_39918);
    float sqrt_arg_39920 = defunc_0_f_res_39908 / i32_res_39919;
    float sqrt_res_39921;
    
    sqrt_res_39921 = futrts_sqrt32(sqrt_arg_39920);
    
    float i32_res_39922 = sitofp_i32_f32(defunc_0_f_res_39900);
    float t32_arg_39923 = hfrac_28891 * i32_res_39922;
    int32_t f32_res_39924 = fptosi_f32_i32(t32_arg_39923);
    
    if (local_tid_44743 == 0) {
        ((__global int32_t *) mem_43685)[gtid_39816] = f32_res_39924;
    }
    if (local_tid_44743 == 0) {
        ((__global int32_t *) mem_43687)[gtid_39816] = defunc_0_f_res_39900;
    }
    if (local_tid_44743 == 0) {
        ((__global float *) mem_43689)[gtid_39816] = sqrt_res_39921;
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_40243(__global int *global_failure,
                                            __local volatile
                                            int64_t *red_arr_mem_45015_backing_aligned_0,
                                            __local volatile
                                            int64_t *red_arr_mem_45013_backing_aligned_1,
                                            __local volatile
                                            int64_t *red_arr_mem_45011_backing_aligned_2,
                                            __local volatile
                                            int64_t *mem_43748_backing_aligned_3,
                                            int64_t N_28885, int32_t n_28889,
                                            int64_t iota32_arg_29281, __global
                                            unsigned char *defunc_4_map_res_mem_43637,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43638,
                                            __global
                                            unsigned char *defunc_4_map_res_mem_43639,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43704,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43705,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43706,
                                            __global
                                            unsigned char *defunc_0_f_res_mem_43739,
                                            __global unsigned char *mem_43744,
                                            __global unsigned char *mem_43751,
                                            __global unsigned char *mem_43753)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45015_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45015_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45013_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45013_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45011_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45011_backing_aligned_2;
    __local volatile char *restrict mem_43748_backing_0 = (__local volatile
                                                           char *) mem_43748_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44994;
    int32_t local_tid_44995;
    int64_t group_sizze_44998;
    int32_t wave_sizze_44997;
    int32_t group_tid_44996;
    
    global_tid_44994 = get_global_id(0);
    local_tid_44995 = get_local_id(0);
    group_sizze_44998 = get_local_size(0);
    wave_sizze_44997 = LOCKSTEP_WIDTH;
    group_tid_44996 = get_group_id(0);
    
    int32_t phys_tid_40243;
    
    phys_tid_40243 = group_tid_44996;
    
    int32_t ltid_pre_44999;
    
    ltid_pre_44999 = local_tid_44995;
    
    int64_t gtid_40236;
    
    gtid_40236 = sext_i32_i64(group_tid_44996);
    
    int32_t x_40462;
    
    x_40462 = ((__global int32_t *) defunc_4_map_res_mem_43637)[gtid_40236];
    
    int32_t x_40463 = ((__global
                        int32_t *) defunc_3_map_res_mem_43705)[gtid_40236];
    float x_40464 = ((__global float *) defunc_3_map_res_mem_43706)[gtid_40236];
    int32_t x_40465 = ((__global
                        int32_t *) defunc_3_map_res_mem_43704)[gtid_40236];
    float x_40466 = ((__global float *) defunc_0_f_res_mem_43739)[gtid_40236];
    int32_t y_40469 = sub32(x_40462, x_40463);
    float i32_res_40470 = sitofp_i32_f32(x_40463);
    float sqrt_res_40471;
    
    sqrt_res_40471 = futrts_sqrt32(i32_res_40470);
    
    float y_40472 = x_40464 * sqrt_res_40471;
    __local char *mem_43748;
    
    mem_43748 = (__local char *) mem_43748_backing_0;
    
    int64_t gtid_40239 = sext_i32_i64(ltid_pre_44999);
    int32_t phys_tid_40240 = local_tid_44995;
    int32_t index_primexp_40938 = sext_i64_i32(gtid_40239);
    bool cond_40485 = sle32(y_40469, index_primexp_40938);
    float defunc_0_f_res_40486;
    
    if (cond_40485) {
        defunc_0_f_res_40486 = 0.0F;
    } else {
        bool cond_40487 = index_primexp_40938 == 0;
        float defunc_0_f_res_f_res_40488;
        
        if (cond_40487) {
            defunc_0_f_res_f_res_40488 = x_40466;
        } else {
            int32_t i_40489 = add32(x_40463, index_primexp_40938);
            int64_t i_40490 = sext_i32_i64(i_40489);
            float x_40491 = ((__global
                              float *) defunc_4_map_res_mem_43638)[gtid_40236 *
                                                                   N_28885 +
                                                                   i_40490];
            int32_t x_40492 = sub32(x_40463, x_40465);
            int32_t i_40493 = add32(x_40492, index_primexp_40938);
            int64_t i_40494 = sext_i32_i64(i_40493);
            float y_40495 = ((__global
                              float *) defunc_4_map_res_mem_43638)[gtid_40236 *
                                                                   N_28885 +
                                                                   i_40494];
            float defunc_0_f_res_f_res_f_res_40496 = x_40491 - y_40495;
            
            defunc_0_f_res_f_res_40488 = defunc_0_f_res_f_res_f_res_40496;
        }
        defunc_0_f_res_40486 = defunc_0_f_res_f_res_40488;
    }
    ((__local float *) mem_43748)[gtid_40239] = defunc_0_f_res_40486;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45000;
    
    dims_flat_45000 = iota32_arg_29281;
    
    float x_40481;
    float x_40482;
    float x_45002;
    float x_45003;
    bool ltid_in_bounds_45005;
    
    ltid_in_bounds_45005 = slt64(sext_i32_i64(local_tid_44995),
                                 iota32_arg_29281);
    
    int32_t skip_threads_45006;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45005) {
            x_40482 = ((volatile __local
                        float *) mem_43748)[sext_i32_i64(local_tid_44995)];
            if ((local_tid_44995 - squot32(local_tid_44995, 32) * 32) == 0) {
                x_40481 = x_40482;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45006 = 1;
        while (slt32(skip_threads_45006, 32)) {
            if (sle32(skip_threads_45006, local_tid_44995 -
                      squot32(local_tid_44995, 32) * 32) &&
                ltid_in_bounds_45005) {
                // read operands
                {
                    x_40481 = ((volatile __local
                                float *) mem_43748)[sext_i32_i64(local_tid_44995) -
                                                    sext_i32_i64(skip_threads_45006)];
                }
                // perform operation
                {
                    bool inactive_45007 =
                         slt64(srem64(sext_i32_i64(local_tid_44995),
                                      iota32_arg_29281),
                               sext_i32_i64(local_tid_44995) -
                               sext_i32_i64(local_tid_44995 -
                               skip_threads_45006));
                    
                    if (inactive_45007) {
                        x_40481 = x_40482;
                    }
                    if (!inactive_45007) {
                        float defunc_1_op_res_40483 = x_40481 + x_40482;
                        
                        x_40481 = defunc_1_op_res_40483;
                    }
                }
            }
            if (sle32(wave_sizze_44997, skip_threads_45006)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45006, local_tid_44995 -
                      squot32(local_tid_44995, 32) * 32) &&
                ltid_in_bounds_45005) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43748)[sext_i32_i64(local_tid_44995)] =
                        x_40481;
                    x_40482 = x_40481;
                }
            }
            if (sle32(wave_sizze_44997, skip_threads_45006)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45006 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44995 - squot32(local_tid_44995, 32) * 32) == 31 &&
            ltid_in_bounds_45005) {
            ((volatile __local
              float *) mem_43748)[sext_i32_i64(squot32(local_tid_44995, 32))] =
                x_40481;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45008;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44995, 32) == 0 && ltid_in_bounds_45005) {
                x_45003 = ((volatile __local
                            float *) mem_43748)[sext_i32_i64(local_tid_44995)];
                if ((local_tid_44995 - squot32(local_tid_44995, 32) * 32) ==
                    0) {
                    x_45002 = x_45003;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45008 = 1;
            while (slt32(skip_threads_45008, 32)) {
                if (sle32(skip_threads_45008, local_tid_44995 -
                          squot32(local_tid_44995, 32) * 32) &&
                    (squot32(local_tid_44995, 32) == 0 &&
                     ltid_in_bounds_45005)) {
                    // read operands
                    {
                        x_45002 = ((volatile __local
                                    float *) mem_43748)[sext_i32_i64(local_tid_44995) -
                                                        sext_i32_i64(skip_threads_45008)];
                    }
                    // perform operation
                    {
                        bool inactive_45009 =
                             slt64(srem64(sext_i32_i64(local_tid_44995 * 32 +
                                          32 - 1), iota32_arg_29281),
                                   sext_i32_i64(local_tid_44995 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44995 -
                                                 skip_threads_45008) * 32 + 32 -
                                   1));
                        
                        if (inactive_45009) {
                            x_45002 = x_45003;
                        }
                        if (!inactive_45009) {
                            float defunc_1_op_res_45004 = x_45002 + x_45003;
                            
                            x_45002 = defunc_1_op_res_45004;
                        }
                    }
                }
                if (sle32(wave_sizze_44997, skip_threads_45008)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45008, local_tid_44995 -
                          squot32(local_tid_44995, 32) * 32) &&
                    (squot32(local_tid_44995, 32) == 0 &&
                     ltid_in_bounds_45005)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43748)[sext_i32_i64(local_tid_44995)] =
                            x_45002;
                        x_45003 = x_45002;
                    }
                }
                if (sle32(wave_sizze_44997, skip_threads_45008)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45008 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44995, 32) == 0 || !ltid_in_bounds_45005)) {
            // read operands
            {
                x_40482 = x_40481;
                x_40481 = ((__local
                            float *) mem_43748)[sext_i32_i64(squot32(local_tid_44995,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_45010 =
                     slt64(srem64(sext_i32_i64(local_tid_44995),
                                  iota32_arg_29281),
                           sext_i32_i64(local_tid_44995) -
                           sext_i32_i64(squot32(local_tid_44995, 32) * 32 - 1));
                
                if (inactive_45010) {
                    x_40481 = x_40482;
                }
                if (!inactive_45010) {
                    float defunc_1_op_res_40483 = x_40481 + x_40482;
                    
                    x_40481 = defunc_1_op_res_40483;
                }
            }
            // write final result
            {
                ((__local float *) mem_43748)[sext_i32_i64(local_tid_44995)] =
                    x_40481;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44995, 32) == 0) {
            ((__local float *) mem_43748)[sext_i32_i64(local_tid_44995)] =
                x_40482;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_40502;
    int32_t acc0_40503;
    float acc0_40504;
    int64_t gtid_40241 = sext_i32_i64(ltid_pre_44999);
    int32_t phys_tid_40242 = local_tid_44995;
    __local char *red_arr_mem_45011;
    
    red_arr_mem_45011 = (__local char *) red_arr_mem_45011_backing_1;
    
    __local char *red_arr_mem_45013;
    
    red_arr_mem_45013 = (__local char *) red_arr_mem_45013_backing_2;
    
    __local char *red_arr_mem_45015;
    
    red_arr_mem_45015 = (__local char *) red_arr_mem_45015_backing_3;
    
    float x_40519;
    
    x_40519 = ((__local float *) mem_43748)[gtid_40241];
    
    float x_40520 = ((__global float *) mem_43744)[gtid_40241];
    int32_t index_primexp_40941 = sext_i64_i32(gtid_40241);
    float defunc_0_f_res_40523 = x_40519 / y_40472;
    bool cond_40524 = slt32(index_primexp_40941, y_40469);
    bool isnan_res_40525;
    
    isnan_res_40525 = futrts_isnan32(defunc_0_f_res_40523);
    
    bool cond_t_res_40526 = !isnan_res_40525;
    bool x_40527 = cond_40524 && cond_t_res_40526;
    float abs_res_40528 = (float) fabs(defunc_0_f_res_40523);
    bool defunc_2_f_res_t_res_40529 = x_40520 < abs_res_40528;
    bool x_40530 = x_40527 && defunc_2_f_res_t_res_40529;
    float defunc_1_f_res_40531;
    
    if (cond_40524) {
        defunc_1_f_res_40531 = defunc_0_f_res_40523;
    } else {
        defunc_1_f_res_40531 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45011)[gtid_40241] = x_40530;
    ((__local int32_t *) red_arr_mem_45013)[gtid_40241] = index_primexp_40941;
    ((__local float *) red_arr_mem_45015)[gtid_40241] = defunc_1_f_res_40531;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45017;
    int32_t skip_waves_45018;
    
    skip_waves_45018 = 1;
    
    bool x_40505;
    int32_t x_40506;
    float x_40507;
    bool x_40508;
    int32_t x_40509;
    float x_40510;
    
    offset_45017 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44995, sext_i64_i32(iota32_arg_29281))) {
            x_40505 = ((__local
                        bool *) red_arr_mem_45011)[sext_i32_i64(local_tid_44995 +
                                                   offset_45017)];
            x_40506 = ((__local
                        int32_t *) red_arr_mem_45013)[sext_i32_i64(local_tid_44995 +
                                                      offset_45017)];
            x_40507 = ((__local
                        float *) red_arr_mem_45015)[sext_i32_i64(local_tid_44995 +
                                                    offset_45017)];
        }
    }
    offset_45017 = 1;
    while (slt32(offset_45017, wave_sizze_44997)) {
        if (slt32(local_tid_44995 + offset_45017,
                  sext_i64_i32(iota32_arg_29281)) && ((local_tid_44995 -
                                                       squot32(local_tid_44995,
                                                               wave_sizze_44997) *
                                                       wave_sizze_44997) & (2 *
                                                                            offset_45017 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_40508 = ((volatile __local
                            bool *) red_arr_mem_45011)[sext_i32_i64(local_tid_44995 +
                                                       offset_45017)];
                x_40509 = ((volatile __local
                            int32_t *) red_arr_mem_45013)[sext_i32_i64(local_tid_44995 +
                                                          offset_45017)];
                x_40510 = ((volatile __local
                            float *) red_arr_mem_45015)[sext_i32_i64(local_tid_44995 +
                                                        offset_45017)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40511;
                int32_t defunc_1_op_res_40512;
                
                if (x_40505) {
                    defunc_1_op_res_40511 = x_40505;
                    defunc_1_op_res_40512 = x_40506;
                } else {
                    bool x_40513 = x_40508 && x_40508;
                    bool x_40514 = !x_40508;
                    bool y_40515 = x_40505 && x_40514;
                    bool defunc_1_op_res_f_res_40516 = x_40513 || y_40515;
                    int32_t defunc_1_op_res_f_res_40517;
                    
                    if (x_40508) {
                        defunc_1_op_res_f_res_40517 = x_40509;
                    } else {
                        defunc_1_op_res_f_res_40517 = x_40506;
                    }
                    defunc_1_op_res_40511 = defunc_1_op_res_f_res_40516;
                    defunc_1_op_res_40512 = defunc_1_op_res_f_res_40517;
                }
                
                float defunc_1_op_res_40518 = x_40507 + x_40510;
                
                x_40505 = defunc_1_op_res_40511;
                x_40506 = defunc_1_op_res_40512;
                x_40507 = defunc_1_op_res_40518;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45011)[sext_i32_i64(local_tid_44995)] =
                    x_40505;
                ((volatile __local
                  int32_t *) red_arr_mem_45013)[sext_i32_i64(local_tid_44995)] =
                    x_40506;
                ((volatile __local
                  float *) red_arr_mem_45015)[sext_i32_i64(local_tid_44995)] =
                    x_40507;
            }
        }
        offset_45017 *= 2;
    }
    while (slt32(skip_waves_45018, squot32(sext_i64_i32(iota32_arg_29281) +
                                           wave_sizze_44997 - 1,
                                           wave_sizze_44997))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45017 = skip_waves_45018 * wave_sizze_44997;
        if (slt32(local_tid_44995 + offset_45017,
                  sext_i64_i32(iota32_arg_29281)) && ((local_tid_44995 -
                                                       squot32(local_tid_44995,
                                                               wave_sizze_44997) *
                                                       wave_sizze_44997) == 0 &&
                                                      (squot32(local_tid_44995,
                                                               wave_sizze_44997) &
                                                       (2 * skip_waves_45018 -
                                                        1)) == 0)) {
            // read array element
            {
                x_40508 = ((__local
                            bool *) red_arr_mem_45011)[sext_i32_i64(local_tid_44995 +
                                                       offset_45017)];
                x_40509 = ((__local
                            int32_t *) red_arr_mem_45013)[sext_i32_i64(local_tid_44995 +
                                                          offset_45017)];
                x_40510 = ((__local
                            float *) red_arr_mem_45015)[sext_i32_i64(local_tid_44995 +
                                                        offset_45017)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_40511;
                int32_t defunc_1_op_res_40512;
                
                if (x_40505) {
                    defunc_1_op_res_40511 = x_40505;
                    defunc_1_op_res_40512 = x_40506;
                } else {
                    bool x_40513 = x_40508 && x_40508;
                    bool x_40514 = !x_40508;
                    bool y_40515 = x_40505 && x_40514;
                    bool defunc_1_op_res_f_res_40516 = x_40513 || y_40515;
                    int32_t defunc_1_op_res_f_res_40517;
                    
                    if (x_40508) {
                        defunc_1_op_res_f_res_40517 = x_40509;
                    } else {
                        defunc_1_op_res_f_res_40517 = x_40506;
                    }
                    defunc_1_op_res_40511 = defunc_1_op_res_f_res_40516;
                    defunc_1_op_res_40512 = defunc_1_op_res_f_res_40517;
                }
                
                float defunc_1_op_res_40518 = x_40507 + x_40510;
                
                x_40505 = defunc_1_op_res_40511;
                x_40506 = defunc_1_op_res_40512;
                x_40507 = defunc_1_op_res_40518;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45011)[sext_i32_i64(local_tid_44995)] =
                    x_40505;
                ((__local
                  int32_t *) red_arr_mem_45013)[sext_i32_i64(local_tid_44995)] =
                    x_40506;
                ((__local
                  float *) red_arr_mem_45015)[sext_i32_i64(local_tid_44995)] =
                    x_40507;
            }
        }
        skip_waves_45018 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_40502 = ((__local bool *) red_arr_mem_45011)[(int64_t) 0];
    acc0_40503 = ((__local int32_t *) red_arr_mem_45013)[(int64_t) 0];
    acc0_40504 = ((__local float *) red_arr_mem_45015)[(int64_t) 0];
    
    bool x_40534 = acc0_40502 && acc0_40502;
    int32_t defunc_1_op_res_f_res_40538;
    
    if (acc0_40502) {
        defunc_1_op_res_f_res_40538 = acc0_40503;
    } else {
        defunc_1_op_res_f_res_40538 = -1;
    }
    
    bool cond_40544 = y_40469 == 0;
    float defunc_0_f_res_40545;
    
    if (cond_40544) {
        defunc_0_f_res_40545 = 0.0F;
    } else {
        float i32_res_40546 = sitofp_i32_f32(y_40469);
        float defunc_0_f_res_f_res_40547 = acc0_40504 / i32_res_40546;
        
        defunc_0_f_res_40545 = defunc_0_f_res_f_res_40547;
    }
    
    bool cond_40548 = !x_40534;
    int32_t fst_breakzq_40549;
    
    if (cond_40548) {
        fst_breakzq_40549 = -1;
    } else {
        bool cond_40550 = slt32(defunc_1_op_res_f_res_40538, y_40469);
        int32_t adjustValInds_res_40551;
        
        if (cond_40550) {
            int32_t i_40552 = add32(x_40463, defunc_1_op_res_f_res_40538);
            int64_t i_40553 = sext_i32_i64(i_40552);
            int32_t x_40554 = ((__global
                                int32_t *) defunc_4_map_res_mem_43639)[gtid_40236 *
                                                                       N_28885 +
                                                                       i_40553];
            int32_t adjustValInds_res_t_res_40555 = sub32(x_40554, n_28889);
            
            adjustValInds_res_40551 = adjustValInds_res_t_res_40555;
        } else {
            adjustValInds_res_40551 = -1;
        }
        fst_breakzq_40549 = adjustValInds_res_40551;
    }
    
    bool cond_40556 = sle32(x_40463, 5);
    bool cond_f_res_40557 = sle32(y_40469, 5);
    bool x_40558 = !cond_40556;
    bool y_40559 = cond_f_res_40557 && x_40558;
    bool cond_40560 = cond_40556 || y_40559;
    int32_t fst_breakzq_40561;
    
    if (cond_40560) {
        fst_breakzq_40561 = -2;
    } else {
        fst_breakzq_40561 = fst_breakzq_40549;
    }
    if (local_tid_44995 == 0) {
        ((__global int32_t *) mem_43751)[gtid_40236] = fst_breakzq_40561;
    }
    if (local_tid_44995 == 0) {
        ((__global float *) mem_43753)[gtid_40236] = defunc_0_f_res_40545;
    }
    
  error_3:
    return;
}
__kernel void mainzisegmap_intragroup_41060(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_42940_backing_aligned_0,
                                            int64_t m_28886, int32_t n_28889,
                                            int64_t i32_res_28901,
                                            int64_t Ty_41048, int64_t Tx_41049,
                                            int64_t gridDim_x_41050,
                                            int64_t gridDim_y_41051,
                                            int64_t group_sizze_tile3d_41055,
                                            int64_t count_shmem_41056, __global
                                            unsigned char *mem_42853, __global
                                            unsigned char *mem_42857, __global
                                            unsigned char *mem_42928, __global
                                            unsigned char *mem_42988)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42940_backing_0 = (__local volatile
                                                           char *) mem_42940_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44112;
    int32_t local_tid_44113;
    int64_t group_sizze_44116;
    int32_t wave_sizze_44115;
    int32_t group_tid_44114;
    
    global_tid_44112 = get_global_id(0);
    local_tid_44113 = get_local_id(0);
    group_sizze_44116 = get_local_size(0);
    wave_sizze_44115 = LOCKSTEP_WIDTH;
    group_tid_44114 = get_group_id(0);
    
    int32_t gid_flat_41060;
    
    gid_flat_41060 = group_tid_44114;
    
    int32_t ltid_pre_44117;
    
    ltid_pre_44117 = squot32(local_tid_44113, sext_i64_i32(Ty_41048) *
                             sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44118;
    
    ltid_pre_44118 = squot32(local_tid_44113 - squot32(local_tid_44113,
                                                       sext_i64_i32(Ty_41048) *
                                                       sext_i64_i32(Tx_41049)) *
                             (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)),
                             sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44119;
    
    ltid_pre_44119 = local_tid_44113 - squot32(local_tid_44113,
                                               sext_i64_i32(Ty_41048) *
                                               sext_i64_i32(Tx_41049)) *
        (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)) -
        squot32(local_tid_44113 - squot32(local_tid_44113,
                                          sext_i64_i32(Ty_41048) *
                                          sext_i64_i32(Tx_41049)) *
                (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)),
                sext_i64_i32(Tx_41049)) * sext_i64_i32(Tx_41049);
    
    int32_t ltid_pre_44120;
    
    ltid_pre_44120 = squot32(local_tid_44113, sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44121;
    
    ltid_pre_44121 = local_tid_44113 - squot32(local_tid_44113,
                                               sext_i64_i32(Tx_41049)) *
        sext_i64_i32(Tx_41049);
    
    int32_t ltid_pre_44122;
    
    ltid_pre_44122 = local_tid_44113;
    
    int64_t gid_zz_41059;
    
    gid_zz_41059 = squot64(sext_i32_i64(group_tid_44114), gridDim_y_41051 *
                           gridDim_x_41050);
    
    int64_t gid_y_41058;
    
    gid_y_41058 = squot64(sext_i32_i64(group_tid_44114) -
                          squot64(sext_i32_i64(group_tid_44114),
                                  gridDim_y_41051 * gridDim_x_41050) *
                          (gridDim_y_41051 * gridDim_x_41050), gridDim_x_41050);
    
    int64_t gid_x_41057;
    
    gid_x_41057 = sext_i32_i64(group_tid_44114) -
        squot64(sext_i32_i64(group_tid_44114), gridDim_y_41051 *
                gridDim_x_41050) * (gridDim_y_41051 * gridDim_x_41050) -
        squot64(sext_i32_i64(group_tid_44114) -
                squot64(sext_i32_i64(group_tid_44114), gridDim_y_41051 *
                        gridDim_x_41050) * (gridDim_y_41051 * gridDim_x_41050),
                gridDim_x_41050) * gridDim_x_41050;
    
    int64_t ii_41061;
    
    ii_41061 = (int64_t) 30 * gid_zz_41059;
    
    int64_t jj1_41062 = Ty_41048 * gid_y_41058;
    int64_t jj2_41063 = Tx_41049 * gid_x_41057;
    float mem_42938[30];
    int64_t ltid_y_41066 = sext_i32_i64(ltid_pre_44120);
    int64_t ltid_x_41064 = sext_i32_i64(ltid_pre_44121);
    int32_t ltid_flat_41065 = local_tid_44113;
    float mem_42932[30];
    
    for (int32_t i_42757 = 0; i_42757 < 30; i_42757++) {
        int64_t i_41074 = sext_i32_i64(i_42757);
        
        mem_42932[i_41074] = 0.0F;
    }
    for (int64_t i_44124 = 0; i_44124 < (int64_t) 30; i_44124++) {
        mem_42938[i_44124] = mem_42932[i_44124];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42940;
    
    mem_42940 = (__local char *) mem_42940_backing_0;
    
    float loop_mem_42970[30];
    float mem_param_42941[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42941[i_1] = mem_42938[i_1];
    for (int32_t i_42759 = 0; i_42759 < n_28889; i_42759++) {
        int64_t i_41079 = sext_i32_i64(i_42759);
        
        for (int64_t i_41082 = 0; i_41082 < count_shmem_41056; i_41082++) {
            int64_t offs_41095 = group_sizze_tile3d_41055 * i_41082;
            int64_t ltid_41085 = sext_i32_i64(ltid_pre_44122);
            int32_t ltid_flat_41084 = local_tid_44113;
            int64_t loc_ind_41096 = ltid_41085 + offs_41095;
            int64_t gtid_41097 = ii_41061 + loc_ind_41096;
            bool cond_41098 = slt64(gtid_41097, m_28886);
            float y_elem_41099;
            
            if (cond_41098) {
                float Y_elem_41101 = ((__global float *) mem_42928)[i_41079 *
                                                                    m_28886 +
                                                                    gtid_41097];
                
                y_elem_41099 = Y_elem_41101;
            } else {
                y_elem_41099 = 0.0F;
            }
            
            bool cond_41103 = slt64(loc_ind_41096, (int64_t) 30);
            int64_t y_loc_ind_41104;
            
            if (cond_41103) {
                y_loc_ind_41104 = loc_ind_41096;
            } else {
                y_loc_ind_41104 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_41104) && slt64(y_loc_ind_41104,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42940)[y_loc_ind_41104] = y_elem_41099;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42969[30];
        int64_t ltid_y_41110 = sext_i32_i64(ltid_pre_44120);
        int64_t ltid_x_41108 = sext_i32_i64(ltid_pre_44121);
        int32_t ltid_flat_41109 = local_tid_44113;
        int64_t gtid_41137 = jj1_41062 + ltid_y_41110;
        int64_t gtid_41138 = jj2_41063 + ltid_x_41108;
        bool binop_x_41140 = slt64(gtid_41137, i32_res_28901);
        bool binop_y_41141 = slt64(gtid_41138, i32_res_28901);
        bool cond_41142 = binop_x_41140 && binop_y_41141;
        float mem_43846[30];
        
        if (cond_41142) {
            float x_41145 = ((__global float *) mem_42853)[i_41079 *
                                                           i32_res_28901 +
                                                           gtid_41137];
            float x_41147 = ((__global float *) mem_42857)[i_41079 *
                                                           i32_res_28901 +
                                                           gtid_41138];
            
            for (int32_t i_42758 = 0; i_42758 < 30; i_42758++) {
                int64_t i_41149 = sext_i32_i64(i_42758);
                int64_t gtid_41151 = ii_41061 + i_41149;
                bool cond_41152 = slt64(gtid_41151, m_28886);
                
                if (cond_41152) {
                    float inp_reg_var2zz_41154 = ((__local
                                                   float *) mem_42940)[i_41149];
                    float res_reg_var2zz_41155 = mem_param_42941[i_41149];
                    float x_41159 = x_41145 * x_41147;
                    bool isnan_res_41160;
                    
                    isnan_res_41160 = futrts_isnan32(inp_reg_var2zz_41154);
                    
                    float y_41161;
                    
                    if (isnan_res_41160) {
                        y_41161 = 0.0F;
                    } else {
                        y_41161 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41162 = x_41159 * y_41161;
                    float defunc_1_op_res_41166 = res_reg_var2zz_41155 +
                          defunc_2_f_res_41162;
                    
                    mem_param_42941[i_41149] = defunc_1_op_res_41166;
                }
            }
            for (int64_t i_44130 = 0; i_44130 < (int64_t) 30; i_44130++) {
                mem_43846[i_44130] = mem_param_42941[i_44130];
            }
        } else {
            for (int64_t i_44131 = 0; i_44131 < (int64_t) 30; i_44131++) {
                mem_43846[i_44131] = mem_param_42941[i_44131];
            }
        }
        for (int64_t i_44132 = 0; i_44132 < (int64_t) 30; i_44132++) {
            mem_42969[i_44132] = mem_43846[i_44132];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44125[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44125[i_2] = mem_42969[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42941[i_3] = mem_param_tmp_44125[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42970[i_4] = mem_param_42941[i_4];
    
    float mem_42984[30 * 1 * 1];
    int64_t ltid_zz_41175 = sext_i32_i64(ltid_pre_44117);
    int64_t ltid_y_41174 = sext_i32_i64(ltid_pre_44118);
    int64_t ltid_x_41172 = sext_i32_i64(ltid_pre_44119);
    int32_t ltid_flat_41173 = local_tid_44113;
    float mem_42978[30 * 1 * 1];
    
    for (int32_t i_42761 = 0; i_42761 < 30; i_42761++) {
        int64_t i_41184 = sext_i32_i64(i_42761);
        
        for (int64_t i_44134 = 0; i_44134 < (int64_t) 1; i_44134++) {
            mem_42978[i_41184 + i_44134] = loop_mem_42970[i_41184 + i_44134];
        }
    }
    for (int64_t i_44135 = 0; i_44135 < (int64_t) 30; i_44135++) {
        for (int64_t i_44136 = 0; i_44136 < (int64_t) 1; i_44136++) {
            for (int64_t i_44137 = 0; i_44137 < (int64_t) 1; i_44137++) {
                mem_42984[i_44135 + i_44136 + i_44137] = mem_42978[i_44135 +
                                                                   i_44136 +
                                                                   i_44137];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44138 = squot64(sext_i32_i64(local_tid_44113), Ty_41048 *
                                       Tx_41049);
    int64_t reg_tile_i_44139 = squot64(sext_i32_i64(local_tid_44113) -
                                       squot64(sext_i32_i64(local_tid_44113),
                                               Ty_41048 * Tx_41049) *
                                       (Ty_41048 * Tx_41049), Tx_41049);
    int64_t reg_tile_i_44140 = sext_i32_i64(local_tid_44113) -
            squot64(sext_i32_i64(local_tid_44113), Ty_41048 * Tx_41049) *
            (Ty_41048 * Tx_41049) - squot64(sext_i32_i64(local_tid_44113) -
                                            squot64(sext_i32_i64(local_tid_44113),
                                                    Ty_41048 * Tx_41049) *
                                            (Ty_41048 * Tx_41049), Tx_41049) *
            Tx_41049;
    int64_t tile_dim_start_44141 = (int64_t) 30 * (gid_zz_41059 +
                                                   reg_tile_i_44138);
    int64_t tile_dim_start_44142 = Ty_41048 * gid_y_41058 + reg_tile_i_44139;
    int64_t tile_dim_start_44143 = Tx_41049 * gid_x_41057 + reg_tile_i_44140;
    
    for (int64_t nest_i_44144 = 0; nest_i_44144 < (int64_t) 30;
         nest_i_44144++) {
        for (int64_t nest_i_44145 = 0; nest_i_44145 < (int64_t) 1;
             nest_i_44145++) {
            for (int64_t nest_i_44146 = 0; nest_i_44146 < (int64_t) 1;
                 nest_i_44146++) {
                if ((slt64(tile_dim_start_44141 + nest_i_44144, m_28886) &&
                     slt64(tile_dim_start_44142 + nest_i_44145,
                           i32_res_28901)) && slt64(tile_dim_start_44143 +
                                                    nest_i_44146,
                                                    i32_res_28901)) {
                    ((__global float *) mem_42988)[(tile_dim_start_44141 +
                                                    nest_i_44144) *
                                                   (i32_res_28901 *
                                                    i32_res_28901) +
                                                   (tile_dim_start_44142 +
                                                    nest_i_44145) *
                                                   i32_res_28901 +
                                                   (tile_dim_start_44143 +
                                                    nest_i_44146)] =
                        mem_42984[nest_i_44144 + nest_i_44145 + nest_i_44146];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainzisegmap_intragroup_41213(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43128_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43126_backing_aligned_1,
                                            int64_t N_28885, int64_t m_28886,
                                            int64_t i32_res_28895,
                                            int64_t i32_res_28901,
                                            int64_t gridDim_x_41207,
                                            int64_t full_tiles_41238,
                                            int64_t kk_41445, __global
                                            unsigned char *images_mem_42841,
                                            __global unsigned char *mem_42853,
                                            __global unsigned char *mem_43300)
{
    #define Ty_41194 (mainziTy_41191)
    #define Ry_41195 (mainziRy_41193)
    #define Tx_41196 (mainziTx_41190)
    #define Rx_41197 (mainziRx_41192)
    #define Tk_41198 (mainziTk_41189)
    #define tk_div_tx_41199 (sdiv_up64(mainziTk_41189, mainziTx_41190))
    #define tk_div_ty_41200 (sdiv_up64(mainziTk_41189, mainziTy_41191))
    #define TxRx_41201 (mainziTx_41190 * mainziRx_41192)
    #define TyRy_41202 (mainziTy_41191 * mainziRy_41193)
    #define a_loc_szz_41204 (mainziTk_41189 * (mainziTy_41191 * mainziRy_41193))
    #define b_loc_szz_41206 (mainziRx_41192 * (mainziTx_41190 * mainziTk_41189))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43128_backing_1 = (__local volatile
                                                           char *) mem_43128_backing_aligned_0;
    __local volatile char *restrict mem_43126_backing_0 = (__local volatile
                                                           char *) mem_43126_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44287;
    int32_t local_tid_44288;
    int64_t group_sizze_44291;
    int32_t wave_sizze_44290;
    int32_t group_tid_44289;
    
    global_tid_44287 = get_global_id(0);
    local_tid_44288 = get_local_id(0);
    group_sizze_44291 = get_local_size(0);
    wave_sizze_44290 = LOCKSTEP_WIDTH;
    group_tid_44289 = get_group_id(0);
    
    int32_t gid_flat_41213;
    
    gid_flat_41213 = group_tid_44289;
    
    int32_t ltid_pre_44292;
    
    ltid_pre_44292 = squot32(local_tid_44288, sext_i64_i32(Tx_41196));
    
    int32_t ltid_pre_44293;
    
    ltid_pre_44293 = local_tid_44288 - squot32(local_tid_44288,
                                               sext_i64_i32(Tx_41196)) *
        sext_i64_i32(Tx_41196);
    
    int64_t gid_y_41212;
    
    gid_y_41212 = squot64(sext_i32_i64(group_tid_44289), gridDim_x_41207);
    
    int64_t gid_x_41211;
    
    gid_x_41211 = sext_i32_i64(group_tid_44289) -
        squot64(sext_i32_i64(group_tid_44289), gridDim_x_41207) *
        gridDim_x_41207;
    
    int64_t iii_41214;
    
    iii_41214 = TyRy_41202 * gid_y_41212;
    
    int64_t jjj_41215 = TxRx_41201 * gid_x_41211;
    float mem_43124[Ry_41195 * Rx_41197];
    int64_t ltid_y_41218 = sext_i32_i64(ltid_pre_44292);
    int64_t ltid_x_41216 = sext_i32_i64(ltid_pre_44293);
    int32_t ltid_flat_41217 = local_tid_44288;
    float mem_43115[Ry_41195 * Rx_41197];
    
    for (int64_t i_41229 = 0; i_41229 < Ry_41195; i_41229++) {
        for (int64_t i_41232 = 0; i_41232 < Rx_41197; i_41232++) {
            mem_43115[i_41229 * Rx_41197 + i_41232] = 0.0F;
        }
    }
    for (int64_t i_44296 = 0; i_44296 < Ry_41195; i_44296++) {
        for (int64_t i_44297 = 0; i_44297 < Rx_41197; i_44297++) {
            mem_43124[i_44296 * Rx_41197 + i_44297] = mem_43115[i_44296 *
                                                                Rx_41197 +
                                                                i_44297];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43126;
    
    mem_43126 = (__local char *) mem_43126_backing_0;
    
    __local char *mem_43128;
    
    mem_43128 = (__local char *) mem_43128_backing_1;
    
    float mem_43199[Ry_41195];
    float mem_43203[Rx_41197];
    float loop_mem_43215[Ry_41195 * Rx_41197];
    float mem_param_43129[Ry_41195 * Rx_41197];
    
    for (int32_t i_2 = 0; i_2 < Ry_41195 * Rx_41197; i_2++)
        mem_param_43129[i_2] = mem_43124[i_2];
    for (int64_t i_41239 = 0; i_41239 < full_tiles_41238; i_41239++) {
        int64_t kk_41243 = Tk_41198 * i_41239;
        
        for (int64_t i_41244 = 0; i_41244 < Ry_41195; i_41244++) {
            int64_t binop_y_41267 = Ty_41194 * i_41244;
            
            for (int64_t i_41246 = 0; i_41246 < tk_div_tx_41199; i_41246++) {
                int64_t binop_y_41265 = Tx_41196 * i_41246;
                int64_t ltid_x_41248 = sext_i32_i64(ltid_pre_44292);
                int64_t ltid_y_41249 = sext_i32_i64(ltid_pre_44293);
                int32_t ltid_flat_41250 = local_tid_44288;
                int64_t k_41266 = ltid_y_41249 + binop_y_41265;
                int64_t i_41268 = ltid_x_41248 + binop_y_41267;
                int64_t gtid_41269 = iii_41214 + i_41268;
                int64_t A_col_idx_41270 = kk_41243 + k_41266;
                bool cond_41271 = slt64(gtid_41269, m_28886);
                float A_elem_41272;
                
                if (cond_41271) {
                    float A_elem_41274 = ((__global
                                           float *) images_mem_42841)[gtid_41269 *
                                                                      N_28885 +
                                                                      A_col_idx_41270];
                    
                    A_elem_41272 = A_elem_41274;
                } else {
                    A_elem_41272 = 0.0F;
                }
                
                bool cond_41276 = slt64(k_41266, Tk_41198);
                int64_t a_loc_ind_41277;
                
                if (cond_41276) {
                    int64_t binop_y_41278 = Tk_41198 * i_41268;
                    int64_t loc_fi_41279 = k_41266 + binop_y_41278;
                    
                    a_loc_ind_41277 = loc_fi_41279;
                } else {
                    a_loc_ind_41277 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41277) &&
                    slt64(a_loc_ind_41277, a_loc_szz_41204)) {
                    ((__local float *) mem_43126)[a_loc_ind_41277] =
                        A_elem_41272;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41284 = 0; i_41284 < tk_div_ty_41200; i_41284++) {
            int64_t binop_y_41305 = Ty_41194 * i_41284;
            
            for (int64_t i_41286 = 0; i_41286 < Rx_41197; i_41286++) {
                int64_t binop_y_41307 = Tx_41196 * i_41286;
                int64_t ltid_x_41288 = sext_i32_i64(ltid_pre_44292);
                int64_t ltid_y_41289 = sext_i32_i64(ltid_pre_44293);
                int32_t ltid_flat_41290 = local_tid_44288;
                int64_t k_41306 = ltid_x_41288 + binop_y_41305;
                int64_t j_41308 = ltid_y_41289 + binop_y_41307;
                int64_t gtid_41309 = jjj_41215 + j_41308;
                int64_t B_row_idx_41310 = kk_41243 + k_41306;
                bool cond_41311 = slt64(gtid_41309, i32_res_28901);
                float B_elem_41312;
                
                if (cond_41311) {
                    float B_elem_41314 = ((__global
                                           float *) mem_42853)[B_row_idx_41310 *
                                                               i32_res_28901 +
                                                               gtid_41309];
                    
                    B_elem_41312 = B_elem_41314;
                } else {
                    B_elem_41312 = 0.0F;
                }
                
                bool cond_41316 = slt64(k_41306, Tk_41198);
                int64_t b_loc_ind_41317;
                
                if (cond_41316) {
                    int64_t binop_y_41318 = TxRx_41201 * k_41306;
                    int64_t loc_fi_41319 = j_41308 + binop_y_41318;
                    
                    b_loc_ind_41317 = loc_fi_41319;
                } else {
                    b_loc_ind_41317 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41317) &&
                    slt64(b_loc_ind_41317, b_loc_szz_41206)) {
                    ((__local float *) mem_43128)[b_loc_ind_41317] =
                        B_elem_41312;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43214[Ry_41195 * Rx_41197];
        float mem_param_43186[Ry_41195 * Rx_41197];
        
        for (int32_t i_3 = 0; i_3 < Ry_41195 * Rx_41197; i_3++)
            mem_param_43186[i_3] = mem_param_43129[i_3];
        for (int64_t i_41324 = 0; i_41324 < Tk_41198; i_41324++) {
            int64_t binop_y_41363 = TxRx_41201 * i_41324;
            int64_t ltid_y_41328 = sext_i32_i64(ltid_pre_44292);
            int64_t ltid_x_41326 = sext_i32_i64(ltid_pre_44293);
            int32_t ltid_flat_41327 = local_tid_44288;
            float mem_43189[Ry_41195];
            float mem_43191[Rx_41197];
            int64_t binop_x_41354 = Ry_41195 * ltid_y_41328;
            
            for (int64_t i_41352 = 0; i_41352 < Ry_41195; i_41352++) {
                int64_t binop_x_41355 = i_41352 + binop_x_41354;
                int64_t binop_y_41356 = Tk_41198 * binop_x_41355;
                int64_t a_loc_ind_41357 = i_41324 + binop_y_41356;
                
                for (int64_t i_44309 = 0; i_44309 < (int64_t) 1; i_44309++) {
                    mem_43189[i_41352 + i_44309] = ((__local
                                                     float *) mem_43126)[a_loc_ind_41357 +
                                                                         i_44309];
                }
            }
            
            int64_t binop_y_41365 = Rx_41197 * ltid_x_41326;
            
            for (int64_t i_41361 = 0; i_41361 < Rx_41197; i_41361++) {
                int64_t binop_x_41364 = i_41361 + binop_y_41363;
                int64_t b_loc_ind_41366 = binop_x_41364 + binop_y_41365;
                
                for (int64_t i_44311 = 0; i_44311 < (int64_t) 1; i_44311++) {
                    mem_43191[i_41361 + i_44311] = ((__local
                                                     float *) mem_43128)[b_loc_ind_41366 +
                                                                         i_44311];
                }
            }
            for (int64_t i_44312 = 0; i_44312 < Ry_41195; i_44312++) {
                mem_43199[i_44312] = mem_43189[i_44312];
            }
            for (int64_t i_44313 = 0; i_44313 < Rx_41197; i_44313++) {
                mem_43203[i_44313] = mem_43191[i_44313];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43213[Ry_41195 * Rx_41197];
            int64_t ltid_y_41373 = sext_i32_i64(ltid_pre_44292);
            int64_t ltid_x_41371 = sext_i32_i64(ltid_pre_44293);
            int32_t ltid_flat_41372 = local_tid_44288;
            int64_t binop_y_41416 = Ry_41195 * ltid_y_41373;
            int64_t binop_y_41420 = Rx_41197 * ltid_x_41371;
            
            for (int64_t i_41410 = 0; i_41410 < Ry_41195; i_41410++) {
                int64_t binop_x_41415 = iii_41214 + i_41410;
                int64_t cmpop_x_41417 = binop_x_41415 + binop_y_41416;
                bool binop_x_41418 = slt64(cmpop_x_41417, m_28886);
                
                for (int64_t i_41413 = 0; i_41413 < Rx_41197; i_41413++) {
                    int64_t binop_x_41419 = jjj_41215 + i_41413;
                    int64_t cmpop_x_41421 = binop_x_41419 + binop_y_41420;
                    bool binop_y_41422 = slt64(cmpop_x_41421, i32_res_28901);
                    bool cond_41423 = binop_x_41418 && binop_y_41422;
                    
                    if (cond_41423) {
                        float a_41425 = mem_43199[i_41410];
                        float c_41427 = mem_param_43186[i_41410 * Rx_41197 +
                                                        i_41413];
                        bool isnan_res_41430;
                        
                        isnan_res_41430 = futrts_isnan32(a_41425);
                        
                        float defunc_1_f_res_41431;
                        
                        if (isnan_res_41430) {
                            defunc_1_f_res_41431 = 0.0F;
                        } else {
                            float b_41426 = mem_43203[i_41413];
                            float defunc_1_f_res_f_res_41432 = a_41425 *
                                  b_41426;
                            
                            defunc_1_f_res_41431 = defunc_1_f_res_f_res_41432;
                        }
                        
                        float defunc_1_op_res_41436 = c_41427 +
                              defunc_1_f_res_41431;
                        
                        mem_param_43186[i_41410 * Rx_41197 + i_41413] =
                            defunc_1_op_res_41436;
                    }
                }
            }
            for (int64_t i_44316 = 0; i_44316 < Ry_41195; i_44316++) {
                for (int64_t i_44317 = 0; i_44317 < Rx_41197; i_44317++) {
                    mem_43213[i_44316 * Rx_41197 + i_44317] =
                        mem_param_43186[i_44316 * Rx_41197 + i_44317];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44306[Ry_41195 * Rx_41197];
            
            for (int32_t i_4 = 0; i_4 < Ry_41195 * Rx_41197; i_4++)
                mem_param_tmp_44306[i_4] = mem_43213[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41195 * Rx_41197; i_5++)
                mem_param_43186[i_5] = mem_param_tmp_44306[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41195 * Rx_41197; i_6++)
            loop_mem_43214[i_6] = mem_param_43186[i_6];
        
        float mem_param_tmp_44298[Ry_41195 * Rx_41197];
        
        for (int32_t i_7 = 0; i_7 < Ry_41195 * Rx_41197; i_7++)
            mem_param_tmp_44298[i_7] = loop_mem_43214[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41195 * Rx_41197; i_8++)
            mem_param_43129[i_8] = mem_param_tmp_44298[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41195 * Rx_41197; i_9++)
        loop_mem_43215[i_9] = mem_param_43129[i_9];
    for (int64_t i_41446 = 0; i_41446 < Ry_41195; i_41446++) {
        int64_t binop_y_41471 = Ty_41194 * i_41446;
        
        for (int64_t i_41448 = 0; i_41448 < tk_div_tx_41199; i_41448++) {
            int64_t binop_y_41469 = Tx_41196 * i_41448;
            int64_t ltid_x_41450 = sext_i32_i64(ltid_pre_44292);
            int64_t ltid_y_41451 = sext_i32_i64(ltid_pre_44293);
            int32_t ltid_flat_41452 = local_tid_44288;
            int64_t k_41470 = ltid_y_41451 + binop_y_41469;
            int64_t i_41472 = ltid_x_41450 + binop_y_41471;
            int64_t gtid_41473 = iii_41214 + i_41472;
            int64_t A_col_idx_41474 = kk_41445 + k_41470;
            bool binop_x_41475 = slt64(gtid_41473, m_28886);
            bool binop_y_41476 = slt64(A_col_idx_41474, i32_res_28895);
            bool cond_41477 = binop_x_41475 && binop_y_41476;
            float A_elem_41478;
            
            if (cond_41477) {
                float A_elem_41480 = ((__global
                                       float *) images_mem_42841)[gtid_41473 *
                                                                  N_28885 +
                                                                  A_col_idx_41474];
                
                A_elem_41478 = A_elem_41480;
            } else {
                A_elem_41478 = 0.0F;
            }
            
            bool cond_41482 = slt64(k_41470, Tk_41198);
            int64_t a_loc_ind_41483;
            
            if (cond_41482) {
                int64_t binop_y_41484 = Tk_41198 * i_41472;
                int64_t loc_fi_41485 = k_41470 + binop_y_41484;
                
                a_loc_ind_41483 = loc_fi_41485;
            } else {
                a_loc_ind_41483 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41483) && slt64(a_loc_ind_41483,
                                                             a_loc_szz_41204)) {
                ((__local float *) mem_43126)[a_loc_ind_41483] = A_elem_41478;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41490 = 0; i_41490 < tk_div_ty_41200; i_41490++) {
        int64_t binop_y_41513 = Ty_41194 * i_41490;
        
        for (int64_t i_41492 = 0; i_41492 < Rx_41197; i_41492++) {
            int64_t binop_y_41515 = Tx_41196 * i_41492;
            int64_t ltid_x_41494 = sext_i32_i64(ltid_pre_44292);
            int64_t ltid_y_41495 = sext_i32_i64(ltid_pre_44293);
            int32_t ltid_flat_41496 = local_tid_44288;
            int64_t k_41514 = ltid_x_41494 + binop_y_41513;
            int64_t j_41516 = ltid_y_41495 + binop_y_41515;
            int64_t gtid_41517 = jjj_41215 + j_41516;
            int64_t B_row_idx_41518 = kk_41445 + k_41514;
            bool binop_x_41519 = slt64(gtid_41517, i32_res_28901);
            bool binop_y_41520 = slt64(B_row_idx_41518, i32_res_28895);
            bool cond_41521 = binop_x_41519 && binop_y_41520;
            float B_elem_41522;
            
            if (cond_41521) {
                float B_elem_41524 = ((__global
                                       float *) mem_42853)[B_row_idx_41518 *
                                                           i32_res_28901 +
                                                           gtid_41517];
                
                B_elem_41522 = B_elem_41524;
            } else {
                B_elem_41522 = 0.0F;
            }
            
            bool cond_41526 = slt64(k_41514, Tk_41198);
            int64_t b_loc_ind_41527;
            
            if (cond_41526) {
                int64_t binop_y_41528 = TxRx_41201 * k_41514;
                int64_t loc_fi_41529 = j_41516 + binop_y_41528;
                
                b_loc_ind_41527 = loc_fi_41529;
            } else {
                b_loc_ind_41527 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41527) && slt64(b_loc_ind_41527,
                                                             b_loc_szz_41206)) {
                ((__local float *) mem_43128)[b_loc_ind_41527] = B_elem_41522;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43281[Ry_41195];
    float mem_43285[Rx_41197];
    float mem_43295[Ry_41195 * Rx_41197];
    float loop_mem_43297[Ry_41195 * Rx_41197];
    float mem_param_43268[Ry_41195 * Rx_41197];
    
    for (int32_t i_10 = 0; i_10 < Ry_41195 * Rx_41197; i_10++)
        mem_param_43268[i_10] = loop_mem_43215[i_10];
    for (int64_t i_41534 = 0; i_41534 < Tk_41198; i_41534++) {
        int64_t cmpop_x_41536 = kk_41445 + i_41534;
        bool cond_41537 = slt64(cmpop_x_41536, i32_res_28895);
        float mem_43864[Ry_41195 * Rx_41197];
        
        if (cond_41537) {
            int64_t binop_y_41575 = TxRx_41201 * i_41534;
            int64_t bytes_43270 = (int64_t) 4 * Ry_41195;
            int64_t bytes_43272 = (int64_t) 4 * Rx_41197;
            int64_t ltid_y_41540 = sext_i32_i64(ltid_pre_44292);
            int64_t ltid_x_41538 = sext_i32_i64(ltid_pre_44293);
            int32_t ltid_flat_41539 = local_tid_44288;
            float mem_43271[Ry_41195];
            float mem_43273[Rx_41197];
            int64_t binop_x_41566 = Ry_41195 * ltid_y_41540;
            
            for (int64_t i_41564 = 0; i_41564 < Ry_41195; i_41564++) {
                int64_t binop_x_41567 = i_41564 + binop_x_41566;
                int64_t binop_y_41568 = Tk_41198 * binop_x_41567;
                int64_t a_loc_ind_41569 = i_41534 + binop_y_41568;
                
                for (int64_t i_44325 = 0; i_44325 < (int64_t) 1; i_44325++) {
                    mem_43271[i_41564 + i_44325] = ((__local
                                                     float *) mem_43126)[a_loc_ind_41569 +
                                                                         i_44325];
                }
            }
            
            int64_t binop_y_41577 = Rx_41197 * ltid_x_41538;
            
            for (int64_t i_41573 = 0; i_41573 < Rx_41197; i_41573++) {
                int64_t binop_x_41576 = i_41573 + binop_y_41575;
                int64_t b_loc_ind_41578 = binop_x_41576 + binop_y_41577;
                
                for (int64_t i_44327 = 0; i_44327 < (int64_t) 1; i_44327++) {
                    mem_43273[i_41573 + i_44327] = ((__local
                                                     float *) mem_43128)[b_loc_ind_41578 +
                                                                         i_44327];
                }
            }
            for (int64_t i_44328 = 0; i_44328 < Ry_41195; i_44328++) {
                mem_43281[i_44328] = mem_43271[i_44328];
            }
            for (int64_t i_44329 = 0; i_44329 < Rx_41197; i_44329++) {
                mem_43285[i_44329] = mem_43273[i_44329];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41585 = sext_i32_i64(ltid_pre_44292);
            int64_t ltid_x_41583 = sext_i32_i64(ltid_pre_44293);
            int32_t ltid_flat_41584 = local_tid_44288;
            int64_t binop_y_41628 = Ry_41195 * ltid_y_41585;
            int64_t binop_y_41632 = Rx_41197 * ltid_x_41583;
            
            for (int64_t i_41622 = 0; i_41622 < Ry_41195; i_41622++) {
                int64_t binop_x_41627 = iii_41214 + i_41622;
                int64_t cmpop_x_41629 = binop_x_41627 + binop_y_41628;
                bool binop_x_41630 = slt64(cmpop_x_41629, m_28886);
                
                for (int64_t i_41625 = 0; i_41625 < Rx_41197; i_41625++) {
                    int64_t binop_x_41631 = jjj_41215 + i_41625;
                    int64_t cmpop_x_41633 = binop_x_41631 + binop_y_41632;
                    bool binop_y_41634 = slt64(cmpop_x_41633, i32_res_28901);
                    bool cond_41635 = binop_x_41630 && binop_y_41634;
                    
                    if (cond_41635) {
                        float a_41637 = mem_43281[i_41622];
                        float c_41639 = mem_param_43268[i_41622 * Rx_41197 +
                                                        i_41625];
                        bool isnan_res_41642;
                        
                        isnan_res_41642 = futrts_isnan32(a_41637);
                        
                        float defunc_1_f_res_41643;
                        
                        if (isnan_res_41642) {
                            defunc_1_f_res_41643 = 0.0F;
                        } else {
                            float b_41638 = mem_43285[i_41625];
                            float defunc_1_f_res_f_res_41644 = a_41637 *
                                  b_41638;
                            
                            defunc_1_f_res_41643 = defunc_1_f_res_f_res_41644;
                        }
                        
                        float defunc_1_op_res_41648 = c_41639 +
                              defunc_1_f_res_41643;
                        
                        mem_param_43268[i_41622 * Rx_41197 + i_41625] =
                            defunc_1_op_res_41648;
                    }
                }
            }
            for (int64_t i_44332 = 0; i_44332 < Ry_41195; i_44332++) {
                for (int64_t i_44333 = 0; i_44333 < Rx_41197; i_44333++) {
                    mem_43295[i_44332 * Rx_41197 + i_44333] =
                        mem_param_43268[i_44332 * Rx_41197 + i_44333];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44334 = 0; i_44334 < Ry_41195; i_44334++) {
                for (int64_t i_44335 = 0; i_44335 < Rx_41197; i_44335++) {
                    mem_43864[i_44334 * Rx_41197 + i_44335] =
                        mem_43295[i_44334 * Rx_41197 + i_44335];
                }
            }
        } else {
            for (int64_t i_44336 = 0; i_44336 < Ry_41195; i_44336++) {
                for (int64_t i_44337 = 0; i_44337 < Rx_41197; i_44337++) {
                    mem_43864[i_44336 * Rx_41197 + i_44337] =
                        mem_param_43268[i_44336 * Rx_41197 + i_44337];
                }
            }
        }
        
        float mem_param_tmp_44322[Ry_41195 * Rx_41197];
        
        for (int32_t i_11 = 0; i_11 < Ry_41195 * Rx_41197; i_11++)
            mem_param_tmp_44322[i_11] = mem_43864[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41195 * Rx_41197; i_12++)
            mem_param_43268[i_12] = mem_param_tmp_44322[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41195 * Rx_41197; i_13++)
        loop_mem_43297[i_13] = mem_param_43268[i_13];
    
    int64_t reg_tile_i_44338 = squot64(sext_i32_i64(local_tid_44288), Tx_41196);
    int64_t reg_tile_i_44339 = sext_i32_i64(local_tid_44288) -
            squot64(sext_i32_i64(local_tid_44288), Tx_41196) * Tx_41196;
    int64_t tile_dim_start_44340 = Ry_41195 * (Ty_41194 * gid_y_41212 +
                                               reg_tile_i_44338);
    int64_t tile_dim_start_44341 = Rx_41197 * (Tx_41196 * gid_x_41211 +
                                               reg_tile_i_44339);
    
    for (int64_t nest_i_44342 = 0; nest_i_44342 < Ry_41195; nest_i_44342++) {
        for (int64_t nest_i_44343 = 0; nest_i_44343 < Rx_41197;
             nest_i_44343++) {
            if (slt64(tile_dim_start_44340 + nest_i_44342, m_28886) &&
                slt64(tile_dim_start_44341 + nest_i_44343, i32_res_28901)) {
                ((__global float *) mem_43300)[(tile_dim_start_44340 +
                                                nest_i_44342) * i32_res_28901 +
                                               (tile_dim_start_44341 +
                                                nest_i_44343)] =
                    loop_mem_43297[nest_i_44342 * Rx_41197 + nest_i_44343];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41194
    #undef Ry_41195
    #undef Tx_41196
    #undef Rx_41197
    #undef Tk_41198
    #undef tk_div_tx_41199
    #undef tk_div_ty_41200
    #undef TxRx_41201
    #undef TyRy_41202
    #undef a_loc_szz_41204
    #undef b_loc_szz_41206
}
__kernel void mainzisegmap_intragroup_41662(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43358_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43349_backing_aligned_1,
                                            int64_t m_28886,
                                            int64_t i32_res_28901,
                                            int64_t num_groups_y_41660,
                                            int64_t num_whole_tiles_41678,
                                            int64_t residual_input_41805,
                                            unsigned char cond_41806, __global
                                            unsigned char *defunc_3_map_res_mem_43310,
                                            __global unsigned char *mem_43339,
                                            __global unsigned char *mem_43366)
{
    #define tile_sizze_41657 (mainzitile_sizze_41656)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43358_backing_5 = (__local volatile
                                                           char *) mem_43358_backing_aligned_0;
    __local volatile char *restrict mem_43349_backing_0 = (__local volatile
                                                           char *) mem_43349_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44419;
    int32_t local_tid_44420;
    int64_t group_sizze_44423;
    int32_t wave_sizze_44422;
    int32_t group_tid_44421;
    
    global_tid_44419 = get_global_id(0);
    local_tid_44420 = get_local_id(0);
    group_sizze_44423 = get_local_size(0);
    wave_sizze_44422 = LOCKSTEP_WIDTH;
    group_tid_44421 = get_group_id(0);
    
    int32_t gid_flat_41662;
    
    gid_flat_41662 = group_tid_44421;
    
    int32_t ltid_pre_44424;
    
    ltid_pre_44424 = squot32(local_tid_44420, sext_i64_i32(tile_sizze_41657));
    
    int32_t ltid_pre_44425;
    
    ltid_pre_44425 = local_tid_44420 - squot32(local_tid_44420,
                                               sext_i64_i32(tile_sizze_41657)) *
        sext_i64_i32(tile_sizze_41657);
    
    int64_t gid_x_41654;
    
    gid_x_41654 = squot64(sext_i32_i64(group_tid_44421), num_groups_y_41660);
    
    int64_t gid_y_41655;
    
    gid_y_41655 = sext_i32_i64(group_tid_44421) -
        squot64(sext_i32_i64(group_tid_44421), num_groups_y_41660) *
        num_groups_y_41660;
    
    float mem_43344[1];
    int64_t ltid_y_41681 = sext_i32_i64(ltid_pre_44424);
    int64_t ltid_x_41679 = sext_i32_i64(ltid_pre_44425);
    int32_t ltid_flat_41680 = local_tid_44420;
    
    if (slt64(ltid_y_41681, tile_sizze_41657) && slt64(ltid_x_41679,
                                                       tile_sizze_41657)) {
        mem_43344[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41764 = gid_x_41654 * tile_sizze_41657;
    int64_t binop_x_41779 = gid_y_41655 * tile_sizze_41657;
    __local char *mem_43349;
    
    mem_43349 = (__local char *) mem_43349_backing_0;
    
    float accs_mem_43354[1];
    float mem_param_43345[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43345[i_1] = mem_43344[i_1];
    for (int64_t tile_id_41690 = 0; tile_id_41690 < num_whole_tiles_41678;
         tile_id_41690++) {
        int64_t binop_x_41762 = tile_sizze_41657 * tile_id_41690;
        int64_t ltid_y_41693 = sext_i32_i64(ltid_pre_44424);
        int64_t ltid_x_41691 = sext_i32_i64(ltid_pre_44425);
        int32_t ltid_flat_41692 = local_tid_44420;
        int64_t j_41763 = ltid_x_41691 + binop_x_41762;
        int64_t gtid_41765 = ltid_y_41693 + binop_x_41764;
        bool binop_x_41770 = slt64(j_41763, i32_res_28901);
        bool binop_y_41771 = slt64(gtid_41765, m_28886);
        bool cond_41772 = binop_x_41770 && binop_y_41771;
        float pre_41773;
        
        if (cond_41772) {
            float x_41774 = ((__global
                              float *) defunc_3_map_res_mem_43310)[gtid_41765 *
                                                                   i32_res_28901 +
                                                                   j_41763];
            
            pre_41773 = x_41774;
        } else {
            pre_41773 = 0.0F;
        }
        ((__local float *) mem_43349)[ltid_y_41693 * tile_sizze_41657 +
                                      ltid_x_41691] = pre_41773;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43353[1];
        int64_t ltid_y_41725 = sext_i32_i64(ltid_pre_44424);
        int64_t ltid_x_41723 = sext_i32_i64(ltid_pre_44425);
        int32_t ltid_flat_41724 = local_tid_44420;
        int64_t gtid_41778 = ltid_y_41725 + binop_x_41764;
        int64_t gtid_41780 = ltid_x_41723 + binop_x_41779;
        float acc_41783 = mem_param_43345[(int64_t) 0];
        bool binop_x_41787 = slt64(gtid_41778, m_28886);
        bool binop_y_41788 = slt64(gtid_41780, i32_res_28901);
        bool cond_41789 = binop_x_41787 && binop_y_41788;
        float acc_41790;
        
        if (cond_41789) {
            float x_41791;
            float redout_42802 = acc_41783;
            
            for (int64_t i_42803 = 0; i_42803 < tile_sizze_41657; i_42803++) {
                float x_41795 = ((__local float *) mem_43349)[ltid_y_41725 *
                                                              tile_sizze_41657 +
                                                              i_42803];
                int64_t slice_42831 = binop_x_41762 + i_42803;
                float x_41796 = ((__global float *) mem_43339)[slice_42831 *
                                                               (i32_res_28901 *
                                                                m_28886) +
                                                               gtid_41778 *
                                                               i32_res_28901 +
                                                               gtid_41780];
                float defunc_1_f_res_41797 = x_41795 * x_41796;
                float defunc_1_op_res_41794 = defunc_1_f_res_41797 +
                      redout_42802;
                float redout_tmp_44428 = defunc_1_op_res_41794;
                
                redout_42802 = redout_tmp_44428;
            }
            x_41791 = redout_42802;
            acc_41790 = x_41791;
        } else {
            acc_41790 = acc_41783;
        }
        mem_43353[(int64_t) 0] = acc_41790;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44426[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44426[i_2] = mem_43353[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43345[i_3] = mem_param_tmp_44426[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43354[i_4] = mem_param_43345[i_4];
    
    __local char *mem_43358;
    
    mem_43358 = (__local char *) mem_43358_backing_5;
    
    float mem_43362[1];
    float mem_43878[1];
    
    if (cond_41806) {
        mem_43878[(int64_t) 0] = accs_mem_43354[(int64_t) 0];
    } else {
        int64_t binop_x_41879 = tile_sizze_41657 * num_whole_tiles_41678;
        int64_t ltid_y_41809 = sext_i32_i64(ltid_pre_44424);
        int64_t ltid_x_41807 = sext_i32_i64(ltid_pre_44425);
        int32_t ltid_flat_41808 = local_tid_44420;
        int64_t j_41880 = ltid_x_41807 + binop_x_41879;
        int64_t gtid_41882 = binop_x_41764 + ltid_y_41809;
        bool binop_x_41887 = slt64(j_41880, i32_res_28901);
        bool binop_y_41888 = slt64(gtid_41882, m_28886);
        bool cond_41889 = binop_x_41887 && binop_y_41888;
        float pre_41890;
        
        if (cond_41889) {
            float x_41891 = ((__global
                              float *) defunc_3_map_res_mem_43310)[gtid_41882 *
                                                                   i32_res_28901 +
                                                                   j_41880];
            
            pre_41890 = x_41891;
        } else {
            pre_41890 = 0.0F;
        }
        ((__local float *) mem_43358)[ltid_y_41809 * tile_sizze_41657 +
                                      ltid_x_41807] = pre_41890;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41842 = sext_i32_i64(ltid_pre_44424);
        int64_t ltid_x_41840 = sext_i32_i64(ltid_pre_44425);
        int32_t ltid_flat_41841 = local_tid_44420;
        int64_t gtid_41896 = binop_x_41764 + ltid_y_41842;
        int64_t gtid_41898 = binop_x_41779 + ltid_x_41840;
        float acc_41901 = accs_mem_43354[(int64_t) 0];
        bool binop_x_41905 = slt64(gtid_41896, m_28886);
        bool binop_y_41906 = slt64(gtid_41898, i32_res_28901);
        bool cond_41907 = binop_x_41905 && binop_y_41906;
        float acc_41908;
        
        if (cond_41907) {
            float x_41909;
            float redout_42804 = acc_41901;
            
            for (int64_t i_42805 = 0; i_42805 < residual_input_41805;
                 i_42805++) {
                float x_41913 = ((__local float *) mem_43358)[ltid_y_41842 *
                                                              tile_sizze_41657 +
                                                              i_42805];
                int64_t slice_42832 = binop_x_41879 + i_42805;
                float x_41914 = ((__global float *) mem_43339)[slice_42832 *
                                                               (i32_res_28901 *
                                                                m_28886) +
                                                               gtid_41896 *
                                                               i32_res_28901 +
                                                               gtid_41898];
                float defunc_1_f_res_41915 = x_41913 * x_41914;
                float defunc_1_op_res_41912 = defunc_1_f_res_41915 +
                      redout_42804;
                float redout_tmp_44429 = defunc_1_op_res_41912;
                
                redout_42804 = redout_tmp_44429;
            }
            x_41909 = redout_42804;
            acc_41908 = x_41909;
        } else {
            acc_41908 = acc_41901;
        }
        mem_43362[(int64_t) 0] = acc_41908;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43878[(int64_t) 0] = mem_43362[(int64_t) 0];
    }
    
    int64_t thread_out_index_44430 = gid_x_41654 * tile_sizze_41657 +
            sext_i32_i64(ltid_pre_44424);
    int64_t thread_out_index_44431 = gid_y_41655 * tile_sizze_41657 +
            sext_i32_i64(ltid_pre_44425);
    
    if (slt64(thread_out_index_44430, m_28886) && slt64(thread_out_index_44431,
                                                        i32_res_28901)) {
        ((__global float *) mem_43366)[thread_out_index_44430 * i32_res_28901 +
                                       thread_out_index_44431] =
            mem_43878[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41657
}
__kernel void mainzisegmap_intragroup_41954(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43418_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43416_backing_aligned_1,
                                            int64_t N_28885, int64_t m_28886,
                                            int64_t i32_res_28901,
                                            int64_t gridDim_x_41948,
                                            int64_t full_tiles_41979,
                                            int64_t kk_42182, __global
                                            unsigned char *defunc_4_map_res_mem_43376,
                                            __global unsigned char *mem_43400,
                                            __global unsigned char *mem_43590)
{
    #define Ty_41935 (mainziTy_41932)
    #define Ry_41936 (mainziRy_41934)
    #define Tx_41937 (mainziTx_41931)
    #define Rx_41938 (mainziRx_41933)
    #define Tk_41939 (mainziTk_41930)
    #define tk_div_tx_41940 (sdiv_up64(mainziTk_41930, mainziTx_41931))
    #define tk_div_ty_41941 (sdiv_up64(mainziTk_41930, mainziTy_41932))
    #define TxRx_41942 (mainziTx_41931 * mainziRx_41933)
    #define TyRy_41943 (mainziTy_41932 * mainziRy_41934)
    #define a_loc_szz_41945 (mainziTk_41930 * (mainziTy_41932 * mainziRy_41934))
    #define b_loc_szz_41947 (mainziRx_41933 * (mainziTx_41931 * mainziTk_41930))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43418_backing_1 = (__local volatile
                                                           char *) mem_43418_backing_aligned_0;
    __local volatile char *restrict mem_43416_backing_0 = (__local volatile
                                                           char *) mem_43416_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44507;
    int32_t local_tid_44508;
    int64_t group_sizze_44511;
    int32_t wave_sizze_44510;
    int32_t group_tid_44509;
    
    global_tid_44507 = get_global_id(0);
    local_tid_44508 = get_local_id(0);
    group_sizze_44511 = get_local_size(0);
    wave_sizze_44510 = LOCKSTEP_WIDTH;
    group_tid_44509 = get_group_id(0);
    
    int32_t gid_flat_41954;
    
    gid_flat_41954 = group_tid_44509;
    
    int32_t ltid_pre_44512;
    
    ltid_pre_44512 = squot32(local_tid_44508, sext_i64_i32(Tx_41937));
    
    int32_t ltid_pre_44513;
    
    ltid_pre_44513 = local_tid_44508 - squot32(local_tid_44508,
                                               sext_i64_i32(Tx_41937)) *
        sext_i64_i32(Tx_41937);
    
    int64_t gid_y_41953;
    
    gid_y_41953 = squot64(sext_i32_i64(group_tid_44509), gridDim_x_41948);
    
    int64_t gid_x_41952;
    
    gid_x_41952 = sext_i32_i64(group_tid_44509) -
        squot64(sext_i32_i64(group_tid_44509), gridDim_x_41948) *
        gridDim_x_41948;
    
    int64_t iii_41955;
    
    iii_41955 = TyRy_41943 * gid_y_41953;
    
    int64_t jjj_41956 = TxRx_41942 * gid_x_41952;
    float mem_43414[Ry_41936 * Rx_41938];
    int64_t ltid_y_41959 = sext_i32_i64(ltid_pre_44512);
    int64_t ltid_x_41957 = sext_i32_i64(ltid_pre_44513);
    int32_t ltid_flat_41958 = local_tid_44508;
    float mem_43405[Ry_41936 * Rx_41938];
    
    for (int64_t i_41970 = 0; i_41970 < Ry_41936; i_41970++) {
        for (int64_t i_41973 = 0; i_41973 < Rx_41938; i_41973++) {
            mem_43405[i_41970 * Rx_41938 + i_41973] = 0.0F;
        }
    }
    for (int64_t i_44516 = 0; i_44516 < Ry_41936; i_44516++) {
        for (int64_t i_44517 = 0; i_44517 < Rx_41938; i_44517++) {
            mem_43414[i_44516 * Rx_41938 + i_44517] = mem_43405[i_44516 *
                                                                Rx_41938 +
                                                                i_44517];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43416;
    
    mem_43416 = (__local char *) mem_43416_backing_0;
    
    __local char *mem_43418;
    
    mem_43418 = (__local char *) mem_43418_backing_1;
    
    float mem_43489[Ry_41936];
    float mem_43493[Rx_41938];
    float loop_mem_43505[Ry_41936 * Rx_41938];
    float mem_param_43419[Ry_41936 * Rx_41938];
    
    for (int32_t i_2 = 0; i_2 < Ry_41936 * Rx_41938; i_2++)
        mem_param_43419[i_2] = mem_43414[i_2];
    for (int64_t i_41980 = 0; i_41980 < full_tiles_41979; i_41980++) {
        int64_t kk_41984 = Tk_41939 * i_41980;
        
        for (int64_t i_41985 = 0; i_41985 < Ry_41936; i_41985++) {
            int64_t binop_y_42008 = Ty_41935 * i_41985;
            
            for (int64_t i_41987 = 0; i_41987 < tk_div_tx_41940; i_41987++) {
                int64_t binop_y_42006 = Tx_41937 * i_41987;
                int64_t ltid_x_41989 = sext_i32_i64(ltid_pre_44512);
                int64_t ltid_y_41990 = sext_i32_i64(ltid_pre_44513);
                int32_t ltid_flat_41991 = local_tid_44508;
                int64_t k_42007 = ltid_y_41990 + binop_y_42006;
                int64_t i_42009 = ltid_x_41989 + binop_y_42008;
                int64_t gtid_42010 = iii_41955 + i_42009;
                int64_t A_col_idx_42011 = kk_41984 + k_42007;
                bool cond_42012 = slt64(gtid_42010, m_28886);
                float A_elem_42013;
                
                if (cond_42012) {
                    float A_elem_42015 = ((__global
                                           float *) defunc_4_map_res_mem_43376)[gtid_42010 *
                                                                                i32_res_28901 +
                                                                                A_col_idx_42011];
                    
                    A_elem_42013 = A_elem_42015;
                } else {
                    A_elem_42013 = 0.0F;
                }
                
                bool cond_42017 = slt64(k_42007, Tk_41939);
                int64_t a_loc_ind_42018;
                
                if (cond_42017) {
                    int64_t binop_y_42019 = Tk_41939 * i_42009;
                    int64_t loc_fi_42020 = k_42007 + binop_y_42019;
                    
                    a_loc_ind_42018 = loc_fi_42020;
                } else {
                    a_loc_ind_42018 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_42018) &&
                    slt64(a_loc_ind_42018, a_loc_szz_41945)) {
                    ((__local float *) mem_43416)[a_loc_ind_42018] =
                        A_elem_42013;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42025 = 0; i_42025 < tk_div_ty_41941; i_42025++) {
            int64_t binop_y_42046 = Ty_41935 * i_42025;
            
            for (int64_t i_42027 = 0; i_42027 < Rx_41938; i_42027++) {
                int64_t binop_y_42048 = Tx_41937 * i_42027;
                int64_t ltid_x_42029 = sext_i32_i64(ltid_pre_44512);
                int64_t ltid_y_42030 = sext_i32_i64(ltid_pre_44513);
                int32_t ltid_flat_42031 = local_tid_44508;
                int64_t k_42047 = ltid_x_42029 + binop_y_42046;
                int64_t j_42049 = ltid_y_42030 + binop_y_42048;
                int64_t gtid_42050 = jjj_41956 + j_42049;
                int64_t B_row_idx_42051 = kk_41984 + k_42047;
                bool cond_42052 = slt64(gtid_42050, N_28885);
                float B_elem_42053;
                
                if (cond_42052) {
                    float B_elem_42055 = ((__global
                                           float *) mem_43400)[B_row_idx_42051 *
                                                               N_28885 +
                                                               gtid_42050];
                    
                    B_elem_42053 = B_elem_42055;
                } else {
                    B_elem_42053 = 0.0F;
                }
                
                bool cond_42057 = slt64(k_42047, Tk_41939);
                int64_t b_loc_ind_42058;
                
                if (cond_42057) {
                    int64_t binop_y_42059 = TxRx_41942 * k_42047;
                    int64_t loc_fi_42060 = j_42049 + binop_y_42059;
                    
                    b_loc_ind_42058 = loc_fi_42060;
                } else {
                    b_loc_ind_42058 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_42058) &&
                    slt64(b_loc_ind_42058, b_loc_szz_41947)) {
                    ((__local float *) mem_43418)[b_loc_ind_42058] =
                        B_elem_42053;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43504[Ry_41936 * Rx_41938];
        float mem_param_43476[Ry_41936 * Rx_41938];
        
        for (int32_t i_3 = 0; i_3 < Ry_41936 * Rx_41938; i_3++)
            mem_param_43476[i_3] = mem_param_43419[i_3];
        for (int64_t i_42065 = 0; i_42065 < Tk_41939; i_42065++) {
            int64_t binop_y_42104 = TxRx_41942 * i_42065;
            int64_t ltid_y_42069 = sext_i32_i64(ltid_pre_44512);
            int64_t ltid_x_42067 = sext_i32_i64(ltid_pre_44513);
            int32_t ltid_flat_42068 = local_tid_44508;
            float mem_43479[Ry_41936];
            float mem_43481[Rx_41938];
            int64_t binop_x_42095 = Ry_41936 * ltid_y_42069;
            
            for (int64_t i_42093 = 0; i_42093 < Ry_41936; i_42093++) {
                int64_t binop_x_42096 = i_42093 + binop_x_42095;
                int64_t binop_y_42097 = Tk_41939 * binop_x_42096;
                int64_t a_loc_ind_42098 = i_42065 + binop_y_42097;
                
                for (int64_t i_44529 = 0; i_44529 < (int64_t) 1; i_44529++) {
                    mem_43479[i_42093 + i_44529] = ((__local
                                                     float *) mem_43416)[a_loc_ind_42098 +
                                                                         i_44529];
                }
            }
            
            int64_t binop_y_42106 = Rx_41938 * ltid_x_42067;
            
            for (int64_t i_42102 = 0; i_42102 < Rx_41938; i_42102++) {
                int64_t binop_x_42105 = i_42102 + binop_y_42104;
                int64_t b_loc_ind_42107 = binop_x_42105 + binop_y_42106;
                
                for (int64_t i_44531 = 0; i_44531 < (int64_t) 1; i_44531++) {
                    mem_43481[i_42102 + i_44531] = ((__local
                                                     float *) mem_43418)[b_loc_ind_42107 +
                                                                         i_44531];
                }
            }
            for (int64_t i_44532 = 0; i_44532 < Ry_41936; i_44532++) {
                mem_43489[i_44532] = mem_43479[i_44532];
            }
            for (int64_t i_44533 = 0; i_44533 < Rx_41938; i_44533++) {
                mem_43493[i_44533] = mem_43481[i_44533];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43503[Ry_41936 * Rx_41938];
            int64_t ltid_y_42114 = sext_i32_i64(ltid_pre_44512);
            int64_t ltid_x_42112 = sext_i32_i64(ltid_pre_44513);
            int32_t ltid_flat_42113 = local_tid_44508;
            int64_t binop_y_42155 = Ry_41936 * ltid_y_42114;
            int64_t binop_y_42159 = Rx_41938 * ltid_x_42112;
            
            for (int64_t i_42149 = 0; i_42149 < Ry_41936; i_42149++) {
                int64_t binop_x_42154 = iii_41955 + i_42149;
                int64_t cmpop_x_42156 = binop_x_42154 + binop_y_42155;
                bool binop_x_42157 = slt64(cmpop_x_42156, m_28886);
                
                for (int64_t i_42152 = 0; i_42152 < Rx_41938; i_42152++) {
                    int64_t binop_x_42158 = jjj_41956 + i_42152;
                    int64_t cmpop_x_42160 = binop_x_42158 + binop_y_42159;
                    bool binop_y_42161 = slt64(cmpop_x_42160, N_28885);
                    bool cond_42162 = binop_x_42157 && binop_y_42161;
                    
                    if (cond_42162) {
                        float a_42164 = mem_43489[i_42149];
                        float b_42165 = mem_43493[i_42152];
                        float c_42166 = mem_param_43476[i_42149 * Rx_41938 +
                                                        i_42152];
                        float defunc_1_f_res_42169 = a_42164 * b_42165;
                        float defunc_1_op_res_42173 = c_42166 +
                              defunc_1_f_res_42169;
                        
                        mem_param_43476[i_42149 * Rx_41938 + i_42152] =
                            defunc_1_op_res_42173;
                    }
                }
            }
            for (int64_t i_44536 = 0; i_44536 < Ry_41936; i_44536++) {
                for (int64_t i_44537 = 0; i_44537 < Rx_41938; i_44537++) {
                    mem_43503[i_44536 * Rx_41938 + i_44537] =
                        mem_param_43476[i_44536 * Rx_41938 + i_44537];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44526[Ry_41936 * Rx_41938];
            
            for (int32_t i_4 = 0; i_4 < Ry_41936 * Rx_41938; i_4++)
                mem_param_tmp_44526[i_4] = mem_43503[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41936 * Rx_41938; i_5++)
                mem_param_43476[i_5] = mem_param_tmp_44526[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41936 * Rx_41938; i_6++)
            loop_mem_43504[i_6] = mem_param_43476[i_6];
        
        float mem_param_tmp_44518[Ry_41936 * Rx_41938];
        
        for (int32_t i_7 = 0; i_7 < Ry_41936 * Rx_41938; i_7++)
            mem_param_tmp_44518[i_7] = loop_mem_43504[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41936 * Rx_41938; i_8++)
            mem_param_43419[i_8] = mem_param_tmp_44518[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41936 * Rx_41938; i_9++)
        loop_mem_43505[i_9] = mem_param_43419[i_9];
    for (int64_t i_42183 = 0; i_42183 < Ry_41936; i_42183++) {
        int64_t binop_y_42208 = Ty_41935 * i_42183;
        
        for (int64_t i_42185 = 0; i_42185 < tk_div_tx_41940; i_42185++) {
            int64_t binop_y_42206 = Tx_41937 * i_42185;
            int64_t ltid_x_42187 = sext_i32_i64(ltid_pre_44512);
            int64_t ltid_y_42188 = sext_i32_i64(ltid_pre_44513);
            int32_t ltid_flat_42189 = local_tid_44508;
            int64_t k_42207 = ltid_y_42188 + binop_y_42206;
            int64_t i_42209 = ltid_x_42187 + binop_y_42208;
            int64_t gtid_42210 = iii_41955 + i_42209;
            int64_t A_col_idx_42211 = kk_42182 + k_42207;
            bool binop_x_42212 = slt64(gtid_42210, m_28886);
            bool binop_y_42213 = slt64(A_col_idx_42211, i32_res_28901);
            bool cond_42214 = binop_x_42212 && binop_y_42213;
            float A_elem_42215;
            
            if (cond_42214) {
                float A_elem_42217 = ((__global
                                       float *) defunc_4_map_res_mem_43376)[gtid_42210 *
                                                                            i32_res_28901 +
                                                                            A_col_idx_42211];
                
                A_elem_42215 = A_elem_42217;
            } else {
                A_elem_42215 = 0.0F;
            }
            
            bool cond_42219 = slt64(k_42207, Tk_41939);
            int64_t a_loc_ind_42220;
            
            if (cond_42219) {
                int64_t binop_y_42221 = Tk_41939 * i_42209;
                int64_t loc_fi_42222 = k_42207 + binop_y_42221;
                
                a_loc_ind_42220 = loc_fi_42222;
            } else {
                a_loc_ind_42220 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_42220) && slt64(a_loc_ind_42220,
                                                             a_loc_szz_41945)) {
                ((__local float *) mem_43416)[a_loc_ind_42220] = A_elem_42215;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42227 = 0; i_42227 < tk_div_ty_41941; i_42227++) {
        int64_t binop_y_42250 = Ty_41935 * i_42227;
        
        for (int64_t i_42229 = 0; i_42229 < Rx_41938; i_42229++) {
            int64_t binop_y_42252 = Tx_41937 * i_42229;
            int64_t ltid_x_42231 = sext_i32_i64(ltid_pre_44512);
            int64_t ltid_y_42232 = sext_i32_i64(ltid_pre_44513);
            int32_t ltid_flat_42233 = local_tid_44508;
            int64_t k_42251 = ltid_x_42231 + binop_y_42250;
            int64_t j_42253 = ltid_y_42232 + binop_y_42252;
            int64_t gtid_42254 = jjj_41956 + j_42253;
            int64_t B_row_idx_42255 = kk_42182 + k_42251;
            bool binop_x_42256 = slt64(gtid_42254, N_28885);
            bool binop_y_42257 = slt64(B_row_idx_42255, i32_res_28901);
            bool cond_42258 = binop_x_42256 && binop_y_42257;
            float B_elem_42259;
            
            if (cond_42258) {
                float B_elem_42261 = ((__global
                                       float *) mem_43400)[B_row_idx_42255 *
                                                           N_28885 +
                                                           gtid_42254];
                
                B_elem_42259 = B_elem_42261;
            } else {
                B_elem_42259 = 0.0F;
            }
            
            bool cond_42263 = slt64(k_42251, Tk_41939);
            int64_t b_loc_ind_42264;
            
            if (cond_42263) {
                int64_t binop_y_42265 = TxRx_41942 * k_42251;
                int64_t loc_fi_42266 = j_42253 + binop_y_42265;
                
                b_loc_ind_42264 = loc_fi_42266;
            } else {
                b_loc_ind_42264 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_42264) && slt64(b_loc_ind_42264,
                                                             b_loc_szz_41947)) {
                ((__local float *) mem_43418)[b_loc_ind_42264] = B_elem_42259;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43571[Ry_41936];
    float mem_43575[Rx_41938];
    float mem_43585[Ry_41936 * Rx_41938];
    float loop_mem_43587[Ry_41936 * Rx_41938];
    float mem_param_43558[Ry_41936 * Rx_41938];
    
    for (int32_t i_10 = 0; i_10 < Ry_41936 * Rx_41938; i_10++)
        mem_param_43558[i_10] = loop_mem_43505[i_10];
    for (int64_t i_42271 = 0; i_42271 < Tk_41939; i_42271++) {
        int64_t cmpop_x_42273 = kk_42182 + i_42271;
        bool cond_42274 = slt64(cmpop_x_42273, i32_res_28901);
        float mem_43894[Ry_41936 * Rx_41938];
        
        if (cond_42274) {
            int64_t binop_y_42312 = TxRx_41942 * i_42271;
            int64_t bytes_43560 = (int64_t) 4 * Ry_41936;
            int64_t bytes_43562 = (int64_t) 4 * Rx_41938;
            int64_t ltid_y_42277 = sext_i32_i64(ltid_pre_44512);
            int64_t ltid_x_42275 = sext_i32_i64(ltid_pre_44513);
            int32_t ltid_flat_42276 = local_tid_44508;
            float mem_43561[Ry_41936];
            float mem_43563[Rx_41938];
            int64_t binop_x_42303 = Ry_41936 * ltid_y_42277;
            
            for (int64_t i_42301 = 0; i_42301 < Ry_41936; i_42301++) {
                int64_t binop_x_42304 = i_42301 + binop_x_42303;
                int64_t binop_y_42305 = Tk_41939 * binop_x_42304;
                int64_t a_loc_ind_42306 = i_42271 + binop_y_42305;
                
                for (int64_t i_44545 = 0; i_44545 < (int64_t) 1; i_44545++) {
                    mem_43561[i_42301 + i_44545] = ((__local
                                                     float *) mem_43416)[a_loc_ind_42306 +
                                                                         i_44545];
                }
            }
            
            int64_t binop_y_42314 = Rx_41938 * ltid_x_42275;
            
            for (int64_t i_42310 = 0; i_42310 < Rx_41938; i_42310++) {
                int64_t binop_x_42313 = i_42310 + binop_y_42312;
                int64_t b_loc_ind_42315 = binop_x_42313 + binop_y_42314;
                
                for (int64_t i_44547 = 0; i_44547 < (int64_t) 1; i_44547++) {
                    mem_43563[i_42310 + i_44547] = ((__local
                                                     float *) mem_43418)[b_loc_ind_42315 +
                                                                         i_44547];
                }
            }
            for (int64_t i_44548 = 0; i_44548 < Ry_41936; i_44548++) {
                mem_43571[i_44548] = mem_43561[i_44548];
            }
            for (int64_t i_44549 = 0; i_44549 < Rx_41938; i_44549++) {
                mem_43575[i_44549] = mem_43563[i_44549];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42322 = sext_i32_i64(ltid_pre_44512);
            int64_t ltid_x_42320 = sext_i32_i64(ltid_pre_44513);
            int32_t ltid_flat_42321 = local_tid_44508;
            int64_t binop_y_42363 = Ry_41936 * ltid_y_42322;
            int64_t binop_y_42367 = Rx_41938 * ltid_x_42320;
            
            for (int64_t i_42357 = 0; i_42357 < Ry_41936; i_42357++) {
                int64_t binop_x_42362 = iii_41955 + i_42357;
                int64_t cmpop_x_42364 = binop_x_42362 + binop_y_42363;
                bool binop_x_42365 = slt64(cmpop_x_42364, m_28886);
                
                for (int64_t i_42360 = 0; i_42360 < Rx_41938; i_42360++) {
                    int64_t binop_x_42366 = jjj_41956 + i_42360;
                    int64_t cmpop_x_42368 = binop_x_42366 + binop_y_42367;
                    bool binop_y_42369 = slt64(cmpop_x_42368, N_28885);
                    bool cond_42370 = binop_x_42365 && binop_y_42369;
                    
                    if (cond_42370) {
                        float a_42372 = mem_43571[i_42357];
                        float b_42373 = mem_43575[i_42360];
                        float c_42374 = mem_param_43558[i_42357 * Rx_41938 +
                                                        i_42360];
                        float defunc_1_f_res_42377 = a_42372 * b_42373;
                        float defunc_1_op_res_42381 = c_42374 +
                              defunc_1_f_res_42377;
                        
                        mem_param_43558[i_42357 * Rx_41938 + i_42360] =
                            defunc_1_op_res_42381;
                    }
                }
            }
            for (int64_t i_44552 = 0; i_44552 < Ry_41936; i_44552++) {
                for (int64_t i_44553 = 0; i_44553 < Rx_41938; i_44553++) {
                    mem_43585[i_44552 * Rx_41938 + i_44553] =
                        mem_param_43558[i_44552 * Rx_41938 + i_44553];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44554 = 0; i_44554 < Ry_41936; i_44554++) {
                for (int64_t i_44555 = 0; i_44555 < Rx_41938; i_44555++) {
                    mem_43894[i_44554 * Rx_41938 + i_44555] =
                        mem_43585[i_44554 * Rx_41938 + i_44555];
                }
            }
        } else {
            for (int64_t i_44556 = 0; i_44556 < Ry_41936; i_44556++) {
                for (int64_t i_44557 = 0; i_44557 < Rx_41938; i_44557++) {
                    mem_43894[i_44556 * Rx_41938 + i_44557] =
                        mem_param_43558[i_44556 * Rx_41938 + i_44557];
                }
            }
        }
        
        float mem_param_tmp_44542[Ry_41936 * Rx_41938];
        
        for (int32_t i_11 = 0; i_11 < Ry_41936 * Rx_41938; i_11++)
            mem_param_tmp_44542[i_11] = mem_43894[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41936 * Rx_41938; i_12++)
            mem_param_43558[i_12] = mem_param_tmp_44542[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41936 * Rx_41938; i_13++)
        loop_mem_43587[i_13] = mem_param_43558[i_13];
    
    int64_t reg_tile_i_44558 = squot64(sext_i32_i64(local_tid_44508), Tx_41937);
    int64_t reg_tile_i_44559 = sext_i32_i64(local_tid_44508) -
            squot64(sext_i32_i64(local_tid_44508), Tx_41937) * Tx_41937;
    int64_t tile_dim_start_44560 = Ry_41936 * (Ty_41935 * gid_y_41953 +
                                               reg_tile_i_44558);
    int64_t tile_dim_start_44561 = Rx_41938 * (Tx_41937 * gid_x_41952 +
                                               reg_tile_i_44559);
    
    for (int64_t nest_i_44562 = 0; nest_i_44562 < Ry_41936; nest_i_44562++) {
        for (int64_t nest_i_44563 = 0; nest_i_44563 < Rx_41938;
             nest_i_44563++) {
            if (slt64(tile_dim_start_44560 + nest_i_44562, m_28886) &&
                slt64(tile_dim_start_44561 + nest_i_44563, N_28885)) {
                ((__global float *) mem_43590)[(tile_dim_start_44560 +
                                                nest_i_44562) * N_28885 +
                                               (tile_dim_start_44561 +
                                                nest_i_44563)] =
                    loop_mem_43587[nest_i_44562 * Rx_41938 + nest_i_44563];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41935
    #undef Ry_41936
    #undef Tx_41937
    #undef Rx_41938
    #undef Tk_41939
    #undef tk_div_tx_41940
    #undef tk_div_ty_41941
    #undef TxRx_41942
    #undef TyRy_41943
    #undef a_loc_szz_41945
    #undef b_loc_szz_41947
}
__kernel void mainzisegmap_intragroup_42388(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43663_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43656_backing_aligned_1,
                                            int64_t m_28886, int32_t n_28889,
                                            float hfrac_28891,
                                            int64_t i32_res_28895,
                                            int32_t k2p2_28897,
                                            int64_t num_whole_tiles_42410,
                                            int64_t residual_input_42499,
                                            unsigned char cond_42500, __global
                                            unsigned char *mem_43642, __global
                                            unsigned char *mem_43645, __global
                                            unsigned char *mem_43676, __global
                                            unsigned char *mem_43678, __global
                                            unsigned char *mem_43680)
{
    #define segmap_group_sizze_39858 (mainzisegmap_group_sizze_39827)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43663_backing_5 = (__local volatile
                                                           char *) mem_43663_backing_aligned_0;
    __local volatile char *restrict mem_43656_backing_0 = (__local volatile
                                                           char *) mem_43656_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44731;
    int32_t local_tid_44732;
    int64_t group_sizze_44735;
    int32_t wave_sizze_44734;
    int32_t group_tid_44733;
    
    global_tid_44731 = get_global_id(0);
    local_tid_44732 = get_local_id(0);
    group_sizze_44735 = get_local_size(0);
    wave_sizze_44734 = LOCKSTEP_WIDTH;
    group_tid_44733 = get_group_id(0);
    
    int32_t gid_flat_42388;
    
    gid_flat_42388 = group_tid_44733;
    
    int32_t ltid_pre_44736;
    
    ltid_pre_44736 = local_tid_44732;
    
    int64_t gid_42387;
    
    gid_42387 = sext_i32_i64(group_tid_44733);
    
    int64_t binop_x_42395;
    
    binop_x_42395 = segmap_group_sizze_39858 * gid_42387;
    
    int32_t mem_43649[1];
    int64_t ltid_42389 = sext_i32_i64(ltid_pre_44736);
    int32_t ltid_flat_42390 = local_tid_44732;
    int64_t gtid_42396 = ltid_42389 + binop_x_42395;
    bool cond_42397 = slt64(gtid_42396, m_28886);
    int32_t pre_42398;
    
    if (cond_42397) {
        int32_t defunc_0_f_res_42400;
        int32_t redout_42812 = 0;
        
        for (int32_t i_42834 = 0; i_42834 < n_28889; i_42834++) {
            int64_t i_42813 = sext_i32_i64(i_42834);
            float x_42404 = ((__global float *) mem_43642)[i_42813 * m_28886 +
                                                           gtid_42396];
            bool isnan_res_42405;
            
            isnan_res_42405 = futrts_isnan32(x_42404);
            
            bool cond_42406 = !isnan_res_42405;
            int32_t defunc_0_f_res_42407 = btoi_bool_i32(cond_42406);
            int32_t defunc_1_op_res_42403 = add32(defunc_0_f_res_42407,
                                                  redout_42812);
            int32_t redout_tmp_44737 = defunc_1_op_res_42403;
            
            redout_42812 = redout_tmp_44737;
        }
        defunc_0_f_res_42400 = redout_42812;
        pre_42398 = defunc_0_f_res_42400;
    } else {
        pre_42398 = 0;
    }
    mem_43649[(int64_t) 0] = pre_42398;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43652[1];
    int64_t ltid_42411 = sext_i32_i64(ltid_pre_44736);
    int32_t ltid_flat_42412 = local_tid_44732;
    
    mem_43652[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43656;
    
    mem_43656 = (__local char *) mem_43656_backing_0;
    
    float accs_mem_43660[1];
    float mem_param_43653[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43653[i_1] = mem_43652[i_1];
    for (int64_t tile_id_42418 = 0; tile_id_42418 < num_whole_tiles_42410;
         tile_id_42418++) {
        int64_t binop_x_42463 = segmap_group_sizze_39858 * tile_id_42418;
        int64_t ltid_42419 = sext_i32_i64(ltid_pre_44736);
        int32_t ltid_flat_42420 = local_tid_44732;
        int64_t j_42464 = ltid_42419 + binop_x_42463;
        bool cond_42468 = slt64(j_42464, i32_res_28895);
        int32_t pre_42469;
        
        if (cond_42468) {
            int32_t index_primexp_42770 = sext_i64_i32(j_42464);
            
            pre_42469 = index_primexp_42770;
        } else {
            pre_42469 = 0;
        }
        ((__local int32_t *) mem_43656)[ltid_42419] = pre_42469;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43659[1];
        int64_t ltid_42438 = sext_i32_i64(ltid_pre_44736);
        int32_t ltid_flat_42439 = local_tid_44732;
        int64_t gtid_42474 = binop_x_42395 + ltid_42438;
        float acc_42476 = mem_param_43653[(int64_t) 0];
        bool cond_42477 = slt64(gtid_42474, m_28886);
        float acc_42478;
        
        if (cond_42477) {
            int32_t defunc_0_f_res_42475 = mem_43649[(int64_t) 0];
            float x_42479;
            float redout_42814 = acc_42476;
            
            for (int64_t i_42815 = 0; i_42815 < segmap_group_sizze_39858;
                 i_42815++) {
                int32_t x_42483 = ((__local int32_t *) mem_43656)[i_42815];
                bool cond_42484 = slt32(x_42483, defunc_0_f_res_42475);
                float defunc_0_f_res_42485;
                
                if (cond_42484) {
                    int64_t i_42486 = sext_i32_i64(x_42483);
                    float defunc_0_f_res_t_res_42487 = ((__global
                                                         float *) mem_43645)[i_42486 *
                                                                             m_28886 +
                                                                             gtid_42474];
                    
                    defunc_0_f_res_42485 = defunc_0_f_res_t_res_42487;
                } else {
                    defunc_0_f_res_42485 = 0.0F;
                }
                
                float defunc_0_f_res_42488 = defunc_0_f_res_42485 *
                      defunc_0_f_res_42485;
                float defunc_1_op_res_42482 = defunc_0_f_res_42488 +
                      redout_42814;
                float redout_tmp_44740 = defunc_1_op_res_42482;
                
                redout_42814 = redout_tmp_44740;
            }
            x_42479 = redout_42814;
            acc_42478 = x_42479;
        } else {
            acc_42478 = acc_42476;
        }
        mem_43659[(int64_t) 0] = acc_42478;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44738[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44738[i_2] = mem_43659[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43653[i_3] = mem_param_tmp_44738[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43660[i_4] = mem_param_43653[i_4];
    
    __local char *mem_43663;
    
    mem_43663 = (__local char *) mem_43663_backing_5;
    
    float mem_43666[1];
    float mem_43907[1];
    
    if (cond_42500) {
        mem_43907[(int64_t) 0] = accs_mem_43660[(int64_t) 0];
    } else {
        int64_t binop_x_42510 = segmap_group_sizze_39858 *
                num_whole_tiles_42410;
        int64_t ltid_42501 = sext_i32_i64(ltid_pre_44736);
        int32_t ltid_flat_42502 = local_tid_44732;
        int64_t j_42511 = ltid_42501 + binop_x_42510;
        bool cond_42515 = slt64(j_42511, i32_res_28895);
        int32_t pre_42516;
        
        if (cond_42515) {
            int32_t index_primexp_42771 = sext_i64_i32(j_42511);
            
            pre_42516 = index_primexp_42771;
        } else {
            pre_42516 = 0;
        }
        ((__local int32_t *) mem_43663)[ltid_42501] = pre_42516;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42521 = sext_i32_i64(ltid_pre_44736);
        int32_t ltid_flat_42522 = local_tid_44732;
        int64_t gtid_42529 = binop_x_42395 + ltid_42521;
        float acc_42531 = accs_mem_43660[(int64_t) 0];
        bool cond_42532 = slt64(gtid_42529, m_28886);
        float acc_42533;
        
        if (cond_42532) {
            int32_t defunc_0_f_res_42530 = mem_43649[(int64_t) 0];
            float x_42534;
            float redout_42816 = acc_42531;
            
            for (int64_t i_42817 = 0; i_42817 < residual_input_42499;
                 i_42817++) {
                int32_t x_42538 = ((__local int32_t *) mem_43663)[i_42817];
                bool cond_42539 = slt32(x_42538, defunc_0_f_res_42530);
                float defunc_0_f_res_42540;
                
                if (cond_42539) {
                    int64_t i_42541 = sext_i32_i64(x_42538);
                    float defunc_0_f_res_t_res_42542 = ((__global
                                                         float *) mem_43645)[i_42541 *
                                                                             m_28886 +
                                                                             gtid_42529];
                    
                    defunc_0_f_res_42540 = defunc_0_f_res_t_res_42542;
                } else {
                    defunc_0_f_res_42540 = 0.0F;
                }
                
                float defunc_0_f_res_42543 = defunc_0_f_res_42540 *
                      defunc_0_f_res_42540;
                float defunc_1_op_res_42537 = defunc_0_f_res_42543 +
                      redout_42816;
                float redout_tmp_44741 = defunc_1_op_res_42537;
                
                redout_42816 = redout_tmp_44741;
            }
            x_42534 = redout_42816;
            acc_42533 = x_42534;
        } else {
            acc_42533 = acc_42531;
        }
        mem_43666[(int64_t) 0] = acc_42533;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43907[(int64_t) 0] = mem_43666[(int64_t) 0];
    }
    
    int32_t mem_43670[1];
    int32_t mem_43672[1];
    float mem_43674[1];
    int64_t ltid_42546 = sext_i32_i64(ltid_pre_44736);
    int32_t ltid_flat_42547 = local_tid_44732;
    int64_t gtid_42557 = binop_x_42395 + ltid_42546;
    bool cond_42559 = slt64(gtid_42557, m_28886);
    int32_t postlude_42560;
    int32_t postlude_42561;
    float postlude_42562;
    
    if (cond_42559) {
        float defunc_0_f_res_42558 = mem_43907[(int64_t) 0];
        int32_t defunc_0_f_res_42563 = mem_43649[(int64_t) 0];
        int32_t r32_arg_42564 = sub32(defunc_0_f_res_42563, k2p2_28897);
        float i32_res_42565 = sitofp_i32_f32(r32_arg_42564);
        float sqrt_arg_42566 = defunc_0_f_res_42558 / i32_res_42565;
        float sqrt_res_42567;
        
        sqrt_res_42567 = futrts_sqrt32(sqrt_arg_42566);
        
        float i32_res_42568 = sitofp_i32_f32(defunc_0_f_res_42563);
        float t32_arg_42569 = hfrac_28891 * i32_res_42568;
        int32_t f32_res_42570 = fptosi_f32_i32(t32_arg_42569);
        
        postlude_42560 = f32_res_42570;
        postlude_42561 = defunc_0_f_res_42563;
        postlude_42562 = sqrt_res_42567;
    } else {
        postlude_42560 = 0;
        postlude_42561 = 0;
        postlude_42562 = 0.0F;
    }
    mem_43670[(int64_t) 0] = postlude_42560;
    mem_43672[(int64_t) 0] = postlude_42561;
    mem_43674[(int64_t) 0] = postlude_42562;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44732) + segmap_group_sizze_39858 *
              sext_i32_i64(group_tid_44733), m_28886)) {
        ((__global int32_t *) mem_43676)[sext_i32_i64(local_tid_44732) +
                                         segmap_group_sizze_39858 *
                                         sext_i32_i64(group_tid_44733)] =
            mem_43670[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44732) + segmap_group_sizze_39858 *
              sext_i32_i64(group_tid_44733), m_28886)) {
        ((__global int32_t *) mem_43678)[sext_i32_i64(local_tid_44732) +
                                         segmap_group_sizze_39858 *
                                         sext_i32_i64(group_tid_44733)] =
            mem_43672[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44732) + segmap_group_sizze_39858 *
              sext_i32_i64(group_tid_44733), m_28886)) {
        ((__global float *) mem_43680)[sext_i32_i64(local_tid_44732) +
                                       segmap_group_sizze_39858 *
                                       sext_i32_i64(group_tid_44733)] =
            mem_43674[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_39858
}
__kernel void mainzisegmap_intragroup_42578(__global int *global_failure,
                                            __local volatile
                                            int64_t *mem_43729_backing_aligned_0,
                                            __local volatile
                                            int64_t *mem_43722_backing_aligned_1,
                                            int64_t N_28885, int64_t m_28886,
                                            int64_t i32_res_29256,
                                            int64_t num_whole_tiles_42598,
                                            int64_t residual_input_42697,
                                            unsigned char cond_42698, __global
                                            unsigned char *defunc_4_map_res_mem_43638,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43704,
                                            __global
                                            unsigned char *defunc_3_map_res_mem_43705,
                                            __global unsigned char *mem_43735)
{
    #define segmap_group_sizze_40095 (mainzisegmap_group_sizze_40076)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43729_backing_5 = (__local volatile
                                                           char *) mem_43729_backing_aligned_0;
    __local volatile char *restrict mem_43722_backing_0 = (__local volatile
                                                           char *) mem_43722_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44915;
    int32_t local_tid_44916;
    int64_t group_sizze_44919;
    int32_t wave_sizze_44918;
    int32_t group_tid_44917;
    
    global_tid_44915 = get_global_id(0);
    local_tid_44916 = get_local_id(0);
    group_sizze_44919 = get_local_size(0);
    wave_sizze_44918 = LOCKSTEP_WIDTH;
    group_tid_44917 = get_group_id(0);
    
    int32_t gid_flat_42578;
    
    gid_flat_42578 = group_tid_44917;
    
    int32_t ltid_pre_44920;
    
    ltid_pre_44920 = local_tid_44916;
    
    int64_t gid_42577;
    
    gid_42577 = sext_i32_i64(group_tid_44917);
    
    int64_t binop_x_42587;
    
    binop_x_42587 = segmap_group_sizze_40095 * gid_42577;
    
    int32_t mem_43713[1];
    int32_t mem_43715[1];
    int64_t ltid_42579 = sext_i32_i64(ltid_pre_44920);
    int32_t ltid_flat_42580 = local_tid_44916;
    int64_t gtid_42588 = ltid_42579 + binop_x_42587;
    bool cond_42589 = slt64(gtid_42588, m_28886);
    int32_t pre_42590;
    int32_t pre_42591;
    
    if (cond_42589) {
        int32_t x_42592 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_42588];
        int32_t x_42593 = ((__global
                            int32_t *) defunc_3_map_res_mem_43704)[gtid_42588];
        
        pre_42590 = x_42592;
        pre_42591 = x_42593;
    } else {
        pre_42590 = 0;
        pre_42591 = 0;
    }
    mem_43713[(int64_t) 0] = pre_42590;
    mem_43715[(int64_t) 0] = pre_42591;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43718[1];
    int64_t ltid_42599 = sext_i32_i64(ltid_pre_44920);
    int32_t ltid_flat_42600 = local_tid_44916;
    
    mem_43718[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43722;
    
    mem_43722 = (__local char *) mem_43722_backing_0;
    
    float accs_mem_43726[1];
    float mem_param_43719[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43719[i_1] = mem_43718[i_1];
    for (int64_t tile_id_42606 = 0; tile_id_42606 < num_whole_tiles_42598;
         tile_id_42606++) {
        int64_t binop_x_42655 = segmap_group_sizze_40095 * tile_id_42606;
        int64_t ltid_42607 = sext_i32_i64(ltid_pre_44920);
        int32_t ltid_flat_42608 = local_tid_44916;
        int64_t j_42656 = ltid_42607 + binop_x_42655;
        bool cond_42661 = slt64(j_42656, i32_res_29256);
        int32_t pre_42662;
        
        if (cond_42661) {
            int32_t index_primexp_42772 = sext_i64_i32(j_42656);
            int32_t tile_elem_42663 = index_primexp_42772;
            
            pre_42662 = tile_elem_42663;
        } else {
            pre_42662 = 0;
        }
        ((__local int32_t *) mem_43722)[ltid_42607] = pre_42662;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43725[1];
        int64_t ltid_42627 = sext_i32_i64(ltid_pre_44920);
        int32_t ltid_flat_42628 = local_tid_44916;
        int64_t gtid_42667 = binop_x_42587 + ltid_42627;
        float acc_42670 = mem_param_43719[(int64_t) 0];
        bool cond_42671 = slt64(gtid_42667, m_28886);
        float acc_42672;
        
        if (cond_42671) {
            int32_t x_42668 = mem_43713[(int64_t) 0];
            int32_t x_42669 = mem_43715[(int64_t) 0];
            float x_42673;
            float redout_42818 = acc_42670;
            
            for (int64_t i_42819 = 0; i_42819 < segmap_group_sizze_40095;
                 i_42819++) {
                int32_t x_42677 = ((__local int32_t *) mem_43722)[i_42819];
                bool cond_42678 = slt32(x_42677, x_42669);
                float defunc_0_f_res_42679;
                
                if (cond_42678) {
                    int32_t x_42680 = add32(x_42668, x_42677);
                    int32_t x_42681 = sub32(x_42680, x_42669);
                    int32_t i_42682 = add32(1, x_42681);
                    int64_t i_42683 = sext_i32_i64(i_42682);
                    float defunc_0_f_res_t_res_42684 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_42667 *
                                                                                              N_28885 +
                                                                                              i_42683];
                    
                    defunc_0_f_res_42679 = defunc_0_f_res_t_res_42684;
                } else {
                    defunc_0_f_res_42679 = 0.0F;
                }
                
                float defunc_1_op_res_42676 = defunc_0_f_res_42679 +
                      redout_42818;
                float redout_tmp_44923 = defunc_1_op_res_42676;
                
                redout_42818 = redout_tmp_44923;
            }
            x_42673 = redout_42818;
            acc_42672 = x_42673;
        } else {
            acc_42672 = acc_42670;
        }
        mem_43725[(int64_t) 0] = acc_42672;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44921[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44921[i_2] = mem_43725[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43719[i_3] = mem_param_tmp_44921[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43726[i_4] = mem_param_43719[i_4];
    
    __local char *mem_43729;
    
    mem_43729 = (__local char *) mem_43729_backing_5;
    
    float mem_43732[1];
    float mem_43916[1];
    
    if (cond_42698) {
        mem_43916[(int64_t) 0] = accs_mem_43726[(int64_t) 0];
    } else {
        int64_t binop_x_42708 = segmap_group_sizze_40095 *
                num_whole_tiles_42598;
        int64_t ltid_42699 = sext_i32_i64(ltid_pre_44920);
        int32_t ltid_flat_42700 = local_tid_44916;
        int64_t j_42709 = ltid_42699 + binop_x_42708;
        bool cond_42714 = slt64(j_42709, i32_res_29256);
        int32_t pre_42715;
        
        if (cond_42714) {
            int32_t index_primexp_42773 = sext_i64_i32(j_42709);
            int32_t tile_elem_42716 = index_primexp_42773;
            
            pre_42715 = tile_elem_42716;
        } else {
            pre_42715 = 0;
        }
        ((__local int32_t *) mem_43729)[ltid_42699] = pre_42715;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42720 = sext_i32_i64(ltid_pre_44920);
        int32_t ltid_flat_42721 = local_tid_44916;
        int64_t gtid_42728 = binop_x_42587 + ltid_42720;
        float acc_42731 = accs_mem_43726[(int64_t) 0];
        bool cond_42732 = slt64(gtid_42728, m_28886);
        float acc_42733;
        
        if (cond_42732) {
            int32_t x_42729 = mem_43713[(int64_t) 0];
            int32_t x_42730 = mem_43715[(int64_t) 0];
            float x_42734;
            float redout_42820 = acc_42731;
            
            for (int64_t i_42821 = 0; i_42821 < residual_input_42697;
                 i_42821++) {
                int32_t x_42738 = ((__local int32_t *) mem_43729)[i_42821];
                bool cond_42739 = slt32(x_42738, x_42730);
                float defunc_0_f_res_42740;
                
                if (cond_42739) {
                    int32_t x_42741 = add32(x_42729, x_42738);
                    int32_t x_42742 = sub32(x_42741, x_42730);
                    int32_t i_42743 = add32(1, x_42742);
                    int64_t i_42744 = sext_i32_i64(i_42743);
                    float defunc_0_f_res_t_res_42745 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_42728 *
                                                                                              N_28885 +
                                                                                              i_42744];
                    
                    defunc_0_f_res_42740 = defunc_0_f_res_t_res_42745;
                } else {
                    defunc_0_f_res_42740 = 0.0F;
                }
                
                float defunc_1_op_res_42737 = defunc_0_f_res_42740 +
                      redout_42820;
                float redout_tmp_44924 = defunc_1_op_res_42737;
                
                redout_42820 = redout_tmp_44924;
            }
            x_42734 = redout_42820;
            acc_42733 = x_42734;
        } else {
            acc_42733 = acc_42731;
        }
        mem_43732[(int64_t) 0] = acc_42733;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43916[(int64_t) 0] = mem_43732[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44916) + segmap_group_sizze_40095 *
              sext_i32_i64(group_tid_44917), m_28886)) {
        ((__global float *) mem_43735)[sext_i32_i64(local_tid_44916) +
                                       segmap_group_sizze_40095 *
                                       sext_i32_i64(group_tid_44917)] =
            mem_43916[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_40095
}
__kernel void mainzisegred_large_38070(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44184_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44182_backing_aligned_1,
                                       int64_t N_28885, int64_t i32_res_28895,
                                       int64_t i32_res_28901,
                                       int64_t num_groups_38209,
                                       int64_t groups_per_segment_44168,
                                       int64_t elements_per_thread_44169,
                                       int64_t virt_num_groups_44170,
                                       int64_t threads_per_segment_44172,
                                       __global unsigned char *images_mem_42841,
                                       __global
                                       unsigned char *binop_p_mem_42850,
                                       __global unsigned char *mem_42991,
                                       __global unsigned char *mem_42996,
                                       __global
                                       unsigned char *group_res_arr_mem_44173,
                                       __global
                                       unsigned char *mainzicounter_mem_44175)
{
    #define segred_group_sizze_38208 (mainzisegred_group_sizze_38064)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44184_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44184_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44182_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44182_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44177;
    int32_t local_tid_44178;
    int64_t group_sizze_44181;
    int32_t wave_sizze_44180;
    int32_t group_tid_44179;
    
    global_tid_44177 = get_global_id(0);
    local_tid_44178 = get_local_id(0);
    group_sizze_44181 = get_local_size(0);
    wave_sizze_44180 = LOCKSTEP_WIDTH;
    group_tid_44179 = get_group_id(0);
    
    int32_t phys_tid_38070;
    
    phys_tid_38070 = global_tid_44177;
    
    __local char *red_arr_mem_44182;
    
    red_arr_mem_44182 = (__local char *) red_arr_mem_44182_backing_0;
    
    __local char *sync_arr_mem_44184;
    
    sync_arr_mem_44184 = (__local char *) sync_arr_mem_44184_backing_1;
    
    int32_t phys_group_id_44186;
    
    phys_group_id_44186 = get_group_id(0);
    for (int32_t i_44187 = 0; i_44187 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44170) - phys_group_id_44186,
                   sext_i64_i32(num_groups_38209)); i_44187++) {
        int32_t virt_group_id_44188 = phys_group_id_44186 + i_44187 *
                sext_i64_i32(num_groups_38209);
        int32_t flat_segment_id_44189 = squot32(virt_group_id_44188,
                                                sext_i64_i32(groups_per_segment_44168));
        int64_t global_tid_44190 = srem64(sext_i32_i64(virt_group_id_44188) *
                                          segred_group_sizze_38208 +
                                          sext_i32_i64(local_tid_44178),
                                          segred_group_sizze_38208 *
                                          groups_per_segment_44168);
        int64_t gtid_38057 = squot64(sext_i32_i64(flat_segment_id_44189),
                                     i32_res_28901 * i32_res_28901);
        int64_t gtid_38058 = squot64(sext_i32_i64(flat_segment_id_44189) -
                                     squot64(sext_i32_i64(flat_segment_id_44189),
                                             i32_res_28901 * i32_res_28901) *
                                     (i32_res_28901 * i32_res_28901),
                                     i32_res_28901);
        int64_t gtid_38059 = sext_i32_i64(flat_segment_id_44189) -
                squot64(sext_i32_i64(flat_segment_id_44189), i32_res_28901 *
                        i32_res_28901) * (i32_res_28901 * i32_res_28901) -
                squot64(sext_i32_i64(flat_segment_id_44189) -
                        squot64(sext_i32_i64(flat_segment_id_44189),
                                i32_res_28901 * i32_res_28901) *
                        (i32_res_28901 * i32_res_28901), i32_res_28901) *
                i32_res_28901;
        int64_t gtid_38069;
        float x_acc_44191;
        int64_t chunk_sizze_44192;
        
        chunk_sizze_44192 = smin64(elements_per_thread_44169,
                                   sdiv_up64(i32_res_28895 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44190)),
                                             threads_per_segment_44172));
        
        float x_38212;
        float x_38213;
        
        // neutral-initialise the accumulators
        {
            x_acc_44191 = 0.0F;
        }
        for (int64_t i_44196 = 0; i_44196 < chunk_sizze_44192; i_44196++) {
            gtid_38069 = sext_i32_i64(sext_i64_i32(global_tid_44190)) +
                threads_per_segment_44172 * i_44196;
            // apply map function
            {
                float x_38218 = ((__global
                                  float *) images_mem_42841)[gtid_38057 *
                                                             N_28885 +
                                                             gtid_38069];
                float x_38219 = ((__global
                                  float *) binop_p_mem_42850)[gtid_38058 *
                                                              N_28885 +
                                                              gtid_38069];
                float x_38220 = ((__global float *) mem_42991)[gtid_38059 *
                                                               N_28885 +
                                                               gtid_38069];
                float x_38221 = x_38219 * x_38220;
                bool isnan_res_38222;
                
                isnan_res_38222 = futrts_isnan32(x_38218);
                
                float y_38223;
                
                if (isnan_res_38222) {
                    y_38223 = 0.0F;
                } else {
                    y_38223 = 1.0F;
                }
                
                float defunc_2_f_res_38224 = x_38221 * y_38223;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_38212 = x_acc_44191;
                }
                // load new values
                {
                    x_38213 = defunc_2_f_res_38224;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_38214 = x_38212 + x_38213;
                    
                    // store in accumulator
                    {
                        x_acc_44191 = defunc_1_op_res_38214;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_38212 = x_acc_44191;
            ((__local
              float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178)] =
                x_38212;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44197;
        int32_t skip_waves_44198;
        
        skip_waves_44198 = 1;
        
        float x_44193;
        float x_44194;
        
        offset_44197 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44178,
                      sext_i64_i32(segred_group_sizze_38208))) {
                x_44193 = ((__local
                            float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178 +
                                                        offset_44197)];
            }
        }
        offset_44197 = 1;
        while (slt32(offset_44197, wave_sizze_44180)) {
            if (slt32(local_tid_44178 + offset_44197,
                      sext_i64_i32(segred_group_sizze_38208)) &&
                ((local_tid_44178 - squot32(local_tid_44178, wave_sizze_44180) *
                  wave_sizze_44180) & (2 * offset_44197 - 1)) == 0) {
                // read array element
                {
                    x_44194 = ((volatile __local
                                float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178 +
                                                            offset_44197)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44195 = x_44193 + x_44194;
                    
                    x_44193 = defunc_1_op_res_44195;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178)] =
                        x_44193;
                }
            }
            offset_44197 *= 2;
        }
        while (slt32(skip_waves_44198,
                     squot32(sext_i64_i32(segred_group_sizze_38208) +
                             wave_sizze_44180 - 1, wave_sizze_44180))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44197 = skip_waves_44198 * wave_sizze_44180;
            if (slt32(local_tid_44178 + offset_44197,
                      sext_i64_i32(segred_group_sizze_38208)) &&
                ((local_tid_44178 - squot32(local_tid_44178, wave_sizze_44180) *
                  wave_sizze_44180) == 0 && (squot32(local_tid_44178,
                                                     wave_sizze_44180) & (2 *
                                                                          skip_waves_44198 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44194 = ((__local
                                float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178 +
                                                            offset_44197)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44195 = x_44193 + x_44194;
                    
                    x_44193 = defunc_1_op_res_44195;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178)] =
                        x_44193;
                }
            }
            skip_waves_44198 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44178) == (int64_t) 0) {
                x_acc_44191 = x_44193;
            }
        }
        if (groups_per_segment_44168 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44178 == 0) {
                    ((__global float *) mem_42996)[gtid_38057 * (i32_res_28901 *
                                                                 i32_res_28901) +
                                                   gtid_38058 * i32_res_28901 +
                                                   gtid_38059] = x_acc_44191;
                }
            }
        } else {
            int32_t old_counter_44199;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44178 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44173)[sext_i32_i64(virt_group_id_44188) *
                                                        segred_group_sizze_38208] =
                        x_acc_44191;
                    mem_fence_global();
                    old_counter_44199 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44175)[sext_i32_i64(srem32(flat_segment_id_44189,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44184)[(int64_t) 0] =
                        old_counter_44199 == groups_per_segment_44168 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44200;
            
            is_last_group_44200 = ((__local
                                    bool *) sync_arr_mem_44184)[(int64_t) 0];
            if (is_last_group_44200) {
                if (local_tid_44178 == 0) {
                    old_counter_44199 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44175)[sext_i32_i64(srem32(flat_segment_id_44189,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44168));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44201 =
                            sdiv_up64(groups_per_segment_44168,
                                      segred_group_sizze_38208);
                    
                    x_38212 = 0.0F;
                    for (int64_t i_44202 = 0; i_44202 < read_per_thread_44201;
                         i_44202++) {
                        int64_t group_res_id_44203 =
                                sext_i32_i64(local_tid_44178) *
                                read_per_thread_44201 + i_44202;
                        int64_t index_of_group_res_44204 =
                                sext_i32_i64(flat_segment_id_44189) *
                                groups_per_segment_44168 + group_res_id_44203;
                        
                        if (slt64(group_res_id_44203,
                                  groups_per_segment_44168)) {
                            x_38213 = ((__global
                                        float *) group_res_arr_mem_44173)[index_of_group_res_44204 *
                                                                          segred_group_sizze_38208];
                            
                            float defunc_1_op_res_38214;
                            
                            defunc_1_op_res_38214 = x_38212 + x_38213;
                            x_38212 = defunc_1_op_res_38214;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178)] =
                    x_38212;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44205;
                    int32_t skip_waves_44206;
                    
                    skip_waves_44206 = 1;
                    
                    float x_44193;
                    float x_44194;
                    
                    offset_44205 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44178,
                                  sext_i64_i32(segred_group_sizze_38208))) {
                            x_44193 = ((__local
                                        float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178 +
                                                                    offset_44205)];
                        }
                    }
                    offset_44205 = 1;
                    while (slt32(offset_44205, wave_sizze_44180)) {
                        if (slt32(local_tid_44178 + offset_44205,
                                  sext_i64_i32(segred_group_sizze_38208)) &&
                            ((local_tid_44178 - squot32(local_tid_44178,
                                                        wave_sizze_44180) *
                              wave_sizze_44180) & (2 * offset_44205 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44194 = ((volatile __local
                                            float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178 +
                                                                        offset_44205)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44195 = x_44193 + x_44194;
                                
                                x_44193 = defunc_1_op_res_44195;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178)] =
                                    x_44193;
                            }
                        }
                        offset_44205 *= 2;
                    }
                    while (slt32(skip_waves_44206,
                                 squot32(sext_i64_i32(segred_group_sizze_38208) +
                                         wave_sizze_44180 - 1,
                                         wave_sizze_44180))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44205 = skip_waves_44206 * wave_sizze_44180;
                        if (slt32(local_tid_44178 + offset_44205,
                                  sext_i64_i32(segred_group_sizze_38208)) &&
                            ((local_tid_44178 - squot32(local_tid_44178,
                                                        wave_sizze_44180) *
                              wave_sizze_44180) == 0 &&
                             (squot32(local_tid_44178, wave_sizze_44180) & (2 *
                                                                            skip_waves_44206 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44194 = ((__local
                                            float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178 +
                                                                        offset_44205)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44195 = x_44193 + x_44194;
                                
                                x_44193 = defunc_1_op_res_44195;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44182)[sext_i32_i64(local_tid_44178)] =
                                    x_44193;
                            }
                        }
                        skip_waves_44206 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44178 == 0) {
                            ((__global float *) mem_42996)[gtid_38057 *
                                                           (i32_res_28901 *
                                                            i32_res_28901) +
                                                           gtid_38058 *
                                                           i32_res_28901 +
                                                           gtid_38059] =
                                x_44193;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38208
}
__kernel void mainzisegred_large_39117(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44381_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44379_backing_aligned_1,
                                       int64_t N_28885, int64_t i32_res_28895,
                                       int64_t i32_res_28901,
                                       int64_t num_groups_39170,
                                       int64_t groups_per_segment_44365,
                                       int64_t elements_per_thread_44366,
                                       int64_t virt_num_groups_44367,
                                       int64_t threads_per_segment_44369,
                                       __global unsigned char *images_mem_42841,
                                       __global
                                       unsigned char *binop_p_mem_42850,
                                       __global unsigned char *mem_43304,
                                       __global
                                       unsigned char *group_res_arr_mem_44370,
                                       __global
                                       unsigned char *mainzicounter_mem_44372)
{
    #define segred_group_sizze_39169 (mainzisegred_group_sizze_39111)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44381_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44381_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44379_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44379_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44374;
    int32_t local_tid_44375;
    int64_t group_sizze_44378;
    int32_t wave_sizze_44377;
    int32_t group_tid_44376;
    
    global_tid_44374 = get_global_id(0);
    local_tid_44375 = get_local_id(0);
    group_sizze_44378 = get_local_size(0);
    wave_sizze_44377 = LOCKSTEP_WIDTH;
    group_tid_44376 = get_group_id(0);
    
    int32_t phys_tid_39117;
    
    phys_tid_39117 = global_tid_44374;
    
    __local char *red_arr_mem_44379;
    
    red_arr_mem_44379 = (__local char *) red_arr_mem_44379_backing_0;
    
    __local char *sync_arr_mem_44381;
    
    sync_arr_mem_44381 = (__local char *) sync_arr_mem_44381_backing_1;
    
    int32_t phys_group_id_44383;
    
    phys_group_id_44383 = get_group_id(0);
    for (int32_t i_44384 = 0; i_44384 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44367) - phys_group_id_44383,
                   sext_i64_i32(num_groups_39170)); i_44384++) {
        int32_t virt_group_id_44385 = phys_group_id_44383 + i_44384 *
                sext_i64_i32(num_groups_39170);
        int32_t flat_segment_id_44386 = squot32(virt_group_id_44385,
                                                sext_i64_i32(groups_per_segment_44365));
        int64_t global_tid_44387 = srem64(sext_i32_i64(virt_group_id_44385) *
                                          segred_group_sizze_39169 +
                                          sext_i32_i64(local_tid_44375),
                                          segred_group_sizze_39169 *
                                          groups_per_segment_44365);
        int64_t gtid_39106 = squot64(sext_i32_i64(flat_segment_id_44386),
                                     i32_res_28901);
        int64_t gtid_39107 = sext_i32_i64(flat_segment_id_44386) -
                squot64(sext_i32_i64(flat_segment_id_44386), i32_res_28901) *
                i32_res_28901;
        int64_t gtid_39116;
        float x_acc_44388;
        int64_t chunk_sizze_44389;
        
        chunk_sizze_44389 = smin64(elements_per_thread_44366,
                                   sdiv_up64(i32_res_28895 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44387)),
                                             threads_per_segment_44369));
        
        float x_39173;
        float x_39174;
        
        // neutral-initialise the accumulators
        {
            x_acc_44388 = 0.0F;
        }
        for (int64_t i_44393 = 0; i_44393 < chunk_sizze_44389; i_44393++) {
            gtid_39116 = sext_i32_i64(sext_i64_i32(global_tid_44387)) +
                threads_per_segment_44369 * i_44393;
            // apply map function
            {
                float x_39179 = ((__global
                                  float *) images_mem_42841)[gtid_39106 *
                                                             N_28885 +
                                                             gtid_39116];
                bool isnan_res_39180;
                
                isnan_res_39180 = futrts_isnan32(x_39179);
                
                float defunc_1_f_res_39181;
                
                if (isnan_res_39180) {
                    defunc_1_f_res_39181 = 0.0F;
                } else {
                    float x_39178 = ((__global
                                      float *) binop_p_mem_42850)[gtid_39107 *
                                                                  N_28885 +
                                                                  gtid_39116];
                    float defunc_1_f_res_f_res_39182 = x_39178 * x_39179;
                    
                    defunc_1_f_res_39181 = defunc_1_f_res_f_res_39182;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_39173 = x_acc_44388;
                }
                // load new values
                {
                    x_39174 = defunc_1_f_res_39181;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39175 = x_39173 + x_39174;
                    
                    // store in accumulator
                    {
                        x_acc_44388 = defunc_1_op_res_39175;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39173 = x_acc_44388;
            ((__local
              float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375)] =
                x_39173;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44394;
        int32_t skip_waves_44395;
        
        skip_waves_44395 = 1;
        
        float x_44390;
        float x_44391;
        
        offset_44394 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44375,
                      sext_i64_i32(segred_group_sizze_39169))) {
                x_44390 = ((__local
                            float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375 +
                                                        offset_44394)];
            }
        }
        offset_44394 = 1;
        while (slt32(offset_44394, wave_sizze_44377)) {
            if (slt32(local_tid_44375 + offset_44394,
                      sext_i64_i32(segred_group_sizze_39169)) &&
                ((local_tid_44375 - squot32(local_tid_44375, wave_sizze_44377) *
                  wave_sizze_44377) & (2 * offset_44394 - 1)) == 0) {
                // read array element
                {
                    x_44391 = ((volatile __local
                                float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375 +
                                                            offset_44394)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44392 = x_44390 + x_44391;
                    
                    x_44390 = defunc_1_op_res_44392;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375)] =
                        x_44390;
                }
            }
            offset_44394 *= 2;
        }
        while (slt32(skip_waves_44395,
                     squot32(sext_i64_i32(segred_group_sizze_39169) +
                             wave_sizze_44377 - 1, wave_sizze_44377))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44394 = skip_waves_44395 * wave_sizze_44377;
            if (slt32(local_tid_44375 + offset_44394,
                      sext_i64_i32(segred_group_sizze_39169)) &&
                ((local_tid_44375 - squot32(local_tid_44375, wave_sizze_44377) *
                  wave_sizze_44377) == 0 && (squot32(local_tid_44375,
                                                     wave_sizze_44377) & (2 *
                                                                          skip_waves_44395 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44391 = ((__local
                                float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375 +
                                                            offset_44394)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44392 = x_44390 + x_44391;
                    
                    x_44390 = defunc_1_op_res_44392;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375)] =
                        x_44390;
                }
            }
            skip_waves_44395 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44375) == (int64_t) 0) {
                x_acc_44388 = x_44390;
            }
        }
        if (groups_per_segment_44365 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44375 == 0) {
                    ((__global float *) mem_43304)[gtid_39106 * i32_res_28901 +
                                                   gtid_39107] = x_acc_44388;
                }
            }
        } else {
            int32_t old_counter_44396;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44375 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44370)[sext_i32_i64(virt_group_id_44385) *
                                                        segred_group_sizze_39169] =
                        x_acc_44388;
                    mem_fence_global();
                    old_counter_44396 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44372)[sext_i32_i64(srem32(flat_segment_id_44386,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44381)[(int64_t) 0] =
                        old_counter_44396 == groups_per_segment_44365 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44397;
            
            is_last_group_44397 = ((__local
                                    bool *) sync_arr_mem_44381)[(int64_t) 0];
            if (is_last_group_44397) {
                if (local_tid_44375 == 0) {
                    old_counter_44396 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44372)[sext_i32_i64(srem32(flat_segment_id_44386,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44365));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44398 =
                            sdiv_up64(groups_per_segment_44365,
                                      segred_group_sizze_39169);
                    
                    x_39173 = 0.0F;
                    for (int64_t i_44399 = 0; i_44399 < read_per_thread_44398;
                         i_44399++) {
                        int64_t group_res_id_44400 =
                                sext_i32_i64(local_tid_44375) *
                                read_per_thread_44398 + i_44399;
                        int64_t index_of_group_res_44401 =
                                sext_i32_i64(flat_segment_id_44386) *
                                groups_per_segment_44365 + group_res_id_44400;
                        
                        if (slt64(group_res_id_44400,
                                  groups_per_segment_44365)) {
                            x_39174 = ((__global
                                        float *) group_res_arr_mem_44370)[index_of_group_res_44401 *
                                                                          segred_group_sizze_39169];
                            
                            float defunc_1_op_res_39175;
                            
                            defunc_1_op_res_39175 = x_39173 + x_39174;
                            x_39173 = defunc_1_op_res_39175;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375)] =
                    x_39173;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44402;
                    int32_t skip_waves_44403;
                    
                    skip_waves_44403 = 1;
                    
                    float x_44390;
                    float x_44391;
                    
                    offset_44402 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44375,
                                  sext_i64_i32(segred_group_sizze_39169))) {
                            x_44390 = ((__local
                                        float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375 +
                                                                    offset_44402)];
                        }
                    }
                    offset_44402 = 1;
                    while (slt32(offset_44402, wave_sizze_44377)) {
                        if (slt32(local_tid_44375 + offset_44402,
                                  sext_i64_i32(segred_group_sizze_39169)) &&
                            ((local_tid_44375 - squot32(local_tid_44375,
                                                        wave_sizze_44377) *
                              wave_sizze_44377) & (2 * offset_44402 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44391 = ((volatile __local
                                            float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375 +
                                                                        offset_44402)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44392 = x_44390 + x_44391;
                                
                                x_44390 = defunc_1_op_res_44392;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375)] =
                                    x_44390;
                            }
                        }
                        offset_44402 *= 2;
                    }
                    while (slt32(skip_waves_44403,
                                 squot32(sext_i64_i32(segred_group_sizze_39169) +
                                         wave_sizze_44377 - 1,
                                         wave_sizze_44377))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44402 = skip_waves_44403 * wave_sizze_44377;
                        if (slt32(local_tid_44375 + offset_44402,
                                  sext_i64_i32(segred_group_sizze_39169)) &&
                            ((local_tid_44375 - squot32(local_tid_44375,
                                                        wave_sizze_44377) *
                              wave_sizze_44377) == 0 &&
                             (squot32(local_tid_44375, wave_sizze_44377) & (2 *
                                                                            skip_waves_44403 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44391 = ((__local
                                            float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375 +
                                                                        offset_44402)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44392 = x_44390 + x_44391;
                                
                                x_44390 = defunc_1_op_res_44392;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44379)[sext_i32_i64(local_tid_44375)] =
                                    x_44390;
                            }
                        }
                        skip_waves_44403 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44375 == 0) {
                            ((__global float *) mem_43304)[gtid_39106 *
                                                           i32_res_28901 +
                                                           gtid_39107] =
                                x_44390;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39169
}
__kernel void mainzisegred_large_39254(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44469_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44467_backing_aligned_1,
                                       int64_t i32_res_28901,
                                       int64_t num_groups_39303,
                                       int64_t groups_per_segment_44453,
                                       int64_t elements_per_thread_44454,
                                       int64_t virt_num_groups_44455,
                                       int64_t threads_per_segment_44457,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43089,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43310,
                                       __global unsigned char *mem_43370,
                                       __global
                                       unsigned char *group_res_arr_mem_44458,
                                       __global
                                       unsigned char *mainzicounter_mem_44460)
{
    #define segred_group_sizze_39302 (mainzisegred_group_sizze_39248)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44469_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44469_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44467_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44467_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44462;
    int32_t local_tid_44463;
    int64_t group_sizze_44466;
    int32_t wave_sizze_44465;
    int32_t group_tid_44464;
    
    global_tid_44462 = get_global_id(0);
    local_tid_44463 = get_local_id(0);
    group_sizze_44466 = get_local_size(0);
    wave_sizze_44465 = LOCKSTEP_WIDTH;
    group_tid_44464 = get_group_id(0);
    
    int32_t phys_tid_39254;
    
    phys_tid_39254 = global_tid_44462;
    
    __local char *red_arr_mem_44467;
    
    red_arr_mem_44467 = (__local char *) red_arr_mem_44467_backing_0;
    
    __local char *sync_arr_mem_44469;
    
    sync_arr_mem_44469 = (__local char *) sync_arr_mem_44469_backing_1;
    
    int32_t phys_group_id_44471;
    
    phys_group_id_44471 = get_group_id(0);
    for (int32_t i_44472 = 0; i_44472 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44455) - phys_group_id_44471,
                   sext_i64_i32(num_groups_39303)); i_44472++) {
        int32_t virt_group_id_44473 = phys_group_id_44471 + i_44472 *
                sext_i64_i32(num_groups_39303);
        int32_t flat_segment_id_44474 = squot32(virt_group_id_44473,
                                                sext_i64_i32(groups_per_segment_44453));
        int64_t global_tid_44475 = srem64(sext_i32_i64(virt_group_id_44473) *
                                          segred_group_sizze_39302 +
                                          sext_i32_i64(local_tid_44463),
                                          segred_group_sizze_39302 *
                                          groups_per_segment_44453);
        int64_t gtid_39243 = squot64(sext_i32_i64(flat_segment_id_44474),
                                     i32_res_28901);
        int64_t gtid_39244 = sext_i32_i64(flat_segment_id_44474) -
                squot64(sext_i32_i64(flat_segment_id_44474), i32_res_28901) *
                i32_res_28901;
        int64_t gtid_39253;
        float x_acc_44476;
        int64_t chunk_sizze_44477;
        
        chunk_sizze_44477 = smin64(elements_per_thread_44454,
                                   sdiv_up64(i32_res_28901 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44475)),
                                             threads_per_segment_44457));
        
        float x_39306;
        float x_39307;
        
        // neutral-initialise the accumulators
        {
            x_acc_44476 = 0.0F;
        }
        for (int64_t i_44481 = 0; i_44481 < chunk_sizze_44477; i_44481++) {
            gtid_39253 = sext_i32_i64(sext_i64_i32(global_tid_44475)) +
                threads_per_segment_44457 * i_44481;
            // apply map function
            {
                float x_39312 = ((__global
                                  float *) defunc_3_map_res_mem_43310)[gtid_39243 *
                                                                       i32_res_28901 +
                                                                       gtid_39253];
                float x_39313 = ((__global
                                  float *) defunc_3_map_res_mem_43089)[gtid_39243 *
                                                                       (i32_res_28901 *
                                                                        i32_res_28901) +
                                                                       gtid_39244 *
                                                                       i32_res_28901 +
                                                                       gtid_39253];
                float defunc_1_f_res_39314 = x_39312 * x_39313;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39306 = x_acc_44476;
                }
                // load new values
                {
                    x_39307 = defunc_1_f_res_39314;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39308 = x_39306 + x_39307;
                    
                    // store in accumulator
                    {
                        x_acc_44476 = defunc_1_op_res_39308;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39306 = x_acc_44476;
            ((__local
              float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463)] =
                x_39306;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44482;
        int32_t skip_waves_44483;
        
        skip_waves_44483 = 1;
        
        float x_44478;
        float x_44479;
        
        offset_44482 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44463,
                      sext_i64_i32(segred_group_sizze_39302))) {
                x_44478 = ((__local
                            float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463 +
                                                        offset_44482)];
            }
        }
        offset_44482 = 1;
        while (slt32(offset_44482, wave_sizze_44465)) {
            if (slt32(local_tid_44463 + offset_44482,
                      sext_i64_i32(segred_group_sizze_39302)) &&
                ((local_tid_44463 - squot32(local_tid_44463, wave_sizze_44465) *
                  wave_sizze_44465) & (2 * offset_44482 - 1)) == 0) {
                // read array element
                {
                    x_44479 = ((volatile __local
                                float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463 +
                                                            offset_44482)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44480 = x_44478 + x_44479;
                    
                    x_44478 = defunc_1_op_res_44480;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463)] =
                        x_44478;
                }
            }
            offset_44482 *= 2;
        }
        while (slt32(skip_waves_44483,
                     squot32(sext_i64_i32(segred_group_sizze_39302) +
                             wave_sizze_44465 - 1, wave_sizze_44465))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44482 = skip_waves_44483 * wave_sizze_44465;
            if (slt32(local_tid_44463 + offset_44482,
                      sext_i64_i32(segred_group_sizze_39302)) &&
                ((local_tid_44463 - squot32(local_tid_44463, wave_sizze_44465) *
                  wave_sizze_44465) == 0 && (squot32(local_tid_44463,
                                                     wave_sizze_44465) & (2 *
                                                                          skip_waves_44483 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44479 = ((__local
                                float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463 +
                                                            offset_44482)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44480 = x_44478 + x_44479;
                    
                    x_44478 = defunc_1_op_res_44480;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463)] =
                        x_44478;
                }
            }
            skip_waves_44483 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44463) == (int64_t) 0) {
                x_acc_44476 = x_44478;
            }
        }
        if (groups_per_segment_44453 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44463 == 0) {
                    ((__global float *) mem_43370)[gtid_39243 * i32_res_28901 +
                                                   gtid_39244] = x_acc_44476;
                }
            }
        } else {
            int32_t old_counter_44484;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44463 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44458)[sext_i32_i64(virt_group_id_44473) *
                                                        segred_group_sizze_39302] =
                        x_acc_44476;
                    mem_fence_global();
                    old_counter_44484 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44460)[sext_i32_i64(srem32(flat_segment_id_44474,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44469)[(int64_t) 0] =
                        old_counter_44484 == groups_per_segment_44453 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44485;
            
            is_last_group_44485 = ((__local
                                    bool *) sync_arr_mem_44469)[(int64_t) 0];
            if (is_last_group_44485) {
                if (local_tid_44463 == 0) {
                    old_counter_44484 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44460)[sext_i32_i64(srem32(flat_segment_id_44474,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44453));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44486 =
                            sdiv_up64(groups_per_segment_44453,
                                      segred_group_sizze_39302);
                    
                    x_39306 = 0.0F;
                    for (int64_t i_44487 = 0; i_44487 < read_per_thread_44486;
                         i_44487++) {
                        int64_t group_res_id_44488 =
                                sext_i32_i64(local_tid_44463) *
                                read_per_thread_44486 + i_44487;
                        int64_t index_of_group_res_44489 =
                                sext_i32_i64(flat_segment_id_44474) *
                                groups_per_segment_44453 + group_res_id_44488;
                        
                        if (slt64(group_res_id_44488,
                                  groups_per_segment_44453)) {
                            x_39307 = ((__global
                                        float *) group_res_arr_mem_44458)[index_of_group_res_44489 *
                                                                          segred_group_sizze_39302];
                            
                            float defunc_1_op_res_39308;
                            
                            defunc_1_op_res_39308 = x_39306 + x_39307;
                            x_39306 = defunc_1_op_res_39308;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463)] =
                    x_39306;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44490;
                    int32_t skip_waves_44491;
                    
                    skip_waves_44491 = 1;
                    
                    float x_44478;
                    float x_44479;
                    
                    offset_44490 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44463,
                                  sext_i64_i32(segred_group_sizze_39302))) {
                            x_44478 = ((__local
                                        float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463 +
                                                                    offset_44490)];
                        }
                    }
                    offset_44490 = 1;
                    while (slt32(offset_44490, wave_sizze_44465)) {
                        if (slt32(local_tid_44463 + offset_44490,
                                  sext_i64_i32(segred_group_sizze_39302)) &&
                            ((local_tid_44463 - squot32(local_tid_44463,
                                                        wave_sizze_44465) *
                              wave_sizze_44465) & (2 * offset_44490 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44479 = ((volatile __local
                                            float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463 +
                                                                        offset_44490)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44480 = x_44478 + x_44479;
                                
                                x_44478 = defunc_1_op_res_44480;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463)] =
                                    x_44478;
                            }
                        }
                        offset_44490 *= 2;
                    }
                    while (slt32(skip_waves_44491,
                                 squot32(sext_i64_i32(segred_group_sizze_39302) +
                                         wave_sizze_44465 - 1,
                                         wave_sizze_44465))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44490 = skip_waves_44491 * wave_sizze_44465;
                        if (slt32(local_tid_44463 + offset_44490,
                                  sext_i64_i32(segred_group_sizze_39302)) &&
                            ((local_tid_44463 - squot32(local_tid_44463,
                                                        wave_sizze_44465) *
                              wave_sizze_44465) == 0 &&
                             (squot32(local_tid_44463, wave_sizze_44465) & (2 *
                                                                            skip_waves_44491 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44479 = ((__local
                                            float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463 +
                                                                        offset_44490)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44480 = x_44478 + x_44479;
                                
                                x_44478 = defunc_1_op_res_44480;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44467)[sext_i32_i64(local_tid_44463)] =
                                    x_44478;
                            }
                        }
                        skip_waves_44491 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44463 == 0) {
                            ((__global float *) mem_43370)[gtid_39243 *
                                                           i32_res_28901 +
                                                           gtid_39244] =
                                x_44478;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39302
}
__kernel void mainzisegred_large_39384(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44601_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44599_backing_aligned_1,
                                       int64_t N_28885, int64_t i32_res_28901,
                                       int64_t num_groups_39431,
                                       int64_t groups_per_segment_44585,
                                       int64_t elements_per_thread_44586,
                                       int64_t virt_num_groups_44587,
                                       int64_t threads_per_segment_44589,
                                       __global unsigned char *mem_42857,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43376,
                                       __global unsigned char *mem_43594,
                                       __global
                                       unsigned char *group_res_arr_mem_44590,
                                       __global
                                       unsigned char *mainzicounter_mem_44592)
{
    #define segred_group_sizze_39430 (mainzisegred_group_sizze_39378)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44601_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44601_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44599_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44599_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44594;
    int32_t local_tid_44595;
    int64_t group_sizze_44598;
    int32_t wave_sizze_44597;
    int32_t group_tid_44596;
    
    global_tid_44594 = get_global_id(0);
    local_tid_44595 = get_local_id(0);
    group_sizze_44598 = get_local_size(0);
    wave_sizze_44597 = LOCKSTEP_WIDTH;
    group_tid_44596 = get_group_id(0);
    
    int32_t phys_tid_39384;
    
    phys_tid_39384 = global_tid_44594;
    
    __local char *red_arr_mem_44599;
    
    red_arr_mem_44599 = (__local char *) red_arr_mem_44599_backing_0;
    
    __local char *sync_arr_mem_44601;
    
    sync_arr_mem_44601 = (__local char *) sync_arr_mem_44601_backing_1;
    
    int32_t phys_group_id_44603;
    
    phys_group_id_44603 = get_group_id(0);
    for (int32_t i_44604 = 0; i_44604 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44587) - phys_group_id_44603,
                   sext_i64_i32(num_groups_39431)); i_44604++) {
        int32_t virt_group_id_44605 = phys_group_id_44603 + i_44604 *
                sext_i64_i32(num_groups_39431);
        int32_t flat_segment_id_44606 = squot32(virt_group_id_44605,
                                                sext_i64_i32(groups_per_segment_44585));
        int64_t global_tid_44607 = srem64(sext_i32_i64(virt_group_id_44605) *
                                          segred_group_sizze_39430 +
                                          sext_i32_i64(local_tid_44595),
                                          segred_group_sizze_39430 *
                                          groups_per_segment_44585);
        int64_t gtid_39373 = squot64(sext_i32_i64(flat_segment_id_44606),
                                     N_28885);
        int64_t gtid_39374 = sext_i32_i64(flat_segment_id_44606) -
                squot64(sext_i32_i64(flat_segment_id_44606), N_28885) * N_28885;
        int64_t gtid_39383;
        float x_acc_44608;
        int64_t chunk_sizze_44609;
        
        chunk_sizze_44609 = smin64(elements_per_thread_44586,
                                   sdiv_up64(i32_res_28901 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44607)),
                                             threads_per_segment_44589));
        
        float x_39434;
        float x_39435;
        
        // neutral-initialise the accumulators
        {
            x_acc_44608 = 0.0F;
        }
        for (int64_t i_44613 = 0; i_44613 < chunk_sizze_44609; i_44613++) {
            gtid_39383 = sext_i32_i64(sext_i64_i32(global_tid_44607)) +
                threads_per_segment_44589 * i_44613;
            // apply map function
            {
                float x_39439 = ((__global
                                  float *) defunc_4_map_res_mem_43376)[gtid_39373 *
                                                                       i32_res_28901 +
                                                                       gtid_39383];
                float x_39440 = ((__global float *) mem_42857)[gtid_39374 *
                                                               i32_res_28901 +
                                                               gtid_39383];
                float defunc_1_f_res_39441 = x_39439 * x_39440;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39434 = x_acc_44608;
                }
                // load new values
                {
                    x_39435 = defunc_1_f_res_39441;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_39436 = x_39434 + x_39435;
                    
                    // store in accumulator
                    {
                        x_acc_44608 = defunc_1_op_res_39436;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39434 = x_acc_44608;
            ((__local
              float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595)] =
                x_39434;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44614;
        int32_t skip_waves_44615;
        
        skip_waves_44615 = 1;
        
        float x_44610;
        float x_44611;
        
        offset_44614 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44595,
                      sext_i64_i32(segred_group_sizze_39430))) {
                x_44610 = ((__local
                            float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595 +
                                                        offset_44614)];
            }
        }
        offset_44614 = 1;
        while (slt32(offset_44614, wave_sizze_44597)) {
            if (slt32(local_tid_44595 + offset_44614,
                      sext_i64_i32(segred_group_sizze_39430)) &&
                ((local_tid_44595 - squot32(local_tid_44595, wave_sizze_44597) *
                  wave_sizze_44597) & (2 * offset_44614 - 1)) == 0) {
                // read array element
                {
                    x_44611 = ((volatile __local
                                float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595 +
                                                            offset_44614)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44612 = x_44610 + x_44611;
                    
                    x_44610 = defunc_1_op_res_44612;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595)] =
                        x_44610;
                }
            }
            offset_44614 *= 2;
        }
        while (slt32(skip_waves_44615,
                     squot32(sext_i64_i32(segred_group_sizze_39430) +
                             wave_sizze_44597 - 1, wave_sizze_44597))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44614 = skip_waves_44615 * wave_sizze_44597;
            if (slt32(local_tid_44595 + offset_44614,
                      sext_i64_i32(segred_group_sizze_39430)) &&
                ((local_tid_44595 - squot32(local_tid_44595, wave_sizze_44597) *
                  wave_sizze_44597) == 0 && (squot32(local_tid_44595,
                                                     wave_sizze_44597) & (2 *
                                                                          skip_waves_44615 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44611 = ((__local
                                float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595 +
                                                            offset_44614)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44612 = x_44610 + x_44611;
                    
                    x_44610 = defunc_1_op_res_44612;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595)] =
                        x_44610;
                }
            }
            skip_waves_44615 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44595) == (int64_t) 0) {
                x_acc_44608 = x_44610;
            }
        }
        if (groups_per_segment_44585 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44595 == 0) {
                    ((__global float *) mem_43594)[gtid_39373 * N_28885 +
                                                   gtid_39374] = x_acc_44608;
                }
            }
        } else {
            int32_t old_counter_44616;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44595 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44590)[sext_i32_i64(virt_group_id_44605) *
                                                        segred_group_sizze_39430] =
                        x_acc_44608;
                    mem_fence_global();
                    old_counter_44616 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44592)[sext_i32_i64(srem32(flat_segment_id_44606,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44601)[(int64_t) 0] =
                        old_counter_44616 == groups_per_segment_44585 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44617;
            
            is_last_group_44617 = ((__local
                                    bool *) sync_arr_mem_44601)[(int64_t) 0];
            if (is_last_group_44617) {
                if (local_tid_44595 == 0) {
                    old_counter_44616 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44592)[sext_i32_i64(srem32(flat_segment_id_44606,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44585));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44618 =
                            sdiv_up64(groups_per_segment_44585,
                                      segred_group_sizze_39430);
                    
                    x_39434 = 0.0F;
                    for (int64_t i_44619 = 0; i_44619 < read_per_thread_44618;
                         i_44619++) {
                        int64_t group_res_id_44620 =
                                sext_i32_i64(local_tid_44595) *
                                read_per_thread_44618 + i_44619;
                        int64_t index_of_group_res_44621 =
                                sext_i32_i64(flat_segment_id_44606) *
                                groups_per_segment_44585 + group_res_id_44620;
                        
                        if (slt64(group_res_id_44620,
                                  groups_per_segment_44585)) {
                            x_39435 = ((__global
                                        float *) group_res_arr_mem_44590)[index_of_group_res_44621 *
                                                                          segred_group_sizze_39430];
                            
                            float defunc_1_op_res_39436;
                            
                            defunc_1_op_res_39436 = x_39434 + x_39435;
                            x_39434 = defunc_1_op_res_39436;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595)] =
                    x_39434;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44622;
                    int32_t skip_waves_44623;
                    
                    skip_waves_44623 = 1;
                    
                    float x_44610;
                    float x_44611;
                    
                    offset_44622 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44595,
                                  sext_i64_i32(segred_group_sizze_39430))) {
                            x_44610 = ((__local
                                        float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595 +
                                                                    offset_44622)];
                        }
                    }
                    offset_44622 = 1;
                    while (slt32(offset_44622, wave_sizze_44597)) {
                        if (slt32(local_tid_44595 + offset_44622,
                                  sext_i64_i32(segred_group_sizze_39430)) &&
                            ((local_tid_44595 - squot32(local_tid_44595,
                                                        wave_sizze_44597) *
                              wave_sizze_44597) & (2 * offset_44622 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44611 = ((volatile __local
                                            float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595 +
                                                                        offset_44622)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44612 = x_44610 + x_44611;
                                
                                x_44610 = defunc_1_op_res_44612;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595)] =
                                    x_44610;
                            }
                        }
                        offset_44622 *= 2;
                    }
                    while (slt32(skip_waves_44623,
                                 squot32(sext_i64_i32(segred_group_sizze_39430) +
                                         wave_sizze_44597 - 1,
                                         wave_sizze_44597))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44622 = skip_waves_44623 * wave_sizze_44597;
                        if (slt32(local_tid_44595 + offset_44622,
                                  sext_i64_i32(segred_group_sizze_39430)) &&
                            ((local_tid_44595 - squot32(local_tid_44595,
                                                        wave_sizze_44597) *
                              wave_sizze_44597) == 0 &&
                             (squot32(local_tid_44595, wave_sizze_44597) & (2 *
                                                                            skip_waves_44623 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44611 = ((__local
                                            float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595 +
                                                                        offset_44622)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44612 = x_44610 + x_44611;
                                
                                x_44610 = defunc_1_op_res_44612;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44599)[sext_i32_i64(local_tid_44595)] =
                                    x_44610;
                            }
                        }
                        skip_waves_44623 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44595 == 0) {
                            ((__global float *) mem_43594)[gtid_39373 *
                                                           N_28885 +
                                                           gtid_39374] =
                                x_44610;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39430
}
__kernel void mainzisegred_large_39950(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44853_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44851_backing_aligned_1,
                                       int64_t N_28885, int64_t i32_res_28895,
                                       int64_t num_groups_39997,
                                       int64_t groups_per_segment_44837,
                                       int64_t elements_per_thread_44838,
                                       int64_t virt_num_groups_44839,
                                       int64_t threads_per_segment_44841,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43638,
                                       __global unsigned char *mem_43692,
                                       __global unsigned char *mem_43695,
                                       __global
                                       unsigned char *group_res_arr_mem_44842,
                                       __global
                                       unsigned char *mainzicounter_mem_44844)
{
    #define segred_group_sizze_39996 (mainzisegred_group_sizze_39944)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44853_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44853_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44851_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44851_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44846;
    int32_t local_tid_44847;
    int64_t group_sizze_44850;
    int32_t wave_sizze_44849;
    int32_t group_tid_44848;
    
    global_tid_44846 = get_global_id(0);
    local_tid_44847 = get_local_id(0);
    group_sizze_44850 = get_local_size(0);
    wave_sizze_44849 = LOCKSTEP_WIDTH;
    group_tid_44848 = get_group_id(0);
    
    int32_t phys_tid_39950;
    
    phys_tid_39950 = global_tid_44846;
    
    __local char *red_arr_mem_44851;
    
    red_arr_mem_44851 = (__local char *) red_arr_mem_44851_backing_0;
    
    __local char *sync_arr_mem_44853;
    
    sync_arr_mem_44853 = (__local char *) sync_arr_mem_44853_backing_1;
    
    int32_t phys_group_id_44855;
    
    phys_group_id_44855 = get_group_id(0);
    for (int32_t i_44856 = 0; i_44856 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44839) - phys_group_id_44855,
                   sext_i64_i32(num_groups_39997)); i_44856++) {
        int32_t virt_group_id_44857 = phys_group_id_44855 + i_44856 *
                sext_i64_i32(num_groups_39997);
        int32_t flat_segment_id_44858 = squot32(virt_group_id_44857,
                                                sext_i64_i32(groups_per_segment_44837));
        int64_t global_tid_44859 = srem64(sext_i32_i64(virt_group_id_44857) *
                                          segred_group_sizze_39996 +
                                          sext_i32_i64(local_tid_44847),
                                          segred_group_sizze_39996 *
                                          groups_per_segment_44837);
        int64_t gtid_39941 = sext_i32_i64(flat_segment_id_44858);
        int64_t gtid_39949;
        float x_acc_44860;
        int64_t chunk_sizze_44861;
        
        chunk_sizze_44861 = smin64(elements_per_thread_44838,
                                   sdiv_up64(i32_res_28895 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44859)),
                                             threads_per_segment_44841));
        
        float x_40000;
        float x_40001;
        
        // neutral-initialise the accumulators
        {
            x_acc_44860 = 0.0F;
        }
        for (int64_t i_44865 = 0; i_44865 < chunk_sizze_44861; i_44865++) {
            gtid_39949 = sext_i32_i64(sext_i64_i32(global_tid_44859)) +
                threads_per_segment_44841 * i_44865;
            // apply map function
            {
                int32_t defunc_0_f_res_40004 = ((__global
                                                 int32_t *) mem_43692)[gtid_39941];
                int32_t index_primexp_40928 = sext_i64_i32(gtid_39949);
                bool cond_40006 = slt32(index_primexp_40928,
                                        defunc_0_f_res_40004);
                float defunc_0_f_res_40007;
                
                if (cond_40006) {
                    int64_t i_40008 = sext_i32_i64(index_primexp_40928);
                    float defunc_0_f_res_t_res_40009 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_39941 *
                                                                                              N_28885 +
                                                                                              i_40008];
                    
                    defunc_0_f_res_40007 = defunc_0_f_res_t_res_40009;
                } else {
                    defunc_0_f_res_40007 = 0.0F;
                }
                
                float defunc_0_f_res_40010 = defunc_0_f_res_40007 *
                      defunc_0_f_res_40007;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_40000 = x_acc_44860;
                }
                // load new values
                {
                    x_40001 = defunc_0_f_res_40010;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40002 = x_40000 + x_40001;
                    
                    // store in accumulator
                    {
                        x_acc_44860 = defunc_1_op_res_40002;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40000 = x_acc_44860;
            ((__local
              float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847)] =
                x_40000;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44866;
        int32_t skip_waves_44867;
        
        skip_waves_44867 = 1;
        
        float x_44862;
        float x_44863;
        
        offset_44866 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44847,
                      sext_i64_i32(segred_group_sizze_39996))) {
                x_44862 = ((__local
                            float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847 +
                                                        offset_44866)];
            }
        }
        offset_44866 = 1;
        while (slt32(offset_44866, wave_sizze_44849)) {
            if (slt32(local_tid_44847 + offset_44866,
                      sext_i64_i32(segred_group_sizze_39996)) &&
                ((local_tid_44847 - squot32(local_tid_44847, wave_sizze_44849) *
                  wave_sizze_44849) & (2 * offset_44866 - 1)) == 0) {
                // read array element
                {
                    x_44863 = ((volatile __local
                                float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847 +
                                                            offset_44866)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44864 = x_44862 + x_44863;
                    
                    x_44862 = defunc_1_op_res_44864;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847)] =
                        x_44862;
                }
            }
            offset_44866 *= 2;
        }
        while (slt32(skip_waves_44867,
                     squot32(sext_i64_i32(segred_group_sizze_39996) +
                             wave_sizze_44849 - 1, wave_sizze_44849))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44866 = skip_waves_44867 * wave_sizze_44849;
            if (slt32(local_tid_44847 + offset_44866,
                      sext_i64_i32(segred_group_sizze_39996)) &&
                ((local_tid_44847 - squot32(local_tid_44847, wave_sizze_44849) *
                  wave_sizze_44849) == 0 && (squot32(local_tid_44847,
                                                     wave_sizze_44849) & (2 *
                                                                          skip_waves_44867 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44863 = ((__local
                                float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847 +
                                                            offset_44866)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44864 = x_44862 + x_44863;
                    
                    x_44862 = defunc_1_op_res_44864;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847)] =
                        x_44862;
                }
            }
            skip_waves_44867 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44847) == (int64_t) 0) {
                x_acc_44860 = x_44862;
            }
        }
        if (groups_per_segment_44837 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44847 == 0) {
                    ((__global float *) mem_43695)[gtid_39941] = x_acc_44860;
                }
            }
        } else {
            int32_t old_counter_44868;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44847 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44842)[sext_i32_i64(virt_group_id_44857) *
                                                        segred_group_sizze_39996] =
                        x_acc_44860;
                    mem_fence_global();
                    old_counter_44868 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44844)[sext_i32_i64(srem32(flat_segment_id_44858,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44853)[(int64_t) 0] =
                        old_counter_44868 == groups_per_segment_44837 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44869;
            
            is_last_group_44869 = ((__local
                                    bool *) sync_arr_mem_44853)[(int64_t) 0];
            if (is_last_group_44869) {
                if (local_tid_44847 == 0) {
                    old_counter_44868 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44844)[sext_i32_i64(srem32(flat_segment_id_44858,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44837));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44870 =
                            sdiv_up64(groups_per_segment_44837,
                                      segred_group_sizze_39996);
                    
                    x_40000 = 0.0F;
                    for (int64_t i_44871 = 0; i_44871 < read_per_thread_44870;
                         i_44871++) {
                        int64_t group_res_id_44872 =
                                sext_i32_i64(local_tid_44847) *
                                read_per_thread_44870 + i_44871;
                        int64_t index_of_group_res_44873 =
                                sext_i32_i64(flat_segment_id_44858) *
                                groups_per_segment_44837 + group_res_id_44872;
                        
                        if (slt64(group_res_id_44872,
                                  groups_per_segment_44837)) {
                            x_40001 = ((__global
                                        float *) group_res_arr_mem_44842)[index_of_group_res_44873 *
                                                                          segred_group_sizze_39996];
                            
                            float defunc_1_op_res_40002;
                            
                            defunc_1_op_res_40002 = x_40000 + x_40001;
                            x_40000 = defunc_1_op_res_40002;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847)] =
                    x_40000;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44874;
                    int32_t skip_waves_44875;
                    
                    skip_waves_44875 = 1;
                    
                    float x_44862;
                    float x_44863;
                    
                    offset_44874 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44847,
                                  sext_i64_i32(segred_group_sizze_39996))) {
                            x_44862 = ((__local
                                        float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847 +
                                                                    offset_44874)];
                        }
                    }
                    offset_44874 = 1;
                    while (slt32(offset_44874, wave_sizze_44849)) {
                        if (slt32(local_tid_44847 + offset_44874,
                                  sext_i64_i32(segred_group_sizze_39996)) &&
                            ((local_tid_44847 - squot32(local_tid_44847,
                                                        wave_sizze_44849) *
                              wave_sizze_44849) & (2 * offset_44874 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44863 = ((volatile __local
                                            float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847 +
                                                                        offset_44874)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44864 = x_44862 + x_44863;
                                
                                x_44862 = defunc_1_op_res_44864;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847)] =
                                    x_44862;
                            }
                        }
                        offset_44874 *= 2;
                    }
                    while (slt32(skip_waves_44875,
                                 squot32(sext_i64_i32(segred_group_sizze_39996) +
                                         wave_sizze_44849 - 1,
                                         wave_sizze_44849))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44874 = skip_waves_44875 * wave_sizze_44849;
                        if (slt32(local_tid_44847 + offset_44874,
                                  sext_i64_i32(segred_group_sizze_39996)) &&
                            ((local_tid_44847 - squot32(local_tid_44847,
                                                        wave_sizze_44849) *
                              wave_sizze_44849) == 0 &&
                             (squot32(local_tid_44847, wave_sizze_44849) & (2 *
                                                                            skip_waves_44875 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44863 = ((__local
                                            float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847 +
                                                                        offset_44874)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44864 = x_44862 + x_44863;
                                
                                x_44862 = defunc_1_op_res_44864;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44851)[sext_i32_i64(local_tid_44847)] =
                                    x_44862;
                            }
                        }
                        skip_waves_44875 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44847 == 0) {
                            ((__global float *) mem_43695)[gtid_39941] =
                                x_44862;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39996
}
__kernel void mainzisegred_large_39971(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44793_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44791_backing_aligned_1,
                                       int64_t N_28885, int64_t i32_res_28895,
                                       int64_t num_groups_39983,
                                       int64_t groups_per_segment_44777,
                                       int64_t elements_per_thread_44778,
                                       int64_t virt_num_groups_44779,
                                       int64_t threads_per_segment_44781,
                                       __global unsigned char *images_mem_42841,
                                       __global unsigned char *mem_43692,
                                       __global
                                       unsigned char *group_res_arr_mem_44782,
                                       __global
                                       unsigned char *mainzicounter_mem_44784)
{
    #define segred_group_sizze_39982 (mainzisegred_group_sizze_39965)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44793_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44793_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44791_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44791_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44786;
    int32_t local_tid_44787;
    int64_t group_sizze_44790;
    int32_t wave_sizze_44789;
    int32_t group_tid_44788;
    
    global_tid_44786 = get_global_id(0);
    local_tid_44787 = get_local_id(0);
    group_sizze_44790 = get_local_size(0);
    wave_sizze_44789 = LOCKSTEP_WIDTH;
    group_tid_44788 = get_group_id(0);
    
    int32_t phys_tid_39971;
    
    phys_tid_39971 = global_tid_44786;
    
    __local char *red_arr_mem_44791;
    
    red_arr_mem_44791 = (__local char *) red_arr_mem_44791_backing_0;
    
    __local char *sync_arr_mem_44793;
    
    sync_arr_mem_44793 = (__local char *) sync_arr_mem_44793_backing_1;
    
    int32_t phys_group_id_44795;
    
    phys_group_id_44795 = get_group_id(0);
    for (int32_t i_44796 = 0; i_44796 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44779) - phys_group_id_44795,
                   sext_i64_i32(num_groups_39983)); i_44796++) {
        int32_t virt_group_id_44797 = phys_group_id_44795 + i_44796 *
                sext_i64_i32(num_groups_39983);
        int32_t flat_segment_id_44798 = squot32(virt_group_id_44797,
                                                sext_i64_i32(groups_per_segment_44777));
        int64_t global_tid_44799 = srem64(sext_i32_i64(virt_group_id_44797) *
                                          segred_group_sizze_39982 +
                                          sext_i32_i64(local_tid_44787),
                                          segred_group_sizze_39982 *
                                          groups_per_segment_44777);
        int64_t gtid_39962 = sext_i32_i64(flat_segment_id_44798);
        int64_t gtid_39970;
        int32_t x_acc_44800;
        int64_t chunk_sizze_44801;
        
        chunk_sizze_44801 = smin64(elements_per_thread_44778,
                                   sdiv_up64(i32_res_28895 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44799)),
                                             threads_per_segment_44781));
        
        int32_t x_39986;
        int32_t x_39987;
        
        // neutral-initialise the accumulators
        {
            x_acc_44800 = 0;
        }
        for (int64_t i_44805 = 0; i_44805 < chunk_sizze_44801; i_44805++) {
            gtid_39970 = sext_i32_i64(sext_i64_i32(global_tid_44799)) +
                threads_per_segment_44781 * i_44805;
            // apply map function
            {
                float x_39990 = ((__global
                                  float *) images_mem_42841)[gtid_39962 *
                                                             N_28885 +
                                                             gtid_39970];
                bool isnan_res_39991;
                
                isnan_res_39991 = futrts_isnan32(x_39990);
                
                bool cond_39992 = !isnan_res_39991;
                int32_t defunc_0_f_res_39993 = btoi_bool_i32(cond_39992);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_39986 = x_acc_44800;
                }
                // load new values
                {
                    x_39987 = defunc_0_f_res_39993;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_39988 = add32(x_39986, x_39987);
                    
                    // store in accumulator
                    {
                        x_acc_44800 = defunc_1_op_res_39988;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_39986 = x_acc_44800;
            ((__local
              int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787)] =
                x_39986;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44806;
        int32_t skip_waves_44807;
        
        skip_waves_44807 = 1;
        
        int32_t x_44802;
        int32_t x_44803;
        
        offset_44806 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44787,
                      sext_i64_i32(segred_group_sizze_39982))) {
                x_44802 = ((__local
                            int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787 +
                                                          offset_44806)];
            }
        }
        offset_44806 = 1;
        while (slt32(offset_44806, wave_sizze_44789)) {
            if (slt32(local_tid_44787 + offset_44806,
                      sext_i64_i32(segred_group_sizze_39982)) &&
                ((local_tid_44787 - squot32(local_tid_44787, wave_sizze_44789) *
                  wave_sizze_44789) & (2 * offset_44806 - 1)) == 0) {
                // read array element
                {
                    x_44803 = ((volatile __local
                                int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787 +
                                                              offset_44806)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44804 = add32(x_44802, x_44803);
                    
                    x_44802 = defunc_1_op_res_44804;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787)] =
                        x_44802;
                }
            }
            offset_44806 *= 2;
        }
        while (slt32(skip_waves_44807,
                     squot32(sext_i64_i32(segred_group_sizze_39982) +
                             wave_sizze_44789 - 1, wave_sizze_44789))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44806 = skip_waves_44807 * wave_sizze_44789;
            if (slt32(local_tid_44787 + offset_44806,
                      sext_i64_i32(segred_group_sizze_39982)) &&
                ((local_tid_44787 - squot32(local_tid_44787, wave_sizze_44789) *
                  wave_sizze_44789) == 0 && (squot32(local_tid_44787,
                                                     wave_sizze_44789) & (2 *
                                                                          skip_waves_44807 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44803 = ((__local
                                int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787 +
                                                              offset_44806)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44804 = add32(x_44802, x_44803);
                    
                    x_44802 = defunc_1_op_res_44804;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787)] =
                        x_44802;
                }
            }
            skip_waves_44807 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44787) == (int64_t) 0) {
                x_acc_44800 = x_44802;
            }
        }
        if (groups_per_segment_44777 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44787 == 0) {
                    ((__global int32_t *) mem_43692)[gtid_39962] = x_acc_44800;
                }
            }
        } else {
            int32_t old_counter_44808;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44787 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44782)[sext_i32_i64(virt_group_id_44797) *
                                                          segred_group_sizze_39982] =
                        x_acc_44800;
                    mem_fence_global();
                    old_counter_44808 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44784)[sext_i32_i64(srem32(flat_segment_id_44798,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44793)[(int64_t) 0] =
                        old_counter_44808 == groups_per_segment_44777 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44809;
            
            is_last_group_44809 = ((__local
                                    bool *) sync_arr_mem_44793)[(int64_t) 0];
            if (is_last_group_44809) {
                if (local_tid_44787 == 0) {
                    old_counter_44808 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44784)[sext_i32_i64(srem32(flat_segment_id_44798,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44777));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44810 =
                            sdiv_up64(groups_per_segment_44777,
                                      segred_group_sizze_39982);
                    
                    x_39986 = 0;
                    for (int64_t i_44811 = 0; i_44811 < read_per_thread_44810;
                         i_44811++) {
                        int64_t group_res_id_44812 =
                                sext_i32_i64(local_tid_44787) *
                                read_per_thread_44810 + i_44811;
                        int64_t index_of_group_res_44813 =
                                sext_i32_i64(flat_segment_id_44798) *
                                groups_per_segment_44777 + group_res_id_44812;
                        
                        if (slt64(group_res_id_44812,
                                  groups_per_segment_44777)) {
                            x_39987 = ((__global
                                        int32_t *) group_res_arr_mem_44782)[index_of_group_res_44813 *
                                                                            segred_group_sizze_39982];
                            
                            int32_t defunc_1_op_res_39988;
                            
                            defunc_1_op_res_39988 = add32(x_39986, x_39987);
                            x_39986 = defunc_1_op_res_39988;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787)] =
                    x_39986;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44814;
                    int32_t skip_waves_44815;
                    
                    skip_waves_44815 = 1;
                    
                    int32_t x_44802;
                    int32_t x_44803;
                    
                    offset_44814 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44787,
                                  sext_i64_i32(segred_group_sizze_39982))) {
                            x_44802 = ((__local
                                        int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787 +
                                                                      offset_44814)];
                        }
                    }
                    offset_44814 = 1;
                    while (slt32(offset_44814, wave_sizze_44789)) {
                        if (slt32(local_tid_44787 + offset_44814,
                                  sext_i64_i32(segred_group_sizze_39982)) &&
                            ((local_tid_44787 - squot32(local_tid_44787,
                                                        wave_sizze_44789) *
                              wave_sizze_44789) & (2 * offset_44814 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44803 = ((volatile __local
                                            int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787 +
                                                                          offset_44814)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44804 = add32(x_44802,
                                                                      x_44803);
                                
                                x_44802 = defunc_1_op_res_44804;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787)] =
                                    x_44802;
                            }
                        }
                        offset_44814 *= 2;
                    }
                    while (slt32(skip_waves_44815,
                                 squot32(sext_i64_i32(segred_group_sizze_39982) +
                                         wave_sizze_44789 - 1,
                                         wave_sizze_44789))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44814 = skip_waves_44815 * wave_sizze_44789;
                        if (slt32(local_tid_44787 + offset_44814,
                                  sext_i64_i32(segred_group_sizze_39982)) &&
                            ((local_tid_44787 - squot32(local_tid_44787,
                                                        wave_sizze_44789) *
                              wave_sizze_44789) == 0 &&
                             (squot32(local_tid_44787, wave_sizze_44789) & (2 *
                                                                            skip_waves_44815 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44803 = ((__local
                                            int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787 +
                                                                          offset_44814)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44804 = add32(x_44802,
                                                                      x_44803);
                                
                                x_44802 = defunc_1_op_res_44804;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44791)[sext_i32_i64(local_tid_44787)] =
                                    x_44802;
                            }
                        }
                        skip_waves_44815 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44787 == 0) {
                            ((__global int32_t *) mem_43692)[gtid_39962] =
                                x_44802;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39982
}
__kernel void mainzisegred_large_40122(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_44962_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_44960_backing_aligned_1,
                                       int64_t N_28885, int64_t i32_res_29256,
                                       int64_t num_groups_40140,
                                       int64_t groups_per_segment_44946,
                                       int64_t elements_per_thread_44947,
                                       int64_t virt_num_groups_44948,
                                       int64_t threads_per_segment_44950,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43638,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43704,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43705,
                                       __global unsigned char *mem_43738,
                                       __global
                                       unsigned char *group_res_arr_mem_44951,
                                       __global
                                       unsigned char *mainzicounter_mem_44953)
{
    #define segred_group_sizze_40139 (mainzisegred_group_sizze_40116)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44962_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44962_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44960_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44960_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44955;
    int32_t local_tid_44956;
    int64_t group_sizze_44959;
    int32_t wave_sizze_44958;
    int32_t group_tid_44957;
    
    global_tid_44955 = get_global_id(0);
    local_tid_44956 = get_local_id(0);
    group_sizze_44959 = get_local_size(0);
    wave_sizze_44958 = LOCKSTEP_WIDTH;
    group_tid_44957 = get_group_id(0);
    
    int32_t phys_tid_40122;
    
    phys_tid_40122 = global_tid_44955;
    
    __local char *red_arr_mem_44960;
    
    red_arr_mem_44960 = (__local char *) red_arr_mem_44960_backing_0;
    
    __local char *sync_arr_mem_44962;
    
    sync_arr_mem_44962 = (__local char *) sync_arr_mem_44962_backing_1;
    
    int32_t phys_group_id_44964;
    
    phys_group_id_44964 = get_group_id(0);
    for (int32_t i_44965 = 0; i_44965 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44948) - phys_group_id_44964,
                   sext_i64_i32(num_groups_40140)); i_44965++) {
        int32_t virt_group_id_44966 = phys_group_id_44964 + i_44965 *
                sext_i64_i32(num_groups_40140);
        int32_t flat_segment_id_44967 = squot32(virt_group_id_44966,
                                                sext_i64_i32(groups_per_segment_44946));
        int64_t global_tid_44968 = srem64(sext_i32_i64(virt_group_id_44966) *
                                          segred_group_sizze_40139 +
                                          sext_i32_i64(local_tid_44956),
                                          segred_group_sizze_40139 *
                                          groups_per_segment_44946);
        int64_t gtid_40113 = sext_i32_i64(flat_segment_id_44967);
        int64_t gtid_40121;
        float x_acc_44969;
        int64_t chunk_sizze_44970;
        
        chunk_sizze_44970 = smin64(elements_per_thread_44947,
                                   sdiv_up64(i32_res_29256 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44968)),
                                             threads_per_segment_44950));
        
        float x_40143;
        float x_40144;
        
        // neutral-initialise the accumulators
        {
            x_acc_44969 = 0.0F;
        }
        for (int64_t i_44974 = 0; i_44974 < chunk_sizze_44970; i_44974++) {
            gtid_40121 = sext_i32_i64(sext_i64_i32(global_tid_44968)) +
                threads_per_segment_44950 * i_44974;
            // apply map function
            {
                int32_t x_40148 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43704)[gtid_40113];
                int32_t index_primexp_40933 = sext_i64_i32(gtid_40121);
                bool cond_40150 = slt32(index_primexp_40933, x_40148);
                float defunc_0_f_res_40151;
                
                if (cond_40150) {
                    int32_t x_40147 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_40113];
                    int32_t x_40152 = add32(x_40147, index_primexp_40933);
                    int32_t x_40153 = sub32(x_40152, x_40148);
                    int32_t i_40154 = add32(1, x_40153);
                    int64_t i_40155 = sext_i32_i64(i_40154);
                    float defunc_0_f_res_t_res_40156 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_40113 *
                                                                                              N_28885 +
                                                                                              i_40155];
                    
                    defunc_0_f_res_40151 = defunc_0_f_res_t_res_40156;
                } else {
                    defunc_0_f_res_40151 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_40143 = x_acc_44969;
                }
                // load new values
                {
                    x_40144 = defunc_0_f_res_40151;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_40145 = x_40143 + x_40144;
                    
                    // store in accumulator
                    {
                        x_acc_44969 = defunc_1_op_res_40145;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_40143 = x_acc_44969;
            ((__local
              float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956)] =
                x_40143;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44975;
        int32_t skip_waves_44976;
        
        skip_waves_44976 = 1;
        
        float x_44971;
        float x_44972;
        
        offset_44975 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44956,
                      sext_i64_i32(segred_group_sizze_40139))) {
                x_44971 = ((__local
                            float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956 +
                                                        offset_44975)];
            }
        }
        offset_44975 = 1;
        while (slt32(offset_44975, wave_sizze_44958)) {
            if (slt32(local_tid_44956 + offset_44975,
                      sext_i64_i32(segred_group_sizze_40139)) &&
                ((local_tid_44956 - squot32(local_tid_44956, wave_sizze_44958) *
                  wave_sizze_44958) & (2 * offset_44975 - 1)) == 0) {
                // read array element
                {
                    x_44972 = ((volatile __local
                                float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956 +
                                                            offset_44975)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44973 = x_44971 + x_44972;
                    
                    x_44971 = defunc_1_op_res_44973;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956)] =
                        x_44971;
                }
            }
            offset_44975 *= 2;
        }
        while (slt32(skip_waves_44976,
                     squot32(sext_i64_i32(segred_group_sizze_40139) +
                             wave_sizze_44958 - 1, wave_sizze_44958))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44975 = skip_waves_44976 * wave_sizze_44958;
            if (slt32(local_tid_44956 + offset_44975,
                      sext_i64_i32(segred_group_sizze_40139)) &&
                ((local_tid_44956 - squot32(local_tid_44956, wave_sizze_44958) *
                  wave_sizze_44958) == 0 && (squot32(local_tid_44956,
                                                     wave_sizze_44958) & (2 *
                                                                          skip_waves_44976 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44972 = ((__local
                                float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956 +
                                                            offset_44975)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44973 = x_44971 + x_44972;
                    
                    x_44971 = defunc_1_op_res_44973;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956)] =
                        x_44971;
                }
            }
            skip_waves_44976 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44956) == (int64_t) 0) {
                x_acc_44969 = x_44971;
            }
        }
        if (groups_per_segment_44946 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44956 == 0) {
                    ((__global float *) mem_43738)[gtid_40113] = x_acc_44969;
                }
            }
        } else {
            int32_t old_counter_44977;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44956 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44951)[sext_i32_i64(virt_group_id_44966) *
                                                        segred_group_sizze_40139] =
                        x_acc_44969;
                    mem_fence_global();
                    old_counter_44977 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44953)[sext_i32_i64(srem32(flat_segment_id_44967,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44962)[(int64_t) 0] =
                        old_counter_44977 == groups_per_segment_44946 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44978;
            
            is_last_group_44978 = ((__local
                                    bool *) sync_arr_mem_44962)[(int64_t) 0];
            if (is_last_group_44978) {
                if (local_tid_44956 == 0) {
                    old_counter_44977 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_44953)[sext_i32_i64(srem32(flat_segment_id_44967,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44946));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44979 =
                            sdiv_up64(groups_per_segment_44946,
                                      segred_group_sizze_40139);
                    
                    x_40143 = 0.0F;
                    for (int64_t i_44980 = 0; i_44980 < read_per_thread_44979;
                         i_44980++) {
                        int64_t group_res_id_44981 =
                                sext_i32_i64(local_tid_44956) *
                                read_per_thread_44979 + i_44980;
                        int64_t index_of_group_res_44982 =
                                sext_i32_i64(flat_segment_id_44967) *
                                groups_per_segment_44946 + group_res_id_44981;
                        
                        if (slt64(group_res_id_44981,
                                  groups_per_segment_44946)) {
                            x_40144 = ((__global
                                        float *) group_res_arr_mem_44951)[index_of_group_res_44982 *
                                                                          segred_group_sizze_40139];
                            
                            float defunc_1_op_res_40145;
                            
                            defunc_1_op_res_40145 = x_40143 + x_40144;
                            x_40143 = defunc_1_op_res_40145;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956)] =
                    x_40143;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44983;
                    int32_t skip_waves_44984;
                    
                    skip_waves_44984 = 1;
                    
                    float x_44971;
                    float x_44972;
                    
                    offset_44983 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44956,
                                  sext_i64_i32(segred_group_sizze_40139))) {
                            x_44971 = ((__local
                                        float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956 +
                                                                    offset_44983)];
                        }
                    }
                    offset_44983 = 1;
                    while (slt32(offset_44983, wave_sizze_44958)) {
                        if (slt32(local_tid_44956 + offset_44983,
                                  sext_i64_i32(segred_group_sizze_40139)) &&
                            ((local_tid_44956 - squot32(local_tid_44956,
                                                        wave_sizze_44958) *
                              wave_sizze_44958) & (2 * offset_44983 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44972 = ((volatile __local
                                            float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956 +
                                                                        offset_44983)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44973 = x_44971 + x_44972;
                                
                                x_44971 = defunc_1_op_res_44973;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956)] =
                                    x_44971;
                            }
                        }
                        offset_44983 *= 2;
                    }
                    while (slt32(skip_waves_44984,
                                 squot32(sext_i64_i32(segred_group_sizze_40139) +
                                         wave_sizze_44958 - 1,
                                         wave_sizze_44958))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44983 = skip_waves_44984 * wave_sizze_44958;
                        if (slt32(local_tid_44956 + offset_44983,
                                  sext_i64_i32(segred_group_sizze_40139)) &&
                            ((local_tid_44956 - squot32(local_tid_44956,
                                                        wave_sizze_44958) *
                              wave_sizze_44958) == 0 &&
                             (squot32(local_tid_44956, wave_sizze_44958) & (2 *
                                                                            skip_waves_44984 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44972 = ((__local
                                            float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956 +
                                                                        offset_44983)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44973 = x_44971 + x_44972;
                                
                                x_44971 = defunc_1_op_res_44973;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44960)[sext_i32_i64(local_tid_44956)] =
                                    x_44971;
                            }
                        }
                        skip_waves_44984 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44956 == 0) {
                            ((__global float *) mem_43738)[gtid_40113] =
                                x_44971;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40139
}
__kernel void mainzisegred_large_40623(__global int *global_failure,
                                       __local volatile
                                       int64_t *sync_arr_mem_45143_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45141_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_45139_backing_aligned_2,
                                       __local volatile
                                       int64_t *red_arr_mem_45137_backing_aligned_3,
                                       int64_t iota32_arg_29281,
                                       int64_t num_groups_40794,
                                       int64_t groups_per_segment_45119,
                                       int64_t elements_per_thread_45120,
                                       int64_t virt_num_groups_45121, __global
                                       unsigned char *mem_43744, __global
                                       unsigned char *mem_43756, __global
                                       unsigned char *mem_43758, __global
                                       unsigned char *mem_43762, __global
                                       unsigned char *mem_43765, __global
                                       unsigned char *mem_43767, __global
                                       unsigned char *mem_43769, __global
                                       unsigned char *group_res_arr_mem_45124,
                                       __global
                                       unsigned char *group_res_arr_mem_45126,
                                       __global
                                       unsigned char *group_res_arr_mem_45128,
                                       __global
                                       unsigned char *mainzicounter_mem_45130)
{
    #define segred_group_sizze_40793 (mainzisegred_group_sizze_40617)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45143_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45143_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45141_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45141_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45139_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45139_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45137_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45137_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45132;
    int32_t local_tid_45133;
    int64_t group_sizze_45136;
    int32_t wave_sizze_45135;
    int32_t group_tid_45134;
    
    global_tid_45132 = get_global_id(0);
    local_tid_45133 = get_local_id(0);
    group_sizze_45136 = get_local_size(0);
    wave_sizze_45135 = LOCKSTEP_WIDTH;
    group_tid_45134 = get_group_id(0);
    
    int32_t phys_tid_40623;
    
    phys_tid_40623 = global_tid_45132;
    
    __local char *red_arr_mem_45137;
    
    red_arr_mem_45137 = (__local char *) red_arr_mem_45137_backing_0;
    
    __local char *red_arr_mem_45139;
    
    red_arr_mem_45139 = (__local char *) red_arr_mem_45139_backing_1;
    
    __local char *red_arr_mem_45141;
    
    red_arr_mem_45141 = (__local char *) red_arr_mem_45141_backing_2;
    
    __local char *sync_arr_mem_45143;
    
    sync_arr_mem_45143 = (__local char *) sync_arr_mem_45143_backing_3;
    
    int32_t phys_group_id_45145;
    
    phys_group_id_45145 = get_group_id(0);
    for (int32_t i_45146 = 0; i_45146 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45121) - phys_group_id_45145,
                   sext_i64_i32(num_groups_40794)); i_45146++) {
        int32_t virt_group_id_45147 = phys_group_id_45145 + i_45146 *
                sext_i64_i32(num_groups_40794);
        int32_t flat_segment_id_45148 = squot32(virt_group_id_45147,
                                                sext_i64_i32(groups_per_segment_45119));
        int64_t global_tid_45149 = srem64(sext_i32_i64(virt_group_id_45147) *
                                          segred_group_sizze_40793 +
                                          sext_i32_i64(local_tid_45133),
                                          segred_group_sizze_40793 *
                                          groups_per_segment_45119);
        int64_t gtid_40614 = sext_i32_i64(flat_segment_id_45148);
        int64_t gtid_40622;
        bool x_acc_45150;
        int32_t x_acc_45151;
        float x_acc_45152;
        int64_t chunk_sizze_45153;
        int64_t starting_point_45154;
        
        starting_point_45154 = sext_i32_i64(sext_i64_i32(global_tid_45149)) *
            elements_per_thread_45120;
        
        int64_t remaining_elements_45155;
        
        remaining_elements_45155 = iota32_arg_29281 - starting_point_45154;
        if (sle64(remaining_elements_45155, (int64_t) 0) ||
            sle64(iota32_arg_29281, starting_point_45154)) {
            chunk_sizze_45153 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_29281,
                      (sext_i32_i64(sext_i64_i32(global_tid_45149)) +
                       (int64_t) 1) * elements_per_thread_45120)) {
                chunk_sizze_45153 = iota32_arg_29281 -
                    sext_i32_i64(sext_i64_i32(global_tid_45149)) *
                    elements_per_thread_45120;
            } else {
                chunk_sizze_45153 = elements_per_thread_45120;
            }
        }
        
        bool x_40799;
        int32_t x_40800;
        float x_40801;
        bool x_40802;
        int32_t x_40803;
        float x_40804;
        
        // neutral-initialise the accumulators
        {
            x_acc_45150 = 0;
            x_acc_45151 = -1;
            x_acc_45152 = 0.0F;
        }
        for (int64_t i_45170 = 0; i_45170 < elements_per_thread_45120;
             i_45170++) {
            gtid_40622 = sext_i32_i64(local_tid_45133) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45149),
                                      sext_i64_i32(segred_group_sizze_40793))) *
                 elements_per_thread_45120 + i_45170) *
                segred_group_sizze_40793;
            if (slt64(gtid_40622, iota32_arg_29281)) {
                // apply map function
                {
                    int32_t y_40813 = ((__global
                                        int32_t *) mem_43758)[gtid_40614];
                    float y_40814 = ((__global float *) mem_43756)[gtid_40614];
                    float x_40818 = ((__global float *) mem_43762)[gtid_40614 *
                                                                   iota32_arg_29281 +
                                                                   gtid_40622];
                    float x_40819 = ((__global float *) mem_43744)[gtid_40622];
                    int32_t index_primexp_40947 = sext_i64_i32(gtid_40622);
                    float defunc_0_f_res_40822 = x_40818 / y_40814;
                    bool cond_40823 = slt32(index_primexp_40947, y_40813);
                    bool isnan_res_40824;
                    
                    isnan_res_40824 = futrts_isnan32(defunc_0_f_res_40822);
                    
                    bool cond_t_res_40825 = !isnan_res_40824;
                    bool x_40826 = cond_40823 && cond_t_res_40825;
                    float abs_res_40827 = (float) fabs(defunc_0_f_res_40822);
                    bool defunc_2_f_res_t_res_40828 = x_40819 < abs_res_40827;
                    bool x_40829 = x_40826 && defunc_2_f_res_t_res_40828;
                    float defunc_1_f_res_40830;
                    
                    if (cond_40823) {
                        defunc_1_f_res_40830 = defunc_0_f_res_40822;
                    } else {
                        defunc_1_f_res_40830 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_40799 = x_acc_45150;
                        x_40800 = x_acc_45151;
                        x_40801 = x_acc_45152;
                    }
                    // load new values
                    {
                        x_40802 = x_40829;
                        x_40803 = index_primexp_40947;
                        x_40804 = defunc_1_f_res_40830;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_40805;
                        int32_t defunc_1_op_res_40806;
                        
                        if (x_40799) {
                            defunc_1_op_res_40805 = x_40799;
                            defunc_1_op_res_40806 = x_40800;
                        } else {
                            bool x_40807 = x_40802 && x_40802;
                            bool x_40808 = !x_40802;
                            bool y_40809 = x_40799 && x_40808;
                            bool defunc_1_op_res_f_res_40810 = x_40807 ||
                                 y_40809;
                            int32_t defunc_1_op_res_f_res_40811;
                            
                            if (x_40802) {
                                defunc_1_op_res_f_res_40811 = x_40803;
                            } else {
                                defunc_1_op_res_f_res_40811 = x_40800;
                            }
                            defunc_1_op_res_40805 = defunc_1_op_res_f_res_40810;
                            defunc_1_op_res_40806 = defunc_1_op_res_f_res_40811;
                        }
                        
                        float defunc_1_op_res_40812 = x_40801 + x_40804;
                        
                        // store in accumulator
                        {
                            x_acc_45150 = defunc_1_op_res_40805;
                            x_acc_45151 = defunc_1_op_res_40806;
                            x_acc_45152 = defunc_1_op_res_40812;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_40799 = x_acc_45150;
                x_40800 = x_acc_45151;
                x_40801 = x_acc_45152;
                ((__local
                  bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133)] =
                    x_40799;
                ((__local
                  int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133)] =
                    x_40800;
                ((__local
                  float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133)] =
                    x_40801;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45171;
            int32_t skip_waves_45172;
            
            skip_waves_45172 = 1;
            
            bool x_45156;
            int32_t x_45157;
            float x_45158;
            bool x_45159;
            int32_t x_45160;
            float x_45161;
            
            offset_45171 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45133,
                          sext_i64_i32(segred_group_sizze_40793))) {
                    x_45156 = ((__local
                                bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133 +
                                                           offset_45171)];
                    x_45157 = ((__local
                                int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133 +
                                                              offset_45171)];
                    x_45158 = ((__local
                                float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133 +
                                                            offset_45171)];
                }
            }
            offset_45171 = 1;
            while (slt32(offset_45171, wave_sizze_45135)) {
                if (slt32(local_tid_45133 + offset_45171,
                          sext_i64_i32(segred_group_sizze_40793)) &&
                    ((local_tid_45133 - squot32(local_tid_45133,
                                                wave_sizze_45135) *
                      wave_sizze_45135) & (2 * offset_45171 - 1)) == 0) {
                    // read array element
                    {
                        x_45159 = ((volatile __local
                                    bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133 +
                                                               offset_45171)];
                        x_45160 = ((volatile __local
                                    int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133 +
                                                                  offset_45171)];
                        x_45161 = ((volatile __local
                                    float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133 +
                                                                offset_45171)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45162;
                        int32_t defunc_1_op_res_45163;
                        
                        if (x_45156) {
                            defunc_1_op_res_45162 = x_45156;
                            defunc_1_op_res_45163 = x_45157;
                        } else {
                            bool x_45164 = x_45159 && x_45159;
                            bool x_45165 = !x_45159;
                            bool y_45166 = x_45156 && x_45165;
                            bool defunc_1_op_res_f_res_45167 = x_45164 ||
                                 y_45166;
                            int32_t defunc_1_op_res_f_res_45168;
                            
                            if (x_45159) {
                                defunc_1_op_res_f_res_45168 = x_45160;
                            } else {
                                defunc_1_op_res_f_res_45168 = x_45157;
                            }
                            defunc_1_op_res_45162 = defunc_1_op_res_f_res_45167;
                            defunc_1_op_res_45163 = defunc_1_op_res_f_res_45168;
                        }
                        
                        float defunc_1_op_res_45169 = x_45158 + x_45161;
                        
                        x_45156 = defunc_1_op_res_45162;
                        x_45157 = defunc_1_op_res_45163;
                        x_45158 = defunc_1_op_res_45169;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133)] =
                            x_45156;
                        ((volatile __local
                          int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133)] =
                            x_45157;
                        ((volatile __local
                          float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133)] =
                            x_45158;
                    }
                }
                offset_45171 *= 2;
            }
            while (slt32(skip_waves_45172,
                         squot32(sext_i64_i32(segred_group_sizze_40793) +
                                 wave_sizze_45135 - 1, wave_sizze_45135))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45171 = skip_waves_45172 * wave_sizze_45135;
                if (slt32(local_tid_45133 + offset_45171,
                          sext_i64_i32(segred_group_sizze_40793)) &&
                    ((local_tid_45133 - squot32(local_tid_45133,
                                                wave_sizze_45135) *
                      wave_sizze_45135) == 0 && (squot32(local_tid_45133,
                                                         wave_sizze_45135) &
                                                 (2 * skip_waves_45172 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45159 = ((__local
                                    bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133 +
                                                               offset_45171)];
                        x_45160 = ((__local
                                    int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133 +
                                                                  offset_45171)];
                        x_45161 = ((__local
                                    float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133 +
                                                                offset_45171)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45162;
                        int32_t defunc_1_op_res_45163;
                        
                        if (x_45156) {
                            defunc_1_op_res_45162 = x_45156;
                            defunc_1_op_res_45163 = x_45157;
                        } else {
                            bool x_45164 = x_45159 && x_45159;
                            bool x_45165 = !x_45159;
                            bool y_45166 = x_45156 && x_45165;
                            bool defunc_1_op_res_f_res_45167 = x_45164 ||
                                 y_45166;
                            int32_t defunc_1_op_res_f_res_45168;
                            
                            if (x_45159) {
                                defunc_1_op_res_f_res_45168 = x_45160;
                            } else {
                                defunc_1_op_res_f_res_45168 = x_45157;
                            }
                            defunc_1_op_res_45162 = defunc_1_op_res_f_res_45167;
                            defunc_1_op_res_45163 = defunc_1_op_res_f_res_45168;
                        }
                        
                        float defunc_1_op_res_45169 = x_45158 + x_45161;
                        
                        x_45156 = defunc_1_op_res_45162;
                        x_45157 = defunc_1_op_res_45163;
                        x_45158 = defunc_1_op_res_45169;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133)] =
                            x_45156;
                        ((__local
                          int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133)] =
                            x_45157;
                        ((__local
                          float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133)] =
                            x_45158;
                    }
                }
                skip_waves_45172 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45133) == (int64_t) 0) {
                    x_acc_45150 = x_45156;
                    x_acc_45151 = x_45157;
                    x_acc_45152 = x_45158;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45133) == (int64_t) 0)) {
                    x_acc_45150 = 0;
                    x_acc_45151 = -1;
                    x_acc_45152 = 0.0F;
                }
            }
        }
        x_40799 = x_acc_45150;
        x_40800 = x_acc_45151;
        x_40801 = x_acc_45152;
        if (groups_per_segment_45119 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45133 == 0) {
                    ((__global bool *) mem_43765)[gtid_40614] = x_acc_45150;
                    ((__global int32_t *) mem_43767)[gtid_40614] = x_acc_45151;
                    ((__global float *) mem_43769)[gtid_40614] = x_acc_45152;
                }
            }
        } else {
            int32_t old_counter_45173;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45133 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45124)[sext_i32_i64(virt_group_id_45147) *
                                                       segred_group_sizze_40793] =
                        x_acc_45150;
                    ((__global
                      int32_t *) group_res_arr_mem_45126)[sext_i32_i64(virt_group_id_45147) *
                                                          segred_group_sizze_40793] =
                        x_acc_45151;
                    ((__global
                      float *) group_res_arr_mem_45128)[sext_i32_i64(virt_group_id_45147) *
                                                        segred_group_sizze_40793] =
                        x_acc_45152;
                    mem_fence_global();
                    old_counter_45173 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45130)[sext_i32_i64(srem32(flat_segment_id_45148,
                                                                                                     10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45143)[(int64_t) 0] =
                        old_counter_45173 == groups_per_segment_45119 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45174;
            
            is_last_group_45174 = ((__local
                                    bool *) sync_arr_mem_45143)[(int64_t) 0];
            if (is_last_group_45174) {
                if (local_tid_45133 == 0) {
                    old_counter_45173 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainzicounter_mem_45130)[sext_i32_i64(srem32(flat_segment_id_45148,
                                                                                                     10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45119));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45175 =
                            sdiv_up64(groups_per_segment_45119,
                                      segred_group_sizze_40793);
                    
                    x_40799 = 0;
                    x_40800 = -1;
                    x_40801 = 0.0F;
                    for (int64_t i_45176 = 0; i_45176 < read_per_thread_45175;
                         i_45176++) {
                        int64_t group_res_id_45177 =
                                sext_i32_i64(local_tid_45133) *
                                read_per_thread_45175 + i_45176;
                        int64_t index_of_group_res_45178 =
                                sext_i32_i64(flat_segment_id_45148) *
                                groups_per_segment_45119 + group_res_id_45177;
                        
                        if (slt64(group_res_id_45177,
                                  groups_per_segment_45119)) {
                            x_40802 = ((__global
                                        bool *) group_res_arr_mem_45124)[index_of_group_res_45178 *
                                                                         segred_group_sizze_40793];
                            x_40803 = ((__global
                                        int32_t *) group_res_arr_mem_45126)[index_of_group_res_45178 *
                                                                            segred_group_sizze_40793];
                            x_40804 = ((__global
                                        float *) group_res_arr_mem_45128)[index_of_group_res_45178 *
                                                                          segred_group_sizze_40793];
                            
                            bool defunc_1_op_res_40805;
                            int32_t defunc_1_op_res_40806;
                            
                            if (x_40799) {
                                defunc_1_op_res_40805 = x_40799;
                                defunc_1_op_res_40806 = x_40800;
                            } else {
                                bool x_40807 = x_40802 && x_40802;
                                bool x_40808 = !x_40802;
                                bool y_40809 = x_40799 && x_40808;
                                bool defunc_1_op_res_f_res_40810 = x_40807 ||
                                     y_40809;
                                int32_t defunc_1_op_res_f_res_40811;
                                
                                if (x_40802) {
                                    defunc_1_op_res_f_res_40811 = x_40803;
                                } else {
                                    defunc_1_op_res_f_res_40811 = x_40800;
                                }
                                defunc_1_op_res_40805 =
                                    defunc_1_op_res_f_res_40810;
                                defunc_1_op_res_40806 =
                                    defunc_1_op_res_f_res_40811;
                            }
                            
                            float defunc_1_op_res_40812 = x_40801 + x_40804;
                            
                            x_40799 = defunc_1_op_res_40805;
                            x_40800 = defunc_1_op_res_40806;
                            x_40801 = defunc_1_op_res_40812;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133)] =
                    x_40799;
                ((__local
                  int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133)] =
                    x_40800;
                ((__local
                  float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133)] =
                    x_40801;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45179;
                    int32_t skip_waves_45180;
                    
                    skip_waves_45180 = 1;
                    
                    bool x_45156;
                    int32_t x_45157;
                    float x_45158;
                    bool x_45159;
                    int32_t x_45160;
                    float x_45161;
                    
                    offset_45179 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45133,
                                  sext_i64_i32(segred_group_sizze_40793))) {
                            x_45156 = ((__local
                                        bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133 +
                                                                   offset_45179)];
                            x_45157 = ((__local
                                        int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133 +
                                                                      offset_45179)];
                            x_45158 = ((__local
                                        float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133 +
                                                                    offset_45179)];
                        }
                    }
                    offset_45179 = 1;
                    while (slt32(offset_45179, wave_sizze_45135)) {
                        if (slt32(local_tid_45133 + offset_45179,
                                  sext_i64_i32(segred_group_sizze_40793)) &&
                            ((local_tid_45133 - squot32(local_tid_45133,
                                                        wave_sizze_45135) *
                              wave_sizze_45135) & (2 * offset_45179 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45159 = ((volatile __local
                                            bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133 +
                                                                       offset_45179)];
                                x_45160 = ((volatile __local
                                            int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133 +
                                                                          offset_45179)];
                                x_45161 = ((volatile __local
                                            float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133 +
                                                                        offset_45179)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45162;
                                int32_t defunc_1_op_res_45163;
                                
                                if (x_45156) {
                                    defunc_1_op_res_45162 = x_45156;
                                    defunc_1_op_res_45163 = x_45157;
                                } else {
                                    bool x_45164 = x_45159 && x_45159;
                                    bool x_45165 = !x_45159;
                                    bool y_45166 = x_45156 && x_45165;
                                    bool defunc_1_op_res_f_res_45167 =
                                         x_45164 || y_45166;
                                    int32_t defunc_1_op_res_f_res_45168;
                                    
                                    if (x_45159) {
                                        defunc_1_op_res_f_res_45168 = x_45160;
                                    } else {
                                        defunc_1_op_res_f_res_45168 = x_45157;
                                    }
                                    defunc_1_op_res_45162 =
                                        defunc_1_op_res_f_res_45167;
                                    defunc_1_op_res_45163 =
                                        defunc_1_op_res_f_res_45168;
                                }
                                
                                float defunc_1_op_res_45169 = x_45158 + x_45161;
                                
                                x_45156 = defunc_1_op_res_45162;
                                x_45157 = defunc_1_op_res_45163;
                                x_45158 = defunc_1_op_res_45169;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133)] =
                                    x_45156;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133)] =
                                    x_45157;
                                ((volatile __local
                                  float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133)] =
                                    x_45158;
                            }
                        }
                        offset_45179 *= 2;
                    }
                    while (slt32(skip_waves_45180,
                                 squot32(sext_i64_i32(segred_group_sizze_40793) +
                                         wave_sizze_45135 - 1,
                                         wave_sizze_45135))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45179 = skip_waves_45180 * wave_sizze_45135;
                        if (slt32(local_tid_45133 + offset_45179,
                                  sext_i64_i32(segred_group_sizze_40793)) &&
                            ((local_tid_45133 - squot32(local_tid_45133,
                                                        wave_sizze_45135) *
                              wave_sizze_45135) == 0 &&
                             (squot32(local_tid_45133, wave_sizze_45135) & (2 *
                                                                            skip_waves_45180 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45159 = ((__local
                                            bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133 +
                                                                       offset_45179)];
                                x_45160 = ((__local
                                            int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133 +
                                                                          offset_45179)];
                                x_45161 = ((__local
                                            float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133 +
                                                                        offset_45179)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45162;
                                int32_t defunc_1_op_res_45163;
                                
                                if (x_45156) {
                                    defunc_1_op_res_45162 = x_45156;
                                    defunc_1_op_res_45163 = x_45157;
                                } else {
                                    bool x_45164 = x_45159 && x_45159;
                                    bool x_45165 = !x_45159;
                                    bool y_45166 = x_45156 && x_45165;
                                    bool defunc_1_op_res_f_res_45167 =
                                         x_45164 || y_45166;
                                    int32_t defunc_1_op_res_f_res_45168;
                                    
                                    if (x_45159) {
                                        defunc_1_op_res_f_res_45168 = x_45160;
                                    } else {
                                        defunc_1_op_res_f_res_45168 = x_45157;
                                    }
                                    defunc_1_op_res_45162 =
                                        defunc_1_op_res_f_res_45167;
                                    defunc_1_op_res_45163 =
                                        defunc_1_op_res_f_res_45168;
                                }
                                
                                float defunc_1_op_res_45169 = x_45158 + x_45161;
                                
                                x_45156 = defunc_1_op_res_45162;
                                x_45157 = defunc_1_op_res_45163;
                                x_45158 = defunc_1_op_res_45169;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45137)[sext_i32_i64(local_tid_45133)] =
                                    x_45156;
                                ((__local
                                  int32_t *) red_arr_mem_45139)[sext_i32_i64(local_tid_45133)] =
                                    x_45157;
                                ((__local
                                  float *) red_arr_mem_45141)[sext_i32_i64(local_tid_45133)] =
                                    x_45158;
                            }
                        }
                        skip_waves_45180 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45133 == 0) {
                            ((__global bool *) mem_43765)[gtid_40614] = x_45156;
                            ((__global int32_t *) mem_43767)[gtid_40614] =
                                x_45157;
                            ((__global float *) mem_43769)[gtid_40614] =
                                x_45158;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40793
}
__kernel void mainzisegred_nonseg_40040(__global int *global_failure,
                                        __local volatile
                                        int64_t *red_arr_mem_44896_backing_aligned_0,
                                        __local volatile
                                        int64_t *sync_arr_mem_44894_backing_aligned_1,
                                        int64_t m_28886,
                                        int64_t num_groups_40035,
                                        int64_t num_threads_44888, __global
                                        unsigned char *defunc_3_map_res_mem_43704,
                                        __global unsigned char *mem_43709,
                                        __global
                                        unsigned char *mainzicounter_mem_44884,
                                        __global
                                        unsigned char *group_res_arr_mem_44886)
{
    #define segred_group_sizze_40033 (mainzisegred_group_sizze_40032)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44896_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44896_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44894_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44894_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44889;
    int32_t local_tid_44890;
    int64_t group_sizze_44893;
    int32_t wave_sizze_44892;
    int32_t group_tid_44891;
    
    global_tid_44889 = get_global_id(0);
    local_tid_44890 = get_local_id(0);
    group_sizze_44893 = get_local_size(0);
    wave_sizze_44892 = LOCKSTEP_WIDTH;
    group_tid_44891 = get_group_id(0);
    
    int32_t phys_tid_40040;
    
    phys_tid_40040 = global_tid_44889;
    
    __local char *sync_arr_mem_44894;
    
    sync_arr_mem_44894 = (__local char *) sync_arr_mem_44894_backing_0;
    
    __local char *red_arr_mem_44896;
    
    red_arr_mem_44896 = (__local char *) red_arr_mem_44896_backing_1;
    
    int64_t dummy_40038;
    
    dummy_40038 = (int64_t) 0;
    
    int64_t gtid_40039;
    
    gtid_40039 = (int64_t) 0;
    
    int32_t x_acc_44898;
    int64_t chunk_sizze_44899;
    
    chunk_sizze_44899 = smin64(sdiv_up64(m_28886,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_40033 *
                                         num_groups_40035))),
                               sdiv_up64(m_28886 - sext_i32_i64(phys_tid_40040),
                                         num_threads_44888));
    
    int32_t x_29252;
    int32_t x_29253;
    
    // neutral-initialise the accumulators
    {
        x_acc_44898 = 0;
    }
    for (int64_t i_44903 = 0; i_44903 < chunk_sizze_44899; i_44903++) {
        gtid_40039 = sext_i32_i64(phys_tid_40040) + num_threads_44888 * i_44903;
        // apply map function
        {
            int32_t x_29255 = ((__global
                                int32_t *) defunc_3_map_res_mem_43704)[gtid_40039];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_29252 = x_acc_44898;
            }
            // load new values
            {
                x_29253 = x_29255;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_29254 = smax32(x_29252, x_29253);
                
                // store in accumulator
                {
                    x_acc_44898 = defunc_1_op_res_29254;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_29252 = x_acc_44898;
        ((__local int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890)] =
            x_29252;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44904;
    int32_t skip_waves_44905;
    
    skip_waves_44905 = 1;
    
    int32_t x_44900;
    int32_t x_44901;
    
    offset_44904 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44890, sext_i64_i32(segred_group_sizze_40033))) {
            x_44900 = ((__local
                        int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890 +
                                                      offset_44904)];
        }
    }
    offset_44904 = 1;
    while (slt32(offset_44904, wave_sizze_44892)) {
        if (slt32(local_tid_44890 + offset_44904,
                  sext_i64_i32(segred_group_sizze_40033)) && ((local_tid_44890 -
                                                               squot32(local_tid_44890,
                                                                       wave_sizze_44892) *
                                                               wave_sizze_44892) &
                                                              (2 *
                                                               offset_44904 -
                                                               1)) == 0) {
            // read array element
            {
                x_44901 = ((volatile __local
                            int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890 +
                                                          offset_44904)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44902 = smax32(x_44900, x_44901);
                
                x_44900 = defunc_1_op_res_44902;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890)] =
                    x_44900;
            }
        }
        offset_44904 *= 2;
    }
    while (slt32(skip_waves_44905,
                 squot32(sext_i64_i32(segred_group_sizze_40033) +
                         wave_sizze_44892 - 1, wave_sizze_44892))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44904 = skip_waves_44905 * wave_sizze_44892;
        if (slt32(local_tid_44890 + offset_44904,
                  sext_i64_i32(segred_group_sizze_40033)) && ((local_tid_44890 -
                                                               squot32(local_tid_44890,
                                                                       wave_sizze_44892) *
                                                               wave_sizze_44892) ==
                                                              0 &&
                                                              (squot32(local_tid_44890,
                                                                       wave_sizze_44892) &
                                                               (2 *
                                                                skip_waves_44905 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44901 = ((__local
                            int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890 +
                                                          offset_44904)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44902 = smax32(x_44900, x_44901);
                
                x_44900 = defunc_1_op_res_44902;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890)] =
                    x_44900;
            }
        }
        skip_waves_44905 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44890) == (int64_t) 0) {
            x_acc_44898 = x_44900;
        }
    }
    
    int32_t old_counter_44906;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44890 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44886)[sext_i32_i64(group_tid_44891) *
                                                  segred_group_sizze_40033] =
                x_acc_44898;
            mem_fence_global();
            old_counter_44906 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_44884)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44894)[(int64_t) 0] =
                old_counter_44906 == num_groups_40035 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44907;
    
    is_last_group_44907 = ((__local bool *) sync_arr_mem_44894)[(int64_t) 0];
    if (is_last_group_44907) {
        if (local_tid_44890 == 0) {
            old_counter_44906 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainzicounter_mem_44884)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_40035));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44908 = sdiv_up64(num_groups_40035,
                                                      segred_group_sizze_40033);
            
            x_29252 = 0;
            for (int64_t i_44909 = 0; i_44909 < read_per_thread_44908;
                 i_44909++) {
                int64_t group_res_id_44910 = sext_i32_i64(local_tid_44890) *
                        read_per_thread_44908 + i_44909;
                int64_t index_of_group_res_44911 = group_res_id_44910;
                
                if (slt64(group_res_id_44910, num_groups_40035)) {
                    x_29253 = ((__global
                                int32_t *) group_res_arr_mem_44886)[index_of_group_res_44911 *
                                                                    segred_group_sizze_40033];
                    
                    int32_t defunc_1_op_res_29254;
                    
                    defunc_1_op_res_29254 = smax32(x_29252, x_29253);
                    x_29252 = defunc_1_op_res_29254;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890)] =
            x_29252;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44912;
            int32_t skip_waves_44913;
            
            skip_waves_44913 = 1;
            
            int32_t x_44900;
            int32_t x_44901;
            
            offset_44912 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44890,
                          sext_i64_i32(segred_group_sizze_40033))) {
                    x_44900 = ((__local
                                int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890 +
                                                              offset_44912)];
                }
            }
            offset_44912 = 1;
            while (slt32(offset_44912, wave_sizze_44892)) {
                if (slt32(local_tid_44890 + offset_44912,
                          sext_i64_i32(segred_group_sizze_40033)) &&
                    ((local_tid_44890 - squot32(local_tid_44890,
                                                wave_sizze_44892) *
                      wave_sizze_44892) & (2 * offset_44912 - 1)) == 0) {
                    // read array element
                    {
                        x_44901 = ((volatile __local
                                    int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890 +
                                                                  offset_44912)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44902 = smax32(x_44900,
                                                               x_44901);
                        
                        x_44900 = defunc_1_op_res_44902;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890)] =
                            x_44900;
                    }
                }
                offset_44912 *= 2;
            }
            while (slt32(skip_waves_44913,
                         squot32(sext_i64_i32(segred_group_sizze_40033) +
                                 wave_sizze_44892 - 1, wave_sizze_44892))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44912 = skip_waves_44913 * wave_sizze_44892;
                if (slt32(local_tid_44890 + offset_44912,
                          sext_i64_i32(segred_group_sizze_40033)) &&
                    ((local_tid_44890 - squot32(local_tid_44890,
                                                wave_sizze_44892) *
                      wave_sizze_44892) == 0 && (squot32(local_tid_44890,
                                                         wave_sizze_44892) &
                                                 (2 * skip_waves_44913 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44901 = ((__local
                                    int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890 +
                                                                  offset_44912)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44902 = smax32(x_44900,
                                                               x_44901);
                        
                        x_44900 = defunc_1_op_res_44902;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44896)[sext_i32_i64(local_tid_44890)] =
                            x_44900;
                    }
                }
                skip_waves_44913 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44890 == 0) {
                    ((__global int32_t *) mem_43709)[(int64_t) 0] = x_44900;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40033
}
__kernel void mainzisegred_small_38070(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44154_backing_aligned_0,
                                       int64_t N_28885, int64_t m_28886,
                                       int64_t i32_res_28895,
                                       int64_t i32_res_28901,
                                       int64_t num_groups_38209,
                                       int64_t segment_sizze_nonzzero_44147,
                                       __global unsigned char *images_mem_42841,
                                       __global
                                       unsigned char *binop_p_mem_42850,
                                       __global unsigned char *mem_42991,
                                       __global unsigned char *mem_42996)
{
    #define segred_group_sizze_38208 (mainzisegred_group_sizze_38064)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44154_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44154_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44149;
    int32_t local_tid_44150;
    int64_t group_sizze_44153;
    int32_t wave_sizze_44152;
    int32_t group_tid_44151;
    
    global_tid_44149 = get_global_id(0);
    local_tid_44150 = get_local_id(0);
    group_sizze_44153 = get_local_size(0);
    wave_sizze_44152 = LOCKSTEP_WIDTH;
    group_tid_44151 = get_group_id(0);
    
    int32_t phys_tid_38070;
    
    phys_tid_38070 = global_tid_44149;
    
    __local char *red_arr_mem_44154;
    
    red_arr_mem_44154 = (__local char *) red_arr_mem_44154_backing_0;
    
    int32_t phys_group_id_44156;
    
    phys_group_id_44156 = get_group_id(0);
    for (int32_t i_44157 = 0; i_44157 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886 * i32_res_28901 *
                                          i32_res_28901,
                                          squot64(segred_group_sizze_38208,
                                                  segment_sizze_nonzzero_44147))) -
                   phys_group_id_44156, sext_i64_i32(num_groups_38209));
         i_44157++) {
        int32_t virt_group_id_44158 = phys_group_id_44156 + i_44157 *
                sext_i64_i32(num_groups_38209);
        int64_t gtid_38057 = squot64(squot64(sext_i32_i64(local_tid_44150),
                                             segment_sizze_nonzzero_44147) +
                                     sext_i32_i64(virt_group_id_44158) *
                                     squot64(segred_group_sizze_38208,
                                             segment_sizze_nonzzero_44147),
                                     i32_res_28901 * i32_res_28901);
        int64_t gtid_38058 = squot64(squot64(sext_i32_i64(local_tid_44150),
                                             segment_sizze_nonzzero_44147) +
                                     sext_i32_i64(virt_group_id_44158) *
                                     squot64(segred_group_sizze_38208,
                                             segment_sizze_nonzzero_44147) -
                                     squot64(squot64(sext_i32_i64(local_tid_44150),
                                                     segment_sizze_nonzzero_44147) +
                                             sext_i32_i64(virt_group_id_44158) *
                                             squot64(segred_group_sizze_38208,
                                                     segment_sizze_nonzzero_44147),
                                             i32_res_28901 * i32_res_28901) *
                                     (i32_res_28901 * i32_res_28901),
                                     i32_res_28901);
        int64_t gtid_38059 = squot64(sext_i32_i64(local_tid_44150),
                                     segment_sizze_nonzzero_44147) +
                sext_i32_i64(virt_group_id_44158) *
                squot64(segred_group_sizze_38208,
                        segment_sizze_nonzzero_44147) -
                squot64(squot64(sext_i32_i64(local_tid_44150),
                                segment_sizze_nonzzero_44147) +
                        sext_i32_i64(virt_group_id_44158) *
                        squot64(segred_group_sizze_38208,
                                segment_sizze_nonzzero_44147), i32_res_28901 *
                        i32_res_28901) * (i32_res_28901 * i32_res_28901) -
                squot64(squot64(sext_i32_i64(local_tid_44150),
                                segment_sizze_nonzzero_44147) +
                        sext_i32_i64(virt_group_id_44158) *
                        squot64(segred_group_sizze_38208,
                                segment_sizze_nonzzero_44147) -
                        squot64(squot64(sext_i32_i64(local_tid_44150),
                                        segment_sizze_nonzzero_44147) +
                                sext_i32_i64(virt_group_id_44158) *
                                squot64(segred_group_sizze_38208,
                                        segment_sizze_nonzzero_44147),
                                i32_res_28901 * i32_res_28901) *
                        (i32_res_28901 * i32_res_28901), i32_res_28901) *
                i32_res_28901;
        int64_t gtid_38069 = srem64(sext_i32_i64(local_tid_44150),
                                    i32_res_28895);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28895) && (((slt64(gtid_38057,
                                                              m_28886) &&
                                                        slt64(gtid_38058,
                                                              i32_res_28901)) &&
                                                       slt64(gtid_38059,
                                                             i32_res_28901)) &&
                                                      slt64(sext_i32_i64(local_tid_44150),
                                                            i32_res_28895 *
                                                            squot64(segred_group_sizze_38208,
                                                                    segment_sizze_nonzzero_44147)))) {
                float x_38218 = ((__global
                                  float *) images_mem_42841)[gtid_38057 *
                                                             N_28885 +
                                                             gtid_38069];
                float x_38219 = ((__global
                                  float *) binop_p_mem_42850)[gtid_38058 *
                                                              N_28885 +
                                                              gtid_38069];
                float x_38220 = ((__global float *) mem_42991)[gtid_38059 *
                                                               N_28885 +
                                                               gtid_38069];
                float x_38221 = x_38219 * x_38220;
                bool isnan_res_38222;
                
                isnan_res_38222 = futrts_isnan32(x_38218);
                
                float y_38223;
                
                if (isnan_res_38222) {
                    y_38223 = 0.0F;
                } else {
                    y_38223 = 1.0F;
                }
                
                float defunc_2_f_res_38224 = x_38221 * y_38223;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150)] =
                        defunc_2_f_res_38224;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28895)) {
            // perform segmented scan to imitate reduction
            {
                float x_38212;
                float x_38213;
                float x_44159;
                float x_44160;
                bool ltid_in_bounds_44162;
                
                ltid_in_bounds_44162 = slt64(sext_i32_i64(local_tid_44150),
                                             i32_res_28895 *
                                             squot64(segred_group_sizze_38208,
                                                     segment_sizze_nonzzero_44147));
                
                int32_t skip_threads_44163;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44162) {
                        x_38213 = ((volatile __local
                                    float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150)];
                        if ((local_tid_44150 - squot32(local_tid_44150, 32) *
                             32) == 0) {
                            x_38212 = x_38213;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44163 = 1;
                    while (slt32(skip_threads_44163, 32)) {
                        if (sle32(skip_threads_44163, local_tid_44150 -
                                  squot32(local_tid_44150, 32) * 32) &&
                            ltid_in_bounds_44162) {
                            // read operands
                            {
                                x_38212 = ((volatile __local
                                            float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150) -
                                                                        sext_i32_i64(skip_threads_44163)];
                            }
                            // perform operation
                            {
                                bool inactive_44164 =
                                     slt64(srem64(sext_i32_i64(local_tid_44150),
                                                  i32_res_28895),
                                           sext_i32_i64(local_tid_44150) -
                                           sext_i32_i64(local_tid_44150 -
                                           skip_threads_44163));
                                
                                if (inactive_44164) {
                                    x_38212 = x_38213;
                                }
                                if (!inactive_44164) {
                                    float defunc_1_op_res_38214 = x_38212 +
                                          x_38213;
                                    
                                    x_38212 = defunc_1_op_res_38214;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44152, skip_threads_44163)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44163, local_tid_44150 -
                                  squot32(local_tid_44150, 32) * 32) &&
                            ltid_in_bounds_44162) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150)] =
                                    x_38212;
                                x_38213 = x_38212;
                            }
                        }
                        if (sle32(wave_sizze_44152, skip_threads_44163)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44163 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44150 - squot32(local_tid_44150, 32) * 32) ==
                        31 && ltid_in_bounds_44162) {
                        ((volatile __local
                          float *) red_arr_mem_44154)[sext_i32_i64(squot32(local_tid_44150,
                                                                           32))] =
                            x_38212;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44165;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44150, 32) == 0 &&
                            ltid_in_bounds_44162) {
                            x_44160 = ((volatile __local
                                        float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150)];
                            if ((local_tid_44150 - squot32(local_tid_44150,
                                                           32) * 32) == 0) {
                                x_44159 = x_44160;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44165 = 1;
                        while (slt32(skip_threads_44165, 32)) {
                            if (sle32(skip_threads_44165, local_tid_44150 -
                                      squot32(local_tid_44150, 32) * 32) &&
                                (squot32(local_tid_44150, 32) == 0 &&
                                 ltid_in_bounds_44162)) {
                                // read operands
                                {
                                    x_44159 = ((volatile __local
                                                float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150) -
                                                                            sext_i32_i64(skip_threads_44165)];
                                }
                                // perform operation
                                {
                                    bool inactive_44166 =
                                         slt64(srem64(sext_i32_i64(local_tid_44150 *
                                                      32 + 32 - 1),
                                                      i32_res_28895),
                                               sext_i32_i64(local_tid_44150 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44150 -
                                                             skip_threads_44165) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44166) {
                                        x_44159 = x_44160;
                                    }
                                    if (!inactive_44166) {
                                        float defunc_1_op_res_44161 = x_44159 +
                                              x_44160;
                                        
                                        x_44159 = defunc_1_op_res_44161;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44152, skip_threads_44165)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44165, local_tid_44150 -
                                      squot32(local_tid_44150, 32) * 32) &&
                                (squot32(local_tid_44150, 32) == 0 &&
                                 ltid_in_bounds_44162)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150)] =
                                        x_44159;
                                    x_44160 = x_44159;
                                }
                            }
                            if (sle32(wave_sizze_44152, skip_threads_44165)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44165 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44150, 32) == 0 ||
                          !ltid_in_bounds_44162)) {
                        // read operands
                        {
                            x_38213 = x_38212;
                            x_38212 = ((__local
                                        float *) red_arr_mem_44154)[sext_i32_i64(squot32(local_tid_44150,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44167 =
                                 slt64(srem64(sext_i32_i64(local_tid_44150),
                                              i32_res_28895),
                                       sext_i32_i64(local_tid_44150) -
                                       sext_i32_i64(squot32(local_tid_44150,
                                                            32) * 32 - 1));
                            
                            if (inactive_44167) {
                                x_38212 = x_38213;
                            }
                            if (!inactive_44167) {
                                float defunc_1_op_res_38214 = x_38212 + x_38213;
                                
                                x_38212 = defunc_1_op_res_38214;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150)] =
                                x_38212;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44150, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44154)[sext_i32_i64(local_tid_44150)] =
                            x_38213;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44158) *
                      squot64(segred_group_sizze_38208,
                              segment_sizze_nonzzero_44147) +
                      sext_i32_i64(local_tid_44150), m_28886 * i32_res_28901 *
                      i32_res_28901) && slt64(sext_i32_i64(local_tid_44150),
                                              squot64(segred_group_sizze_38208,
                                                      segment_sizze_nonzzero_44147))) {
                ((__global
                  float *) mem_42996)[squot64(sext_i32_i64(virt_group_id_44158) *
                                              squot64(segred_group_sizze_38208,
                                                      segment_sizze_nonzzero_44147) +
                                              sext_i32_i64(local_tid_44150),
                                              i32_res_28901 * i32_res_28901) *
                                      (i32_res_28901 * i32_res_28901) +
                                      squot64(sext_i32_i64(virt_group_id_44158) *
                                              squot64(segred_group_sizze_38208,
                                                      segment_sizze_nonzzero_44147) +
                                              sext_i32_i64(local_tid_44150) -
                                              squot64(sext_i32_i64(virt_group_id_44158) *
                                                      squot64(segred_group_sizze_38208,
                                                              segment_sizze_nonzzero_44147) +
                                                      sext_i32_i64(local_tid_44150),
                                                      i32_res_28901 *
                                                      i32_res_28901) *
                                              (i32_res_28901 * i32_res_28901),
                                              i32_res_28901) * i32_res_28901 +
                                      (sext_i32_i64(virt_group_id_44158) *
                                       squot64(segred_group_sizze_38208,
                                               segment_sizze_nonzzero_44147) +
                                       sext_i32_i64(local_tid_44150) -
                                       squot64(sext_i32_i64(virt_group_id_44158) *
                                               squot64(segred_group_sizze_38208,
                                                       segment_sizze_nonzzero_44147) +
                                               sext_i32_i64(local_tid_44150),
                                               i32_res_28901 * i32_res_28901) *
                                       (i32_res_28901 * i32_res_28901) -
                                       squot64(sext_i32_i64(virt_group_id_44158) *
                                               squot64(segred_group_sizze_38208,
                                                       segment_sizze_nonzzero_44147) +
                                               sext_i32_i64(local_tid_44150) -
                                               squot64(sext_i32_i64(virt_group_id_44158) *
                                                       squot64(segred_group_sizze_38208,
                                                               segment_sizze_nonzzero_44147) +
                                                       sext_i32_i64(local_tid_44150),
                                                       i32_res_28901 *
                                                       i32_res_28901) *
                                               (i32_res_28901 * i32_res_28901),
                                               i32_res_28901) *
                                       i32_res_28901)] = ((__local
                                                           float *) red_arr_mem_44154)[(sext_i32_i64(local_tid_44150) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44147 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_38208
}
__kernel void mainzisegred_small_39117(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44351_backing_aligned_0,
                                       int64_t N_28885, int64_t m_28886,
                                       int64_t i32_res_28895,
                                       int64_t i32_res_28901,
                                       int64_t num_groups_39170,
                                       int64_t segment_sizze_nonzzero_44344,
                                       __global unsigned char *images_mem_42841,
                                       __global
                                       unsigned char *binop_p_mem_42850,
                                       __global unsigned char *mem_43304)
{
    #define segred_group_sizze_39169 (mainzisegred_group_sizze_39111)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44351_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44351_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44346;
    int32_t local_tid_44347;
    int64_t group_sizze_44350;
    int32_t wave_sizze_44349;
    int32_t group_tid_44348;
    
    global_tid_44346 = get_global_id(0);
    local_tid_44347 = get_local_id(0);
    group_sizze_44350 = get_local_size(0);
    wave_sizze_44349 = LOCKSTEP_WIDTH;
    group_tid_44348 = get_group_id(0);
    
    int32_t phys_tid_39117;
    
    phys_tid_39117 = global_tid_44346;
    
    __local char *red_arr_mem_44351;
    
    red_arr_mem_44351 = (__local char *) red_arr_mem_44351_backing_0;
    
    int32_t phys_group_id_44353;
    
    phys_group_id_44353 = get_group_id(0);
    for (int32_t i_44354 = 0; i_44354 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886 * i32_res_28901,
                                          squot64(segred_group_sizze_39169,
                                                  segment_sizze_nonzzero_44344))) -
                   phys_group_id_44353, sext_i64_i32(num_groups_39170));
         i_44354++) {
        int32_t virt_group_id_44355 = phys_group_id_44353 + i_44354 *
                sext_i64_i32(num_groups_39170);
        int64_t gtid_39106 = squot64(squot64(sext_i32_i64(local_tid_44347),
                                             segment_sizze_nonzzero_44344) +
                                     sext_i32_i64(virt_group_id_44355) *
                                     squot64(segred_group_sizze_39169,
                                             segment_sizze_nonzzero_44344),
                                     i32_res_28901);
        int64_t gtid_39107 = squot64(sext_i32_i64(local_tid_44347),
                                     segment_sizze_nonzzero_44344) +
                sext_i32_i64(virt_group_id_44355) *
                squot64(segred_group_sizze_39169,
                        segment_sizze_nonzzero_44344) -
                squot64(squot64(sext_i32_i64(local_tid_44347),
                                segment_sizze_nonzzero_44344) +
                        sext_i32_i64(virt_group_id_44355) *
                        squot64(segred_group_sizze_39169,
                                segment_sizze_nonzzero_44344), i32_res_28901) *
                i32_res_28901;
        int64_t gtid_39116 = srem64(sext_i32_i64(local_tid_44347),
                                    i32_res_28895);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28895) && ((slt64(gtid_39106,
                                                             m_28886) &&
                                                       slt64(gtid_39107,
                                                             i32_res_28901)) &&
                                                      slt64(sext_i32_i64(local_tid_44347),
                                                            i32_res_28895 *
                                                            squot64(segred_group_sizze_39169,
                                                                    segment_sizze_nonzzero_44344)))) {
                float x_39179 = ((__global
                                  float *) images_mem_42841)[gtid_39106 *
                                                             N_28885 +
                                                             gtid_39116];
                bool isnan_res_39180;
                
                isnan_res_39180 = futrts_isnan32(x_39179);
                
                float defunc_1_f_res_39181;
                
                if (isnan_res_39180) {
                    defunc_1_f_res_39181 = 0.0F;
                } else {
                    float x_39178 = ((__global
                                      float *) binop_p_mem_42850)[gtid_39107 *
                                                                  N_28885 +
                                                                  gtid_39116];
                    float defunc_1_f_res_f_res_39182 = x_39178 * x_39179;
                    
                    defunc_1_f_res_39181 = defunc_1_f_res_f_res_39182;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347)] =
                        defunc_1_f_res_39181;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28895)) {
            // perform segmented scan to imitate reduction
            {
                float x_39173;
                float x_39174;
                float x_44356;
                float x_44357;
                bool ltid_in_bounds_44359;
                
                ltid_in_bounds_44359 = slt64(sext_i32_i64(local_tid_44347),
                                             i32_res_28895 *
                                             squot64(segred_group_sizze_39169,
                                                     segment_sizze_nonzzero_44344));
                
                int32_t skip_threads_44360;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44359) {
                        x_39174 = ((volatile __local
                                    float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347)];
                        if ((local_tid_44347 - squot32(local_tid_44347, 32) *
                             32) == 0) {
                            x_39173 = x_39174;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44360 = 1;
                    while (slt32(skip_threads_44360, 32)) {
                        if (sle32(skip_threads_44360, local_tid_44347 -
                                  squot32(local_tid_44347, 32) * 32) &&
                            ltid_in_bounds_44359) {
                            // read operands
                            {
                                x_39173 = ((volatile __local
                                            float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347) -
                                                                        sext_i32_i64(skip_threads_44360)];
                            }
                            // perform operation
                            {
                                bool inactive_44361 =
                                     slt64(srem64(sext_i32_i64(local_tid_44347),
                                                  i32_res_28895),
                                           sext_i32_i64(local_tid_44347) -
                                           sext_i32_i64(local_tid_44347 -
                                           skip_threads_44360));
                                
                                if (inactive_44361) {
                                    x_39173 = x_39174;
                                }
                                if (!inactive_44361) {
                                    float defunc_1_op_res_39175 = x_39173 +
                                          x_39174;
                                    
                                    x_39173 = defunc_1_op_res_39175;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44349, skip_threads_44360)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44360, local_tid_44347 -
                                  squot32(local_tid_44347, 32) * 32) &&
                            ltid_in_bounds_44359) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347)] =
                                    x_39173;
                                x_39174 = x_39173;
                            }
                        }
                        if (sle32(wave_sizze_44349, skip_threads_44360)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44360 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44347 - squot32(local_tid_44347, 32) * 32) ==
                        31 && ltid_in_bounds_44359) {
                        ((volatile __local
                          float *) red_arr_mem_44351)[sext_i32_i64(squot32(local_tid_44347,
                                                                           32))] =
                            x_39173;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44362;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44347, 32) == 0 &&
                            ltid_in_bounds_44359) {
                            x_44357 = ((volatile __local
                                        float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347)];
                            if ((local_tid_44347 - squot32(local_tid_44347,
                                                           32) * 32) == 0) {
                                x_44356 = x_44357;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44362 = 1;
                        while (slt32(skip_threads_44362, 32)) {
                            if (sle32(skip_threads_44362, local_tid_44347 -
                                      squot32(local_tid_44347, 32) * 32) &&
                                (squot32(local_tid_44347, 32) == 0 &&
                                 ltid_in_bounds_44359)) {
                                // read operands
                                {
                                    x_44356 = ((volatile __local
                                                float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347) -
                                                                            sext_i32_i64(skip_threads_44362)];
                                }
                                // perform operation
                                {
                                    bool inactive_44363 =
                                         slt64(srem64(sext_i32_i64(local_tid_44347 *
                                                      32 + 32 - 1),
                                                      i32_res_28895),
                                               sext_i32_i64(local_tid_44347 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44347 -
                                                             skip_threads_44362) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44363) {
                                        x_44356 = x_44357;
                                    }
                                    if (!inactive_44363) {
                                        float defunc_1_op_res_44358 = x_44356 +
                                              x_44357;
                                        
                                        x_44356 = defunc_1_op_res_44358;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44349, skip_threads_44362)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44362, local_tid_44347 -
                                      squot32(local_tid_44347, 32) * 32) &&
                                (squot32(local_tid_44347, 32) == 0 &&
                                 ltid_in_bounds_44359)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347)] =
                                        x_44356;
                                    x_44357 = x_44356;
                                }
                            }
                            if (sle32(wave_sizze_44349, skip_threads_44362)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44362 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44347, 32) == 0 ||
                          !ltid_in_bounds_44359)) {
                        // read operands
                        {
                            x_39174 = x_39173;
                            x_39173 = ((__local
                                        float *) red_arr_mem_44351)[sext_i32_i64(squot32(local_tid_44347,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44364 =
                                 slt64(srem64(sext_i32_i64(local_tid_44347),
                                              i32_res_28895),
                                       sext_i32_i64(local_tid_44347) -
                                       sext_i32_i64(squot32(local_tid_44347,
                                                            32) * 32 - 1));
                            
                            if (inactive_44364) {
                                x_39173 = x_39174;
                            }
                            if (!inactive_44364) {
                                float defunc_1_op_res_39175 = x_39173 + x_39174;
                                
                                x_39173 = defunc_1_op_res_39175;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347)] =
                                x_39173;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44347, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44351)[sext_i32_i64(local_tid_44347)] =
                            x_39174;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44355) *
                      squot64(segred_group_sizze_39169,
                              segment_sizze_nonzzero_44344) +
                      sext_i32_i64(local_tid_44347), m_28886 * i32_res_28901) &&
                slt64(sext_i32_i64(local_tid_44347),
                      squot64(segred_group_sizze_39169,
                              segment_sizze_nonzzero_44344))) {
                ((__global
                  float *) mem_43304)[squot64(sext_i32_i64(virt_group_id_44355) *
                                              squot64(segred_group_sizze_39169,
                                                      segment_sizze_nonzzero_44344) +
                                              sext_i32_i64(local_tid_44347),
                                              i32_res_28901) * i32_res_28901 +
                                      (sext_i32_i64(virt_group_id_44355) *
                                       squot64(segred_group_sizze_39169,
                                               segment_sizze_nonzzero_44344) +
                                       sext_i32_i64(local_tid_44347) -
                                       squot64(sext_i32_i64(virt_group_id_44355) *
                                               squot64(segred_group_sizze_39169,
                                                       segment_sizze_nonzzero_44344) +
                                               sext_i32_i64(local_tid_44347),
                                               i32_res_28901) *
                                       i32_res_28901)] = ((__local
                                                           float *) red_arr_mem_44351)[(sext_i32_i64(local_tid_44347) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44344 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39169
}
__kernel void mainzisegred_small_39254(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44439_backing_aligned_0,
                                       int64_t m_28886, int64_t i32_res_28901,
                                       int64_t num_groups_39303,
                                       int64_t segment_sizze_nonzzero_44432,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43089,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43310,
                                       __global unsigned char *mem_43370)
{
    #define segred_group_sizze_39302 (mainzisegred_group_sizze_39248)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44439_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44439_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44434;
    int32_t local_tid_44435;
    int64_t group_sizze_44438;
    int32_t wave_sizze_44437;
    int32_t group_tid_44436;
    
    global_tid_44434 = get_global_id(0);
    local_tid_44435 = get_local_id(0);
    group_sizze_44438 = get_local_size(0);
    wave_sizze_44437 = LOCKSTEP_WIDTH;
    group_tid_44436 = get_group_id(0);
    
    int32_t phys_tid_39254;
    
    phys_tid_39254 = global_tid_44434;
    
    __local char *red_arr_mem_44439;
    
    red_arr_mem_44439 = (__local char *) red_arr_mem_44439_backing_0;
    
    int32_t phys_group_id_44441;
    
    phys_group_id_44441 = get_group_id(0);
    for (int32_t i_44442 = 0; i_44442 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886 * i32_res_28901,
                                          squot64(segred_group_sizze_39302,
                                                  segment_sizze_nonzzero_44432))) -
                   phys_group_id_44441, sext_i64_i32(num_groups_39303));
         i_44442++) {
        int32_t virt_group_id_44443 = phys_group_id_44441 + i_44442 *
                sext_i64_i32(num_groups_39303);
        int64_t gtid_39243 = squot64(squot64(sext_i32_i64(local_tid_44435),
                                             segment_sizze_nonzzero_44432) +
                                     sext_i32_i64(virt_group_id_44443) *
                                     squot64(segred_group_sizze_39302,
                                             segment_sizze_nonzzero_44432),
                                     i32_res_28901);
        int64_t gtid_39244 = squot64(sext_i32_i64(local_tid_44435),
                                     segment_sizze_nonzzero_44432) +
                sext_i32_i64(virt_group_id_44443) *
                squot64(segred_group_sizze_39302,
                        segment_sizze_nonzzero_44432) -
                squot64(squot64(sext_i32_i64(local_tid_44435),
                                segment_sizze_nonzzero_44432) +
                        sext_i32_i64(virt_group_id_44443) *
                        squot64(segred_group_sizze_39302,
                                segment_sizze_nonzzero_44432), i32_res_28901) *
                i32_res_28901;
        int64_t gtid_39253 = srem64(sext_i32_i64(local_tid_44435),
                                    i32_res_28901);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28901) && ((slt64(gtid_39243,
                                                             m_28886) &&
                                                       slt64(gtid_39244,
                                                             i32_res_28901)) &&
                                                      slt64(sext_i32_i64(local_tid_44435),
                                                            i32_res_28901 *
                                                            squot64(segred_group_sizze_39302,
                                                                    segment_sizze_nonzzero_44432)))) {
                float x_39312 = ((__global
                                  float *) defunc_3_map_res_mem_43310)[gtid_39243 *
                                                                       i32_res_28901 +
                                                                       gtid_39253];
                float x_39313 = ((__global
                                  float *) defunc_3_map_res_mem_43089)[gtid_39243 *
                                                                       (i32_res_28901 *
                                                                        i32_res_28901) +
                                                                       gtid_39244 *
                                                                       i32_res_28901 +
                                                                       gtid_39253];
                float defunc_1_f_res_39314 = x_39312 * x_39313;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                        defunc_1_f_res_39314;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28901)) {
            // perform segmented scan to imitate reduction
            {
                float x_39306;
                float x_39307;
                float x_44444;
                float x_44445;
                bool ltid_in_bounds_44447;
                
                ltid_in_bounds_44447 = slt64(sext_i32_i64(local_tid_44435),
                                             i32_res_28901 *
                                             squot64(segred_group_sizze_39302,
                                                     segment_sizze_nonzzero_44432));
                
                int32_t skip_threads_44448;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44447) {
                        x_39307 = ((volatile __local
                                    float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435)];
                        if ((local_tid_44435 - squot32(local_tid_44435, 32) *
                             32) == 0) {
                            x_39306 = x_39307;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44448 = 1;
                    while (slt32(skip_threads_44448, 32)) {
                        if (sle32(skip_threads_44448, local_tid_44435 -
                                  squot32(local_tid_44435, 32) * 32) &&
                            ltid_in_bounds_44447) {
                            // read operands
                            {
                                x_39306 = ((volatile __local
                                            float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435) -
                                                                        sext_i32_i64(skip_threads_44448)];
                            }
                            // perform operation
                            {
                                bool inactive_44449 =
                                     slt64(srem64(sext_i32_i64(local_tid_44435),
                                                  i32_res_28901),
                                           sext_i32_i64(local_tid_44435) -
                                           sext_i32_i64(local_tid_44435 -
                                           skip_threads_44448));
                                
                                if (inactive_44449) {
                                    x_39306 = x_39307;
                                }
                                if (!inactive_44449) {
                                    float defunc_1_op_res_39308 = x_39306 +
                                          x_39307;
                                    
                                    x_39306 = defunc_1_op_res_39308;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44437, skip_threads_44448)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44448, local_tid_44435 -
                                  squot32(local_tid_44435, 32) * 32) &&
                            ltid_in_bounds_44447) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                                    x_39306;
                                x_39307 = x_39306;
                            }
                        }
                        if (sle32(wave_sizze_44437, skip_threads_44448)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44448 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44435 - squot32(local_tid_44435, 32) * 32) ==
                        31 && ltid_in_bounds_44447) {
                        ((volatile __local
                          float *) red_arr_mem_44439)[sext_i32_i64(squot32(local_tid_44435,
                                                                           32))] =
                            x_39306;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44450;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44435, 32) == 0 &&
                            ltid_in_bounds_44447) {
                            x_44445 = ((volatile __local
                                        float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435)];
                            if ((local_tid_44435 - squot32(local_tid_44435,
                                                           32) * 32) == 0) {
                                x_44444 = x_44445;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44450 = 1;
                        while (slt32(skip_threads_44450, 32)) {
                            if (sle32(skip_threads_44450, local_tid_44435 -
                                      squot32(local_tid_44435, 32) * 32) &&
                                (squot32(local_tid_44435, 32) == 0 &&
                                 ltid_in_bounds_44447)) {
                                // read operands
                                {
                                    x_44444 = ((volatile __local
                                                float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435) -
                                                                            sext_i32_i64(skip_threads_44450)];
                                }
                                // perform operation
                                {
                                    bool inactive_44451 =
                                         slt64(srem64(sext_i32_i64(local_tid_44435 *
                                                      32 + 32 - 1),
                                                      i32_res_28901),
                                               sext_i32_i64(local_tid_44435 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44435 -
                                                             skip_threads_44450) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44451) {
                                        x_44444 = x_44445;
                                    }
                                    if (!inactive_44451) {
                                        float defunc_1_op_res_44446 = x_44444 +
                                              x_44445;
                                        
                                        x_44444 = defunc_1_op_res_44446;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44437, skip_threads_44450)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44450, local_tid_44435 -
                                      squot32(local_tid_44435, 32) * 32) &&
                                (squot32(local_tid_44435, 32) == 0 &&
                                 ltid_in_bounds_44447)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                                        x_44444;
                                    x_44445 = x_44444;
                                }
                            }
                            if (sle32(wave_sizze_44437, skip_threads_44450)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44450 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44435, 32) == 0 ||
                          !ltid_in_bounds_44447)) {
                        // read operands
                        {
                            x_39307 = x_39306;
                            x_39306 = ((__local
                                        float *) red_arr_mem_44439)[sext_i32_i64(squot32(local_tid_44435,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44452 =
                                 slt64(srem64(sext_i32_i64(local_tid_44435),
                                              i32_res_28901),
                                       sext_i32_i64(local_tid_44435) -
                                       sext_i32_i64(squot32(local_tid_44435,
                                                            32) * 32 - 1));
                            
                            if (inactive_44452) {
                                x_39306 = x_39307;
                            }
                            if (!inactive_44452) {
                                float defunc_1_op_res_39308 = x_39306 + x_39307;
                                
                                x_39306 = defunc_1_op_res_39308;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                                x_39306;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44435, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44439)[sext_i32_i64(local_tid_44435)] =
                            x_39307;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44443) *
                      squot64(segred_group_sizze_39302,
                              segment_sizze_nonzzero_44432) +
                      sext_i32_i64(local_tid_44435), m_28886 * i32_res_28901) &&
                slt64(sext_i32_i64(local_tid_44435),
                      squot64(segred_group_sizze_39302,
                              segment_sizze_nonzzero_44432))) {
                ((__global
                  float *) mem_43370)[squot64(sext_i32_i64(virt_group_id_44443) *
                                              squot64(segred_group_sizze_39302,
                                                      segment_sizze_nonzzero_44432) +
                                              sext_i32_i64(local_tid_44435),
                                              i32_res_28901) * i32_res_28901 +
                                      (sext_i32_i64(virt_group_id_44443) *
                                       squot64(segred_group_sizze_39302,
                                               segment_sizze_nonzzero_44432) +
                                       sext_i32_i64(local_tid_44435) -
                                       squot64(sext_i32_i64(virt_group_id_44443) *
                                               squot64(segred_group_sizze_39302,
                                                       segment_sizze_nonzzero_44432) +
                                               sext_i32_i64(local_tid_44435),
                                               i32_res_28901) *
                                       i32_res_28901)] = ((__local
                                                           float *) red_arr_mem_44439)[(sext_i32_i64(local_tid_44435) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44432 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39302
}
__kernel void mainzisegred_small_39384(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44571_backing_aligned_0,
                                       int64_t N_28885, int64_t m_28886,
                                       int64_t i32_res_28901,
                                       int64_t num_groups_39431,
                                       int64_t segment_sizze_nonzzero_44564,
                                       __global unsigned char *mem_42857,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43376,
                                       __global unsigned char *mem_43594)
{
    #define segred_group_sizze_39430 (mainzisegred_group_sizze_39378)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44571_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44571_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44566;
    int32_t local_tid_44567;
    int64_t group_sizze_44570;
    int32_t wave_sizze_44569;
    int32_t group_tid_44568;
    
    global_tid_44566 = get_global_id(0);
    local_tid_44567 = get_local_id(0);
    group_sizze_44570 = get_local_size(0);
    wave_sizze_44569 = LOCKSTEP_WIDTH;
    group_tid_44568 = get_group_id(0);
    
    int32_t phys_tid_39384;
    
    phys_tid_39384 = global_tid_44566;
    
    __local char *red_arr_mem_44571;
    
    red_arr_mem_44571 = (__local char *) red_arr_mem_44571_backing_0;
    
    int32_t phys_group_id_44573;
    
    phys_group_id_44573 = get_group_id(0);
    for (int32_t i_44574 = 0; i_44574 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886 * N_28885,
                                          squot64(segred_group_sizze_39430,
                                                  segment_sizze_nonzzero_44564))) -
                   phys_group_id_44573, sext_i64_i32(num_groups_39431));
         i_44574++) {
        int32_t virt_group_id_44575 = phys_group_id_44573 + i_44574 *
                sext_i64_i32(num_groups_39431);
        int64_t gtid_39373 = squot64(squot64(sext_i32_i64(local_tid_44567),
                                             segment_sizze_nonzzero_44564) +
                                     sext_i32_i64(virt_group_id_44575) *
                                     squot64(segred_group_sizze_39430,
                                             segment_sizze_nonzzero_44564),
                                     N_28885);
        int64_t gtid_39374 = squot64(sext_i32_i64(local_tid_44567),
                                     segment_sizze_nonzzero_44564) +
                sext_i32_i64(virt_group_id_44575) *
                squot64(segred_group_sizze_39430,
                        segment_sizze_nonzzero_44564) -
                squot64(squot64(sext_i32_i64(local_tid_44567),
                                segment_sizze_nonzzero_44564) +
                        sext_i32_i64(virt_group_id_44575) *
                        squot64(segred_group_sizze_39430,
                                segment_sizze_nonzzero_44564), N_28885) *
                N_28885;
        int64_t gtid_39383 = srem64(sext_i32_i64(local_tid_44567),
                                    i32_res_28901);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28901) && ((slt64(gtid_39373,
                                                             m_28886) &&
                                                       slt64(gtid_39374,
                                                             N_28885)) &&
                                                      slt64(sext_i32_i64(local_tid_44567),
                                                            i32_res_28901 *
                                                            squot64(segred_group_sizze_39430,
                                                                    segment_sizze_nonzzero_44564)))) {
                float x_39439 = ((__global
                                  float *) defunc_4_map_res_mem_43376)[gtid_39373 *
                                                                       i32_res_28901 +
                                                                       gtid_39383];
                float x_39440 = ((__global float *) mem_42857)[gtid_39374 *
                                                               i32_res_28901 +
                                                               gtid_39383];
                float defunc_1_f_res_39441 = x_39439 * x_39440;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567)] =
                        defunc_1_f_res_39441;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28901)) {
            // perform segmented scan to imitate reduction
            {
                float x_39434;
                float x_39435;
                float x_44576;
                float x_44577;
                bool ltid_in_bounds_44579;
                
                ltid_in_bounds_44579 = slt64(sext_i32_i64(local_tid_44567),
                                             i32_res_28901 *
                                             squot64(segred_group_sizze_39430,
                                                     segment_sizze_nonzzero_44564));
                
                int32_t skip_threads_44580;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44579) {
                        x_39435 = ((volatile __local
                                    float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567)];
                        if ((local_tid_44567 - squot32(local_tid_44567, 32) *
                             32) == 0) {
                            x_39434 = x_39435;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44580 = 1;
                    while (slt32(skip_threads_44580, 32)) {
                        if (sle32(skip_threads_44580, local_tid_44567 -
                                  squot32(local_tid_44567, 32) * 32) &&
                            ltid_in_bounds_44579) {
                            // read operands
                            {
                                x_39434 = ((volatile __local
                                            float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567) -
                                                                        sext_i32_i64(skip_threads_44580)];
                            }
                            // perform operation
                            {
                                bool inactive_44581 =
                                     slt64(srem64(sext_i32_i64(local_tid_44567),
                                                  i32_res_28901),
                                           sext_i32_i64(local_tid_44567) -
                                           sext_i32_i64(local_tid_44567 -
                                           skip_threads_44580));
                                
                                if (inactive_44581) {
                                    x_39434 = x_39435;
                                }
                                if (!inactive_44581) {
                                    float defunc_1_op_res_39436 = x_39434 +
                                          x_39435;
                                    
                                    x_39434 = defunc_1_op_res_39436;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44569, skip_threads_44580)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44580, local_tid_44567 -
                                  squot32(local_tid_44567, 32) * 32) &&
                            ltid_in_bounds_44579) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567)] =
                                    x_39434;
                                x_39435 = x_39434;
                            }
                        }
                        if (sle32(wave_sizze_44569, skip_threads_44580)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44580 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44567 - squot32(local_tid_44567, 32) * 32) ==
                        31 && ltid_in_bounds_44579) {
                        ((volatile __local
                          float *) red_arr_mem_44571)[sext_i32_i64(squot32(local_tid_44567,
                                                                           32))] =
                            x_39434;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44582;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44567, 32) == 0 &&
                            ltid_in_bounds_44579) {
                            x_44577 = ((volatile __local
                                        float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567)];
                            if ((local_tid_44567 - squot32(local_tid_44567,
                                                           32) * 32) == 0) {
                                x_44576 = x_44577;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44582 = 1;
                        while (slt32(skip_threads_44582, 32)) {
                            if (sle32(skip_threads_44582, local_tid_44567 -
                                      squot32(local_tid_44567, 32) * 32) &&
                                (squot32(local_tid_44567, 32) == 0 &&
                                 ltid_in_bounds_44579)) {
                                // read operands
                                {
                                    x_44576 = ((volatile __local
                                                float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567) -
                                                                            sext_i32_i64(skip_threads_44582)];
                                }
                                // perform operation
                                {
                                    bool inactive_44583 =
                                         slt64(srem64(sext_i32_i64(local_tid_44567 *
                                                      32 + 32 - 1),
                                                      i32_res_28901),
                                               sext_i32_i64(local_tid_44567 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44567 -
                                                             skip_threads_44582) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44583) {
                                        x_44576 = x_44577;
                                    }
                                    if (!inactive_44583) {
                                        float defunc_1_op_res_44578 = x_44576 +
                                              x_44577;
                                        
                                        x_44576 = defunc_1_op_res_44578;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44569, skip_threads_44582)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44582, local_tid_44567 -
                                      squot32(local_tid_44567, 32) * 32) &&
                                (squot32(local_tid_44567, 32) == 0 &&
                                 ltid_in_bounds_44579)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567)] =
                                        x_44576;
                                    x_44577 = x_44576;
                                }
                            }
                            if (sle32(wave_sizze_44569, skip_threads_44582)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44582 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44567, 32) == 0 ||
                          !ltid_in_bounds_44579)) {
                        // read operands
                        {
                            x_39435 = x_39434;
                            x_39434 = ((__local
                                        float *) red_arr_mem_44571)[sext_i32_i64(squot32(local_tid_44567,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44584 =
                                 slt64(srem64(sext_i32_i64(local_tid_44567),
                                              i32_res_28901),
                                       sext_i32_i64(local_tid_44567) -
                                       sext_i32_i64(squot32(local_tid_44567,
                                                            32) * 32 - 1));
                            
                            if (inactive_44584) {
                                x_39434 = x_39435;
                            }
                            if (!inactive_44584) {
                                float defunc_1_op_res_39436 = x_39434 + x_39435;
                                
                                x_39434 = defunc_1_op_res_39436;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567)] =
                                x_39434;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44567, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44571)[sext_i32_i64(local_tid_44567)] =
                            x_39435;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44575) *
                      squot64(segred_group_sizze_39430,
                              segment_sizze_nonzzero_44564) +
                      sext_i32_i64(local_tid_44567), m_28886 * N_28885) &&
                slt64(sext_i32_i64(local_tid_44567),
                      squot64(segred_group_sizze_39430,
                              segment_sizze_nonzzero_44564))) {
                ((__global
                  float *) mem_43594)[squot64(sext_i32_i64(virt_group_id_44575) *
                                              squot64(segred_group_sizze_39430,
                                                      segment_sizze_nonzzero_44564) +
                                              sext_i32_i64(local_tid_44567),
                                              N_28885) * N_28885 +
                                      (sext_i32_i64(virt_group_id_44575) *
                                       squot64(segred_group_sizze_39430,
                                               segment_sizze_nonzzero_44564) +
                                       sext_i32_i64(local_tid_44567) -
                                       squot64(sext_i32_i64(virt_group_id_44575) *
                                               squot64(segred_group_sizze_39430,
                                                       segment_sizze_nonzzero_44564) +
                                               sext_i32_i64(local_tid_44567),
                                               N_28885) * N_28885)] = ((__local
                                                                        float *) red_arr_mem_44571)[(sext_i32_i64(local_tid_44567) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44564 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39430
}
__kernel void mainzisegred_small_39950(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44823_backing_aligned_0,
                                       int64_t N_28885, int64_t m_28886,
                                       int64_t i32_res_28895,
                                       int64_t num_groups_39997,
                                       int64_t segment_sizze_nonzzero_44816,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43638,
                                       __global unsigned char *mem_43692,
                                       __global unsigned char *mem_43695)
{
    #define segred_group_sizze_39996 (mainzisegred_group_sizze_39944)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44823_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44823_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44818;
    int32_t local_tid_44819;
    int64_t group_sizze_44822;
    int32_t wave_sizze_44821;
    int32_t group_tid_44820;
    
    global_tid_44818 = get_global_id(0);
    local_tid_44819 = get_local_id(0);
    group_sizze_44822 = get_local_size(0);
    wave_sizze_44821 = LOCKSTEP_WIDTH;
    group_tid_44820 = get_group_id(0);
    
    int32_t phys_tid_39950;
    
    phys_tid_39950 = global_tid_44818;
    
    __local char *red_arr_mem_44823;
    
    red_arr_mem_44823 = (__local char *) red_arr_mem_44823_backing_0;
    
    int32_t phys_group_id_44825;
    
    phys_group_id_44825 = get_group_id(0);
    for (int32_t i_44826 = 0; i_44826 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886,
                                          squot64(segred_group_sizze_39996,
                                                  segment_sizze_nonzzero_44816))) -
                   phys_group_id_44825, sext_i64_i32(num_groups_39997));
         i_44826++) {
        int32_t virt_group_id_44827 = phys_group_id_44825 + i_44826 *
                sext_i64_i32(num_groups_39997);
        int64_t gtid_39941 = squot64(sext_i32_i64(local_tid_44819),
                                     segment_sizze_nonzzero_44816) +
                sext_i32_i64(virt_group_id_44827) *
                squot64(segred_group_sizze_39996, segment_sizze_nonzzero_44816);
        int64_t gtid_39949 = srem64(sext_i32_i64(local_tid_44819),
                                    i32_res_28895);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28895) && (slt64(gtid_39941,
                                                            m_28886) &&
                                                      slt64(sext_i32_i64(local_tid_44819),
                                                            i32_res_28895 *
                                                            squot64(segred_group_sizze_39996,
                                                                    segment_sizze_nonzzero_44816)))) {
                int32_t defunc_0_f_res_40004 = ((__global
                                                 int32_t *) mem_43692)[gtid_39941];
                int32_t index_primexp_40928 = sext_i64_i32(gtid_39949);
                bool cond_40006 = slt32(index_primexp_40928,
                                        defunc_0_f_res_40004);
                float defunc_0_f_res_40007;
                
                if (cond_40006) {
                    int64_t i_40008 = sext_i32_i64(index_primexp_40928);
                    float defunc_0_f_res_t_res_40009 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_39941 *
                                                                                              N_28885 +
                                                                                              i_40008];
                    
                    defunc_0_f_res_40007 = defunc_0_f_res_t_res_40009;
                } else {
                    defunc_0_f_res_40007 = 0.0F;
                }
                
                float defunc_0_f_res_40010 = defunc_0_f_res_40007 *
                      defunc_0_f_res_40007;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819)] =
                        defunc_0_f_res_40010;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28895)) {
            // perform segmented scan to imitate reduction
            {
                float x_40000;
                float x_40001;
                float x_44828;
                float x_44829;
                bool ltid_in_bounds_44831;
                
                ltid_in_bounds_44831 = slt64(sext_i32_i64(local_tid_44819),
                                             i32_res_28895 *
                                             squot64(segred_group_sizze_39996,
                                                     segment_sizze_nonzzero_44816));
                
                int32_t skip_threads_44832;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44831) {
                        x_40001 = ((volatile __local
                                    float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819)];
                        if ((local_tid_44819 - squot32(local_tid_44819, 32) *
                             32) == 0) {
                            x_40000 = x_40001;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44832 = 1;
                    while (slt32(skip_threads_44832, 32)) {
                        if (sle32(skip_threads_44832, local_tid_44819 -
                                  squot32(local_tid_44819, 32) * 32) &&
                            ltid_in_bounds_44831) {
                            // read operands
                            {
                                x_40000 = ((volatile __local
                                            float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819) -
                                                                        sext_i32_i64(skip_threads_44832)];
                            }
                            // perform operation
                            {
                                bool inactive_44833 =
                                     slt64(srem64(sext_i32_i64(local_tid_44819),
                                                  i32_res_28895),
                                           sext_i32_i64(local_tid_44819) -
                                           sext_i32_i64(local_tid_44819 -
                                           skip_threads_44832));
                                
                                if (inactive_44833) {
                                    x_40000 = x_40001;
                                }
                                if (!inactive_44833) {
                                    float defunc_1_op_res_40002 = x_40000 +
                                          x_40001;
                                    
                                    x_40000 = defunc_1_op_res_40002;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44821, skip_threads_44832)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44832, local_tid_44819 -
                                  squot32(local_tid_44819, 32) * 32) &&
                            ltid_in_bounds_44831) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819)] =
                                    x_40000;
                                x_40001 = x_40000;
                            }
                        }
                        if (sle32(wave_sizze_44821, skip_threads_44832)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44832 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44819 - squot32(local_tid_44819, 32) * 32) ==
                        31 && ltid_in_bounds_44831) {
                        ((volatile __local
                          float *) red_arr_mem_44823)[sext_i32_i64(squot32(local_tid_44819,
                                                                           32))] =
                            x_40000;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44834;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44819, 32) == 0 &&
                            ltid_in_bounds_44831) {
                            x_44829 = ((volatile __local
                                        float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819)];
                            if ((local_tid_44819 - squot32(local_tid_44819,
                                                           32) * 32) == 0) {
                                x_44828 = x_44829;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44834 = 1;
                        while (slt32(skip_threads_44834, 32)) {
                            if (sle32(skip_threads_44834, local_tid_44819 -
                                      squot32(local_tid_44819, 32) * 32) &&
                                (squot32(local_tid_44819, 32) == 0 &&
                                 ltid_in_bounds_44831)) {
                                // read operands
                                {
                                    x_44828 = ((volatile __local
                                                float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819) -
                                                                            sext_i32_i64(skip_threads_44834)];
                                }
                                // perform operation
                                {
                                    bool inactive_44835 =
                                         slt64(srem64(sext_i32_i64(local_tid_44819 *
                                                      32 + 32 - 1),
                                                      i32_res_28895),
                                               sext_i32_i64(local_tid_44819 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44819 -
                                                             skip_threads_44834) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44835) {
                                        x_44828 = x_44829;
                                    }
                                    if (!inactive_44835) {
                                        float defunc_1_op_res_44830 = x_44828 +
                                              x_44829;
                                        
                                        x_44828 = defunc_1_op_res_44830;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44821, skip_threads_44834)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44834, local_tid_44819 -
                                      squot32(local_tid_44819, 32) * 32) &&
                                (squot32(local_tid_44819, 32) == 0 &&
                                 ltid_in_bounds_44831)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819)] =
                                        x_44828;
                                    x_44829 = x_44828;
                                }
                            }
                            if (sle32(wave_sizze_44821, skip_threads_44834)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44834 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44819, 32) == 0 ||
                          !ltid_in_bounds_44831)) {
                        // read operands
                        {
                            x_40001 = x_40000;
                            x_40000 = ((__local
                                        float *) red_arr_mem_44823)[sext_i32_i64(squot32(local_tid_44819,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44836 =
                                 slt64(srem64(sext_i32_i64(local_tid_44819),
                                              i32_res_28895),
                                       sext_i32_i64(local_tid_44819) -
                                       sext_i32_i64(squot32(local_tid_44819,
                                                            32) * 32 - 1));
                            
                            if (inactive_44836) {
                                x_40000 = x_40001;
                            }
                            if (!inactive_44836) {
                                float defunc_1_op_res_40002 = x_40000 + x_40001;
                                
                                x_40000 = defunc_1_op_res_40002;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819)] =
                                x_40000;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44819, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44823)[sext_i32_i64(local_tid_44819)] =
                            x_40001;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44827) *
                      squot64(segred_group_sizze_39996,
                              segment_sizze_nonzzero_44816) +
                      sext_i32_i64(local_tid_44819), m_28886) &&
                slt64(sext_i32_i64(local_tid_44819),
                      squot64(segred_group_sizze_39996,
                              segment_sizze_nonzzero_44816))) {
                ((__global
                  float *) mem_43695)[sext_i32_i64(virt_group_id_44827) *
                                      squot64(segred_group_sizze_39996,
                                              segment_sizze_nonzzero_44816) +
                                      sext_i32_i64(local_tid_44819)] = ((__local
                                                                         float *) red_arr_mem_44823)[(sext_i32_i64(local_tid_44819) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44816 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39996
}
__kernel void mainzisegred_small_39971(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44763_backing_aligned_0,
                                       int64_t N_28885, int64_t m_28886,
                                       int64_t i32_res_28895,
                                       int64_t num_groups_39983,
                                       int64_t segment_sizze_nonzzero_44756,
                                       __global unsigned char *images_mem_42841,
                                       __global unsigned char *mem_43692)
{
    #define segred_group_sizze_39982 (mainzisegred_group_sizze_39965)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44763_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44763_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44758;
    int32_t local_tid_44759;
    int64_t group_sizze_44762;
    int32_t wave_sizze_44761;
    int32_t group_tid_44760;
    
    global_tid_44758 = get_global_id(0);
    local_tid_44759 = get_local_id(0);
    group_sizze_44762 = get_local_size(0);
    wave_sizze_44761 = LOCKSTEP_WIDTH;
    group_tid_44760 = get_group_id(0);
    
    int32_t phys_tid_39971;
    
    phys_tid_39971 = global_tid_44758;
    
    __local char *red_arr_mem_44763;
    
    red_arr_mem_44763 = (__local char *) red_arr_mem_44763_backing_0;
    
    int32_t phys_group_id_44765;
    
    phys_group_id_44765 = get_group_id(0);
    for (int32_t i_44766 = 0; i_44766 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886,
                                          squot64(segred_group_sizze_39982,
                                                  segment_sizze_nonzzero_44756))) -
                   phys_group_id_44765, sext_i64_i32(num_groups_39983));
         i_44766++) {
        int32_t virt_group_id_44767 = phys_group_id_44765 + i_44766 *
                sext_i64_i32(num_groups_39983);
        int64_t gtid_39962 = squot64(sext_i32_i64(local_tid_44759),
                                     segment_sizze_nonzzero_44756) +
                sext_i32_i64(virt_group_id_44767) *
                squot64(segred_group_sizze_39982, segment_sizze_nonzzero_44756);
        int64_t gtid_39970 = srem64(sext_i32_i64(local_tid_44759),
                                    i32_res_28895);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28895) && (slt64(gtid_39962,
                                                            m_28886) &&
                                                      slt64(sext_i32_i64(local_tid_44759),
                                                            i32_res_28895 *
                                                            squot64(segred_group_sizze_39982,
                                                                    segment_sizze_nonzzero_44756)))) {
                float x_39990 = ((__global
                                  float *) images_mem_42841)[gtid_39962 *
                                                             N_28885 +
                                                             gtid_39970];
                bool isnan_res_39991;
                
                isnan_res_39991 = futrts_isnan32(x_39990);
                
                bool cond_39992 = !isnan_res_39991;
                int32_t defunc_0_f_res_39993 = btoi_bool_i32(cond_39992);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759)] =
                        defunc_0_f_res_39993;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28895)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_39986;
                int32_t x_39987;
                int32_t x_44768;
                int32_t x_44769;
                bool ltid_in_bounds_44771;
                
                ltid_in_bounds_44771 = slt64(sext_i32_i64(local_tid_44759),
                                             i32_res_28895 *
                                             squot64(segred_group_sizze_39982,
                                                     segment_sizze_nonzzero_44756));
                
                int32_t skip_threads_44772;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44771) {
                        x_39987 = ((volatile __local
                                    int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759)];
                        if ((local_tid_44759 - squot32(local_tid_44759, 32) *
                             32) == 0) {
                            x_39986 = x_39987;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44772 = 1;
                    while (slt32(skip_threads_44772, 32)) {
                        if (sle32(skip_threads_44772, local_tid_44759 -
                                  squot32(local_tid_44759, 32) * 32) &&
                            ltid_in_bounds_44771) {
                            // read operands
                            {
                                x_39986 = ((volatile __local
                                            int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759) -
                                                                          sext_i32_i64(skip_threads_44772)];
                            }
                            // perform operation
                            {
                                bool inactive_44773 =
                                     slt64(srem64(sext_i32_i64(local_tid_44759),
                                                  i32_res_28895),
                                           sext_i32_i64(local_tid_44759) -
                                           sext_i32_i64(local_tid_44759 -
                                           skip_threads_44772));
                                
                                if (inactive_44773) {
                                    x_39986 = x_39987;
                                }
                                if (!inactive_44773) {
                                    int32_t defunc_1_op_res_39988 =
                                            add32(x_39986, x_39987);
                                    
                                    x_39986 = defunc_1_op_res_39988;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44761, skip_threads_44772)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44772, local_tid_44759 -
                                  squot32(local_tid_44759, 32) * 32) &&
                            ltid_in_bounds_44771) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759)] =
                                    x_39986;
                                x_39987 = x_39986;
                            }
                        }
                        if (sle32(wave_sizze_44761, skip_threads_44772)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44772 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44759 - squot32(local_tid_44759, 32) * 32) ==
                        31 && ltid_in_bounds_44771) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44763)[sext_i32_i64(squot32(local_tid_44759,
                                                                             32))] =
                            x_39986;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44774;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44759, 32) == 0 &&
                            ltid_in_bounds_44771) {
                            x_44769 = ((volatile __local
                                        int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759)];
                            if ((local_tid_44759 - squot32(local_tid_44759,
                                                           32) * 32) == 0) {
                                x_44768 = x_44769;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44774 = 1;
                        while (slt32(skip_threads_44774, 32)) {
                            if (sle32(skip_threads_44774, local_tid_44759 -
                                      squot32(local_tid_44759, 32) * 32) &&
                                (squot32(local_tid_44759, 32) == 0 &&
                                 ltid_in_bounds_44771)) {
                                // read operands
                                {
                                    x_44768 = ((volatile __local
                                                int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759) -
                                                                              sext_i32_i64(skip_threads_44774)];
                                }
                                // perform operation
                                {
                                    bool inactive_44775 =
                                         slt64(srem64(sext_i32_i64(local_tid_44759 *
                                                      32 + 32 - 1),
                                                      i32_res_28895),
                                               sext_i32_i64(local_tid_44759 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44759 -
                                                             skip_threads_44774) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44775) {
                                        x_44768 = x_44769;
                                    }
                                    if (!inactive_44775) {
                                        int32_t defunc_1_op_res_44770 =
                                                add32(x_44768, x_44769);
                                        
                                        x_44768 = defunc_1_op_res_44770;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44761, skip_threads_44774)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44774, local_tid_44759 -
                                      squot32(local_tid_44759, 32) * 32) &&
                                (squot32(local_tid_44759, 32) == 0 &&
                                 ltid_in_bounds_44771)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759)] =
                                        x_44768;
                                    x_44769 = x_44768;
                                }
                            }
                            if (sle32(wave_sizze_44761, skip_threads_44774)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44774 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44759, 32) == 0 ||
                          !ltid_in_bounds_44771)) {
                        // read operands
                        {
                            x_39987 = x_39986;
                            x_39986 = ((__local
                                        int32_t *) red_arr_mem_44763)[sext_i32_i64(squot32(local_tid_44759,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44776 =
                                 slt64(srem64(sext_i32_i64(local_tid_44759),
                                              i32_res_28895),
                                       sext_i32_i64(local_tid_44759) -
                                       sext_i32_i64(squot32(local_tid_44759,
                                                            32) * 32 - 1));
                            
                            if (inactive_44776) {
                                x_39986 = x_39987;
                            }
                            if (!inactive_44776) {
                                int32_t defunc_1_op_res_39988 = add32(x_39986,
                                                                      x_39987);
                                
                                x_39986 = defunc_1_op_res_39988;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759)] =
                                x_39986;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44759, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44763)[sext_i32_i64(local_tid_44759)] =
                            x_39987;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44767) *
                      squot64(segred_group_sizze_39982,
                              segment_sizze_nonzzero_44756) +
                      sext_i32_i64(local_tid_44759), m_28886) &&
                slt64(sext_i32_i64(local_tid_44759),
                      squot64(segred_group_sizze_39982,
                              segment_sizze_nonzzero_44756))) {
                ((__global
                  int32_t *) mem_43692)[sext_i32_i64(virt_group_id_44767) *
                                        squot64(segred_group_sizze_39982,
                                                segment_sizze_nonzzero_44756) +
                                        sext_i32_i64(local_tid_44759)] =
                    ((__local
                      int32_t *) red_arr_mem_44763)[(sext_i32_i64(local_tid_44759) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44756 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_39982
}
__kernel void mainzisegred_small_40122(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_44932_backing_aligned_0,
                                       int64_t N_28885, int64_t m_28886,
                                       int64_t i32_res_29256,
                                       int64_t num_groups_40140,
                                       int64_t segment_sizze_nonzzero_44925,
                                       __global
                                       unsigned char *defunc_4_map_res_mem_43638,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43704,
                                       __global
                                       unsigned char *defunc_3_map_res_mem_43705,
                                       __global unsigned char *mem_43738)
{
    #define segred_group_sizze_40139 (mainzisegred_group_sizze_40116)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44932_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44932_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44927;
    int32_t local_tid_44928;
    int64_t group_sizze_44931;
    int32_t wave_sizze_44930;
    int32_t group_tid_44929;
    
    global_tid_44927 = get_global_id(0);
    local_tid_44928 = get_local_id(0);
    group_sizze_44931 = get_local_size(0);
    wave_sizze_44930 = LOCKSTEP_WIDTH;
    group_tid_44929 = get_group_id(0);
    
    int32_t phys_tid_40122;
    
    phys_tid_40122 = global_tid_44927;
    
    __local char *red_arr_mem_44932;
    
    red_arr_mem_44932 = (__local char *) red_arr_mem_44932_backing_0;
    
    int32_t phys_group_id_44934;
    
    phys_group_id_44934 = get_group_id(0);
    for (int32_t i_44935 = 0; i_44935 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886,
                                          squot64(segred_group_sizze_40139,
                                                  segment_sizze_nonzzero_44925))) -
                   phys_group_id_44934, sext_i64_i32(num_groups_40140));
         i_44935++) {
        int32_t virt_group_id_44936 = phys_group_id_44934 + i_44935 *
                sext_i64_i32(num_groups_40140);
        int64_t gtid_40113 = squot64(sext_i32_i64(local_tid_44928),
                                     segment_sizze_nonzzero_44925) +
                sext_i32_i64(virt_group_id_44936) *
                squot64(segred_group_sizze_40139, segment_sizze_nonzzero_44925);
        int64_t gtid_40121 = srem64(sext_i32_i64(local_tid_44928),
                                    i32_res_29256);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_29256) && (slt64(gtid_40113,
                                                            m_28886) &&
                                                      slt64(sext_i32_i64(local_tid_44928),
                                                            i32_res_29256 *
                                                            squot64(segred_group_sizze_40139,
                                                                    segment_sizze_nonzzero_44925)))) {
                int32_t x_40148 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43704)[gtid_40113];
                int32_t index_primexp_40933 = sext_i64_i32(gtid_40121);
                bool cond_40150 = slt32(index_primexp_40933, x_40148);
                float defunc_0_f_res_40151;
                
                if (cond_40150) {
                    int32_t x_40147 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_40113];
                    int32_t x_40152 = add32(x_40147, index_primexp_40933);
                    int32_t x_40153 = sub32(x_40152, x_40148);
                    int32_t i_40154 = add32(1, x_40153);
                    int64_t i_40155 = sext_i32_i64(i_40154);
                    float defunc_0_f_res_t_res_40156 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_40113 *
                                                                                              N_28885 +
                                                                                              i_40155];
                    
                    defunc_0_f_res_40151 = defunc_0_f_res_t_res_40156;
                } else {
                    defunc_0_f_res_40151 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928)] =
                        defunc_0_f_res_40151;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_29256)) {
            // perform segmented scan to imitate reduction
            {
                float x_40143;
                float x_40144;
                float x_44937;
                float x_44938;
                bool ltid_in_bounds_44940;
                
                ltid_in_bounds_44940 = slt64(sext_i32_i64(local_tid_44928),
                                             i32_res_29256 *
                                             squot64(segred_group_sizze_40139,
                                                     segment_sizze_nonzzero_44925));
                
                int32_t skip_threads_44941;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44940) {
                        x_40144 = ((volatile __local
                                    float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928)];
                        if ((local_tid_44928 - squot32(local_tid_44928, 32) *
                             32) == 0) {
                            x_40143 = x_40144;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44941 = 1;
                    while (slt32(skip_threads_44941, 32)) {
                        if (sle32(skip_threads_44941, local_tid_44928 -
                                  squot32(local_tid_44928, 32) * 32) &&
                            ltid_in_bounds_44940) {
                            // read operands
                            {
                                x_40143 = ((volatile __local
                                            float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928) -
                                                                        sext_i32_i64(skip_threads_44941)];
                            }
                            // perform operation
                            {
                                bool inactive_44942 =
                                     slt64(srem64(sext_i32_i64(local_tid_44928),
                                                  i32_res_29256),
                                           sext_i32_i64(local_tid_44928) -
                                           sext_i32_i64(local_tid_44928 -
                                           skip_threads_44941));
                                
                                if (inactive_44942) {
                                    x_40143 = x_40144;
                                }
                                if (!inactive_44942) {
                                    float defunc_1_op_res_40145 = x_40143 +
                                          x_40144;
                                    
                                    x_40143 = defunc_1_op_res_40145;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44930, skip_threads_44941)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44941, local_tid_44928 -
                                  squot32(local_tid_44928, 32) * 32) &&
                            ltid_in_bounds_44940) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928)] =
                                    x_40143;
                                x_40144 = x_40143;
                            }
                        }
                        if (sle32(wave_sizze_44930, skip_threads_44941)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44941 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44928 - squot32(local_tid_44928, 32) * 32) ==
                        31 && ltid_in_bounds_44940) {
                        ((volatile __local
                          float *) red_arr_mem_44932)[sext_i32_i64(squot32(local_tid_44928,
                                                                           32))] =
                            x_40143;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44943;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44928, 32) == 0 &&
                            ltid_in_bounds_44940) {
                            x_44938 = ((volatile __local
                                        float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928)];
                            if ((local_tid_44928 - squot32(local_tid_44928,
                                                           32) * 32) == 0) {
                                x_44937 = x_44938;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44943 = 1;
                        while (slt32(skip_threads_44943, 32)) {
                            if (sle32(skip_threads_44943, local_tid_44928 -
                                      squot32(local_tid_44928, 32) * 32) &&
                                (squot32(local_tid_44928, 32) == 0 &&
                                 ltid_in_bounds_44940)) {
                                // read operands
                                {
                                    x_44937 = ((volatile __local
                                                float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928) -
                                                                            sext_i32_i64(skip_threads_44943)];
                                }
                                // perform operation
                                {
                                    bool inactive_44944 =
                                         slt64(srem64(sext_i32_i64(local_tid_44928 *
                                                      32 + 32 - 1),
                                                      i32_res_29256),
                                               sext_i32_i64(local_tid_44928 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44928 -
                                                             skip_threads_44943) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44944) {
                                        x_44937 = x_44938;
                                    }
                                    if (!inactive_44944) {
                                        float defunc_1_op_res_44939 = x_44937 +
                                              x_44938;
                                        
                                        x_44937 = defunc_1_op_res_44939;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44930, skip_threads_44943)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44943, local_tid_44928 -
                                      squot32(local_tid_44928, 32) * 32) &&
                                (squot32(local_tid_44928, 32) == 0 &&
                                 ltid_in_bounds_44940)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928)] =
                                        x_44937;
                                    x_44938 = x_44937;
                                }
                            }
                            if (sle32(wave_sizze_44930, skip_threads_44943)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44943 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44928, 32) == 0 ||
                          !ltid_in_bounds_44940)) {
                        // read operands
                        {
                            x_40144 = x_40143;
                            x_40143 = ((__local
                                        float *) red_arr_mem_44932)[sext_i32_i64(squot32(local_tid_44928,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44945 =
                                 slt64(srem64(sext_i32_i64(local_tid_44928),
                                              i32_res_29256),
                                       sext_i32_i64(local_tid_44928) -
                                       sext_i32_i64(squot32(local_tid_44928,
                                                            32) * 32 - 1));
                            
                            if (inactive_44945) {
                                x_40143 = x_40144;
                            }
                            if (!inactive_44945) {
                                float defunc_1_op_res_40145 = x_40143 + x_40144;
                                
                                x_40143 = defunc_1_op_res_40145;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928)] =
                                x_40143;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44928, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44932)[sext_i32_i64(local_tid_44928)] =
                            x_40144;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44936) *
                      squot64(segred_group_sizze_40139,
                              segment_sizze_nonzzero_44925) +
                      sext_i32_i64(local_tid_44928), m_28886) &&
                slt64(sext_i32_i64(local_tid_44928),
                      squot64(segred_group_sizze_40139,
                              segment_sizze_nonzzero_44925))) {
                ((__global
                  float *) mem_43738)[sext_i32_i64(virt_group_id_44936) *
                                      squot64(segred_group_sizze_40139,
                                              segment_sizze_nonzzero_44925) +
                                      sext_i32_i64(local_tid_44928)] = ((__local
                                                                         float *) red_arr_mem_44932)[(sext_i32_i64(local_tid_44928) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44925 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40139
}
__kernel void mainzisegred_small_40623(__global int *global_failure,
                                       __local volatile
                                       int64_t *red_arr_mem_45094_backing_aligned_0,
                                       __local volatile
                                       int64_t *red_arr_mem_45092_backing_aligned_1,
                                       __local volatile
                                       int64_t *red_arr_mem_45090_backing_aligned_2,
                                       int64_t m_28886,
                                       int64_t iota32_arg_29281,
                                       int64_t num_groups_40794,
                                       int64_t segment_sizze_nonzzero_45083,
                                       __global unsigned char *mem_43744,
                                       __global unsigned char *mem_43756,
                                       __global unsigned char *mem_43758,
                                       __global unsigned char *mem_43762,
                                       __global unsigned char *mem_43765,
                                       __global unsigned char *mem_43767,
                                       __global unsigned char *mem_43769)
{
    #define segred_group_sizze_40793 (mainzisegred_group_sizze_40617)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45094_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45094_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45092_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45092_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45090_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45090_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45085;
    int32_t local_tid_45086;
    int64_t group_sizze_45089;
    int32_t wave_sizze_45088;
    int32_t group_tid_45087;
    
    global_tid_45085 = get_global_id(0);
    local_tid_45086 = get_local_id(0);
    group_sizze_45089 = get_local_size(0);
    wave_sizze_45088 = LOCKSTEP_WIDTH;
    group_tid_45087 = get_group_id(0);
    
    int32_t phys_tid_40623;
    
    phys_tid_40623 = global_tid_45085;
    
    __local char *red_arr_mem_45090;
    
    red_arr_mem_45090 = (__local char *) red_arr_mem_45090_backing_0;
    
    __local char *red_arr_mem_45092;
    
    red_arr_mem_45092 = (__local char *) red_arr_mem_45092_backing_1;
    
    __local char *red_arr_mem_45094;
    
    red_arr_mem_45094 = (__local char *) red_arr_mem_45094_backing_2;
    
    int32_t phys_group_id_45096;
    
    phys_group_id_45096 = get_group_id(0);
    for (int32_t i_45097 = 0; i_45097 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28886,
                                          squot64(segred_group_sizze_40793,
                                                  segment_sizze_nonzzero_45083))) -
                   phys_group_id_45096, sext_i64_i32(num_groups_40794));
         i_45097++) {
        int32_t virt_group_id_45098 = phys_group_id_45096 + i_45097 *
                sext_i64_i32(num_groups_40794);
        int64_t gtid_40614 = squot64(sext_i32_i64(local_tid_45086),
                                     segment_sizze_nonzzero_45083) +
                sext_i32_i64(virt_group_id_45098) *
                squot64(segred_group_sizze_40793, segment_sizze_nonzzero_45083);
        int64_t gtid_40622 = srem64(sext_i32_i64(local_tid_45086),
                                    iota32_arg_29281);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_29281) && (slt64(gtid_40614,
                                                               m_28886) &&
                                                         slt64(sext_i32_i64(local_tid_45086),
                                                               iota32_arg_29281 *
                                                               squot64(segred_group_sizze_40793,
                                                                       segment_sizze_nonzzero_45083)))) {
                int32_t y_40813 = ((__global int32_t *) mem_43758)[gtid_40614];
                float y_40814 = ((__global float *) mem_43756)[gtid_40614];
                float x_40818 = ((__global float *) mem_43762)[gtid_40614 *
                                                               iota32_arg_29281 +
                                                               gtid_40622];
                float x_40819 = ((__global float *) mem_43744)[gtid_40622];
                int32_t index_primexp_40947 = sext_i64_i32(gtid_40622);
                float defunc_0_f_res_40822 = x_40818 / y_40814;
                bool cond_40823 = slt32(index_primexp_40947, y_40813);
                bool isnan_res_40824;
                
                isnan_res_40824 = futrts_isnan32(defunc_0_f_res_40822);
                
                bool cond_t_res_40825 = !isnan_res_40824;
                bool x_40826 = cond_40823 && cond_t_res_40825;
                float abs_res_40827 = (float) fabs(defunc_0_f_res_40822);
                bool defunc_2_f_res_t_res_40828 = x_40819 < abs_res_40827;
                bool x_40829 = x_40826 && defunc_2_f_res_t_res_40828;
                float defunc_1_f_res_40830;
                
                if (cond_40823) {
                    defunc_1_f_res_40830 = defunc_0_f_res_40822;
                } else {
                    defunc_1_f_res_40830 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086)] =
                        x_40829;
                    ((__local
                      int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086)] =
                        index_primexp_40947;
                    ((__local
                      float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086)] =
                        defunc_1_f_res_40830;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_29281)) {
            // perform segmented scan to imitate reduction
            {
                bool x_40799;
                int32_t x_40800;
                float x_40801;
                bool x_40802;
                int32_t x_40803;
                float x_40804;
                bool x_45099;
                int32_t x_45100;
                float x_45101;
                bool x_45102;
                int32_t x_45103;
                float x_45104;
                bool ltid_in_bounds_45113;
                
                ltid_in_bounds_45113 = slt64(sext_i32_i64(local_tid_45086),
                                             iota32_arg_29281 *
                                             squot64(segred_group_sizze_40793,
                                                     segment_sizze_nonzzero_45083));
                
                int32_t skip_threads_45114;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45113) {
                        x_40802 = ((volatile __local
                                    bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086)];
                        x_40803 = ((volatile __local
                                    int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086)];
                        x_40804 = ((volatile __local
                                    float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086)];
                        if ((local_tid_45086 - squot32(local_tid_45086, 32) *
                             32) == 0) {
                            x_40799 = x_40802;
                            x_40800 = x_40803;
                            x_40801 = x_40804;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45114 = 1;
                    while (slt32(skip_threads_45114, 32)) {
                        if (sle32(skip_threads_45114, local_tid_45086 -
                                  squot32(local_tid_45086, 32) * 32) &&
                            ltid_in_bounds_45113) {
                            // read operands
                            {
                                x_40799 = ((volatile __local
                                            bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086) -
                                                                       sext_i32_i64(skip_threads_45114)];
                                x_40800 = ((volatile __local
                                            int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086) -
                                                                          sext_i32_i64(skip_threads_45114)];
                                x_40801 = ((volatile __local
                                            float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086) -
                                                                        sext_i32_i64(skip_threads_45114)];
                            }
                            // perform operation
                            {
                                bool inactive_45115 =
                                     slt64(srem64(sext_i32_i64(local_tid_45086),
                                                  iota32_arg_29281),
                                           sext_i32_i64(local_tid_45086) -
                                           sext_i32_i64(local_tid_45086 -
                                           skip_threads_45114));
                                
                                if (inactive_45115) {
                                    x_40799 = x_40802;
                                    x_40800 = x_40803;
                                    x_40801 = x_40804;
                                }
                                if (!inactive_45115) {
                                    bool defunc_1_op_res_40805;
                                    int32_t defunc_1_op_res_40806;
                                    
                                    if (x_40799) {
                                        defunc_1_op_res_40805 = x_40799;
                                        defunc_1_op_res_40806 = x_40800;
                                    } else {
                                        bool x_40807 = x_40802 && x_40802;
                                        bool x_40808 = !x_40802;
                                        bool y_40809 = x_40799 && x_40808;
                                        bool defunc_1_op_res_f_res_40810 =
                                             x_40807 || y_40809;
                                        int32_t defunc_1_op_res_f_res_40811;
                                        
                                        if (x_40802) {
                                            defunc_1_op_res_f_res_40811 =
                                                x_40803;
                                        } else {
                                            defunc_1_op_res_f_res_40811 =
                                                x_40800;
                                        }
                                        defunc_1_op_res_40805 =
                                            defunc_1_op_res_f_res_40810;
                                        defunc_1_op_res_40806 =
                                            defunc_1_op_res_f_res_40811;
                                    }
                                    
                                    float defunc_1_op_res_40812 = x_40801 +
                                          x_40804;
                                    
                                    x_40799 = defunc_1_op_res_40805;
                                    x_40800 = defunc_1_op_res_40806;
                                    x_40801 = defunc_1_op_res_40812;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45088, skip_threads_45114)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45114, local_tid_45086 -
                                  squot32(local_tid_45086, 32) * 32) &&
                            ltid_in_bounds_45113) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086)] =
                                    x_40799;
                                x_40802 = x_40799;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086)] =
                                    x_40800;
                                x_40803 = x_40800;
                                ((volatile __local
                                  float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086)] =
                                    x_40801;
                                x_40804 = x_40801;
                            }
                        }
                        if (sle32(wave_sizze_45088, skip_threads_45114)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45114 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45086 - squot32(local_tid_45086, 32) * 32) ==
                        31 && ltid_in_bounds_45113) {
                        ((volatile __local
                          bool *) red_arr_mem_45090)[sext_i32_i64(squot32(local_tid_45086,
                                                                          32))] =
                            x_40799;
                        ((volatile __local
                          int32_t *) red_arr_mem_45092)[sext_i32_i64(squot32(local_tid_45086,
                                                                             32))] =
                            x_40800;
                        ((volatile __local
                          float *) red_arr_mem_45094)[sext_i32_i64(squot32(local_tid_45086,
                                                                           32))] =
                            x_40801;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45116;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45086, 32) == 0 &&
                            ltid_in_bounds_45113) {
                            x_45102 = ((volatile __local
                                        bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086)];
                            x_45103 = ((volatile __local
                                        int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086)];
                            x_45104 = ((volatile __local
                                        float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086)];
                            if ((local_tid_45086 - squot32(local_tid_45086,
                                                           32) * 32) == 0) {
                                x_45099 = x_45102;
                                x_45100 = x_45103;
                                x_45101 = x_45104;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45116 = 1;
                        while (slt32(skip_threads_45116, 32)) {
                            if (sle32(skip_threads_45116, local_tid_45086 -
                                      squot32(local_tid_45086, 32) * 32) &&
                                (squot32(local_tid_45086, 32) == 0 &&
                                 ltid_in_bounds_45113)) {
                                // read operands
                                {
                                    x_45099 = ((volatile __local
                                                bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086) -
                                                                           sext_i32_i64(skip_threads_45116)];
                                    x_45100 = ((volatile __local
                                                int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086) -
                                                                              sext_i32_i64(skip_threads_45116)];
                                    x_45101 = ((volatile __local
                                                float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086) -
                                                                            sext_i32_i64(skip_threads_45116)];
                                }
                                // perform operation
                                {
                                    bool inactive_45117 =
                                         slt64(srem64(sext_i32_i64(local_tid_45086 *
                                                      32 + 32 - 1),
                                                      iota32_arg_29281),
                                               sext_i32_i64(local_tid_45086 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45086 -
                                                             skip_threads_45116) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45117) {
                                        x_45099 = x_45102;
                                        x_45100 = x_45103;
                                        x_45101 = x_45104;
                                    }
                                    if (!inactive_45117) {
                                        bool defunc_1_op_res_45105;
                                        int32_t defunc_1_op_res_45106;
                                        
                                        if (x_45099) {
                                            defunc_1_op_res_45105 = x_45099;
                                            defunc_1_op_res_45106 = x_45100;
                                        } else {
                                            bool x_45107 = x_45102 && x_45102;
                                            bool x_45108 = !x_45102;
                                            bool y_45109 = x_45099 && x_45108;
                                            bool defunc_1_op_res_f_res_45110 =
                                                 x_45107 || y_45109;
                                            int32_t defunc_1_op_res_f_res_45111;
                                            
                                            if (x_45102) {
                                                defunc_1_op_res_f_res_45111 =
                                                    x_45103;
                                            } else {
                                                defunc_1_op_res_f_res_45111 =
                                                    x_45100;
                                            }
                                            defunc_1_op_res_45105 =
                                                defunc_1_op_res_f_res_45110;
                                            defunc_1_op_res_45106 =
                                                defunc_1_op_res_f_res_45111;
                                        }
                                        
                                        float defunc_1_op_res_45112 = x_45101 +
                                              x_45104;
                                        
                                        x_45099 = defunc_1_op_res_45105;
                                        x_45100 = defunc_1_op_res_45106;
                                        x_45101 = defunc_1_op_res_45112;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45088, skip_threads_45116)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45116, local_tid_45086 -
                                      squot32(local_tid_45086, 32) * 32) &&
                                (squot32(local_tid_45086, 32) == 0 &&
                                 ltid_in_bounds_45113)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086)] =
                                        x_45099;
                                    x_45102 = x_45099;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086)] =
                                        x_45100;
                                    x_45103 = x_45100;
                                    ((volatile __local
                                      float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086)] =
                                        x_45101;
                                    x_45104 = x_45101;
                                }
                            }
                            if (sle32(wave_sizze_45088, skip_threads_45116)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45116 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45086, 32) == 0 ||
                          !ltid_in_bounds_45113)) {
                        // read operands
                        {
                            x_40802 = x_40799;
                            x_40803 = x_40800;
                            x_40804 = x_40801;
                            x_40799 = ((__local
                                        bool *) red_arr_mem_45090)[sext_i32_i64(squot32(local_tid_45086,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_40800 = ((__local
                                        int32_t *) red_arr_mem_45092)[sext_i32_i64(squot32(local_tid_45086,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_40801 = ((__local
                                        float *) red_arr_mem_45094)[sext_i32_i64(squot32(local_tid_45086,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45118 =
                                 slt64(srem64(sext_i32_i64(local_tid_45086),
                                              iota32_arg_29281),
                                       sext_i32_i64(local_tid_45086) -
                                       sext_i32_i64(squot32(local_tid_45086,
                                                            32) * 32 - 1));
                            
                            if (inactive_45118) {
                                x_40799 = x_40802;
                                x_40800 = x_40803;
                                x_40801 = x_40804;
                            }
                            if (!inactive_45118) {
                                bool defunc_1_op_res_40805;
                                int32_t defunc_1_op_res_40806;
                                
                                if (x_40799) {
                                    defunc_1_op_res_40805 = x_40799;
                                    defunc_1_op_res_40806 = x_40800;
                                } else {
                                    bool x_40807 = x_40802 && x_40802;
                                    bool x_40808 = !x_40802;
                                    bool y_40809 = x_40799 && x_40808;
                                    bool defunc_1_op_res_f_res_40810 =
                                         x_40807 || y_40809;
                                    int32_t defunc_1_op_res_f_res_40811;
                                    
                                    if (x_40802) {
                                        defunc_1_op_res_f_res_40811 = x_40803;
                                    } else {
                                        defunc_1_op_res_f_res_40811 = x_40800;
                                    }
                                    defunc_1_op_res_40805 =
                                        defunc_1_op_res_f_res_40810;
                                    defunc_1_op_res_40806 =
                                        defunc_1_op_res_f_res_40811;
                                }
                                
                                float defunc_1_op_res_40812 = x_40801 + x_40804;
                                
                                x_40799 = defunc_1_op_res_40805;
                                x_40800 = defunc_1_op_res_40806;
                                x_40801 = defunc_1_op_res_40812;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086)] =
                                x_40799;
                            ((__local
                              int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086)] =
                                x_40800;
                            ((__local
                              float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086)] =
                                x_40801;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45086, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45090)[sext_i32_i64(local_tid_45086)] =
                            x_40802;
                        ((__local
                          int32_t *) red_arr_mem_45092)[sext_i32_i64(local_tid_45086)] =
                            x_40803;
                        ((__local
                          float *) red_arr_mem_45094)[sext_i32_i64(local_tid_45086)] =
                            x_40804;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45098) *
                      squot64(segred_group_sizze_40793,
                              segment_sizze_nonzzero_45083) +
                      sext_i32_i64(local_tid_45086), m_28886) &&
                slt64(sext_i32_i64(local_tid_45086),
                      squot64(segred_group_sizze_40793,
                              segment_sizze_nonzzero_45083))) {
                ((__global
                  bool *) mem_43765)[sext_i32_i64(virt_group_id_45098) *
                                     squot64(segred_group_sizze_40793,
                                             segment_sizze_nonzzero_45083) +
                                     sext_i32_i64(local_tid_45086)] = ((__local
                                                                        bool *) red_arr_mem_45090)[(sext_i32_i64(local_tid_45086) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_45083 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43767)[sext_i32_i64(virt_group_id_45098) *
                                        squot64(segred_group_sizze_40793,
                                                segment_sizze_nonzzero_45083) +
                                        sext_i32_i64(local_tid_45086)] =
                    ((__local
                      int32_t *) red_arr_mem_45092)[(sext_i32_i64(local_tid_45086) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_45083 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43769)[sext_i32_i64(virt_group_id_45098) *
                                      squot64(segred_group_sizze_40793,
                                              segment_sizze_nonzzero_45083) +
                                      sext_i32_i64(local_tid_45086)] = ((__local
                                                                         float *) red_arr_mem_45094)[(sext_i32_i64(local_tid_45086) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_45083 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_40793
}
__kernel void mainDetailedzicopy_44253(int64_t m_27551, int64_t i32_res_27699,
                                       int64_t ctx_param_ext_43040,
                                       int64_t ctx_param_ext_43041,
                                       int64_t ctx_param_ext_43043, __global
                                       unsigned char *mem_param_43045, __global
                                       unsigned char *mem_43050)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44253;
    int32_t copy_ltid_44254;
    int32_t copy_gid_44255;
    
    copy_gtid_44253 = get_global_id(0);
    copy_ltid_44254 = get_local_id(0);
    copy_gid_44255 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44253), m_27551 * i32_res_27699)) {
        ((__global float *) mem_43050)[(sext_i32_i64(copy_gtid_44253) -
                                        squot64(sext_i32_i64(copy_gtid_44253),
                                                i32_res_27699) *
                                        i32_res_27699) * m_27551 +
                                       squot64(sext_i32_i64(copy_gtid_44253),
                                               i32_res_27699)] = ((__global
                                                                   float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44253),
                                                                                                      i32_res_27699) *
                                                                                              ctx_param_ext_43041 +
                                                                                              (sext_i32_i64(copy_gtid_44253) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44253),
                                                                                                       i32_res_27699) *
                                                                                               i32_res_27699) *
                                                                                              ctx_param_ext_43043)];
    }
    
  error_0:
    return;
}
__kernel void mainDetailedziscan_stage1_31722(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44665_backing_aligned_0,
                                              int64_t N_27550, int64_t m_27551,
                                              int32_t num_threads_44659,
                                              __global
                                              unsigned char *images_mem_42841,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43600,
                                              __global unsigned char *mem_43623,
                                              __global unsigned char *mem_43626)
{
    #define segscan_group_sizze_31739 (mainDetailedzisegscan_group_sizze_31716)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44665_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44665_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44660;
    int32_t local_tid_44661;
    int64_t group_sizze_44664;
    int32_t wave_sizze_44663;
    int32_t group_tid_44662;
    
    global_tid_44660 = get_global_id(0);
    local_tid_44661 = get_local_id(0);
    group_sizze_44664 = get_local_size(0);
    wave_sizze_44663 = LOCKSTEP_WIDTH;
    group_tid_44662 = get_group_id(0);
    
    int32_t phys_tid_31722;
    
    phys_tid_31722 = global_tid_44660;
    
    __local char *scan_arr_mem_44665;
    
    scan_arr_mem_44665 = (__local char *) scan_arr_mem_44665_backing_0;
    
    int64_t x_31744;
    int64_t x_31745;
    
    x_31744 = (int64_t) 0;
    for (int64_t j_44667 = 0; j_44667 < sdiv_up64(m_27551 * N_27550,
                                                  sext_i32_i64(num_threads_44659));
         j_44667++) {
        int64_t chunk_offset_44668 = segscan_group_sizze_31739 * j_44667 +
                sext_i32_i64(group_tid_44662) * (segscan_group_sizze_31739 *
                                                 sdiv_up64(m_27551 * N_27550,
                                                           sext_i32_i64(num_threads_44659)));
        int64_t flat_idx_44669 = chunk_offset_44668 +
                sext_i32_i64(local_tid_44661);
        int64_t gtid_31713 = squot64(flat_idx_44669, N_27550);
        int64_t gtid_31721 = flat_idx_44669 - squot64(flat_idx_44669, N_27550) *
                N_27550;
        
        // threads in bounds read input
        {
            if (slt64(gtid_31713, m_27551) && slt64(gtid_31721, N_27550)) {
                float x_31749 = ((__global
                                  float *) images_mem_42841)[gtid_31713 *
                                                             N_27550 +
                                                             gtid_31721];
                bool isnan_res_31751;
                
                isnan_res_31751 = futrts_isnan32(x_31749);
                
                bool cond_31752 = !isnan_res_31751;
                float defunc_0_f_res_31753;
                
                if (cond_31752) {
                    float x_31750 = ((__global
                                      float *) defunc_3_map_res_mem_43600)[gtid_31713 *
                                                                           N_27550 +
                                                                           gtid_31721];
                    float defunc_0_f_res_t_res_31754 = x_31749 - x_31750;
                    
                    defunc_0_f_res_31753 = defunc_0_f_res_t_res_31754;
                } else {
                    defunc_0_f_res_31753 = NAN;
                }
                
                bool isnan_res_31755;
                
                isnan_res_31755 = futrts_isnan32(defunc_0_f_res_31753);
                
                bool defunc_0_p_res_31756 = !isnan_res_31755;
                int64_t defunc_0_f_res_31757 =
                        btoi_bool_i64(defunc_0_p_res_31756);
                
                // write to-scan values to parameters
                {
                    x_31745 = defunc_0_f_res_31757;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43626)[gtid_31713 * N_27550 +
                                                   gtid_31721] =
                        defunc_0_f_res_31753;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_31713, m_27551) && slt64(gtid_31721,
                                                          N_27550))) {
                    x_31745 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_31746 = add64(x_31744, x_31745);
                
                ((__local
                  int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661)] =
                    defunc_1_op_res_31746;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44670;
            int64_t x_44671;
            int64_t x_44673;
            int64_t x_44674;
            bool ltid_in_bounds_44676;
            
            ltid_in_bounds_44676 = slt64(sext_i32_i64(local_tid_44661),
                                         segscan_group_sizze_31739);
            
            int32_t skip_threads_44677;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44676) {
                    x_44671 = ((volatile __local
                                int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661)];
                    if ((local_tid_44661 - squot32(local_tid_44661, 32) * 32) ==
                        0) {
                        x_44670 = x_44671;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44677 = 1;
                while (slt32(skip_threads_44677, 32)) {
                    if (sle32(skip_threads_44677, local_tid_44661 -
                              squot32(local_tid_44661, 32) * 32) &&
                        ltid_in_bounds_44676) {
                        // read operands
                        {
                            x_44670 = ((volatile __local
                                        int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661) -
                                                                       sext_i32_i64(skip_threads_44677)];
                        }
                        // perform operation
                        {
                            bool inactive_44678 =
                                 slt64(srem64(sext_i32_i64(local_tid_44661) +
                                              chunk_offset_44668, N_27550),
                                       sext_i32_i64(local_tid_44661) +
                                       chunk_offset_44668 -
                                       (sext_i32_i64(local_tid_44661 -
                                        skip_threads_44677) +
                                        chunk_offset_44668));
                            
                            if (inactive_44678) {
                                x_44670 = x_44671;
                            }
                            if (!inactive_44678) {
                                int64_t defunc_1_op_res_44672 = add64(x_44670,
                                                                      x_44671);
                                
                                x_44670 = defunc_1_op_res_44672;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44663, skip_threads_44677)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44677, local_tid_44661 -
                              squot32(local_tid_44661, 32) * 32) &&
                        ltid_in_bounds_44676) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661)] =
                                x_44670;
                            x_44671 = x_44670;
                        }
                    }
                    if (sle32(wave_sizze_44663, skip_threads_44677)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44677 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44661 - squot32(local_tid_44661, 32) * 32) ==
                    31 && ltid_in_bounds_44676) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44665)[sext_i32_i64(squot32(local_tid_44661,
                                                                          32))] =
                        x_44670;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44679;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44661, 32) == 0 &&
                        ltid_in_bounds_44676) {
                        x_44674 = ((volatile __local
                                    int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661)];
                        if ((local_tid_44661 - squot32(local_tid_44661, 32) *
                             32) == 0) {
                            x_44673 = x_44674;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44679 = 1;
                    while (slt32(skip_threads_44679, 32)) {
                        if (sle32(skip_threads_44679, local_tid_44661 -
                                  squot32(local_tid_44661, 32) * 32) &&
                            (squot32(local_tid_44661, 32) == 0 &&
                             ltid_in_bounds_44676)) {
                            // read operands
                            {
                                x_44673 = ((volatile __local
                                            int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661) -
                                                                           sext_i32_i64(skip_threads_44679)];
                            }
                            // perform operation
                            {
                                bool inactive_44680 =
                                     slt64(srem64(sext_i32_i64(local_tid_44661 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44668, N_27550),
                                           sext_i32_i64(local_tid_44661 * 32 +
                                           32 - 1) + chunk_offset_44668 -
                                           (sext_i32_i64((local_tid_44661 -
                                                          skip_threads_44679) *
                                            32 + 32 - 1) + chunk_offset_44668));
                                
                                if (inactive_44680) {
                                    x_44673 = x_44674;
                                }
                                if (!inactive_44680) {
                                    int64_t defunc_1_op_res_44675 =
                                            add64(x_44673, x_44674);
                                    
                                    x_44673 = defunc_1_op_res_44675;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44663, skip_threads_44679)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44679, local_tid_44661 -
                                  squot32(local_tid_44661, 32) * 32) &&
                            (squot32(local_tid_44661, 32) == 0 &&
                             ltid_in_bounds_44676)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661)] =
                                    x_44673;
                                x_44674 = x_44673;
                            }
                        }
                        if (sle32(wave_sizze_44663, skip_threads_44679)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44679 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44661, 32) == 0 ||
                      !ltid_in_bounds_44676)) {
                    // read operands
                    {
                        x_44671 = x_44670;
                        x_44670 = ((__local
                                    int64_t *) scan_arr_mem_44665)[sext_i32_i64(squot32(local_tid_44661,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44681 =
                             slt64(srem64(sext_i32_i64(local_tid_44661) +
                                          chunk_offset_44668, N_27550),
                                   sext_i32_i64(local_tid_44661) +
                                   chunk_offset_44668 -
                                   (sext_i32_i64(squot32(local_tid_44661, 32) *
                                    32 - 1) + chunk_offset_44668));
                        
                        if (inactive_44681) {
                            x_44670 = x_44671;
                        }
                        if (!inactive_44681) {
                            int64_t defunc_1_op_res_44672 = add64(x_44670,
                                                                  x_44671);
                            
                            x_44670 = defunc_1_op_res_44672;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661)] =
                            x_44670;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44661, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661)] =
                        x_44671;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_31713, m_27551) && slt64(gtid_31721, N_27550)) {
                    ((__global int64_t *) mem_43623)[gtid_31713 * N_27550 +
                                                     gtid_31721] = ((__local
                                                                     int64_t *) scan_arr_mem_44665)[sext_i32_i64(local_tid_44661)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44682 = slt64(srem64(chunk_offset_44668 +
                                                          segscan_group_sizze_31739,
                                                          N_27550),
                                                   chunk_offset_44668 +
                                                   segscan_group_sizze_31739 -
                                                   (chunk_offset_44668 +
                                                    segscan_group_sizze_31739 -
                                                    (int64_t) 1));
                bool should_load_carry_44683 = local_tid_44661 == 0 &&
                     !crosses_segment_44682;
                
                if (should_load_carry_44683) {
                    x_31744 = ((__local
                                int64_t *) scan_arr_mem_44665)[segscan_group_sizze_31739 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44683) {
                    x_31744 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_31739
}
__kernel void mainDetailedziscan_stage1_33377(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45068_backing_aligned_0,
                                              int64_t N_27550, int64_t m_27551,
                                              int64_t iota32_arg_27946,
                                              int32_t num_threads_45062,
                                              __global
                                              unsigned char *defunc_4_map_res_mem_43638,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43704,
                                              __global
                                              unsigned char *defunc_3_map_res_mem_43705,
                                              __global
                                              unsigned char *defunc_0_f_res_mem_43739,
                                              __global unsigned char *mem_43810,
                                              __global unsigned char *mem_43814)
{
    #define segscan_group_sizze_33455 (mainDetailedzisegscan_group_sizze_33371)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45068_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45068_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45063;
    int32_t local_tid_45064;
    int64_t group_sizze_45067;
    int32_t wave_sizze_45066;
    int32_t group_tid_45065;
    
    global_tid_45063 = get_global_id(0);
    local_tid_45064 = get_local_id(0);
    group_sizze_45067 = get_local_size(0);
    wave_sizze_45066 = LOCKSTEP_WIDTH;
    group_tid_45065 = get_group_id(0);
    
    int32_t phys_tid_33377;
    
    phys_tid_33377 = global_tid_45063;
    
    __local char *scan_arr_mem_45068;
    
    scan_arr_mem_45068 = (__local char *) scan_arr_mem_45068_backing_0;
    
    float x_33459;
    float x_33460;
    
    x_33459 = 0.0F;
    for (int64_t j_45070 = 0; j_45070 < sdiv_up64(m_27551 * iota32_arg_27946,
                                                  sext_i32_i64(num_threads_45062));
         j_45070++) {
        int64_t chunk_offset_45071 = segscan_group_sizze_33455 * j_45070 +
                sext_i32_i64(group_tid_45065) * (segscan_group_sizze_33455 *
                                                 sdiv_up64(m_27551 *
                                                           iota32_arg_27946,
                                                           sext_i32_i64(num_threads_45062)));
        int64_t flat_idx_45072 = chunk_offset_45071 +
                sext_i32_i64(local_tid_45064);
        int64_t gtid_33368 = squot64(flat_idx_45072, iota32_arg_27946);
        int64_t gtid_33376 = flat_idx_45072 - squot64(flat_idx_45072,
                                                      iota32_arg_27946) *
                iota32_arg_27946;
        
        // threads in bounds read input
        {
            if (slt64(gtid_33368, m_27551) && slt64(gtid_33376,
                                                    iota32_arg_27946)) {
                int32_t y_33466 = ((__global int32_t *) mem_43810)[gtid_33368];
                int32_t index_primexp_40952 = sext_i64_i32(gtid_33376);
                bool cond_33469 = sle32(y_33466, index_primexp_40952);
                float defunc_0_f_res_33470;
                
                if (cond_33469) {
                    defunc_0_f_res_33470 = 0.0F;
                } else {
                    int32_t x_33462 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_33368];
                    int32_t x_33463 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43704)[gtid_33368];
                    float x_33464 = ((__global
                                      float *) defunc_0_f_res_mem_43739)[gtid_33368];
                    bool cond_33471 = index_primexp_40952 == 0;
                    float defunc_0_f_res_f_res_33472;
                    
                    if (cond_33471) {
                        defunc_0_f_res_f_res_33472 = x_33464;
                    } else {
                        int32_t i_33473 = add32(x_33462, index_primexp_40952);
                        int64_t i_33474 = sext_i32_i64(i_33473);
                        float x_33475 = ((__global
                                          float *) defunc_4_map_res_mem_43638)[gtid_33368 *
                                                                               N_27550 +
                                                                               i_33474];
                        int32_t x_33476 = sub32(x_33462, x_33463);
                        int32_t i_33477 = add32(x_33476, index_primexp_40952);
                        int64_t i_33478 = sext_i32_i64(i_33477);
                        float y_33479 = ((__global
                                          float *) defunc_4_map_res_mem_43638)[gtid_33368 *
                                                                               N_27550 +
                                                                               i_33478];
                        float defunc_0_f_res_f_res_f_res_33480 = x_33475 -
                              y_33479;
                        
                        defunc_0_f_res_f_res_33472 =
                            defunc_0_f_res_f_res_f_res_33480;
                    }
                    defunc_0_f_res_33470 = defunc_0_f_res_f_res_33472;
                }
                // write to-scan values to parameters
                {
                    x_33460 = defunc_0_f_res_33470;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_33368, m_27551) && slt64(gtid_33376,
                                                          iota32_arg_27946))) {
                    x_33460 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_33461 = x_33459 + x_33460;
                
                ((__local
                  float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                    defunc_1_op_res_33461;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45073;
            float x_45074;
            float x_45076;
            float x_45077;
            bool ltid_in_bounds_45079;
            
            ltid_in_bounds_45079 = slt64(sext_i32_i64(local_tid_45064),
                                         segscan_group_sizze_33455);
            
            int32_t skip_threads_45080;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45079) {
                    x_45074 = ((volatile __local
                                float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064)];
                    if ((local_tid_45064 - squot32(local_tid_45064, 32) * 32) ==
                        0) {
                        x_45073 = x_45074;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45080 = 1;
                while (slt32(skip_threads_45080, 32)) {
                    if (sle32(skip_threads_45080, local_tid_45064 -
                              squot32(local_tid_45064, 32) * 32) &&
                        ltid_in_bounds_45079) {
                        // read operands
                        {
                            x_45073 = ((volatile __local
                                        float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064) -
                                                                     sext_i32_i64(skip_threads_45080)];
                        }
                        // perform operation
                        {
                            bool inactive_45081 =
                                 slt64(srem64(sext_i32_i64(local_tid_45064) +
                                              chunk_offset_45071,
                                              iota32_arg_27946),
                                       sext_i32_i64(local_tid_45064) +
                                       chunk_offset_45071 -
                                       (sext_i32_i64(local_tid_45064 -
                                        skip_threads_45080) +
                                        chunk_offset_45071));
                            
                            if (inactive_45081) {
                                x_45073 = x_45074;
                            }
                            if (!inactive_45081) {
                                float defunc_1_op_res_45075 = x_45073 + x_45074;
                                
                                x_45073 = defunc_1_op_res_45075;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45066, skip_threads_45080)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45080, local_tid_45064 -
                              squot32(local_tid_45064, 32) * 32) &&
                        ltid_in_bounds_45079) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                                x_45073;
                            x_45074 = x_45073;
                        }
                    }
                    if (sle32(wave_sizze_45066, skip_threads_45080)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45080 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45064 - squot32(local_tid_45064, 32) * 32) ==
                    31 && ltid_in_bounds_45079) {
                    ((volatile __local
                      float *) scan_arr_mem_45068)[sext_i32_i64(squot32(local_tid_45064,
                                                                        32))] =
                        x_45073;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45082;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45064, 32) == 0 &&
                        ltid_in_bounds_45079) {
                        x_45077 = ((volatile __local
                                    float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064)];
                        if ((local_tid_45064 - squot32(local_tid_45064, 32) *
                             32) == 0) {
                            x_45076 = x_45077;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45082 = 1;
                    while (slt32(skip_threads_45082, 32)) {
                        if (sle32(skip_threads_45082, local_tid_45064 -
                                  squot32(local_tid_45064, 32) * 32) &&
                            (squot32(local_tid_45064, 32) == 0 &&
                             ltid_in_bounds_45079)) {
                            // read operands
                            {
                                x_45076 = ((volatile __local
                                            float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064) -
                                                                         sext_i32_i64(skip_threads_45082)];
                            }
                            // perform operation
                            {
                                bool inactive_45083 =
                                     slt64(srem64(sext_i32_i64(local_tid_45064 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45071,
                                                  iota32_arg_27946),
                                           sext_i32_i64(local_tid_45064 * 32 +
                                           32 - 1) + chunk_offset_45071 -
                                           (sext_i32_i64((local_tid_45064 -
                                                          skip_threads_45082) *
                                            32 + 32 - 1) + chunk_offset_45071));
                                
                                if (inactive_45083) {
                                    x_45076 = x_45077;
                                }
                                if (!inactive_45083) {
                                    float defunc_1_op_res_45078 = x_45076 +
                                          x_45077;
                                    
                                    x_45076 = defunc_1_op_res_45078;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45066, skip_threads_45082)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45082, local_tid_45064 -
                                  squot32(local_tid_45064, 32) * 32) &&
                            (squot32(local_tid_45064, 32) == 0 &&
                             ltid_in_bounds_45079)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                                    x_45076;
                                x_45077 = x_45076;
                            }
                        }
                        if (sle32(wave_sizze_45066, skip_threads_45082)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45082 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45064, 32) == 0 ||
                      !ltid_in_bounds_45079)) {
                    // read operands
                    {
                        x_45074 = x_45073;
                        x_45073 = ((__local
                                    float *) scan_arr_mem_45068)[sext_i32_i64(squot32(local_tid_45064,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_45084 =
                             slt64(srem64(sext_i32_i64(local_tid_45064) +
                                          chunk_offset_45071, iota32_arg_27946),
                                   sext_i32_i64(local_tid_45064) +
                                   chunk_offset_45071 -
                                   (sext_i32_i64(squot32(local_tid_45064, 32) *
                                    32 - 1) + chunk_offset_45071));
                        
                        if (inactive_45084) {
                            x_45073 = x_45074;
                        }
                        if (!inactive_45084) {
                            float defunc_1_op_res_45075 = x_45073 + x_45074;
                            
                            x_45073 = defunc_1_op_res_45075;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                            x_45073;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45064, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064)] =
                        x_45074;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_33368, m_27551) && slt64(gtid_33376,
                                                        iota32_arg_27946)) {
                    ((__global float *) mem_43814)[gtid_33368 *
                                                   iota32_arg_27946 +
                                                   gtid_33376] = ((__local
                                                                   float *) scan_arr_mem_45068)[sext_i32_i64(local_tid_45064)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45085 = slt64(srem64(chunk_offset_45071 +
                                                          segscan_group_sizze_33455,
                                                          iota32_arg_27946),
                                                   chunk_offset_45071 +
                                                   segscan_group_sizze_33455 -
                                                   (chunk_offset_45071 +
                                                    segscan_group_sizze_33455 -
                                                    (int64_t) 1));
                bool should_load_carry_45086 = local_tid_45064 == 0 &&
                     !crosses_segment_45085;
                
                if (should_load_carry_45086) {
                    x_33459 = ((__local
                                float *) scan_arr_mem_45068)[segscan_group_sizze_33455 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_45086) {
                    x_33459 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_33455
}
__kernel void mainDetailedziscan_stage2_31722(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_44689_backing_aligned_0,
                                              int64_t N_27550, int64_t m_27551,
                                              int64_t stage1_num_groups_44658,
                                              int32_t num_threads_44659,
                                              __global unsigned char *mem_43623)
{
    #define segscan_group_sizze_31739 (mainDetailedzisegscan_group_sizze_31716)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44689_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44689_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44684;
    int32_t local_tid_44685;
    int64_t group_sizze_44688;
    int32_t wave_sizze_44687;
    int32_t group_tid_44686;
    
    global_tid_44684 = get_global_id(0);
    local_tid_44685 = get_local_id(0);
    group_sizze_44688 = get_local_size(0);
    wave_sizze_44687 = LOCKSTEP_WIDTH;
    group_tid_44686 = get_group_id(0);
    
    int32_t phys_tid_31722;
    
    phys_tid_31722 = global_tid_44684;
    
    __local char *scan_arr_mem_44689;
    
    scan_arr_mem_44689 = (__local char *) scan_arr_mem_44689_backing_0;
    
    int64_t flat_idx_44691;
    
    flat_idx_44691 = (sext_i32_i64(local_tid_44685) + (int64_t) 1) *
        (segscan_group_sizze_31739 * sdiv_up64(m_27551 * N_27550,
                                               sext_i32_i64(num_threads_44659))) -
        (int64_t) 1;
    
    int64_t gtid_31713;
    
    gtid_31713 = squot64(flat_idx_44691, N_27550);
    
    int64_t gtid_31721;
    
    gtid_31721 = flat_idx_44691 - squot64(flat_idx_44691, N_27550) * N_27550;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_31713, m_27551) && slt64(gtid_31721, N_27550)) {
            ((__local
              int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)] =
                ((__global int64_t *) mem_43623)[gtid_31713 * N_27550 +
                                                 gtid_31721];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_31744;
    int64_t x_31745;
    int64_t x_44692;
    int64_t x_44693;
    bool ltid_in_bounds_44695;
    
    ltid_in_bounds_44695 = slt64(sext_i32_i64(local_tid_44685),
                                 stage1_num_groups_44658);
    
    int32_t skip_threads_44696;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44695) {
            x_31745 = ((volatile __local
                        int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)];
            if ((local_tid_44685 - squot32(local_tid_44685, 32) * 32) == 0) {
                x_31744 = x_31745;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44696 = 1;
        while (slt32(skip_threads_44696, 32)) {
            if (sle32(skip_threads_44696, local_tid_44685 -
                      squot32(local_tid_44685, 32) * 32) &&
                ltid_in_bounds_44695) {
                // read operands
                {
                    x_31744 = ((volatile __local
                                int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685) -
                                                               sext_i32_i64(skip_threads_44696)];
                }
                // perform operation
                {
                    bool inactive_44697 =
                         slt64(srem64((sext_i32_i64(local_tid_44685) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_31739 *
                                       sdiv_up64(m_27551 * N_27550,
                                                 sext_i32_i64(num_threads_44659))) -
                                      (int64_t) 1, N_27550),
                               (sext_i32_i64(local_tid_44685) + (int64_t) 1) *
                               (segscan_group_sizze_31739 * sdiv_up64(m_27551 *
                                                                      N_27550,
                                                                      sext_i32_i64(num_threads_44659))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44685 -
                                               skip_threads_44696) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_31739 *
                                               sdiv_up64(m_27551 * N_27550,
                                                         sext_i32_i64(num_threads_44659))) -
                                              (int64_t) 1));
                    
                    if (inactive_44697) {
                        x_31744 = x_31745;
                    }
                    if (!inactive_44697) {
                        int64_t defunc_1_op_res_31746 = add64(x_31744, x_31745);
                        
                        x_31744 = defunc_1_op_res_31746;
                    }
                }
            }
            if (sle32(wave_sizze_44687, skip_threads_44696)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44696, local_tid_44685 -
                      squot32(local_tid_44685, 32) * 32) &&
                ltid_in_bounds_44695) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)] =
                        x_31744;
                    x_31745 = x_31744;
                }
            }
            if (sle32(wave_sizze_44687, skip_threads_44696)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44696 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44685 - squot32(local_tid_44685, 32) * 32) == 31 &&
            ltid_in_bounds_44695) {
            ((volatile __local
              int64_t *) scan_arr_mem_44689)[sext_i32_i64(squot32(local_tid_44685,
                                                                  32))] =
                x_31744;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44698;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44685, 32) == 0 && ltid_in_bounds_44695) {
                x_44693 = ((volatile __local
                            int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)];
                if ((local_tid_44685 - squot32(local_tid_44685, 32) * 32) ==
                    0) {
                    x_44692 = x_44693;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44698 = 1;
            while (slt32(skip_threads_44698, 32)) {
                if (sle32(skip_threads_44698, local_tid_44685 -
                          squot32(local_tid_44685, 32) * 32) &&
                    (squot32(local_tid_44685, 32) == 0 &&
                     ltid_in_bounds_44695)) {
                    // read operands
                    {
                        x_44692 = ((volatile __local
                                    int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685) -
                                                                   sext_i32_i64(skip_threads_44698)];
                    }
                    // perform operation
                    {
                        bool inactive_44699 =
                             slt64(srem64((sext_i32_i64(local_tid_44685 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_31739 *
                                           sdiv_up64(m_27551 * N_27550,
                                                     sext_i32_i64(num_threads_44659))) -
                                          (int64_t) 1, N_27550),
                                   (sext_i32_i64(local_tid_44685 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_31739 *
                                    sdiv_up64(m_27551 * N_27550,
                                              sext_i32_i64(num_threads_44659))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44685 -
                                                   skip_threads_44698) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_31739 *
                                     sdiv_up64(m_27551 * N_27550,
                                               sext_i32_i64(num_threads_44659))) -
                                    (int64_t) 1));
                        
                        if (inactive_44699) {
                            x_44692 = x_44693;
                        }
                        if (!inactive_44699) {
                            int64_t defunc_1_op_res_44694 = add64(x_44692,
                                                                  x_44693);
                            
                            x_44692 = defunc_1_op_res_44694;
                        }
                    }
                }
                if (sle32(wave_sizze_44687, skip_threads_44698)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44698, local_tid_44685 -
                          squot32(local_tid_44685, 32) * 32) &&
                    (squot32(local_tid_44685, 32) == 0 &&
                     ltid_in_bounds_44695)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)] =
                            x_44692;
                        x_44693 = x_44692;
                    }
                }
                if (sle32(wave_sizze_44687, skip_threads_44698)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44698 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44685, 32) == 0 || !ltid_in_bounds_44695)) {
            // read operands
            {
                x_31745 = x_31744;
                x_31744 = ((__local
                            int64_t *) scan_arr_mem_44689)[sext_i32_i64(squot32(local_tid_44685,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44700 =
                     slt64(srem64((sext_i32_i64(local_tid_44685) +
                                   (int64_t) 1) * (segscan_group_sizze_31739 *
                                                   sdiv_up64(m_27551 * N_27550,
                                                             sext_i32_i64(num_threads_44659))) -
                                  (int64_t) 1, N_27550),
                           (sext_i32_i64(local_tid_44685) + (int64_t) 1) *
                           (segscan_group_sizze_31739 * sdiv_up64(m_27551 *
                                                                  N_27550,
                                                                  sext_i32_i64(num_threads_44659))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44685,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_31739 *
                                           sdiv_up64(m_27551 * N_27550,
                                                     sext_i32_i64(num_threads_44659))) -
                                          (int64_t) 1));
                
                if (inactive_44700) {
                    x_31744 = x_31745;
                }
                if (!inactive_44700) {
                    int64_t defunc_1_op_res_31746 = add64(x_31744, x_31745);
                    
                    x_31744 = defunc_1_op_res_31746;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)] =
                    x_31744;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44685, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)] =
                x_31745;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_31713, m_27551) && slt64(gtid_31721, N_27550)) {
            ((__global int64_t *) mem_43623)[gtid_31713 * N_27550 +
                                             gtid_31721] = ((__local
                                                             int64_t *) scan_arr_mem_44689)[sext_i32_i64(local_tid_44685)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_31739
}
__kernel void mainDetailedziscan_stage2_33377(__global int *global_failure,
                                              __local volatile
                                              int64_t *scan_arr_mem_45092_backing_aligned_0,
                                              int64_t m_27551,
                                              int64_t iota32_arg_27946,
                                              int64_t stage1_num_groups_45061,
                                              int32_t num_threads_45062,
                                              __global unsigned char *mem_43814)
{
    #define segscan_group_sizze_33455 (mainDetailedzisegscan_group_sizze_33371)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45092_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45092_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45087;
    int32_t local_tid_45088;
    int64_t group_sizze_45091;
    int32_t wave_sizze_45090;
    int32_t group_tid_45089;
    
    global_tid_45087 = get_global_id(0);
    local_tid_45088 = get_local_id(0);
    group_sizze_45091 = get_local_size(0);
    wave_sizze_45090 = LOCKSTEP_WIDTH;
    group_tid_45089 = get_group_id(0);
    
    int32_t phys_tid_33377;
    
    phys_tid_33377 = global_tid_45087;
    
    __local char *scan_arr_mem_45092;
    
    scan_arr_mem_45092 = (__local char *) scan_arr_mem_45092_backing_0;
    
    int64_t flat_idx_45094;
    
    flat_idx_45094 = (sext_i32_i64(local_tid_45088) + (int64_t) 1) *
        (segscan_group_sizze_33455 * sdiv_up64(m_27551 * iota32_arg_27946,
                                               sext_i32_i64(num_threads_45062))) -
        (int64_t) 1;
    
    int64_t gtid_33368;
    
    gtid_33368 = squot64(flat_idx_45094, iota32_arg_27946);
    
    int64_t gtid_33376;
    
    gtid_33376 = flat_idx_45094 - squot64(flat_idx_45094, iota32_arg_27946) *
        iota32_arg_27946;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_33368, m_27551) && slt64(gtid_33376, iota32_arg_27946)) {
            ((__local
              float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)] =
                ((__global float *) mem_43814)[gtid_33368 * iota32_arg_27946 +
                                               gtid_33376];
        } else {
            ((__local
              float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_33459;
    float x_33460;
    float x_45095;
    float x_45096;
    bool ltid_in_bounds_45098;
    
    ltid_in_bounds_45098 = slt64(sext_i32_i64(local_tid_45088),
                                 stage1_num_groups_45061);
    
    int32_t skip_threads_45099;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45098) {
            x_33460 = ((volatile __local
                        float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)];
            if ((local_tid_45088 - squot32(local_tid_45088, 32) * 32) == 0) {
                x_33459 = x_33460;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45099 = 1;
        while (slt32(skip_threads_45099, 32)) {
            if (sle32(skip_threads_45099, local_tid_45088 -
                      squot32(local_tid_45088, 32) * 32) &&
                ltid_in_bounds_45098) {
                // read operands
                {
                    x_33459 = ((volatile __local
                                float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088) -
                                                             sext_i32_i64(skip_threads_45099)];
                }
                // perform operation
                {
                    bool inactive_45100 =
                         slt64(srem64((sext_i32_i64(local_tid_45088) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_33455 *
                                       sdiv_up64(m_27551 * iota32_arg_27946,
                                                 sext_i32_i64(num_threads_45062))) -
                                      (int64_t) 1, iota32_arg_27946),
                               (sext_i32_i64(local_tid_45088) + (int64_t) 1) *
                               (segscan_group_sizze_33455 * sdiv_up64(m_27551 *
                                                                      iota32_arg_27946,
                                                                      sext_i32_i64(num_threads_45062))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_45088 -
                                               skip_threads_45099) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_33455 *
                                               sdiv_up64(m_27551 *
                                                         iota32_arg_27946,
                                                         sext_i32_i64(num_threads_45062))) -
                                              (int64_t) 1));
                    
                    if (inactive_45100) {
                        x_33459 = x_33460;
                    }
                    if (!inactive_45100) {
                        float defunc_1_op_res_33461 = x_33459 + x_33460;
                        
                        x_33459 = defunc_1_op_res_33461;
                    }
                }
            }
            if (sle32(wave_sizze_45090, skip_threads_45099)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45099, local_tid_45088 -
                      squot32(local_tid_45088, 32) * 32) &&
                ltid_in_bounds_45098) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)] =
                        x_33459;
                    x_33460 = x_33459;
                }
            }
            if (sle32(wave_sizze_45090, skip_threads_45099)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45099 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45088 - squot32(local_tid_45088, 32) * 32) == 31 &&
            ltid_in_bounds_45098) {
            ((volatile __local
              float *) scan_arr_mem_45092)[sext_i32_i64(squot32(local_tid_45088,
                                                                32))] = x_33459;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45101;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45088, 32) == 0 && ltid_in_bounds_45098) {
                x_45096 = ((volatile __local
                            float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)];
                if ((local_tid_45088 - squot32(local_tid_45088, 32) * 32) ==
                    0) {
                    x_45095 = x_45096;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45101 = 1;
            while (slt32(skip_threads_45101, 32)) {
                if (sle32(skip_threads_45101, local_tid_45088 -
                          squot32(local_tid_45088, 32) * 32) &&
                    (squot32(local_tid_45088, 32) == 0 &&
                     ltid_in_bounds_45098)) {
                    // read operands
                    {
                        x_45095 = ((volatile __local
                                    float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088) -
                                                                 sext_i32_i64(skip_threads_45101)];
                    }
                    // perform operation
                    {
                        bool inactive_45102 =
                             slt64(srem64((sext_i32_i64(local_tid_45088 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_33455 *
                                           sdiv_up64(m_27551 * iota32_arg_27946,
                                                     sext_i32_i64(num_threads_45062))) -
                                          (int64_t) 1, iota32_arg_27946),
                                   (sext_i32_i64(local_tid_45088 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_33455 *
                                    sdiv_up64(m_27551 * iota32_arg_27946,
                                              sext_i32_i64(num_threads_45062))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_45088 -
                                                   skip_threads_45101) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_33455 *
                                     sdiv_up64(m_27551 * iota32_arg_27946,
                                               sext_i32_i64(num_threads_45062))) -
                                    (int64_t) 1));
                        
                        if (inactive_45102) {
                            x_45095 = x_45096;
                        }
                        if (!inactive_45102) {
                            float defunc_1_op_res_45097 = x_45095 + x_45096;
                            
                            x_45095 = defunc_1_op_res_45097;
                        }
                    }
                }
                if (sle32(wave_sizze_45090, skip_threads_45101)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45101, local_tid_45088 -
                          squot32(local_tid_45088, 32) * 32) &&
                    (squot32(local_tid_45088, 32) == 0 &&
                     ltid_in_bounds_45098)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)] =
                            x_45095;
                        x_45096 = x_45095;
                    }
                }
                if (sle32(wave_sizze_45090, skip_threads_45101)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45101 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45088, 32) == 0 || !ltid_in_bounds_45098)) {
            // read operands
            {
                x_33460 = x_33459;
                x_33459 = ((__local
                            float *) scan_arr_mem_45092)[sext_i32_i64(squot32(local_tid_45088,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_45103 =
                     slt64(srem64((sext_i32_i64(local_tid_45088) +
                                   (int64_t) 1) * (segscan_group_sizze_33455 *
                                                   sdiv_up64(m_27551 *
                                                             iota32_arg_27946,
                                                             sext_i32_i64(num_threads_45062))) -
                                  (int64_t) 1, iota32_arg_27946),
                           (sext_i32_i64(local_tid_45088) + (int64_t) 1) *
                           (segscan_group_sizze_33455 * sdiv_up64(m_27551 *
                                                                  iota32_arg_27946,
                                                                  sext_i32_i64(num_threads_45062))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_45088,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_33455 *
                                           sdiv_up64(m_27551 * iota32_arg_27946,
                                                     sext_i32_i64(num_threads_45062))) -
                                          (int64_t) 1));
                
                if (inactive_45103) {
                    x_33459 = x_33460;
                }
                if (!inactive_45103) {
                    float defunc_1_op_res_33461 = x_33459 + x_33460;
                    
                    x_33459 = defunc_1_op_res_33461;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)] =
                    x_33459;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45088, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)] =
                x_33460;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_33368, m_27551) && slt64(gtid_33376, iota32_arg_27946)) {
            ((__global float *) mem_43814)[gtid_33368 * iota32_arg_27946 +
                                           gtid_33376] = ((__local
                                                           float *) scan_arr_mem_45092)[sext_i32_i64(local_tid_45088)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33455
}
__kernel void mainDetailedziscan_stage3_31722(__global int *global_failure,
                                              int64_t N_27550, int64_t m_27551,
                                              int64_t num_groups_31740,
                                              int32_t num_threads_44659,
                                              int32_t required_groups_44701,
                                              __global unsigned char *mem_43623)
{
    #define segscan_group_sizze_31739 (mainDetailedzisegscan_group_sizze_31716)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44702;
    int32_t local_tid_44703;
    int64_t group_sizze_44706;
    int32_t wave_sizze_44705;
    int32_t group_tid_44704;
    
    global_tid_44702 = get_global_id(0);
    local_tid_44703 = get_local_id(0);
    group_sizze_44706 = get_local_size(0);
    wave_sizze_44705 = LOCKSTEP_WIDTH;
    group_tid_44704 = get_group_id(0);
    
    int32_t phys_tid_31722;
    
    phys_tid_31722 = global_tid_44702;
    
    int32_t phys_group_id_44707;
    
    phys_group_id_44707 = get_group_id(0);
    for (int32_t i_44708 = 0; i_44708 < sdiv_up32(required_groups_44701 -
                                                  phys_group_id_44707,
                                                  sext_i64_i32(num_groups_31740));
         i_44708++) {
        int32_t virt_group_id_44709 = phys_group_id_44707 + i_44708 *
                sext_i64_i32(num_groups_31740);
        int64_t flat_idx_44710 = sext_i32_i64(virt_group_id_44709) *
                segscan_group_sizze_31739 + sext_i32_i64(local_tid_44703);
        int64_t gtid_31713 = squot64(flat_idx_44710, N_27550);
        int64_t gtid_31721 = flat_idx_44710 - squot64(flat_idx_44710, N_27550) *
                N_27550;
        int64_t orig_group_44711 = squot64(flat_idx_44710,
                                           segscan_group_sizze_31739 *
                                           sdiv_up64(m_27551 * N_27550,
                                                     sext_i32_i64(num_threads_44659)));
        int64_t carry_in_flat_idx_44712 = orig_group_44711 *
                (segscan_group_sizze_31739 * sdiv_up64(m_27551 * N_27550,
                                                       sext_i32_i64(num_threads_44659))) -
                (int64_t) 1;
        
        if (slt64(gtid_31713, m_27551) && slt64(gtid_31721, N_27550)) {
            if (!(orig_group_44711 == (int64_t) 0 || (flat_idx_44710 ==
                                                      (orig_group_44711 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_31739 *
                                                       sdiv_up64(m_27551 *
                                                                 N_27550,
                                                                 sext_i32_i64(num_threads_44659))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44710,
                                                                   N_27550),
                                                            flat_idx_44710 -
                                                            carry_in_flat_idx_44712)))) {
                int64_t x_31744;
                int64_t x_31745;
                
                x_31744 = ((__global
                            int64_t *) mem_43623)[squot64(carry_in_flat_idx_44712,
                                                          N_27550) * N_27550 +
                                                  (carry_in_flat_idx_44712 -
                                                   squot64(carry_in_flat_idx_44712,
                                                           N_27550) * N_27550)];
                x_31745 = ((__global int64_t *) mem_43623)[gtid_31713 *
                                                           N_27550 +
                                                           gtid_31721];
                
                int64_t defunc_1_op_res_31746;
                
                defunc_1_op_res_31746 = add64(x_31744, x_31745);
                x_31744 = defunc_1_op_res_31746;
                ((__global int64_t *) mem_43623)[gtid_31713 * N_27550 +
                                                 gtid_31721] = x_31744;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_31739
}
__kernel void mainDetailedziscan_stage3_33377(__global int *global_failure,
                                              int64_t m_27551,
                                              int64_t iota32_arg_27946,
                                              int64_t num_groups_33456,
                                              int32_t num_threads_45062,
                                              int32_t required_groups_45104,
                                              __global unsigned char *mem_43814)
{
    #define segscan_group_sizze_33455 (mainDetailedzisegscan_group_sizze_33371)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45105;
    int32_t local_tid_45106;
    int64_t group_sizze_45109;
    int32_t wave_sizze_45108;
    int32_t group_tid_45107;
    
    global_tid_45105 = get_global_id(0);
    local_tid_45106 = get_local_id(0);
    group_sizze_45109 = get_local_size(0);
    wave_sizze_45108 = LOCKSTEP_WIDTH;
    group_tid_45107 = get_group_id(0);
    
    int32_t phys_tid_33377;
    
    phys_tid_33377 = global_tid_45105;
    
    int32_t phys_group_id_45110;
    
    phys_group_id_45110 = get_group_id(0);
    for (int32_t i_45111 = 0; i_45111 < sdiv_up32(required_groups_45104 -
                                                  phys_group_id_45110,
                                                  sext_i64_i32(num_groups_33456));
         i_45111++) {
        int32_t virt_group_id_45112 = phys_group_id_45110 + i_45111 *
                sext_i64_i32(num_groups_33456);
        int64_t flat_idx_45113 = sext_i32_i64(virt_group_id_45112) *
                segscan_group_sizze_33455 + sext_i32_i64(local_tid_45106);
        int64_t gtid_33368 = squot64(flat_idx_45113, iota32_arg_27946);
        int64_t gtid_33376 = flat_idx_45113 - squot64(flat_idx_45113,
                                                      iota32_arg_27946) *
                iota32_arg_27946;
        int64_t orig_group_45114 = squot64(flat_idx_45113,
                                           segscan_group_sizze_33455 *
                                           sdiv_up64(m_27551 * iota32_arg_27946,
                                                     sext_i32_i64(num_threads_45062)));
        int64_t carry_in_flat_idx_45115 = orig_group_45114 *
                (segscan_group_sizze_33455 * sdiv_up64(m_27551 *
                                                       iota32_arg_27946,
                                                       sext_i32_i64(num_threads_45062))) -
                (int64_t) 1;
        
        if (slt64(gtid_33368, m_27551) && slt64(gtid_33376, iota32_arg_27946)) {
            if (!(orig_group_45114 == (int64_t) 0 || (flat_idx_45113 ==
                                                      (orig_group_45114 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_33455 *
                                                       sdiv_up64(m_27551 *
                                                                 iota32_arg_27946,
                                                                 sext_i32_i64(num_threads_45062))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_45113,
                                                                   iota32_arg_27946),
                                                            flat_idx_45113 -
                                                            carry_in_flat_idx_45115)))) {
                float x_33459;
                float x_33460;
                
                x_33459 = ((__global
                            float *) mem_43814)[squot64(carry_in_flat_idx_45115,
                                                        iota32_arg_27946) *
                                                iota32_arg_27946 +
                                                (carry_in_flat_idx_45115 -
                                                 squot64(carry_in_flat_idx_45115,
                                                         iota32_arg_27946) *
                                                 iota32_arg_27946)];
                x_33460 = ((__global float *) mem_43814)[gtid_33368 *
                                                         iota32_arg_27946 +
                                                         gtid_33376];
                
                float defunc_1_op_res_33461;
                
                defunc_1_op_res_33461 = x_33459 + x_33460;
                x_33459 = defunc_1_op_res_33461;
                ((__global float *) mem_43814)[gtid_33368 * iota32_arg_27946 +
                                               gtid_33376] = x_33459;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_33455
}
__kernel void mainDetailedzisegmap_29645(__global int *global_failure,
                                         int64_t N_27550, float freq_27555,
                                         int64_t i32_res_27566, __global
                                         unsigned char *mappingindices_mem_42840,
                                         __global unsigned char *mem_42845)
{
    #define segmap_group_sizze_29718 (mainDetailedzisegmap_group_sizze_29648)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44083;
    int32_t local_tid_44084;
    int64_t group_sizze_44087;
    int32_t wave_sizze_44086;
    int32_t group_tid_44085;
    
    global_tid_44083 = get_global_id(0);
    local_tid_44084 = get_local_id(0);
    group_sizze_44087 = get_local_size(0);
    wave_sizze_44086 = LOCKSTEP_WIDTH;
    group_tid_44085 = get_group_id(0);
    
    int32_t phys_tid_29645;
    
    phys_tid_29645 = global_tid_44083;
    
    int64_t gtid_29643;
    
    gtid_29643 = squot64(sext_i32_i64(group_tid_44085) *
                         segmap_group_sizze_29718 +
                         sext_i32_i64(local_tid_44084), N_27550);
    
    int64_t gtid_29644;
    
    gtid_29644 = sext_i32_i64(group_tid_44085) * segmap_group_sizze_29718 +
        sext_i32_i64(local_tid_44084) - squot64(sext_i32_i64(group_tid_44085) *
                                                segmap_group_sizze_29718 +
                                                sext_i32_i64(local_tid_44084),
                                                N_27550) * N_27550;
    if (slt64(gtid_29643, i32_res_27566) && slt64(gtid_29644, N_27550)) {
        int32_t index_primexp_40883 = sext_i64_i32(gtid_29643);
        bool index_primexp_40880 = index_primexp_40883 == 0;
        float defunc_0_f_res_29724;
        
        if (index_primexp_40880) {
            defunc_0_f_res_29724 = 1.0F;
        } else {
            int32_t x_29723 = ((__global
                                int32_t *) mappingindices_mem_42840)[gtid_29644];
            bool cond_29725 = index_primexp_40883 == 1;
            float defunc_0_f_res_f_res_29726;
            
            if (cond_29725) {
                float i32_res_29727 = sitofp_i32_f32(x_29723);
                
                defunc_0_f_res_f_res_29726 = i32_res_29727;
            } else {
                int32_t r32_arg_29728 = sdiv32(index_primexp_40883, 2);
                float i32_res_29729 = sitofp_i32_f32(r32_arg_29728);
                float i32_res_29730 = sitofp_i32_f32(x_29723);
                float x_29731 = 6.2831855F * i32_res_29729;
                float x_29732 = i32_res_29730 * x_29731;
                float angle_29733 = x_29732 / freq_27555;
                int32_t x_29734 = smod32(index_primexp_40883, 2);
                bool cond_29735 = x_29734 == 0;
                float defunc_0_f_res_f_res_f_res_29736;
                
                if (cond_29735) {
                    float sin_res_29737;
                    
                    sin_res_29737 = futrts_sin32(angle_29733);
                    defunc_0_f_res_f_res_f_res_29736 = sin_res_29737;
                } else {
                    float cos_res_29738;
                    
                    cos_res_29738 = futrts_cos32(angle_29733);
                    defunc_0_f_res_f_res_f_res_29736 = cos_res_29738;
                }
                defunc_0_f_res_f_res_29726 = defunc_0_f_res_f_res_f_res_29736;
            }
            defunc_0_f_res_29724 = defunc_0_f_res_f_res_29726;
        }
        ((__global float *) mem_42845)[gtid_29643 * N_27550 + gtid_29644] =
            defunc_0_f_res_29724;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29718
}
__kernel void mainDetailedzisegmap_29823(__global int *global_failure,
                                         int64_t N_27550, float freq_27555,
                                         int64_t i32_res_27566, __global
                                         unsigned char *mappingindices_mem_42840,
                                         __global unsigned char *mem_42849)
{
    #define segmap_group_sizze_29892 (mainDetailedzisegmap_group_sizze_29826)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44088;
    int32_t local_tid_44089;
    int64_t group_sizze_44092;
    int32_t wave_sizze_44091;
    int32_t group_tid_44090;
    
    global_tid_44088 = get_global_id(0);
    local_tid_44089 = get_local_id(0);
    group_sizze_44092 = get_local_size(0);
    wave_sizze_44091 = LOCKSTEP_WIDTH;
    group_tid_44090 = get_group_id(0);
    
    int32_t phys_tid_29823;
    
    phys_tid_29823 = global_tid_44088;
    
    int64_t gtid_29821;
    
    gtid_29821 = squot64(sext_i32_i64(group_tid_44090) *
                         segmap_group_sizze_29892 +
                         sext_i32_i64(local_tid_44089), N_27550);
    
    int64_t gtid_29822;
    
    gtid_29822 = sext_i32_i64(group_tid_44090) * segmap_group_sizze_29892 +
        sext_i32_i64(local_tid_44089) - squot64(sext_i32_i64(group_tid_44090) *
                                                segmap_group_sizze_29892 +
                                                sext_i32_i64(local_tid_44089),
                                                N_27550) * N_27550;
    if (slt64(gtid_29821, i32_res_27566) && slt64(gtid_29822, N_27550)) {
        int32_t index_primexp_40892 = sext_i64_i32(gtid_29821);
        bool index_primexp_40889 = index_primexp_40892 == 0;
        float defunc_0_f_res_29898;
        
        if (index_primexp_40889) {
            defunc_0_f_res_29898 = 1.0F;
        } else {
            int32_t x_29897 = ((__global
                                int32_t *) mappingindices_mem_42840)[gtid_29822];
            int32_t i_29899 = add32(1, index_primexp_40892);
            int32_t r32_arg_29900 = sdiv32(i_29899, 2);
            float i32_res_29901 = sitofp_i32_f32(r32_arg_29900);
            float i32_res_29902 = sitofp_i32_f32(x_29897);
            float x_29903 = 6.2831855F * i32_res_29901;
            float x_29904 = i32_res_29902 * x_29903;
            float angle_29905 = x_29904 / freq_27555;
            int32_t x_29906 = smod32(i_29899, 2);
            bool cond_29907 = x_29906 == 0;
            float defunc_0_f_res_f_res_29908;
            
            if (cond_29907) {
                float sin_res_29909;
                
                sin_res_29909 = futrts_sin32(angle_29905);
                defunc_0_f_res_f_res_29908 = sin_res_29909;
            } else {
                float cos_res_29910;
                
                cos_res_29910 = futrts_cos32(angle_29905);
                defunc_0_f_res_f_res_29908 = cos_res_29910;
            }
            defunc_0_f_res_29898 = defunc_0_f_res_f_res_29908;
        }
        ((__global float *) mem_42849)[gtid_29821 * N_27550 + gtid_29822] =
            defunc_0_f_res_29898;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29892
}
__kernel void mainDetailedzisegmap_29951(__global int *global_failure,
                                         int64_t N_27550, int64_t i32_res_27566,
                                         float i32_res_27631, __global
                                         unsigned char *mem_42853, __global
                                         unsigned char *mem_42857)
{
    #define segmap_group_sizze_29975 (mainDetailedzisegmap_group_sizze_29954)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44093;
    int32_t local_tid_44094;
    int64_t group_sizze_44097;
    int32_t wave_sizze_44096;
    int32_t group_tid_44095;
    
    global_tid_44093 = get_global_id(0);
    local_tid_44094 = get_local_id(0);
    group_sizze_44097 = get_local_size(0);
    wave_sizze_44096 = LOCKSTEP_WIDTH;
    group_tid_44095 = get_group_id(0);
    
    int32_t phys_tid_29951;
    
    phys_tid_29951 = global_tid_44093;
    
    int64_t gtid_29949;
    
    gtid_29949 = squot64(sext_i32_i64(group_tid_44095) *
                         segmap_group_sizze_29975 +
                         sext_i32_i64(local_tid_44094), i32_res_27566);
    
    int64_t gtid_29950;
    
    gtid_29950 = sext_i32_i64(group_tid_44095) * segmap_group_sizze_29975 +
        sext_i32_i64(local_tid_44094) - squot64(sext_i32_i64(group_tid_44095) *
                                                segmap_group_sizze_29975 +
                                                sext_i32_i64(local_tid_44094),
                                                i32_res_27566) * i32_res_27566;
    if (slt64(gtid_29949, N_27550) && slt64(gtid_29950, i32_res_27566)) {
        float x_29978 = ((__global float *) mem_42853)[gtid_29949 *
                                                       i32_res_27566 +
                                                       gtid_29950];
        float defunc_0_f_res_29979 = i32_res_27631 + x_29978;
        
        ((__global float *) mem_42857)[gtid_29949 * i32_res_27566 +
                                       gtid_29950] = defunc_0_f_res_29979;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29975
}
__kernel void mainDetailedzisegmap_29984(__global int *global_failure,
                                         int64_t N_27550, int64_t m_27551,
                                         int32_t n_27554, int32_t k2p2zq_27564,
                                         int64_t i32_res_27566,
                                         int64_t num_groups_30009, __global
                                         unsigned char *binop_p_mem_42850,
                                         __global unsigned char *mem_42857,
                                         __global unsigned char *mem_42860,
                                         __global unsigned char *mem_42864,
                                         __global unsigned char *mem_42906)
{
    #define segmap_group_sizze_30008 (mainDetailedzisegmap_group_sizze_29986)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44101;
    int32_t local_tid_44102;
    int64_t group_sizze_44105;
    int32_t wave_sizze_44104;
    int32_t group_tid_44103;
    
    global_tid_44101 = get_global_id(0);
    local_tid_44102 = get_local_id(0);
    group_sizze_44105 = get_local_size(0);
    wave_sizze_44104 = LOCKSTEP_WIDTH;
    group_tid_44103 = get_group_id(0);
    
    int32_t phys_tid_29984;
    
    phys_tid_29984 = global_tid_44101;
    
    int32_t phys_group_id_44106;
    
    phys_group_id_44106 = get_group_id(0);
    for (int32_t i_44107 = 0; i_44107 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551, segmap_group_sizze_30008)) -
                   phys_group_id_44106, sext_i64_i32(num_groups_30009));
         i_44107++) {
        int32_t virt_group_id_44108 = phys_group_id_44106 + i_44107 *
                sext_i64_i32(num_groups_30009);
        int64_t gtid_29983 = sext_i32_i64(virt_group_id_44108) *
                segmap_group_sizze_30008 + sext_i32_i64(local_tid_44102);
        
        if (slt64(gtid_29983, m_27551)) {
            for (int32_t i_42824 = 0; i_42824 < k2p2zq_27564; i_42824++) {
                int64_t i_42776 = sext_i32_i64(i_42824);
                
                for (int32_t i_42823 = 0; i_42823 < k2p2zq_27564; i_42823++) {
                    int64_t i_42780 = sext_i32_i64(i_42823);
                    float defunc_2_reduce_res_30017;
                    float redout_42782 = 0.0F;
                    
                    for (int32_t i_42822 = 0; i_42822 < n_27554; i_42822++) {
                        int64_t i_42783 = sext_i32_i64(i_42822);
                        float x_30021 = ((__global float *) mem_42860)[i_42783 *
                                                                       m_27551 +
                                                                       gtid_29983];
                        float x_30022 = ((__global
                                          float *) binop_p_mem_42850)[i_42776 *
                                                                      N_27550 +
                                                                      i_42783];
                        float x_30023 = ((__global float *) mem_42857)[i_42783 *
                                                                       i32_res_27566 +
                                                                       i_42780];
                        float x_30024 = x_30022 * x_30023;
                        bool isnan_res_30025;
                        
                        isnan_res_30025 = futrts_isnan32(x_30021);
                        
                        float y_30026;
                        
                        if (isnan_res_30025) {
                            y_30026 = 0.0F;
                        } else {
                            y_30026 = 1.0F;
                        }
                        
                        float defunc_2_f_res_30027 = x_30024 * y_30026;
                        float defunc_1_op_res_30020 = defunc_2_f_res_30027 +
                              redout_42782;
                        float redout_tmp_44111 = defunc_1_op_res_30020;
                        
                        redout_42782 = redout_tmp_44111;
                    }
                    defunc_2_reduce_res_30017 = redout_42782;
                    ((__global float *) mem_42864)[phys_tid_29984 + (i_42776 *
                                                                     (num_groups_30009 *
                                                                      segmap_group_sizze_30008 *
                                                                      i32_res_27566) +
                                                                     i_42780 *
                                                                     (num_groups_30009 *
                                                                      segmap_group_sizze_30008))] =
                        defunc_2_reduce_res_30017;
                }
            }
            for (int64_t i_44112 = 0; i_44112 < i32_res_27566; i_44112++) {
                for (int64_t i_44113 = 0; i_44113 < i32_res_27566; i_44113++) {
                    ((__global float *) mem_42906)[i_44112 * (m_27551 *
                                                              i32_res_27566) +
                                                   i_44113 * m_27551 +
                                                   gtid_29983] = ((__global
                                                                   float *) mem_42864)[phys_tid_29984 +
                                                                                       (i_44112 *
                                                                                        (num_groups_30009 *
                                                                                         segmap_group_sizze_30008 *
                                                                                         i32_res_27566) +
                                                                                        i_44113 *
                                                                                        (num_groups_30009 *
                                                                                         segmap_group_sizze_30008))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30008
}
__kernel void mainDetailedzisegmap_30030(__global int *global_failure,
                                         int64_t N_27550, int64_t m_27551,
                                         int32_t n_27554, int32_t k2p2zq_27564,
                                         int64_t i32_res_27566,
                                         int64_t num_groups_30186, __global
                                         unsigned char *images_mem_42841,
                                         __global unsigned char *mem_42853,
                                         __global unsigned char *mem_42857,
                                         __global unsigned char *mem_42909,
                                         __global unsigned char *mem_42925)
{
    #define segmap_group_sizze_30185 (mainDetailedzisegmap_group_sizze_30033)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44114;
    int32_t local_tid_44115;
    int64_t group_sizze_44118;
    int32_t wave_sizze_44117;
    int32_t group_tid_44116;
    
    global_tid_44114 = get_global_id(0);
    local_tid_44115 = get_local_id(0);
    group_sizze_44118 = get_local_size(0);
    wave_sizze_44117 = LOCKSTEP_WIDTH;
    group_tid_44116 = get_group_id(0);
    
    int32_t phys_tid_30030;
    
    phys_tid_30030 = global_tid_44114;
    
    int32_t phys_group_id_44119;
    
    phys_group_id_44119 = get_group_id(0);
    for (int32_t i_44120 = 0; i_44120 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551 * i32_res_27566,
                                          segmap_group_sizze_30185)) -
                   phys_group_id_44119, sext_i64_i32(num_groups_30186));
         i_44120++) {
        int32_t virt_group_id_44121 = phys_group_id_44119 + i_44120 *
                sext_i64_i32(num_groups_30186);
        int64_t gtid_30028 = squot64(sext_i32_i64(virt_group_id_44121) *
                                     segmap_group_sizze_30185 +
                                     sext_i32_i64(local_tid_44115),
                                     i32_res_27566);
        int64_t gtid_30029 = sext_i32_i64(virt_group_id_44121) *
                segmap_group_sizze_30185 + sext_i32_i64(local_tid_44115) -
                squot64(sext_i32_i64(virt_group_id_44121) *
                        segmap_group_sizze_30185 +
                        sext_i32_i64(local_tid_44115), i32_res_27566) *
                i32_res_27566;
        
        if (slt64(gtid_30028, m_27551) && slt64(gtid_30029, i32_res_27566)) {
            for (int32_t i_42826 = 0; i_42826 < k2p2zq_27564; i_42826++) {
                int64_t i_42786 = sext_i32_i64(i_42826);
                float defunc_2_reduce_res_30197;
                float redout_42788 = 0.0F;
                
                for (int32_t i_42825 = 0; i_42825 < n_27554; i_42825++) {
                    int64_t i_42789 = sext_i32_i64(i_42825);
                    float x_30201 = ((__global
                                      float *) images_mem_42841)[gtid_30028 *
                                                                 N_27550 +
                                                                 i_42789];
                    float x_30202 = ((__global float *) mem_42853)[i_42789 *
                                                                   i32_res_27566 +
                                                                   gtid_30029];
                    float x_30203 = ((__global float *) mem_42857)[i_42789 *
                                                                   i32_res_27566 +
                                                                   i_42786];
                    float x_30204 = x_30202 * x_30203;
                    bool isnan_res_30205;
                    
                    isnan_res_30205 = futrts_isnan32(x_30201);
                    
                    float y_30206;
                    
                    if (isnan_res_30205) {
                        y_30206 = 0.0F;
                    } else {
                        y_30206 = 1.0F;
                    }
                    
                    float defunc_2_f_res_30207 = x_30204 * y_30206;
                    float defunc_1_op_res_30200 = defunc_2_f_res_30207 +
                          redout_42788;
                    float redout_tmp_44123 = defunc_1_op_res_30200;
                    
                    redout_42788 = redout_tmp_44123;
                }
                defunc_2_reduce_res_30197 = redout_42788;
                ((__global float *) mem_42909)[phys_tid_30030 + i_42786 *
                                               (num_groups_30186 *
                                                segmap_group_sizze_30185)] =
                    defunc_2_reduce_res_30197;
            }
            for (int64_t i_44124 = 0; i_44124 < i32_res_27566; i_44124++) {
                ((__global float *) mem_42925)[i_44124 * (i32_res_27566 *
                                                          m_27551) +
                                               gtid_30028 * i32_res_27566 +
                                               gtid_30029] = ((__global
                                                               float *) mem_42909)[phys_tid_30030 +
                                                                                   i_44124 *
                                                                                   (num_groups_30186 *
                                                                                    segmap_group_sizze_30185)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30185
}
__kernel void mainDetailedzisegmap_30514(__global int *global_failure,
                                         int64_t m_27551, int64_t i32_res_27566,
                                         int64_t i32_res_27699,
                                         int64_t i32_res_27714, int64_t x_27715,
                                         int64_t j_m_i_27718,
                                         int64_t gauss_jordan_res_r_ixfn_43077,
                                         int64_t gauss_jordan_res_r_ixfn_43078,
                                         int64_t gauss_jordan_res_r_ixfn_43080,
                                         __global
                                         unsigned char *gauss_jordan_res_r_mem_43082,
                                         __global unsigned char *mem_43087)
{
    #define segmap_group_sizze_31065 (mainDetailedzisegmap_group_sizze_30518)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44281;
    int32_t local_tid_44282;
    int64_t group_sizze_44285;
    int32_t wave_sizze_44284;
    int32_t group_tid_44283;
    
    global_tid_44281 = get_global_id(0);
    local_tid_44282 = get_local_id(0);
    group_sizze_44285 = get_local_size(0);
    wave_sizze_44284 = LOCKSTEP_WIDTH;
    group_tid_44283 = get_group_id(0);
    
    int32_t phys_tid_30514;
    
    phys_tid_30514 = global_tid_44281;
    
    int64_t gtid_30511;
    
    gtid_30511 = squot64(sext_i32_i64(group_tid_44283) *
                         segmap_group_sizze_31065 +
                         sext_i32_i64(local_tid_44282), i32_res_27566 *
                         j_m_i_27718);
    
    int64_t gtid_slice_30509;
    
    gtid_slice_30509 = squot64(sext_i32_i64(group_tid_44283) *
                               segmap_group_sizze_31065 +
                               sext_i32_i64(local_tid_44282) -
                               squot64(sext_i32_i64(group_tid_44283) *
                                       segmap_group_sizze_31065 +
                                       sext_i32_i64(local_tid_44282),
                                       i32_res_27566 * j_m_i_27718) *
                               (i32_res_27566 * j_m_i_27718), j_m_i_27718);
    
    int64_t gtid_slice_30510;
    
    gtid_slice_30510 = sext_i32_i64(group_tid_44283) *
        segmap_group_sizze_31065 + sext_i32_i64(local_tid_44282) -
        squot64(sext_i32_i64(group_tid_44283) * segmap_group_sizze_31065 +
                sext_i32_i64(local_tid_44282), i32_res_27566 * j_m_i_27718) *
        (i32_res_27566 * j_m_i_27718) - squot64(sext_i32_i64(group_tid_44283) *
                                                segmap_group_sizze_31065 +
                                                sext_i32_i64(local_tid_44282) -
                                                squot64(sext_i32_i64(group_tid_44283) *
                                                        segmap_group_sizze_31065 +
                                                        sext_i32_i64(local_tid_44282),
                                                        i32_res_27566 *
                                                        j_m_i_27718) *
                                                (i32_res_27566 * j_m_i_27718),
                                                j_m_i_27718) * j_m_i_27718;
    if ((slt64(gtid_30511, m_27551) && slt64(gtid_slice_30509,
                                             i32_res_27566)) &&
        slt64(gtid_slice_30510, j_m_i_27718)) {
        int64_t slice_31069 = i32_res_27566 + gtid_slice_30510;
        int64_t binop_x_40961 = x_27715 * gtid_30511;
        int64_t binop_y_40962 = i32_res_27714 * gtid_slice_30509;
        int64_t binop_x_40963 = binop_x_40961 + binop_y_40962;
        int64_t binop_x_40964 = slice_31069 + binop_x_40963;
        int64_t new_index_40965 = squot64(binop_x_40964, i32_res_27699);
        int64_t binop_y_40977 = i32_res_27699 * new_index_40965;
        int64_t new_index_40978 = binop_x_40964 - binop_y_40977;
        float v_31070 = ((__global
                          float *) gauss_jordan_res_r_mem_43082)[gauss_jordan_res_r_ixfn_43077 +
                                                                 (new_index_40965 *
                                                                  gauss_jordan_res_r_ixfn_43078 +
                                                                  new_index_40978 *
                                                                  gauss_jordan_res_r_ixfn_43080)];
        
        ((__global float *) mem_43087)[gtid_30511 * (j_m_i_27718 *
                                                     i32_res_27566) +
                                       gtid_slice_30509 * j_m_i_27718 +
                                       gtid_slice_30510] = v_31070;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31065
}
__kernel void mainDetailedzisegmap_30680(__global int *global_failure,
                                         int64_t m_27551, int64_t i32_res_27699,
                                         int64_t ctx_param_ext_43040,
                                         int64_t ctx_param_ext_43041,
                                         int64_t ctx_param_ext_43043, __global
                                         unsigned char *mem_param_43045,
                                         __global unsigned char *mem_43065)
{
    #define segmap_group_sizze_31053 (mainDetailedzisegmap_group_sizze_30683)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44275;
    int32_t local_tid_44276;
    int64_t group_sizze_44279;
    int32_t wave_sizze_44278;
    int32_t group_tid_44277;
    
    global_tid_44275 = get_global_id(0);
    local_tid_44276 = get_local_id(0);
    group_sizze_44279 = get_local_size(0);
    wave_sizze_44278 = LOCKSTEP_WIDTH;
    group_tid_44277 = get_group_id(0);
    
    int32_t phys_tid_30680;
    
    phys_tid_30680 = global_tid_44275;
    
    int64_t gtid_30678;
    
    gtid_30678 = squot64(sext_i32_i64(group_tid_44277) *
                         segmap_group_sizze_31053 +
                         sext_i32_i64(local_tid_44276), i32_res_27699);
    
    int64_t gtid_30679;
    
    gtid_30679 = sext_i32_i64(group_tid_44277) * segmap_group_sizze_31053 +
        sext_i32_i64(local_tid_44276) - squot64(sext_i32_i64(group_tid_44277) *
                                                segmap_group_sizze_31053 +
                                                sext_i32_i64(local_tid_44276),
                                                i32_res_27699) * i32_res_27699;
    if (slt64(gtid_30678, m_27551) && slt64(gtid_30679, i32_res_27699)) {
        float write_value_31059 = ((__global float *) mem_43065)[gtid_30678 *
                                                                 i32_res_27699 +
                                                                 gtid_30679];
        
        if ((sle64((int64_t) 0, gtid_30678) && slt64(gtid_30678, m_27551)) &&
            (sle64((int64_t) 0, gtid_30679) && slt64(gtid_30679,
                                                     i32_res_27699))) {
            ((__global float *) mem_param_43045)[ctx_param_ext_43040 +
                                                 (gtid_30678 *
                                                  ctx_param_ext_43041 +
                                                  gtid_30679 *
                                                  ctx_param_ext_43043)] =
                write_value_31059;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31053
}
__kernel void mainDetailedzisegmap_30734(__global int *global_failure,
                                         int64_t m_27551, int32_t k2p2zq_27564,
                                         int32_t m_27697, int64_t i32_res_27699,
                                         int32_t i_30956, int64_t i32_res_30958,
                                         int64_t ctx_param_ext_43040,
                                         int64_t ctx_param_ext_43041,
                                         int64_t ctx_param_ext_43043, __global
                                         unsigned char *mem_param_43045,
                                         __global unsigned char *mem_43061,
                                         __global unsigned char *mem_43065)
{
    #define segmap_group_sizze_31019 (mainDetailedzisegmap_group_sizze_30737)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44270;
    int32_t local_tid_44271;
    int64_t group_sizze_44274;
    int32_t wave_sizze_44273;
    int32_t group_tid_44272;
    
    global_tid_44270 = get_global_id(0);
    local_tid_44271 = get_local_id(0);
    group_sizze_44274 = get_local_size(0);
    wave_sizze_44273 = LOCKSTEP_WIDTH;
    group_tid_44272 = get_group_id(0);
    
    int32_t phys_tid_30734;
    
    phys_tid_30734 = global_tid_44270;
    
    int64_t gtid_30732;
    
    gtid_30732 = squot64(sext_i32_i64(group_tid_44272) *
                         segmap_group_sizze_31019 +
                         sext_i32_i64(local_tid_44271), i32_res_27699);
    
    int64_t gtid_30733;
    
    gtid_30733 = sext_i32_i64(group_tid_44272) * segmap_group_sizze_31019 +
        sext_i32_i64(local_tid_44271) - squot64(sext_i32_i64(group_tid_44272) *
                                                segmap_group_sizze_31019 +
                                                sext_i32_i64(local_tid_44271),
                                                i32_res_27699) * i32_res_27699;
    if (slt64(gtid_30732, m_27551) && slt64(gtid_30733, i32_res_27699)) {
        bool cond_31024 = ((__global bool *) mem_43061)[gtid_30732];
        int32_t defunc_0_f_res_31026 = sext_i64_i32(gtid_30733);
        int32_t defunc_0_f_res_31027 = sdiv32(defunc_0_f_res_31026, m_27697);
        int32_t defunc_0_f_res_31028 = smod32(defunc_0_f_res_31026, m_27697);
        float defunc_0_f_res_31029;
        
        if (cond_31024) {
            int32_t x_31030 = mul32(m_27697, defunc_0_f_res_31027);
            int32_t i32_arg_31031 = add32(defunc_0_f_res_31028, x_31030);
            int64_t i32_res_31032 = sext_i32_i64(i32_arg_31031);
            float defunc_0_f_res_t_res_31033 = ((__global
                                                 float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                           (gtid_30732 *
                                                                            ctx_param_ext_43041 +
                                                                            i32_res_31032 *
                                                                            ctx_param_ext_43043)];
            
            defunc_0_f_res_31029 = defunc_0_f_res_t_res_31033;
        } else {
            float v1_31023 = ((__global
                               float *) mem_param_43045)[ctx_param_ext_43040 +
                                                         (gtid_30732 *
                                                          ctx_param_ext_43041 +
                                                          i32_res_30958 *
                                                          ctx_param_ext_43043)];
            int64_t i32_res_31034 = sext_i32_i64(defunc_0_f_res_31028);
            float x_31035 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_30732 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_31034 *
                                                         ctx_param_ext_43043)];
            float x_31036 = x_31035 / v1_31023;
            int32_t y_31037 = sub32(k2p2zq_27564, 1);
            bool cond_31038 = slt32(defunc_0_f_res_31027, y_31037);
            float defunc_0_f_res_f_res_31039;
            
            if (cond_31038) {
                int32_t x_31040 = add32(1, defunc_0_f_res_31027);
                int32_t x_31041 = mul32(m_27697, x_31040);
                int32_t i32_arg_31042 = add32(defunc_0_f_res_31028, x_31041);
                int64_t i32_res_31043 = sext_i32_i64(i32_arg_31042);
                float x_31044 = ((__global
                                  float *) mem_param_43045)[ctx_param_ext_43040 +
                                                            (gtid_30732 *
                                                             ctx_param_ext_43041 +
                                                             i32_res_31043 *
                                                             ctx_param_ext_43043)];
                int32_t i32_arg_31045 = add32(i_30956, x_31041);
                int64_t i32_res_31046 = sext_i32_i64(i32_arg_31045);
                float x_31047 = ((__global
                                  float *) mem_param_43045)[ctx_param_ext_43040 +
                                                            (gtid_30732 *
                                                             ctx_param_ext_43041 +
                                                             i32_res_31046 *
                                                             ctx_param_ext_43043)];
                float y_31048 = x_31036 * x_31047;
                float defunc_0_f_res_f_res_t_res_31049 = x_31044 - y_31048;
                
                defunc_0_f_res_f_res_31039 = defunc_0_f_res_f_res_t_res_31049;
            } else {
                defunc_0_f_res_f_res_31039 = x_31036;
            }
            defunc_0_f_res_31029 = defunc_0_f_res_f_res_31039;
        }
        ((__global float *) mem_43065)[gtid_30732 * i32_res_27699 +
                                       gtid_30733] = defunc_0_f_res_31029;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31019
}
__kernel void mainDetailedzisegmap_30802(__global int *global_failure,
                                         int64_t m_27551, int64_t i32_res_30958,
                                         int64_t ctx_param_ext_43040,
                                         int64_t ctx_param_ext_43041,
                                         int64_t ctx_param_ext_43043, __global
                                         unsigned char *mem_param_43045,
                                         __global unsigned char *mem_43061)
{
    #define segmap_group_sizze_31003 (mainDetailedzisegmap_group_sizze_30804)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44265;
    int32_t local_tid_44266;
    int64_t group_sizze_44269;
    int32_t wave_sizze_44268;
    int32_t group_tid_44267;
    
    global_tid_44265 = get_global_id(0);
    local_tid_44266 = get_local_id(0);
    group_sizze_44269 = get_local_size(0);
    wave_sizze_44268 = LOCKSTEP_WIDTH;
    group_tid_44267 = get_group_id(0);
    
    int32_t phys_tid_30802;
    
    phys_tid_30802 = global_tid_44265;
    
    int64_t gtid_30801;
    
    gtid_30801 = sext_i32_i64(group_tid_44267) * segmap_group_sizze_31003 +
        sext_i32_i64(local_tid_44266);
    if (slt64(gtid_30801, m_27551)) {
        float v1_31008 = ((__global
                           float *) mem_param_43045)[ctx_param_ext_43040 +
                                                     (gtid_30801 *
                                                      ctx_param_ext_43041 +
                                                      i32_res_30958 *
                                                      ctx_param_ext_43043)];
        bool cond_31009 = v1_31008 == 0.0F;
        
        ((__global bool *) mem_43061)[gtid_30801] = cond_31009;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31003
}
__kernel void mainDetailedzisegmap_30895(__global int *global_failure,
                                         int64_t m_27551, int32_t k2p2zq_27564,
                                         int64_t i32_res_27566, int32_t m_27697,
                                         int64_t i32_res_27699, __global
                                         unsigned char *defunc_3_map_res_mem_43009,
                                         __global unsigned char *mem_43037)
{
    #define segmap_group_sizze_30939 (mainDetailedzisegmap_group_sizze_30898)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44232;
    int32_t local_tid_44233;
    int64_t group_sizze_44236;
    int32_t wave_sizze_44235;
    int32_t group_tid_44234;
    
    global_tid_44232 = get_global_id(0);
    local_tid_44233 = get_local_id(0);
    group_sizze_44236 = get_local_size(0);
    wave_sizze_44235 = LOCKSTEP_WIDTH;
    group_tid_44234 = get_group_id(0);
    
    int32_t phys_tid_30895;
    
    phys_tid_30895 = global_tid_44232;
    
    int64_t gtid_30893;
    
    gtid_30893 = squot64(sext_i32_i64(group_tid_44234) *
                         segmap_group_sizze_30939 +
                         sext_i32_i64(local_tid_44233), i32_res_27699);
    
    int64_t gtid_30894;
    
    gtid_30894 = sext_i32_i64(group_tid_44234) * segmap_group_sizze_30939 +
        sext_i32_i64(local_tid_44233) - squot64(sext_i32_i64(group_tid_44234) *
                                                segmap_group_sizze_30939 +
                                                sext_i32_i64(local_tid_44233),
                                                i32_res_27699) * i32_res_27699;
    if (slt64(gtid_30893, m_27551) && slt64(gtid_30894, i32_res_27699)) {
        int32_t index_primexp_40904 = sext_i64_i32(gtid_30894);
        int32_t defunc_0_f_res_30944 = sdiv32(index_primexp_40904, m_27697);
        int32_t defunc_0_f_res_30945 = smod32(index_primexp_40904, m_27697);
        bool cond_30946 = slt32(defunc_0_f_res_30945, k2p2zq_27564);
        float defunc_0_f_res_30947;
        
        if (cond_30946) {
            int64_t i_30948 = sext_i32_i64(defunc_0_f_res_30944);
            int64_t j_30949 = sext_i32_i64(defunc_0_f_res_30945);
            float defunc_0_f_res_t_res_30950 = ((__global
                                                 float *) defunc_3_map_res_mem_43009)[gtid_30893 *
                                                                                      (i32_res_27566 *
                                                                                       i32_res_27566) +
                                                                                      i_30948 *
                                                                                      i32_res_27566 +
                                                                                      j_30949];
            
            defunc_0_f_res_30947 = defunc_0_f_res_t_res_30950;
        } else {
            int32_t y_30951 = add32(k2p2zq_27564, defunc_0_f_res_30944);
            bool cond_30952 = defunc_0_f_res_30945 == y_30951;
            float defunc_0_f_res_f_res_30953;
            
            if (cond_30952) {
                defunc_0_f_res_f_res_30953 = 1.0F;
            } else {
                defunc_0_f_res_f_res_30953 = 0.0F;
            }
            defunc_0_f_res_30947 = defunc_0_f_res_f_res_30953;
        }
        ((__global float *) mem_43037)[gtid_30893 * i32_res_27699 +
                                       gtid_30894] = defunc_0_f_res_30947;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_30939
}
__kernel void mainDetailedzisegmap_31076(__global int *global_failure,
                                         int64_t N_27550, int64_t m_27551,
                                         int32_t n_27554, int32_t k2p2zq_27564,
                                         int64_t i32_res_27566,
                                         int64_t num_groups_31097, __global
                                         unsigned char *binop_p_mem_42850,
                                         __global unsigned char *mem_43092,
                                         __global unsigned char *mem_43095,
                                         __global unsigned char *mem_43110)
{
    #define segmap_group_sizze_31096 (mainDetailedzisegmap_group_sizze_31078)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44289;
    int32_t local_tid_44290;
    int64_t group_sizze_44293;
    int32_t wave_sizze_44292;
    int32_t group_tid_44291;
    
    global_tid_44289 = get_global_id(0);
    local_tid_44290 = get_local_id(0);
    group_sizze_44293 = get_local_size(0);
    wave_sizze_44292 = LOCKSTEP_WIDTH;
    group_tid_44291 = get_group_id(0);
    
    int32_t phys_tid_31076;
    
    phys_tid_31076 = global_tid_44289;
    
    int32_t phys_group_id_44294;
    
    phys_group_id_44294 = get_group_id(0);
    for (int32_t i_44295 = 0; i_44295 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551, segmap_group_sizze_31096)) -
                   phys_group_id_44294, sext_i64_i32(num_groups_31097));
         i_44295++) {
        int32_t virt_group_id_44296 = phys_group_id_44294 + i_44295 *
                sext_i64_i32(num_groups_31097);
        int64_t gtid_31075 = sext_i32_i64(virt_group_id_44296) *
                segmap_group_sizze_31096 + sext_i32_i64(local_tid_44290);
        
        if (slt64(gtid_31075, m_27551)) {
            for (int32_t i_42828 = 0; i_42828 < k2p2zq_27564; i_42828++) {
                int64_t i_42792 = sext_i32_i64(i_42828);
                float defunc_2_reduce_res_31103;
                float redout_42794 = 0.0F;
                
                for (int32_t i_42827 = 0; i_42827 < n_27554; i_42827++) {
                    int64_t i_42795 = sext_i32_i64(i_42827);
                    float x_31108 = ((__global float *) mem_43092)[i_42795 *
                                                                   m_27551 +
                                                                   gtid_31075];
                    bool isnan_res_31109;
                    
                    isnan_res_31109 = futrts_isnan32(x_31108);
                    
                    float defunc_1_f_res_31110;
                    
                    if (isnan_res_31109) {
                        defunc_1_f_res_31110 = 0.0F;
                    } else {
                        float x_31107 = ((__global
                                          float *) binop_p_mem_42850)[i_42792 *
                                                                      N_27550 +
                                                                      i_42795];
                        float defunc_1_f_res_f_res_31111 = x_31107 * x_31108;
                        
                        defunc_1_f_res_31110 = defunc_1_f_res_f_res_31111;
                    }
                    
                    float defunc_1_op_res_31106 = defunc_1_f_res_31110 +
                          redout_42794;
                    float redout_tmp_44298 = defunc_1_op_res_31106;
                    
                    redout_42794 = redout_tmp_44298;
                }
                defunc_2_reduce_res_31103 = redout_42794;
                ((__global float *) mem_43095)[phys_tid_31076 + i_42792 *
                                               (num_groups_31097 *
                                                segmap_group_sizze_31096)] =
                    defunc_2_reduce_res_31103;
            }
            for (int64_t i_44299 = 0; i_44299 < i32_res_27566; i_44299++) {
                ((__global float *) mem_43110)[i_44299 * m_27551 + gtid_31075] =
                    ((__global float *) mem_43095)[phys_tid_31076 + i_44299 *
                                                   (num_groups_31097 *
                                                    segmap_group_sizze_31096)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31096
}
__kernel void mainDetailedzisegmap_31217(__global int *global_failure,
                                         int64_t m_27551, int32_t k2p2zq_27564,
                                         int64_t i32_res_27566,
                                         int64_t num_groups_31237, __global
                                         unsigned char *mem_43314, __global
                                         unsigned char *mem_43317, __global
                                         unsigned char *mem_43320, __global
                                         unsigned char *mem_43335)
{
    #define segmap_group_sizze_31236 (mainDetailedzisegmap_group_sizze_31219)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44421;
    int32_t local_tid_44422;
    int64_t group_sizze_44425;
    int32_t wave_sizze_44424;
    int32_t group_tid_44423;
    
    global_tid_44421 = get_global_id(0);
    local_tid_44422 = get_local_id(0);
    group_sizze_44425 = get_local_size(0);
    wave_sizze_44424 = LOCKSTEP_WIDTH;
    group_tid_44423 = get_group_id(0);
    
    int32_t phys_tid_31217;
    
    phys_tid_31217 = global_tid_44421;
    
    int32_t phys_group_id_44426;
    
    phys_group_id_44426 = get_group_id(0);
    for (int32_t i_44427 = 0; i_44427 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551, segmap_group_sizze_31236)) -
                   phys_group_id_44426, sext_i64_i32(num_groups_31237));
         i_44427++) {
        int32_t virt_group_id_44428 = phys_group_id_44426 + i_44427 *
                sext_i64_i32(num_groups_31237);
        int64_t gtid_31216 = sext_i32_i64(virt_group_id_44428) *
                segmap_group_sizze_31236 + sext_i32_i64(local_tid_44422);
        
        if (slt64(gtid_31216, m_27551)) {
            for (int32_t i_42830 = 0; i_42830 < k2p2zq_27564; i_42830++) {
                int64_t i_42798 = sext_i32_i64(i_42830);
                float defunc_0_f_res_31244;
                float redout_42800 = 0.0F;
                
                for (int32_t i_42829 = 0; i_42829 < k2p2zq_27564; i_42829++) {
                    int64_t i_42801 = sext_i32_i64(i_42829);
                    float x_31248 = ((__global float *) mem_43317)[i_42801 *
                                                                   m_27551 +
                                                                   gtid_31216];
                    float x_31249 = ((__global float *) mem_43314)[i_42798 *
                                                                   (m_27551 *
                                                                    i32_res_27566) +
                                                                   i_42801 *
                                                                   m_27551 +
                                                                   gtid_31216];
                    float defunc_1_f_res_31250 = x_31248 * x_31249;
                    float defunc_1_op_res_31247 = defunc_1_f_res_31250 +
                          redout_42800;
                    float redout_tmp_44430 = defunc_1_op_res_31247;
                    
                    redout_42800 = redout_tmp_44430;
                }
                defunc_0_f_res_31244 = redout_42800;
                ((__global float *) mem_43320)[phys_tid_31217 + i_42798 *
                                               (num_groups_31237 *
                                                segmap_group_sizze_31236)] =
                    defunc_0_f_res_31244;
            }
            for (int64_t i_44431 = 0; i_44431 < i32_res_27566; i_44431++) {
                ((__global float *) mem_43335)[i_44431 * m_27551 + gtid_31216] =
                    ((__global float *) mem_43320)[phys_tid_31217 + i_44431 *
                                                   (num_groups_31237 *
                                                    segmap_group_sizze_31236)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31236
}
__kernel void mainDetailedzisegmap_31349(__global int *global_failure,
                                         int64_t N_27550, int64_t m_27551,
                                         int32_t k2p2zq_27564,
                                         int64_t i32_res_27566,
                                         int64_t num_groups_31368, __global
                                         unsigned char *mem_42857, __global
                                         unsigned char *mem_43379, __global
                                         unsigned char *mem_43382, __global
                                         unsigned char *mem_43397)
{
    #define segmap_group_sizze_31367 (mainDetailedzisegmap_group_sizze_31351)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44509;
    int32_t local_tid_44510;
    int64_t group_sizze_44513;
    int32_t wave_sizze_44512;
    int32_t group_tid_44511;
    
    global_tid_44509 = get_global_id(0);
    local_tid_44510 = get_local_id(0);
    group_sizze_44513 = get_local_size(0);
    wave_sizze_44512 = LOCKSTEP_WIDTH;
    group_tid_44511 = get_group_id(0);
    
    int32_t phys_tid_31349;
    
    phys_tid_31349 = global_tid_44509;
    
    int32_t phys_group_id_44514;
    
    phys_group_id_44514 = get_group_id(0);
    for (int32_t i_44515 = 0; i_44515 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551, segmap_group_sizze_31367)) -
                   phys_group_id_44514, sext_i64_i32(num_groups_31368));
         i_44515++) {
        int32_t virt_group_id_44516 = phys_group_id_44514 + i_44515 *
                sext_i64_i32(num_groups_31368);
        int64_t gtid_31348 = sext_i32_i64(virt_group_id_44516) *
                segmap_group_sizze_31367 + sext_i32_i64(local_tid_44510);
        
        if (slt64(gtid_31348, m_27551)) {
            for (int64_t i_42808 = 0; i_42808 < N_27550; i_42808++) {
                float defunc_0_f_res_31374;
                float redout_42810 = 0.0F;
                
                for (int32_t i_42833 = 0; i_42833 < k2p2zq_27564; i_42833++) {
                    int64_t i_42811 = sext_i32_i64(i_42833);
                    float x_31378 = ((__global float *) mem_43379)[i_42811 *
                                                                   m_27551 +
                                                                   gtid_31348];
                    float x_31379 = ((__global float *) mem_42857)[i_42808 *
                                                                   i32_res_27566 +
                                                                   i_42811];
                    float defunc_1_f_res_31380 = x_31378 * x_31379;
                    float defunc_1_op_res_31377 = defunc_1_f_res_31380 +
                          redout_42810;
                    float redout_tmp_44518 = defunc_1_op_res_31377;
                    
                    redout_42810 = redout_tmp_44518;
                }
                defunc_0_f_res_31374 = redout_42810;
                ((__global float *) mem_43382)[phys_tid_31349 + i_42808 *
                                               (num_groups_31368 *
                                                segmap_group_sizze_31367)] =
                    defunc_0_f_res_31374;
            }
            for (int64_t i_44519 = 0; i_44519 < N_27550; i_44519++) {
                ((__global float *) mem_43397)[i_44519 * m_27551 + gtid_31348] =
                    ((__global float *) mem_43382)[phys_tid_31349 + i_44519 *
                                                   (num_groups_31368 *
                                                    segmap_group_sizze_31367)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31367
}
__kernel void mainDetailedzisegmap_31629(__global int *global_failure,
                                         int64_t N_27550, int64_t m_27551,
                                         __global unsigned char *mem_43623,
                                         __global unsigned char *mem_43626,
                                         __global unsigned char *mem_43632,
                                         __global unsigned char *mem_43635)
{
    #define segmap_group_sizze_31795 (mainDetailedzisegmap_group_sizze_31632)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44736;
    int32_t local_tid_44737;
    int64_t group_sizze_44740;
    int32_t wave_sizze_44739;
    int32_t group_tid_44738;
    
    global_tid_44736 = get_global_id(0);
    local_tid_44737 = get_local_id(0);
    group_sizze_44740 = get_local_size(0);
    wave_sizze_44739 = LOCKSTEP_WIDTH;
    group_tid_44738 = get_group_id(0);
    
    int32_t phys_tid_31629;
    
    phys_tid_31629 = global_tid_44736;
    
    int64_t gtid_31627;
    
    gtid_31627 = squot64(sext_i32_i64(group_tid_44738) *
                         segmap_group_sizze_31795 +
                         sext_i32_i64(local_tid_44737), N_27550);
    
    int64_t gtid_31628;
    
    gtid_31628 = sext_i32_i64(group_tid_44738) * segmap_group_sizze_31795 +
        sext_i32_i64(local_tid_44737) - squot64(sext_i32_i64(group_tid_44738) *
                                                segmap_group_sizze_31795 +
                                                sext_i32_i64(local_tid_44737),
                                                N_27550) * N_27550;
    if (slt64(gtid_31627, m_27551) && slt64(gtid_31628, N_27550)) {
        float x_31803 = ((__global float *) mem_43626)[gtid_31627 * N_27550 +
                                                       gtid_31628];
        int32_t index_primexp_40920 = sext_i64_i32(gtid_31628);
        bool isnan_res_31806;
        
        isnan_res_31806 = futrts_isnan32(x_31803);
        
        bool defunc_0_p_res_31807 = !isnan_res_31806;
        int64_t defunc_1_f_res_31808;
        
        if (defunc_0_p_res_31807) {
            int64_t x_31804 = ((__global int64_t *) mem_43623)[gtid_31627 *
                                                               N_27550 +
                                                               gtid_31628];
            int64_t defunc_1_f_res_t_res_31809 = sub64(x_31804, (int64_t) 1);
            
            defunc_1_f_res_31808 = defunc_1_f_res_t_res_31809;
        } else {
            defunc_1_f_res_31808 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_31627) && slt64(gtid_31627, m_27551)) &&
            (sle64((int64_t) 0, defunc_1_f_res_31808) &&
             slt64(defunc_1_f_res_31808, N_27550))) {
            ((__global int32_t *) mem_43635)[gtid_31627 * N_27550 +
                                             defunc_1_f_res_31808] =
                index_primexp_40920;
        }
        if ((sle64((int64_t) 0, gtid_31627) && slt64(gtid_31627, m_27551)) &&
            (sle64((int64_t) 0, defunc_1_f_res_31808) &&
             slt64(defunc_1_f_res_31808, N_27550))) {
            ((__global float *) mem_43632)[gtid_31627 * N_27550 +
                                           defunc_1_f_res_31808] = x_31803;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31795
}
__kernel void mainDetailedzisegmap_31705(__global int *global_failure,
                                         int64_t N_27550, int64_t m_27551,
                                         int64_t i_27826, __global
                                         unsigned char *mem_43623, __global
                                         unsigned char *mem_43629)
{
    #define segmap_group_sizze_31759 (mainDetailedzisegmap_group_sizze_31707)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44713;
    int32_t local_tid_44714;
    int64_t group_sizze_44717;
    int32_t wave_sizze_44716;
    int32_t group_tid_44715;
    
    global_tid_44713 = get_global_id(0);
    local_tid_44714 = get_local_id(0);
    group_sizze_44717 = get_local_size(0);
    wave_sizze_44716 = LOCKSTEP_WIDTH;
    group_tid_44715 = get_group_id(0);
    
    int32_t phys_tid_31705;
    
    phys_tid_31705 = global_tid_44713;
    
    int64_t gtid_31704;
    
    gtid_31704 = sext_i32_i64(group_tid_44715) * segmap_group_sizze_31759 +
        sext_i32_i64(local_tid_44714);
    if (slt64(gtid_31704, m_27551)) {
        int64_t last_res_31763 = ((__global int64_t *) mem_43623)[gtid_31704 *
                                                                  N_27550 +
                                                                  i_27826];
        int32_t defunc_0_f_res_31764 = sext_i64_i32(last_res_31763);
        
        ((__global int32_t *) mem_43629)[gtid_31704] = defunc_0_f_res_31764;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_31759
}
__kernel void mainDetailedzisegmap_31956(__global int *global_failure,
                                         int64_t m_27551, float hfrac_27556,
                                         int32_t k2p2_27562, __global
                                         unsigned char *mem_43692, __global
                                         unsigned char *mem_43695, __global
                                         unsigned char *mem_43698, __global
                                         unsigned char *mem_43700)
{
    #define segmap_group_sizze_32041 (mainDetailedzisegmap_group_sizze_31958)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44889;
    int32_t local_tid_44890;
    int64_t group_sizze_44893;
    int32_t wave_sizze_44892;
    int32_t group_tid_44891;
    
    global_tid_44889 = get_global_id(0);
    local_tid_44890 = get_local_id(0);
    group_sizze_44893 = get_local_size(0);
    wave_sizze_44892 = LOCKSTEP_WIDTH;
    group_tid_44891 = get_group_id(0);
    
    int32_t phys_tid_31956;
    
    phys_tid_31956 = global_tid_44889;
    
    int64_t gtid_31955;
    
    gtid_31955 = sext_i32_i64(group_tid_44891) * segmap_group_sizze_32041 +
        sext_i32_i64(local_tid_44890);
    if (slt64(gtid_31955, m_27551)) {
        int32_t defunc_0_f_res_32045 = ((__global
                                         int32_t *) mem_43692)[gtid_31955];
        float defunc_0_f_res_32046 = ((__global float *) mem_43695)[gtid_31955];
        int32_t r32_arg_32047 = sub32(defunc_0_f_res_32045, k2p2_27562);
        float i32_res_32048 = sitofp_i32_f32(r32_arg_32047);
        float sqrt_arg_32049 = defunc_0_f_res_32046 / i32_res_32048;
        float sqrt_res_32050;
        
        sqrt_res_32050 = futrts_sqrt32(sqrt_arg_32049);
        
        float i32_res_32051 = sitofp_i32_f32(defunc_0_f_res_32045);
        float t32_arg_32052 = hfrac_27556 * i32_res_32051;
        int32_t f32_res_32053 = fptosi_f32_i32(t32_arg_32052);
        
        ((__global int32_t *) mem_43698)[gtid_31955] = f32_res_32053;
        ((__global float *) mem_43700)[gtid_31955] = sqrt_res_32050;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32041
}
__kernel void mainDetailedzisegmap_32227(__global int *global_failure,
                                         float lam_27557,
                                         int64_t iota32_arg_27946,
                                         int32_t x_27951, float i32_res_27959,
                                         __global
                                         unsigned char *mappingindices_mem_42840,
                                         __global unsigned char *mem_43742,
                                         __global unsigned char *mem_43744)
{
    #define segmap_group_sizze_32246 (mainDetailedzisegmap_group_sizze_32229)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44999;
    int32_t local_tid_45000;
    int64_t group_sizze_45003;
    int32_t wave_sizze_45002;
    int32_t group_tid_45001;
    
    global_tid_44999 = get_global_id(0);
    local_tid_45000 = get_local_id(0);
    group_sizze_45003 = get_local_size(0);
    wave_sizze_45002 = LOCKSTEP_WIDTH;
    group_tid_45001 = get_group_id(0);
    
    int32_t phys_tid_32227;
    
    phys_tid_32227 = global_tid_44999;
    
    int64_t gtid_32226;
    
    gtid_32226 = sext_i32_i64(group_tid_45001) * segmap_group_sizze_32246 +
        sext_i32_i64(local_tid_45000);
    if (slt64(gtid_32226, iota32_arg_27946)) {
        int32_t defunc_0_f_res_32251 = sext_i64_i32(gtid_32226);
        int32_t t_32252 = add32(x_27951, defunc_0_f_res_32251);
        int32_t i_32253 = sub32(t_32252, 1);
        int64_t i_32254 = sext_i32_i64(i_32253);
        int32_t time_32255 = ((__global
                               int32_t *) mappingindices_mem_42840)[i_32254];
        float i32_res_32256 = sitofp_i32_f32(time_32255);
        float logplus_arg_32257 = i32_res_32256 / i32_res_27959;
        bool cond_32258 = 2.7182817F < logplus_arg_32257;
        float logplus_res_32259;
        
        if (cond_32258) {
            float log_res_32260;
            
            log_res_32260 = futrts_log32(logplus_arg_32257);
            logplus_res_32259 = log_res_32260;
        } else {
            logplus_res_32259 = 1.0F;
        }
        
        float sqrt_res_32261;
        
        sqrt_res_32261 = futrts_sqrt32(logplus_res_32259);
        
        float defunc_0_f_res_32262 = lam_27557 * sqrt_res_32261;
        
        ((__global int32_t *) mem_43742)[gtid_32226] = defunc_0_f_res_32251;
        ((__global float *) mem_43744)[gtid_32226] = defunc_0_f_res_32262;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32246
}
__kernel void mainDetailedzisegmap_32478(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t m_27551,
                                         int64_t iota32_arg_27946,
                                         int64_t distance_27978,
                                         int64_t segmap_usable_groups_32711,
                                         __global
                                         unsigned char *defunc_4_map_res_mem_43637,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43705,
                                         __global unsigned char *mem_43747,
                                         __global unsigned char *mem_43754,
                                         __global unsigned char *mem_43765,
                                         __global unsigned char *mem_43785)
{
    #define segmap_group_sizze_32710 (mainDetailedzisegmap_group_sizze_32480)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45014;
    int32_t local_tid_45015;
    int64_t group_sizze_45018;
    int32_t wave_sizze_45017;
    int32_t group_tid_45016;
    
    global_tid_45014 = get_global_id(0);
    local_tid_45015 = get_local_id(0);
    group_sizze_45018 = get_local_size(0);
    wave_sizze_45017 = LOCKSTEP_WIDTH;
    group_tid_45016 = get_group_id(0);
    
    int32_t phys_tid_32478;
    
    phys_tid_32478 = global_tid_45014;
    
    int64_t gtid_32477;
    
    gtid_32477 = sext_i32_i64(group_tid_45016) * segmap_group_sizze_32710 +
        sext_i32_i64(local_tid_45015);
    if (slt64(gtid_32477, m_27551)) {
        int32_t x_32713 = ((__global
                            int32_t *) defunc_4_map_res_mem_43637)[gtid_32477];
        int32_t x_32714 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_32477];
        int32_t y_32715 = ((__global int32_t *) mem_43747)[gtid_32477];
        
        for (int64_t i_45019 = 0; i_45019 < iota32_arg_27946; i_45019++) {
            ((__global float *) mem_43765)[phys_tid_32478 + i_45019 *
                                           (segmap_usable_groups_32711 *
                                            segmap_group_sizze_32710)] =
                ((__global float *) mem_43754)[gtid_32477 + i_45019 * m_27551];
        }
        for (int64_t i_32718 = 0; i_32718 < distance_27978; i_32718++) {
            int64_t index_primexp_32720 = add64((int64_t) 1, i_32718);
            bool cond_32721 = slt64((int64_t) 0, index_primexp_32720);
            bool loop_cond_32722;
            
            if (cond_32721) {
                bool x_32723 = sle64((int64_t) 0, index_primexp_32720);
                bool y_32724 = slt64(index_primexp_32720, iota32_arg_27946);
                bool bounds_check_32725 = x_32723 && y_32724;
                bool index_certs_32726;
                
                if (!bounds_check_32725) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 2) ==
                            -1) {
                            global_failure_args[0] = index_primexp_32720;
                            global_failure_args[1] = iota32_arg_27946;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_32727 = ((__global
                                                       float *) mem_43765)[phys_tid_32478 +
                                                                           index_primexp_32720 *
                                                                           (segmap_usable_groups_32711 *
                                                                            segmap_group_sizze_32710)];
                bool y_32728 = slt64(i_32718, iota32_arg_27946);
                bool index_certs_32729;
                
                if (!y_32728) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 3) ==
                            -1) {
                            global_failure_args[0] = i_32718;
                            global_failure_args[1] = iota32_arg_27946;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_32730 = ((__global
                                                       float *) mem_43765)[phys_tid_32478 +
                                                                           i_32718 *
                                                                           (segmap_usable_groups_32711 *
                                                                            segmap_group_sizze_32710)];
                bool defunc_1_zlze_res_32731 = defunc_1_lifted_gt_arg_32730 <=
                     defunc_2_lifted_gt_arg_32727;
                bool defunc_2_lifted_gt_res_32732 = !defunc_1_zlze_res_32731;
                
                loop_cond_32722 = defunc_2_lifted_gt_res_32732;
            } else {
                loop_cond_32722 = 0;
            }
            
            bool xszq_32733;
            int64_t xszq_32734;
            bool loop_while_32736;
            int64_t j_32737;
            
            loop_while_32736 = loop_cond_32722;
            j_32737 = index_primexp_32720;
            while (loop_while_32736) {
                int64_t loopres_32739 = sub64(j_32737, (int64_t) 1);
                bool x_32740 = sle64((int64_t) 0, j_32737);
                bool y_32741 = slt64(j_32737, iota32_arg_27946);
                bool bounds_check_32742 = x_32740 && y_32741;
                bool index_certs_32743;
                
                if (!bounds_check_32742) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 4) ==
                            -1) {
                            global_failure_args[0] = j_32737;
                            global_failure_args[1] = iota32_arg_27946;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32744 = ((__global
                                         float *) mem_43765)[phys_tid_32478 +
                                                             j_32737 *
                                                             (segmap_usable_groups_32711 *
                                                              segmap_group_sizze_32710)];
                bool x_32745 = sle64((int64_t) 0, loopres_32739);
                bool y_32746 = slt64(loopres_32739, iota32_arg_27946);
                bool bounds_check_32747 = x_32745 && y_32746;
                bool index_certs_32748;
                
                if (!bounds_check_32747) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 5) ==
                            -1) {
                            global_failure_args[0] = loopres_32739;
                            global_failure_args[1] = iota32_arg_27946;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_32749 = ((__global
                                         float *) mem_43765)[phys_tid_32478 +
                                                             loopres_32739 *
                                                             (segmap_usable_groups_32711 *
                                                              segmap_group_sizze_32710)];
                
                ((__global float *) mem_43765)[phys_tid_32478 + j_32737 *
                                               (segmap_usable_groups_32711 *
                                                segmap_group_sizze_32710)] =
                    copy_arg_32749;
                ((__global float *) mem_43765)[phys_tid_32478 + loopres_32739 *
                                               (segmap_usable_groups_32711 *
                                                segmap_group_sizze_32710)] =
                    copy_arg_32744;
                
                bool cond_32752 = slt64((int64_t) 0, loopres_32739);
                bool loop_cond_32753;
                
                if (cond_32752) {
                    bool index_certs_32754;
                    
                    if (!bounds_check_32747) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          6) == -1) {
                                global_failure_args[0] = loopres_32739;
                                global_failure_args[1] = iota32_arg_27946;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_32755 = ((__global
                                                           float *) mem_43765)[phys_tid_32478 +
                                                                               loopres_32739 *
                                                                               (segmap_usable_groups_32711 *
                                                                                segmap_group_sizze_32710)];
                    int64_t i_32756 = sub64(loopres_32739, (int64_t) 1);
                    bool x_32757 = sle64((int64_t) 0, i_32756);
                    bool y_32758 = slt64(i_32756, iota32_arg_27946);
                    bool bounds_check_32759 = x_32757 && y_32758;
                    bool index_certs_32760;
                    
                    if (!bounds_check_32759) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          7) == -1) {
                                global_failure_args[0] = i_32756;
                                global_failure_args[1] = iota32_arg_27946;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_32761 = ((__global
                                                           float *) mem_43765)[phys_tid_32478 +
                                                                               i_32756 *
                                                                               (segmap_usable_groups_32711 *
                                                                                segmap_group_sizze_32710)];
                    bool defunc_1_zlze_res_32762 =
                         defunc_1_lifted_gt_arg_32761 <=
                         defunc_2_lifted_gt_arg_32755;
                    bool defunc_2_lifted_gt_res_32763 =
                         !defunc_1_zlze_res_32762;
                    
                    loop_cond_32753 = defunc_2_lifted_gt_res_32763;
                } else {
                    loop_cond_32753 = 0;
                }
                
                bool loop_while_tmp_45021 = loop_cond_32753;
                int64_t j_tmp_45022 = loopres_32739;
                
                loop_while_32736 = loop_while_tmp_45021;
                j_32737 = j_tmp_45022;
            }
            xszq_32733 = loop_while_32736;
            xszq_32734 = j_32737;
        }
        
        int32_t i_32764 = sdiv32(y_32715, 2);
        int32_t j_32765 = sub32(i_32764, 1);
        bool cond_32766 = x_32713 == x_32714;
        float defunc_0_f_res_32767;
        
        if (cond_32766) {
            defunc_0_f_res_32767 = 0.0F;
        } else {
            int32_t x_32768 = smod32(y_32715, 2);
            bool cond_32769 = x_32768 == 0;
            float defunc_0_f_res_f_res_32770;
            
            if (cond_32769) {
                int64_t j_32771 = sext_i32_i64(j_32765);
                bool x_32772 = sle64((int64_t) 0, j_32771);
                bool y_32773 = slt64(j_32771, iota32_arg_27946);
                bool bounds_check_32774 = x_32772 && y_32773;
                bool index_certs_32775;
                
                if (!bounds_check_32774) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 8) ==
                            -1) {
                            global_failure_args[0] = j_32771;
                            global_failure_args[1] = iota32_arg_27946;
                            ;
                        }
                        return;
                    }
                }
                
                float x_32776 = ((__global float *) mem_43765)[phys_tid_32478 +
                                                               j_32771 *
                                                               (segmap_usable_groups_32711 *
                                                                segmap_group_sizze_32710)];
                int64_t i_32777 = sext_i32_i64(i_32764);
                bool x_32778 = sle64((int64_t) 0, i_32777);
                bool y_32779 = slt64(i_32777, iota32_arg_27946);
                bool bounds_check_32780 = x_32778 && y_32779;
                bool index_certs_32781;
                
                if (!bounds_check_32780) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 9) ==
                            -1) {
                            global_failure_args[0] = i_32777;
                            global_failure_args[1] = iota32_arg_27946;
                            ;
                        }
                        return;
                    }
                }
                
                float y_32782 = ((__global float *) mem_43765)[phys_tid_32478 +
                                                               i_32777 *
                                                               (segmap_usable_groups_32711 *
                                                                segmap_group_sizze_32710)];
                float x_32783 = x_32776 + y_32782;
                float defunc_0_f_res_f_res_t_res_32784 = x_32783 / 2.0F;
                
                defunc_0_f_res_f_res_32770 = defunc_0_f_res_f_res_t_res_32784;
            } else {
                int64_t i_32785 = sext_i32_i64(i_32764);
                bool x_32786 = sle64((int64_t) 0, i_32785);
                bool y_32787 = slt64(i_32785, iota32_arg_27946);
                bool bounds_check_32788 = x_32786 && y_32787;
                bool index_certs_32789;
                
                if (!bounds_check_32788) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 10) ==
                            -1) {
                            global_failure_args[0] = i_32785;
                            global_failure_args[1] = iota32_arg_27946;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_32790 = ((__global
                                                           float *) mem_43765)[phys_tid_32478 +
                                                                               i_32785 *
                                                                               (segmap_usable_groups_32711 *
                                                                                segmap_group_sizze_32710)];
                
                defunc_0_f_res_f_res_32770 = defunc_0_f_res_f_res_f_res_32790;
            }
            defunc_0_f_res_32767 = defunc_0_f_res_f_res_32770;
        }
        ((__global float *) mem_43785)[gtid_32477] = defunc_0_f_res_32767;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32710
}
__kernel void mainDetailedzisegmap_32599(__global int *global_failure,
                                         int failure_is_an_option, __global
                                         int64_t *global_failure_args,
                                         int64_t N_27550, int64_t m_27551,
                                         int64_t iota32_arg_27946, __global
                                         unsigned char *defunc_4_map_res_mem_43638,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43705,
                                         __global unsigned char *mem_43747,
                                         __global unsigned char *mem_43751)
{
    #define segmap_group_sizze_32681 (mainDetailedzisegmap_group_sizze_32602)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45009;
    int32_t local_tid_45010;
    int64_t group_sizze_45013;
    int32_t wave_sizze_45012;
    int32_t group_tid_45011;
    
    global_tid_45009 = get_global_id(0);
    local_tid_45010 = get_local_id(0);
    group_sizze_45013 = get_local_size(0);
    wave_sizze_45012 = LOCKSTEP_WIDTH;
    group_tid_45011 = get_group_id(0);
    
    int32_t phys_tid_32599;
    
    phys_tid_32599 = global_tid_45009;
    
    int64_t gtid_32597;
    
    gtid_32597 = squot64(sext_i32_i64(group_tid_45011) *
                         segmap_group_sizze_32681 +
                         sext_i32_i64(local_tid_45010), iota32_arg_27946);
    
    int64_t gtid_32598;
    
    gtid_32598 = sext_i32_i64(group_tid_45011) * segmap_group_sizze_32681 +
        sext_i32_i64(local_tid_45010) - squot64(sext_i32_i64(group_tid_45011) *
                                                segmap_group_sizze_32681 +
                                                sext_i32_i64(local_tid_45010),
                                                iota32_arg_27946) *
        iota32_arg_27946;
    if (slt64(gtid_32597, m_27551) && slt64(gtid_32598, iota32_arg_27946)) {
        int32_t x_32684 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_32597];
        int32_t y_32686 = ((__global int32_t *) mem_43747)[gtid_32597];
        int32_t index_primexp_40938 = sext_i64_i32(gtid_32598);
        bool cond_32688 = slt32(index_primexp_40938, y_32686);
        bool cond_32689;
        
        if (cond_32688) {
            int32_t i_32690 = add32(x_32684, index_primexp_40938);
            int64_t i_32691 = sext_i32_i64(i_32690);
            bool x_32692 = sle64((int64_t) 0, i_32691);
            bool y_32693 = slt64(i_32691, N_27550);
            bool bounds_check_32694 = x_32692 && y_32693;
            bool index_certs_32695;
            
            if (!bounds_check_32694) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 0) ==
                        -1) {
                        global_failure_args[0] = i_32691;
                        global_failure_args[1] = N_27550;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_32696 = ((__global
                                      float *) defunc_4_map_res_mem_43638)[gtid_32597 *
                                                                           N_27550 +
                                                                           i_32691];
            bool isnan_res_32697;
            
            isnan_res_32697 = futrts_isnan32(isnan_arg_32696);
            
            bool cond_t_res_32698 = !isnan_res_32697;
            
            cond_32689 = cond_t_res_32698;
        } else {
            cond_32689 = 0;
        }
        
        float defunc_0_f_res_32699;
        
        if (cond_32689) {
            int32_t i_32700 = add32(x_32684, index_primexp_40938);
            int64_t i_32701 = sext_i32_i64(i_32700);
            bool x_32702 = sle64((int64_t) 0, i_32701);
            bool y_32703 = slt64(i_32701, N_27550);
            bool bounds_check_32704 = x_32702 && y_32703;
            bool index_certs_32705;
            
            if (!bounds_check_32704) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 1) ==
                        -1) {
                        global_failure_args[0] = i_32701;
                        global_failure_args[1] = N_27550;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_32706 = ((__global
                                                 float *) defunc_4_map_res_mem_43638)[gtid_32597 *
                                                                                      N_27550 +
                                                                                      i_32701];
            
            defunc_0_f_res_32699 = defunc_0_f_res_t_res_32706;
        } else {
            defunc_0_f_res_32699 = INFINITY;
        }
        ((__global float *) mem_43751)[gtid_32597 * iota32_arg_27946 +
                                       gtid_32598] = defunc_0_f_res_32699;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32681
}
__kernel void mainDetailedzisegmap_32657(__global int *global_failure,
                                         int64_t m_27551, __global
                                         unsigned char *defunc_4_map_res_mem_43637,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43705,
                                         __global unsigned char *mem_43747)
{
    #define segmap_group_sizze_32666 (mainDetailedzisegmap_group_sizze_32659)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45004;
    int32_t local_tid_45005;
    int64_t group_sizze_45008;
    int32_t wave_sizze_45007;
    int32_t group_tid_45006;
    
    global_tid_45004 = get_global_id(0);
    local_tid_45005 = get_local_id(0);
    group_sizze_45008 = get_local_size(0);
    wave_sizze_45007 = LOCKSTEP_WIDTH;
    group_tid_45006 = get_group_id(0);
    
    int32_t phys_tid_32657;
    
    phys_tid_32657 = global_tid_45004;
    
    int64_t gtid_32656;
    
    gtid_32656 = sext_i32_i64(group_tid_45006) * segmap_group_sizze_32666 +
        sext_i32_i64(local_tid_45005);
    if (slt64(gtid_32656, m_27551)) {
        int32_t x_32669 = ((__global
                            int32_t *) defunc_4_map_res_mem_43637)[gtid_32656];
        int32_t x_32670 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_32656];
        int32_t y_32671 = sub32(x_32669, x_32670);
        
        ((__global int32_t *) mem_43747)[gtid_32656] = y_32671;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_32666
}
__kernel void mainDetailedzisegmap_33201(__global int *global_failure,
                                         int64_t N_27550, int64_t m_27551,
                                         int32_t n_27554,
                                         int64_t iota32_arg_27946, __global
                                         unsigned char *defunc_4_map_res_mem_43639,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43705,
                                         __global unsigned char *mem_43810,
                                         __global unsigned char *mem_43824,
                                         __global unsigned char *mem_43837)
{
    #define segmap_group_sizze_33600 (mainDetailedzisegmap_group_sizze_33204)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45224;
    int32_t local_tid_45225;
    int64_t group_sizze_45228;
    int32_t wave_sizze_45227;
    int32_t group_tid_45226;
    
    global_tid_45224 = get_global_id(0);
    local_tid_45225 = get_local_id(0);
    group_sizze_45228 = get_local_size(0);
    wave_sizze_45227 = LOCKSTEP_WIDTH;
    group_tid_45226 = get_group_id(0);
    
    int32_t phys_tid_33201;
    
    phys_tid_33201 = global_tid_45224;
    
    int64_t gtid_33199;
    
    gtid_33199 = squot64(sext_i32_i64(group_tid_45226) *
                         segmap_group_sizze_33600 +
                         sext_i32_i64(local_tid_45225), iota32_arg_27946);
    
    int64_t gtid_33200;
    
    gtid_33200 = sext_i32_i64(group_tid_45226) * segmap_group_sizze_33600 +
        sext_i32_i64(local_tid_45225) - squot64(sext_i32_i64(group_tid_45226) *
                                                segmap_group_sizze_33600 +
                                                sext_i32_i64(local_tid_45225),
                                                iota32_arg_27946) *
        iota32_arg_27946;
    if (slt64(gtid_33199, m_27551) && slt64(gtid_33200, iota32_arg_27946)) {
        int32_t y_33605 = ((__global int32_t *) mem_43810)[gtid_33199];
        int32_t index_primexp_40958 = sext_i64_i32(gtid_33200);
        float write_value_33609 = ((__global float *) mem_43824)[gtid_33199 *
                                                                 iota32_arg_27946 +
                                                                 gtid_33200];
        bool cond_33610 = slt32(index_primexp_40958, y_33605);
        int32_t defunc_0_f_res_33611;
        
        if (cond_33610) {
            int32_t x_33603 = ((__global
                                int32_t *) defunc_3_map_res_mem_43705)[gtid_33199];
            int32_t i_33612 = add32(x_33603, index_primexp_40958);
            int64_t i_33613 = sext_i32_i64(i_33612);
            int32_t x_33614 = ((__global
                                int32_t *) defunc_4_map_res_mem_43639)[gtid_33199 *
                                                                       N_27550 +
                                                                       i_33613];
            int32_t defunc_0_f_res_t_res_33615 = sub32(x_33614, n_27554);
            
            defunc_0_f_res_33611 = defunc_0_f_res_t_res_33615;
        } else {
            defunc_0_f_res_33611 = -1;
        }
        
        int64_t defunc_0_f_res_33616 = sext_i32_i64(defunc_0_f_res_33611);
        
        if ((sle64((int64_t) 0, gtid_33199) && slt64(gtid_33199, m_27551)) &&
            (sle64((int64_t) 0, defunc_0_f_res_33616) &&
             slt64(defunc_0_f_res_33616, iota32_arg_27946))) {
            ((__global float *) mem_43837)[gtid_33199 * iota32_arg_27946 +
                                           defunc_0_f_res_33616] =
                write_value_33609;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33600
}
__kernel void mainDetailedzisegmap_33254(__global int *global_failure,
                                         int64_t N_27550, int64_t m_27551,
                                         int32_t n_27554, __global
                                         unsigned char *defunc_4_map_res_mem_43639,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43705,
                                         __global unsigned char *mem_43810,
                                         __global unsigned char *mem_43821,
                                         __global unsigned char *mem_43827,
                                         __global unsigned char *mem_43829,
                                         __global unsigned char *mem_43832,
                                         __global unsigned char *mem_43834)
{
    #define segmap_group_sizze_33556 (mainDetailedzisegmap_group_sizze_33256)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45219;
    int32_t local_tid_45220;
    int64_t group_sizze_45223;
    int32_t wave_sizze_45222;
    int32_t group_tid_45221;
    
    global_tid_45219 = get_global_id(0);
    local_tid_45220 = get_local_id(0);
    group_sizze_45223 = get_local_size(0);
    wave_sizze_45222 = LOCKSTEP_WIDTH;
    group_tid_45221 = get_group_id(0);
    
    int32_t phys_tid_33254;
    
    phys_tid_33254 = global_tid_45219;
    
    int64_t gtid_33253;
    
    gtid_33253 = sext_i32_i64(group_tid_45221) * segmap_group_sizze_33556 +
        sext_i32_i64(local_tid_45220);
    if (slt64(gtid_33253, m_27551)) {
        int32_t x_33560 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_33253];
        int32_t y_33562 = ((__global int32_t *) mem_43810)[gtid_33253];
        bool defunc_0_f_res_33563 = ((__global bool *) mem_43827)[gtid_33253];
        bool cond_33566 = y_33562 == 0;
        float defunc_0_f_res_33567;
        
        if (cond_33566) {
            defunc_0_f_res_33567 = 0.0F;
        } else {
            float defunc_0_f_res_33565 = ((__global
                                           float *) mem_43821)[gtid_33253];
            float i32_res_33568 = sitofp_i32_f32(y_33562);
            float defunc_0_f_res_f_res_33569 = defunc_0_f_res_33565 /
                  i32_res_33568;
            
            defunc_0_f_res_33567 = defunc_0_f_res_f_res_33569;
        }
        
        bool cond_33570 = !defunc_0_f_res_33563;
        int32_t fst_breakzq_33571;
        
        if (cond_33570) {
            fst_breakzq_33571 = -1;
        } else {
            int32_t defunc_0_f_res_33564 = ((__global
                                             int32_t *) mem_43829)[gtid_33253];
            bool cond_33572 = slt32(defunc_0_f_res_33564, y_33562);
            int32_t adjustValInds_res_33573;
            
            if (cond_33572) {
                int32_t i_33574 = add32(x_33560, defunc_0_f_res_33564);
                int64_t i_33575 = sext_i32_i64(i_33574);
                int32_t x_33576 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43639)[gtid_33253 *
                                                                           N_27550 +
                                                                           i_33575];
                int32_t adjustValInds_res_t_res_33577 = sub32(x_33576, n_27554);
                
                adjustValInds_res_33573 = adjustValInds_res_t_res_33577;
            } else {
                adjustValInds_res_33573 = -1;
            }
            fst_breakzq_33571 = adjustValInds_res_33573;
        }
        
        bool cond_33578 = sle32(x_33560, 5);
        bool cond_f_res_33579 = sle32(y_33562, 5);
        bool x_33580 = !cond_33578;
        bool y_33581 = cond_f_res_33579 && x_33580;
        bool cond_33582 = cond_33578 || y_33581;
        int32_t fst_breakzq_33583;
        
        if (cond_33582) {
            fst_breakzq_33583 = -2;
        } else {
            fst_breakzq_33583 = fst_breakzq_33571;
        }
        ((__global int32_t *) mem_43832)[gtid_33253] = fst_breakzq_33583;
        ((__global float *) mem_43834)[gtid_33253] = defunc_0_f_res_33567;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33556
}
__kernel void mainDetailedzisegmap_33289(__global int *global_failure,
                                         int64_t m_27551, __global
                                         unsigned char *mem_43817, __global
                                         unsigned char *mem_43819, __global
                                         unsigned char *mem_43827, __global
                                         unsigned char *mem_43829)
{
    #define segmap_group_sizze_33533 (mainDetailedzisegmap_group_sizze_33291)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45214;
    int32_t local_tid_45215;
    int64_t group_sizze_45218;
    int32_t wave_sizze_45217;
    int32_t group_tid_45216;
    
    global_tid_45214 = get_global_id(0);
    local_tid_45215 = get_local_id(0);
    group_sizze_45218 = get_local_size(0);
    wave_sizze_45217 = LOCKSTEP_WIDTH;
    group_tid_45216 = get_group_id(0);
    
    int32_t phys_tid_33289;
    
    phys_tid_33289 = global_tid_45214;
    
    int64_t gtid_33288;
    
    gtid_33288 = sext_i32_i64(group_tid_45216) * segmap_group_sizze_33533 +
        sext_i32_i64(local_tid_45215);
    if (slt64(gtid_33288, m_27551)) {
        bool acc0_33539 = ((__global bool *) mem_43817)[gtid_33288];
        bool x_33544 = acc0_33539 && acc0_33539;
        int32_t defunc_1_op_res_f_res_33548;
        
        if (acc0_33539) {
            int32_t acc0_33540 = ((__global int32_t *) mem_43819)[gtid_33288];
            
            defunc_1_op_res_f_res_33548 = acc0_33540;
        } else {
            defunc_1_op_res_f_res_33548 = -1;
        }
        ((__global bool *) mem_43827)[gtid_33288] = x_33544;
        ((__global int32_t *) mem_43829)[gtid_33288] =
            defunc_1_op_res_f_res_33548;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33533
}
__kernel void mainDetailedzisegmap_33410(__global int *global_failure,
                                         int64_t m_27551,
                                         int64_t num_groups_33433, __global
                                         unsigned char *defunc_4_map_res_mem_43637,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43705,
                                         __global
                                         unsigned char *defunc_3_map_res_mem_43706,
                                         __global unsigned char *mem_43808,
                                         __global unsigned char *mem_43810)
{
    #define segmap_group_sizze_33432 (mainDetailedzisegmap_group_sizze_33412)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45052;
    int32_t local_tid_45053;
    int64_t group_sizze_45056;
    int32_t wave_sizze_45055;
    int32_t group_tid_45054;
    
    global_tid_45052 = get_global_id(0);
    local_tid_45053 = get_local_id(0);
    group_sizze_45056 = get_local_size(0);
    wave_sizze_45055 = LOCKSTEP_WIDTH;
    group_tid_45054 = get_group_id(0);
    
    int32_t phys_tid_33410;
    
    phys_tid_33410 = global_tid_45052;
    
    int32_t phys_group_id_45057;
    
    phys_group_id_45057 = get_group_id(0);
    for (int32_t i_45058 = 0; i_45058 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551, segmap_group_sizze_33432)) -
                   phys_group_id_45057, sext_i64_i32(num_groups_33433));
         i_45058++) {
        int32_t virt_group_id_45059 = phys_group_id_45057 + i_45058 *
                sext_i64_i32(num_groups_33433);
        int64_t gtid_33409 = sext_i32_i64(virt_group_id_45059) *
                segmap_group_sizze_33432 + sext_i32_i64(local_tid_45053);
        
        if (slt64(gtid_33409, m_27551)) {
            int32_t x_33439 = ((__global
                                int32_t *) defunc_4_map_res_mem_43637)[gtid_33409];
            int32_t x_33440 = ((__global
                                int32_t *) defunc_3_map_res_mem_43705)[gtid_33409];
            float x_33441 = ((__global
                              float *) defunc_3_map_res_mem_43706)[gtid_33409];
            int32_t y_33442 = sub32(x_33439, x_33440);
            float i32_res_33443 = sitofp_i32_f32(x_33440);
            float sqrt_res_33444;
            
            sqrt_res_33444 = futrts_sqrt32(i32_res_33443);
            
            float y_33445 = x_33441 * sqrt_res_33444;
            
            ((__global float *) mem_43808)[gtid_33409] = y_33445;
            ((__global int32_t *) mem_43810)[gtid_33409] = y_33442;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33432
}
__kernel void mainDetailedzisegmap_intragroup_30334(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43023_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43013_backing_aligned_1,
                                                    int32_t k2p2zq_27564,
                                                    int64_t i32_res_27566,
                                                    int32_t m_27697,
                                                    int64_t i32_res_27699,
                                                    int64_t i32_res_27714,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43009,
                                                    __global
                                                    unsigned char *mem_43033)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43023_backing_1 = (__local volatile
                                                           char *) mem_43023_backing_aligned_0;
    __local volatile char *restrict mem_43013_backing_0 = (__local volatile
                                                           char *) mem_43013_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44224;
    int32_t local_tid_44225;
    int64_t group_sizze_44228;
    int32_t wave_sizze_44227;
    int32_t group_tid_44226;
    
    global_tid_44224 = get_global_id(0);
    local_tid_44225 = get_local_id(0);
    group_sizze_44228 = get_local_size(0);
    wave_sizze_44227 = LOCKSTEP_WIDTH;
    group_tid_44226 = get_group_id(0);
    
    int32_t phys_tid_30334;
    
    phys_tid_30334 = group_tid_44226;
    
    int32_t ltid_pre_44229;
    
    ltid_pre_44229 = local_tid_44225;
    
    int64_t gtid_30289;
    
    gtid_30289 = sext_i32_i64(group_tid_44226);
    
    __local char *mem_43013;
    
    mem_43013 = (__local char *) mem_43013_backing_0;
    
    int64_t gtid_30292 = sext_i32_i64(ltid_pre_44229);
    int32_t phys_tid_30293 = local_tid_44225;
    int32_t index_primexp_40897 = sext_i64_i32(gtid_30292);
    int32_t defunc_0_f_res_30459 = sdiv32(index_primexp_40897, m_27697);
    int32_t defunc_0_f_res_30460 = smod32(index_primexp_40897, m_27697);
    bool cond_30461 = slt32(defunc_0_f_res_30460, k2p2zq_27564);
    float defunc_0_f_res_30462;
    
    if (cond_30461) {
        int64_t i_30463 = sext_i32_i64(defunc_0_f_res_30459);
        int64_t j_30464 = sext_i32_i64(defunc_0_f_res_30460);
        float defunc_0_f_res_t_res_30465 = ((__global
                                             float *) defunc_3_map_res_mem_43009)[gtid_30289 *
                                                                                  (i32_res_27566 *
                                                                                   i32_res_27566) +
                                                                                  i_30463 *
                                                                                  i32_res_27566 +
                                                                                  j_30464];
        
        defunc_0_f_res_30462 = defunc_0_f_res_t_res_30465;
    } else {
        int32_t y_30466 = add32(k2p2zq_27564, defunc_0_f_res_30459);
        bool cond_30467 = defunc_0_f_res_30460 == y_30466;
        float defunc_0_f_res_f_res_30468;
        
        if (cond_30467) {
            defunc_0_f_res_f_res_30468 = 1.0F;
        } else {
            defunc_0_f_res_f_res_30468 = 0.0F;
        }
        defunc_0_f_res_30462 = defunc_0_f_res_f_res_30468;
    }
    ((__local float *) mem_43013)[gtid_30292] = defunc_0_f_res_30462;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43023;
    
    mem_43023 = (__local char *) mem_43023_backing_1;
    for (int32_t i_30470 = 0; i_30470 < k2p2zq_27564; i_30470++) {
        int64_t i32_res_30472 = sext_i32_i64(i_30470);
        float v1_30473 = ((__local float *) mem_43013)[i32_res_30472];
        bool cond_30474 = v1_30473 == 0.0F;
        int64_t gtid_30305 = sext_i32_i64(ltid_pre_44229);
        int32_t phys_tid_30306 = local_tid_44225;
        int32_t defunc_0_f_res_30477 = sext_i64_i32(gtid_30305);
        int32_t defunc_0_f_res_30478 = sdiv32(defunc_0_f_res_30477, m_27697);
        int32_t defunc_0_f_res_30479 = smod32(defunc_0_f_res_30477, m_27697);
        float defunc_0_f_res_30480;
        
        if (cond_30474) {
            int32_t x_30481 = mul32(m_27697, defunc_0_f_res_30478);
            int32_t i32_arg_30482 = add32(defunc_0_f_res_30479, x_30481);
            int64_t i32_res_30483 = sext_i32_i64(i32_arg_30482);
            float defunc_0_f_res_t_res_30484 = ((__local
                                                 float *) mem_43013)[i32_res_30483];
            
            defunc_0_f_res_30480 = defunc_0_f_res_t_res_30484;
        } else {
            int64_t i32_res_30485 = sext_i32_i64(defunc_0_f_res_30479);
            float x_30486 = ((__local float *) mem_43013)[i32_res_30485];
            float x_30487 = x_30486 / v1_30473;
            int32_t y_30488 = sub32(k2p2zq_27564, 1);
            bool cond_30489 = slt32(defunc_0_f_res_30478, y_30488);
            float defunc_0_f_res_f_res_30490;
            
            if (cond_30489) {
                int32_t x_30491 = add32(1, defunc_0_f_res_30478);
                int32_t x_30492 = mul32(m_27697, x_30491);
                int32_t i32_arg_30493 = add32(defunc_0_f_res_30479, x_30492);
                int64_t i32_res_30494 = sext_i32_i64(i32_arg_30493);
                float x_30495 = ((__local float *) mem_43013)[i32_res_30494];
                int32_t i32_arg_30496 = add32(i_30470, x_30492);
                int64_t i32_res_30497 = sext_i32_i64(i32_arg_30496);
                float x_30498 = ((__local float *) mem_43013)[i32_res_30497];
                float y_30499 = x_30487 * x_30498;
                float defunc_0_f_res_f_res_t_res_30500 = x_30495 - y_30499;
                
                defunc_0_f_res_f_res_30490 = defunc_0_f_res_f_res_t_res_30500;
            } else {
                defunc_0_f_res_f_res_30490 = x_30487;
            }
            defunc_0_f_res_30480 = defunc_0_f_res_f_res_30490;
        }
        ((__local float *) mem_43023)[gtid_30305] = defunc_0_f_res_30480;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_30332 = sext_i32_i64(ltid_pre_44229);
        int32_t phys_tid_30333 = local_tid_44225;
        float write_value_30503 = ((__local float *) mem_43023)[write_i_30332];
        
        if (sle64((int64_t) 0, write_i_30332) && slt64(write_i_30332,
                                                       i32_res_27699)) {
            ((__local float *) mem_43013)[write_i_30332] = write_value_30503;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44231 = 0; i_44231 < sdiv_up64(i32_res_27566 *
                                                  i32_res_27566 -
                                                  sext_i32_i64(local_tid_44225),
                                                  i32_res_27699); i_44231++) {
        ((__global float *) mem_43033)[gtid_30289 * (i32_res_27566 *
                                                     i32_res_27566) +
                                       squot64(i_44231 * i32_res_27699 +
                                               sext_i32_i64(local_tid_44225),
                                               i32_res_27566) * i32_res_27566 +
                                       (i_44231 * i32_res_27699 +
                                        sext_i32_i64(local_tid_44225) -
                                        squot64(i_44231 * i32_res_27699 +
                                                sext_i32_i64(local_tid_44225),
                                                i32_res_27566) *
                                        i32_res_27566)] = ((__local
                                                            float *) mem_43013)[i32_res_27566 +
                                                                                (squot64(i_44231 *
                                                                                         i32_res_27699 +
                                                                                         sext_i32_i64(local_tid_44225),
                                                                                         i32_res_27566) *
                                                                                 i32_res_27714 +
                                                                                 (i_44231 *
                                                                                  i32_res_27699 +
                                                                                  sext_i32_i64(local_tid_44225) -
                                                                                  squot64(i_44231 *
                                                                                          i32_res_27699 +
                                                                                          sext_i32_i64(local_tid_44225),
                                                                                          i32_res_27566) *
                                                                                  i32_res_27566))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_30561(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43054_backing_aligned_0,
                                                    int64_t m_27551,
                                                    int32_t k2p2zq_27564,
                                                    int32_t m_27697,
                                                    int64_t i32_res_27699,
                                                    int32_t i_30956,
                                                    int64_t i32_res_30958,
                                                    int64_t ctx_param_ext_43040,
                                                    int64_t ctx_param_ext_43041,
                                                    int64_t ctx_param_ext_43043,
                                                    __global
                                                    unsigned char *mem_param_43045,
                                                    __global
                                                    unsigned char *mem_43050,
                                                    __global
                                                    unsigned char *mem_43058)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43054_backing_0 = (__local volatile
                                                           char *) mem_43054_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44258;
    int32_t local_tid_44259;
    int64_t group_sizze_44262;
    int32_t wave_sizze_44261;
    int32_t group_tid_44260;
    
    global_tid_44258 = get_global_id(0);
    local_tid_44259 = get_local_id(0);
    group_sizze_44262 = get_local_size(0);
    wave_sizze_44261 = LOCKSTEP_WIDTH;
    group_tid_44260 = get_group_id(0);
    
    int32_t phys_tid_30561;
    
    phys_tid_30561 = group_tid_44260;
    
    int32_t ltid_pre_44263;
    
    ltid_pre_44263 = local_tid_44259;
    
    int64_t gtid_30529;
    
    gtid_30529 = sext_i32_i64(group_tid_44260);
    
    float v1_30971 = ((__global float *) mem_param_43045)[ctx_param_ext_43040 +
                                                          (gtid_30529 *
                                                           ctx_param_ext_43041 +
                                                           i32_res_30958 *
                                                           ctx_param_ext_43043)];
    bool cond_30972 = v1_30971 == 0.0F;
    __local char *mem_43054;
    
    mem_43054 = (__local char *) mem_43054_backing_0;
    
    int64_t gtid_30532 = sext_i32_i64(ltid_pre_44263);
    int32_t phys_tid_30533 = local_tid_44259;
    int32_t defunc_0_f_res_30975 = sext_i64_i32(gtid_30532);
    int32_t defunc_0_f_res_30976 = sdiv32(defunc_0_f_res_30975, m_27697);
    int32_t defunc_0_f_res_30977 = smod32(defunc_0_f_res_30975, m_27697);
    float defunc_0_f_res_30978;
    
    if (cond_30972) {
        int32_t x_30979 = mul32(m_27697, defunc_0_f_res_30976);
        int32_t i32_arg_30980 = add32(defunc_0_f_res_30977, x_30979);
        int64_t i32_res_30981 = sext_i32_i64(i32_arg_30980);
        float defunc_0_f_res_t_res_30982 = ((__global
                                             float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                       (gtid_30529 *
                                                                        ctx_param_ext_43041 +
                                                                        i32_res_30981 *
                                                                        ctx_param_ext_43043)];
        
        defunc_0_f_res_30978 = defunc_0_f_res_t_res_30982;
    } else {
        int64_t i32_res_30983 = sext_i32_i64(defunc_0_f_res_30977);
        float x_30984 = ((__global
                          float *) mem_param_43045)[ctx_param_ext_43040 +
                                                    (gtid_30529 *
                                                     ctx_param_ext_43041 +
                                                     i32_res_30983 *
                                                     ctx_param_ext_43043)];
        float x_30985 = x_30984 / v1_30971;
        int32_t y_30986 = sub32(k2p2zq_27564, 1);
        bool cond_30987 = slt32(defunc_0_f_res_30976, y_30986);
        float defunc_0_f_res_f_res_30988;
        
        if (cond_30987) {
            int32_t x_30989 = add32(1, defunc_0_f_res_30976);
            int32_t x_30990 = mul32(m_27697, x_30989);
            int32_t i32_arg_30991 = add32(defunc_0_f_res_30977, x_30990);
            int64_t i32_res_30992 = sext_i32_i64(i32_arg_30991);
            float x_30993 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_30529 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_30992 *
                                                         ctx_param_ext_43043)];
            int32_t i32_arg_30994 = add32(i_30956, x_30990);
            int64_t i32_res_30995 = sext_i32_i64(i32_arg_30994);
            float x_30996 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_30529 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_30995 *
                                                         ctx_param_ext_43043)];
            float y_30997 = x_30985 * x_30996;
            float defunc_0_f_res_f_res_t_res_30998 = x_30993 - y_30997;
            
            defunc_0_f_res_f_res_30988 = defunc_0_f_res_f_res_t_res_30998;
        } else {
            defunc_0_f_res_f_res_30988 = x_30985;
        }
        defunc_0_f_res_30978 = defunc_0_f_res_f_res_30988;
    }
    ((__local float *) mem_43054)[gtid_30532] = defunc_0_f_res_30978;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_30559 = sext_i32_i64(ltid_pre_44263);
    int32_t phys_tid_30560 = local_tid_44259;
    float write_value_31001 = ((__local float *) mem_43054)[write_i_30559];
    
    if (sle64((int64_t) 0, write_i_30559) && slt64(write_i_30559,
                                                   i32_res_27699)) {
        ((__global float *) mem_43050)[gtid_30529 + write_i_30559 * m_27551] =
            write_value_31001;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44259 == 0) {
        for (int64_t i_44264 = 0; i_44264 < i32_res_27699; i_44264++) {
            ((__global float *) mem_43058)[gtid_30529 * i32_res_27699 +
                                           i_44264] = ((__global
                                                        float *) mem_43050)[gtid_30529 +
                                                                            i_44264 *
                                                                            m_27551];
        }
    }
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31512(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43610_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43608_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *mem_43606_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *mem_43604_backing_aligned_3,
                                                    int64_t N_27550,
                                                    int64_t i_27826, __global
                                                    unsigned char *images_mem_42841,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43600,
                                                    __global
                                                    unsigned char *mem_43613,
                                                    __global
                                                    unsigned char *mem_43616,
                                                    __global
                                                    unsigned char *mem_43619)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43610_backing_3 = (__local volatile
                                                           char *) mem_43610_backing_aligned_0;
    __local volatile char *restrict mem_43608_backing_2 = (__local volatile
                                                           char *) mem_43608_backing_aligned_1;
    __local volatile char *restrict mem_43606_backing_1 = (__local volatile
                                                           char *) mem_43606_backing_aligned_2;
    __local volatile char *restrict mem_43604_backing_0 = (__local volatile
                                                           char *) mem_43604_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44640;
    int32_t local_tid_44641;
    int64_t group_sizze_44644;
    int32_t wave_sizze_44643;
    int32_t group_tid_44642;
    
    global_tid_44640 = get_global_id(0);
    local_tid_44641 = get_local_id(0);
    group_sizze_44644 = get_local_size(0);
    wave_sizze_44643 = LOCKSTEP_WIDTH;
    group_tid_44642 = get_group_id(0);
    
    int32_t phys_tid_31512;
    
    phys_tid_31512 = group_tid_44642;
    
    int32_t ltid_pre_44645;
    
    ltid_pre_44645 = local_tid_44641;
    
    int64_t gtid_31505;
    
    gtid_31505 = sext_i32_i64(group_tid_44642);
    
    __local char *mem_43604;
    
    mem_43604 = (__local char *) mem_43604_backing_0;
    
    __local char *mem_43606;
    
    mem_43606 = (__local char *) mem_43606_backing_1;
    
    int64_t gtid_31508 = sext_i32_i64(ltid_pre_44645);
    int32_t phys_tid_31509 = local_tid_44641;
    float x_31601 = ((__global float *) images_mem_42841)[gtid_31505 * N_27550 +
                                                          gtid_31508];
    bool isnan_res_31603;
    
    isnan_res_31603 = futrts_isnan32(x_31601);
    
    bool cond_31604 = !isnan_res_31603;
    float defunc_0_f_res_31605;
    
    if (cond_31604) {
        float x_31602 = ((__global
                          float *) defunc_3_map_res_mem_43600)[gtid_31505 *
                                                               N_27550 +
                                                               gtid_31508];
        float defunc_0_f_res_t_res_31606 = x_31601 - x_31602;
        
        defunc_0_f_res_31605 = defunc_0_f_res_t_res_31606;
    } else {
        defunc_0_f_res_31605 = NAN;
    }
    
    bool isnan_res_31607;
    
    isnan_res_31607 = futrts_isnan32(defunc_0_f_res_31605);
    
    bool defunc_0_p_res_31608 = !isnan_res_31607;
    int64_t defunc_0_f_res_31609 = btoi_bool_i64(defunc_0_p_res_31608);
    
    ((__local int64_t *) mem_43604)[gtid_31508] = defunc_0_f_res_31609;
    ((__local float *) mem_43606)[gtid_31508] = defunc_0_f_res_31605;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44646;
    
    dims_flat_44646 = N_27550;
    
    int64_t x_31598;
    int64_t x_31599;
    int64_t x_44648;
    int64_t x_44649;
    bool ltid_in_bounds_44651;
    
    ltid_in_bounds_44651 = slt64(sext_i32_i64(local_tid_44641), N_27550);
    
    int32_t skip_threads_44652;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44651) {
            x_31599 = ((volatile __local
                        int64_t *) mem_43604)[sext_i32_i64(local_tid_44641)];
            if ((local_tid_44641 - squot32(local_tid_44641, 32) * 32) == 0) {
                x_31598 = x_31599;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44652 = 1;
        while (slt32(skip_threads_44652, 32)) {
            if (sle32(skip_threads_44652, local_tid_44641 -
                      squot32(local_tid_44641, 32) * 32) &&
                ltid_in_bounds_44651) {
                // read operands
                {
                    x_31598 = ((volatile __local
                                int64_t *) mem_43604)[sext_i32_i64(local_tid_44641) -
                                                      sext_i32_i64(skip_threads_44652)];
                }
                // perform operation
                {
                    bool inactive_44653 =
                         slt64(srem64(sext_i32_i64(local_tid_44641), N_27550),
                               sext_i32_i64(local_tid_44641) -
                               sext_i32_i64(local_tid_44641 -
                               skip_threads_44652));
                    
                    if (inactive_44653) {
                        x_31598 = x_31599;
                    }
                    if (!inactive_44653) {
                        int64_t defunc_1_op_res_31600 = add64(x_31598, x_31599);
                        
                        x_31598 = defunc_1_op_res_31600;
                    }
                }
            }
            if (sle32(wave_sizze_44643, skip_threads_44652)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44652, local_tid_44641 -
                      squot32(local_tid_44641, 32) * 32) &&
                ltid_in_bounds_44651) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43604)[sext_i32_i64(local_tid_44641)] =
                        x_31598;
                    x_31599 = x_31598;
                }
            }
            if (sle32(wave_sizze_44643, skip_threads_44652)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44652 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44641 - squot32(local_tid_44641, 32) * 32) == 31 &&
            ltid_in_bounds_44651) {
            ((volatile __local
              int64_t *) mem_43604)[sext_i32_i64(squot32(local_tid_44641,
                                                         32))] = x_31598;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44654;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44641, 32) == 0 && ltid_in_bounds_44651) {
                x_44649 = ((volatile __local
                            int64_t *) mem_43604)[sext_i32_i64(local_tid_44641)];
                if ((local_tid_44641 - squot32(local_tid_44641, 32) * 32) ==
                    0) {
                    x_44648 = x_44649;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44654 = 1;
            while (slt32(skip_threads_44654, 32)) {
                if (sle32(skip_threads_44654, local_tid_44641 -
                          squot32(local_tid_44641, 32) * 32) &&
                    (squot32(local_tid_44641, 32) == 0 &&
                     ltid_in_bounds_44651)) {
                    // read operands
                    {
                        x_44648 = ((volatile __local
                                    int64_t *) mem_43604)[sext_i32_i64(local_tid_44641) -
                                                          sext_i32_i64(skip_threads_44654)];
                    }
                    // perform operation
                    {
                        bool inactive_44655 =
                             slt64(srem64(sext_i32_i64(local_tid_44641 * 32 +
                                          32 - 1), N_27550),
                                   sext_i32_i64(local_tid_44641 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44641 -
                                                 skip_threads_44654) * 32 + 32 -
                                   1));
                        
                        if (inactive_44655) {
                            x_44648 = x_44649;
                        }
                        if (!inactive_44655) {
                            int64_t defunc_1_op_res_44650 = add64(x_44648,
                                                                  x_44649);
                            
                            x_44648 = defunc_1_op_res_44650;
                        }
                    }
                }
                if (sle32(wave_sizze_44643, skip_threads_44654)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44654, local_tid_44641 -
                          squot32(local_tid_44641, 32) * 32) &&
                    (squot32(local_tid_44641, 32) == 0 &&
                     ltid_in_bounds_44651)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43604)[sext_i32_i64(local_tid_44641)] =
                            x_44648;
                        x_44649 = x_44648;
                    }
                }
                if (sle32(wave_sizze_44643, skip_threads_44654)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44654 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44641, 32) == 0 || !ltid_in_bounds_44651)) {
            // read operands
            {
                x_31599 = x_31598;
                x_31598 = ((__local
                            int64_t *) mem_43604)[sext_i32_i64(squot32(local_tid_44641,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44656 =
                     slt64(srem64(sext_i32_i64(local_tid_44641), N_27550),
                           sext_i32_i64(local_tid_44641) -
                           sext_i32_i64(squot32(local_tid_44641, 32) * 32 - 1));
                
                if (inactive_44656) {
                    x_31598 = x_31599;
                }
                if (!inactive_44656) {
                    int64_t defunc_1_op_res_31600 = add64(x_31598, x_31599);
                    
                    x_31598 = defunc_1_op_res_31600;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43604)[sext_i32_i64(local_tid_44641)] =
                    x_31598;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44641, 32) == 0) {
            ((__local int64_t *) mem_43604)[sext_i32_i64(local_tid_44641)] =
                x_31599;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_31610 = ((__local int64_t *) mem_43604)[i_27826];
    int32_t defunc_0_f_res_31611 = sext_i64_i32(last_res_31610);
    __local char *mem_43608;
    
    mem_43608 = (__local char *) mem_43608_backing_2;
    ((__local float *) mem_43608)[sext_i32_i64(local_tid_44641)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43610;
    
    mem_43610 = (__local char *) mem_43610_backing_3;
    ((__local int32_t *) mem_43610)[sext_i32_i64(local_tid_44641)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_31510 = sext_i32_i64(ltid_pre_44645);
    int32_t phys_tid_31511 = local_tid_44641;
    float x_31616 = ((__local float *) mem_43606)[write_i_31510];
    int32_t index_primexp_40917 = sext_i64_i32(write_i_31510);
    bool isnan_res_31619;
    
    isnan_res_31619 = futrts_isnan32(x_31616);
    
    bool defunc_0_p_res_31620 = !isnan_res_31619;
    int64_t defunc_1_f_res_31621;
    
    if (defunc_0_p_res_31620) {
        int64_t x_31617 = ((__local int64_t *) mem_43604)[write_i_31510];
        int64_t defunc_1_f_res_t_res_31622 = sub64(x_31617, (int64_t) 1);
        
        defunc_1_f_res_31621 = defunc_1_f_res_t_res_31622;
    } else {
        defunc_1_f_res_31621 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_31621) && slt64(defunc_1_f_res_31621,
                                                          N_27550)) {
        ((__local int32_t *) mem_43610)[defunc_1_f_res_31621] =
            index_primexp_40917;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_31621) && slt64(defunc_1_f_res_31621,
                                                          N_27550)) {
        ((__local float *) mem_43608)[defunc_1_f_res_31621] = x_31616;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44641 == 0) {
        ((__global int32_t *) mem_43613)[gtid_31505] = defunc_0_f_res_31611;
    }
    ((__global float *) mem_43616)[gtid_31505 * N_27550 +
                                   sext_i32_i64(local_tid_44641)] = ((__local
                                                                      float *) mem_43608)[sext_i32_i64(local_tid_44641)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43619)[gtid_31505 * N_27550 +
                                     sext_i32_i64(local_tid_44641)] = ((__local
                                                                        int32_t *) mem_43610)[sext_i32_i64(local_tid_44641)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_31852(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44765_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_44761_backing_aligned_1,
                                                    int64_t N_27550,
                                                    float hfrac_27556,
                                                    int64_t i32_res_27560,
                                                    int32_t k2p2_27562, __global
                                                    unsigned char *images_mem_42841,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43638,
                                                    __global
                                                    unsigned char *mem_43685,
                                                    __global
                                                    unsigned char *mem_43687,
                                                    __global
                                                    unsigned char *mem_43689)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44765_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44765_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44761_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44761_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44755;
    int32_t local_tid_44756;
    int64_t group_sizze_44759;
    int32_t wave_sizze_44758;
    int32_t group_tid_44757;
    
    global_tid_44755 = get_global_id(0);
    local_tid_44756 = get_local_id(0);
    group_sizze_44759 = get_local_size(0);
    wave_sizze_44758 = LOCKSTEP_WIDTH;
    group_tid_44757 = get_group_id(0);
    
    int32_t phys_tid_31852;
    
    phys_tid_31852 = group_tid_44757;
    
    int32_t ltid_pre_44760;
    
    ltid_pre_44760 = local_tid_44756;
    
    int64_t gtid_31845;
    
    gtid_31845 = sext_i32_i64(group_tid_44757);
    
    int32_t defunc_0_f_res_31929;
    int64_t gtid_31848 = sext_i32_i64(ltid_pre_44760);
    int32_t phys_tid_31849 = local_tid_44756;
    __local char *red_arr_mem_44761;
    
    red_arr_mem_44761 = (__local char *) red_arr_mem_44761_backing_0;
    
    float x_31933;
    
    x_31933 = ((__global float *) images_mem_42841)[gtid_31845 * N_27550 +
                                                    gtid_31848];
    
    bool isnan_res_31934;
    
    isnan_res_31934 = futrts_isnan32(x_31933);
    
    bool cond_31935 = !isnan_res_31934;
    int32_t defunc_0_f_res_31936 = btoi_bool_i32(cond_31935);
    
    ((__local int32_t *) red_arr_mem_44761)[gtid_31848] = defunc_0_f_res_31936;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44763;
    int32_t skip_waves_44764;
    
    skip_waves_44764 = 1;
    
    int32_t x_31930;
    int32_t x_31931;
    
    offset_44763 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44756, sext_i64_i32(i32_res_27560))) {
            x_31930 = ((__local
                        int32_t *) red_arr_mem_44761)[sext_i32_i64(local_tid_44756 +
                                                      offset_44763)];
        }
    }
    offset_44763 = 1;
    while (slt32(offset_44763, wave_sizze_44758)) {
        if (slt32(local_tid_44756 + offset_44763,
                  sext_i64_i32(i32_res_27560)) && ((local_tid_44756 -
                                                    squot32(local_tid_44756,
                                                            wave_sizze_44758) *
                                                    wave_sizze_44758) & (2 *
                                                                         offset_44763 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_31931 = ((volatile __local
                            int32_t *) red_arr_mem_44761)[sext_i32_i64(local_tid_44756 +
                                                          offset_44763)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_31932 = add32(x_31930, x_31931);
                
                x_31930 = defunc_1_op_res_31932;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44761)[sext_i32_i64(local_tid_44756)] =
                    x_31930;
            }
        }
        offset_44763 *= 2;
    }
    while (slt32(skip_waves_44764, squot32(sext_i64_i32(i32_res_27560) +
                                           wave_sizze_44758 - 1,
                                           wave_sizze_44758))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44763 = skip_waves_44764 * wave_sizze_44758;
        if (slt32(local_tid_44756 + offset_44763,
                  sext_i64_i32(i32_res_27560)) && ((local_tid_44756 -
                                                    squot32(local_tid_44756,
                                                            wave_sizze_44758) *
                                                    wave_sizze_44758) == 0 &&
                                                   (squot32(local_tid_44756,
                                                            wave_sizze_44758) &
                                                    (2 * skip_waves_44764 -
                                                     1)) == 0)) {
            // read array element
            {
                x_31931 = ((__local
                            int32_t *) red_arr_mem_44761)[sext_i32_i64(local_tid_44756 +
                                                          offset_44763)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_31932 = add32(x_31930, x_31931);
                
                x_31930 = defunc_1_op_res_31932;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44761)[sext_i32_i64(local_tid_44756)] =
                    x_31930;
            }
        }
        skip_waves_44764 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_31929 = ((__local int32_t *) red_arr_mem_44761)[(int64_t) 0];
    
    float defunc_0_f_res_31937;
    int64_t gtid_31850 = sext_i32_i64(ltid_pre_44760);
    int32_t phys_tid_31851 = local_tid_44756;
    __local char *red_arr_mem_44765;
    
    red_arr_mem_44765 = (__local char *) red_arr_mem_44765_backing_1;
    
    int32_t index_primexp_40925;
    
    index_primexp_40925 = sext_i64_i32(gtid_31850);
    
    bool cond_31942 = slt32(index_primexp_40925, defunc_0_f_res_31929);
    float defunc_0_f_res_31943;
    
    if (cond_31942) {
        int64_t i_31944 = sext_i32_i64(index_primexp_40925);
        float defunc_0_f_res_t_res_31945 = ((__global
                                             float *) defunc_4_map_res_mem_43638)[gtid_31845 *
                                                                                  N_27550 +
                                                                                  i_31944];
        
        defunc_0_f_res_31943 = defunc_0_f_res_t_res_31945;
    } else {
        defunc_0_f_res_31943 = 0.0F;
    }
    
    float defunc_0_f_res_31946 = defunc_0_f_res_31943 * defunc_0_f_res_31943;
    
    ((__local float *) red_arr_mem_44765)[gtid_31850] = defunc_0_f_res_31946;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44767;
    int32_t skip_waves_44768;
    
    skip_waves_44768 = 1;
    
    float x_31938;
    float x_31939;
    
    offset_44767 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44756, sext_i64_i32(i32_res_27560))) {
            x_31938 = ((__local
                        float *) red_arr_mem_44765)[sext_i32_i64(local_tid_44756 +
                                                    offset_44767)];
        }
    }
    offset_44767 = 1;
    while (slt32(offset_44767, wave_sizze_44758)) {
        if (slt32(local_tid_44756 + offset_44767,
                  sext_i64_i32(i32_res_27560)) && ((local_tid_44756 -
                                                    squot32(local_tid_44756,
                                                            wave_sizze_44758) *
                                                    wave_sizze_44758) & (2 *
                                                                         offset_44767 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_31939 = ((volatile __local
                            float *) red_arr_mem_44765)[sext_i32_i64(local_tid_44756 +
                                                        offset_44767)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_31940 = x_31938 + x_31939;
                
                x_31938 = defunc_1_op_res_31940;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44765)[sext_i32_i64(local_tid_44756)] =
                    x_31938;
            }
        }
        offset_44767 *= 2;
    }
    while (slt32(skip_waves_44768, squot32(sext_i64_i32(i32_res_27560) +
                                           wave_sizze_44758 - 1,
                                           wave_sizze_44758))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44767 = skip_waves_44768 * wave_sizze_44758;
        if (slt32(local_tid_44756 + offset_44767,
                  sext_i64_i32(i32_res_27560)) && ((local_tid_44756 -
                                                    squot32(local_tid_44756,
                                                            wave_sizze_44758) *
                                                    wave_sizze_44758) == 0 &&
                                                   (squot32(local_tid_44756,
                                                            wave_sizze_44758) &
                                                    (2 * skip_waves_44768 -
                                                     1)) == 0)) {
            // read array element
            {
                x_31939 = ((__local
                            float *) red_arr_mem_44765)[sext_i32_i64(local_tid_44756 +
                                                        offset_44767)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_31940 = x_31938 + x_31939;
                
                x_31938 = defunc_1_op_res_31940;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44765)[sext_i32_i64(local_tid_44756)] =
                    x_31938;
            }
        }
        skip_waves_44768 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_31937 = ((__local float *) red_arr_mem_44765)[(int64_t) 0];
    
    int32_t r32_arg_31947 = sub32(defunc_0_f_res_31929, k2p2_27562);
    float i32_res_31948 = sitofp_i32_f32(r32_arg_31947);
    float sqrt_arg_31949 = defunc_0_f_res_31937 / i32_res_31948;
    float sqrt_res_31950;
    
    sqrt_res_31950 = futrts_sqrt32(sqrt_arg_31949);
    
    float i32_res_31951 = sitofp_i32_f32(defunc_0_f_res_31929);
    float t32_arg_31952 = hfrac_27556 * i32_res_31951;
    int32_t f32_res_31953 = fptosi_f32_i32(t32_arg_31952);
    
    if (local_tid_44756 == 0) {
        ((__global int32_t *) mem_43685)[gtid_31845] = f32_res_31953;
    }
    if (local_tid_44756 == 0) {
        ((__global int32_t *) mem_43687)[gtid_31845] = defunc_0_f_res_31929;
    }
    if (local_tid_44756 == 0) {
        ((__global float *) mem_43689)[gtid_31845] = sqrt_res_31950;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_32832(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43794_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45048_backing_aligned_1,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45046_backing_aligned_2,
                                                    __local volatile
                                                    int64_t *red_arr_mem_45044_backing_aligned_3,
                                                    __local volatile
                                                    int64_t *mem_43792_backing_aligned_4,
                                                    __local volatile
                                                    int64_t *mem_43789_backing_aligned_5,
                                                    int64_t N_27550,
                                                    int32_t n_27554,
                                                    int64_t iota32_arg_27946,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43637,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43638,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43639,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43704,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43705,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43706,
                                                    __global
                                                    unsigned char *defunc_0_f_res_mem_43739,
                                                    __global
                                                    unsigned char *mem_43744,
                                                    __global
                                                    unsigned char *mem_43798,
                                                    __global
                                                    unsigned char *mem_43801,
                                                    __global
                                                    unsigned char *mem_43803,
                                                    __global
                                                    unsigned char *mem_43805)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43794_backing_5 = (__local volatile
                                                           char *) mem_43794_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45048_backing_4 =
                          (__local volatile
                           char *) red_arr_mem_45048_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45046_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45046_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45044_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45044_backing_aligned_3;
    __local volatile char *restrict mem_43792_backing_1 = (__local volatile
                                                           char *) mem_43792_backing_aligned_4;
    __local volatile char *restrict mem_43789_backing_0 = (__local volatile
                                                           char *) mem_43789_backing_aligned_5;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45027;
    int32_t local_tid_45028;
    int64_t group_sizze_45031;
    int32_t wave_sizze_45030;
    int32_t group_tid_45029;
    
    global_tid_45027 = get_global_id(0);
    local_tid_45028 = get_local_id(0);
    group_sizze_45031 = get_local_size(0);
    wave_sizze_45030 = LOCKSTEP_WIDTH;
    group_tid_45029 = get_group_id(0);
    
    int32_t phys_tid_32832;
    
    phys_tid_32832 = group_tid_45029;
    
    int32_t ltid_pre_45032;
    
    ltid_pre_45032 = local_tid_45028;
    
    int64_t gtid_32823;
    
    gtid_32823 = sext_i32_i64(group_tid_45029);
    
    int32_t x_33084;
    
    x_33084 = ((__global int32_t *) defunc_4_map_res_mem_43637)[gtid_32823];
    
    int32_t x_33085 = ((__global
                        int32_t *) defunc_3_map_res_mem_43705)[gtid_32823];
    float x_33086 = ((__global float *) defunc_3_map_res_mem_43706)[gtid_32823];
    int32_t x_33087 = ((__global
                        int32_t *) defunc_3_map_res_mem_43704)[gtid_32823];
    float x_33088 = ((__global float *) defunc_0_f_res_mem_43739)[gtid_32823];
    int32_t y_33091 = sub32(x_33084, x_33085);
    float i32_res_33092 = sitofp_i32_f32(x_33085);
    float sqrt_res_33093;
    
    sqrt_res_33093 = futrts_sqrt32(i32_res_33092);
    
    float y_33094 = x_33086 * sqrt_res_33093;
    __local char *mem_43789;
    
    mem_43789 = (__local char *) mem_43789_backing_0;
    
    int64_t gtid_32826 = sext_i32_i64(ltid_pre_45032);
    int32_t phys_tid_32827 = local_tid_45028;
    int32_t index_primexp_40943 = sext_i64_i32(gtid_32826);
    bool cond_33107 = sle32(y_33091, index_primexp_40943);
    float defunc_0_f_res_33108;
    
    if (cond_33107) {
        defunc_0_f_res_33108 = 0.0F;
    } else {
        bool cond_33109 = index_primexp_40943 == 0;
        float defunc_0_f_res_f_res_33110;
        
        if (cond_33109) {
            defunc_0_f_res_f_res_33110 = x_33088;
        } else {
            int32_t i_33111 = add32(x_33085, index_primexp_40943);
            int64_t i_33112 = sext_i32_i64(i_33111);
            float x_33113 = ((__global
                              float *) defunc_4_map_res_mem_43638)[gtid_32823 *
                                                                   N_27550 +
                                                                   i_33112];
            int32_t x_33114 = sub32(x_33085, x_33087);
            int32_t i_33115 = add32(x_33114, index_primexp_40943);
            int64_t i_33116 = sext_i32_i64(i_33115);
            float y_33117 = ((__global
                              float *) defunc_4_map_res_mem_43638)[gtid_32823 *
                                                                   N_27550 +
                                                                   i_33116];
            float defunc_0_f_res_f_res_f_res_33118 = x_33113 - y_33117;
            
            defunc_0_f_res_f_res_33110 = defunc_0_f_res_f_res_f_res_33118;
        }
        defunc_0_f_res_33108 = defunc_0_f_res_f_res_33110;
    }
    ((__local float *) mem_43789)[gtid_32826] = defunc_0_f_res_33108;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45033;
    
    dims_flat_45033 = iota32_arg_27946;
    
    float x_33103;
    float x_33104;
    float x_45035;
    float x_45036;
    bool ltid_in_bounds_45038;
    
    ltid_in_bounds_45038 = slt64(sext_i32_i64(local_tid_45028),
                                 iota32_arg_27946);
    
    int32_t skip_threads_45039;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45038) {
            x_33104 = ((volatile __local
                        float *) mem_43789)[sext_i32_i64(local_tid_45028)];
            if ((local_tid_45028 - squot32(local_tid_45028, 32) * 32) == 0) {
                x_33103 = x_33104;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45039 = 1;
        while (slt32(skip_threads_45039, 32)) {
            if (sle32(skip_threads_45039, local_tid_45028 -
                      squot32(local_tid_45028, 32) * 32) &&
                ltid_in_bounds_45038) {
                // read operands
                {
                    x_33103 = ((volatile __local
                                float *) mem_43789)[sext_i32_i64(local_tid_45028) -
                                                    sext_i32_i64(skip_threads_45039)];
                }
                // perform operation
                {
                    bool inactive_45040 =
                         slt64(srem64(sext_i32_i64(local_tid_45028),
                                      iota32_arg_27946),
                               sext_i32_i64(local_tid_45028) -
                               sext_i32_i64(local_tid_45028 -
                               skip_threads_45039));
                    
                    if (inactive_45040) {
                        x_33103 = x_33104;
                    }
                    if (!inactive_45040) {
                        float defunc_1_op_res_33105 = x_33103 + x_33104;
                        
                        x_33103 = defunc_1_op_res_33105;
                    }
                }
            }
            if (sle32(wave_sizze_45030, skip_threads_45039)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45039, local_tid_45028 -
                      squot32(local_tid_45028, 32) * 32) &&
                ltid_in_bounds_45038) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43789)[sext_i32_i64(local_tid_45028)] =
                        x_33103;
                    x_33104 = x_33103;
                }
            }
            if (sle32(wave_sizze_45030, skip_threads_45039)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45039 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45028 - squot32(local_tid_45028, 32) * 32) == 31 &&
            ltid_in_bounds_45038) {
            ((volatile __local
              float *) mem_43789)[sext_i32_i64(squot32(local_tid_45028, 32))] =
                x_33103;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45041;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45028, 32) == 0 && ltid_in_bounds_45038) {
                x_45036 = ((volatile __local
                            float *) mem_43789)[sext_i32_i64(local_tid_45028)];
                if ((local_tid_45028 - squot32(local_tid_45028, 32) * 32) ==
                    0) {
                    x_45035 = x_45036;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45041 = 1;
            while (slt32(skip_threads_45041, 32)) {
                if (sle32(skip_threads_45041, local_tid_45028 -
                          squot32(local_tid_45028, 32) * 32) &&
                    (squot32(local_tid_45028, 32) == 0 &&
                     ltid_in_bounds_45038)) {
                    // read operands
                    {
                        x_45035 = ((volatile __local
                                    float *) mem_43789)[sext_i32_i64(local_tid_45028) -
                                                        sext_i32_i64(skip_threads_45041)];
                    }
                    // perform operation
                    {
                        bool inactive_45042 =
                             slt64(srem64(sext_i32_i64(local_tid_45028 * 32 +
                                          32 - 1), iota32_arg_27946),
                                   sext_i32_i64(local_tid_45028 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45028 -
                                                 skip_threads_45041) * 32 + 32 -
                                   1));
                        
                        if (inactive_45042) {
                            x_45035 = x_45036;
                        }
                        if (!inactive_45042) {
                            float defunc_1_op_res_45037 = x_45035 + x_45036;
                            
                            x_45035 = defunc_1_op_res_45037;
                        }
                    }
                }
                if (sle32(wave_sizze_45030, skip_threads_45041)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45041, local_tid_45028 -
                          squot32(local_tid_45028, 32) * 32) &&
                    (squot32(local_tid_45028, 32) == 0 &&
                     ltid_in_bounds_45038)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43789)[sext_i32_i64(local_tid_45028)] =
                            x_45035;
                        x_45036 = x_45035;
                    }
                }
                if (sle32(wave_sizze_45030, skip_threads_45041)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45041 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45028, 32) == 0 || !ltid_in_bounds_45038)) {
            // read operands
            {
                x_33104 = x_33103;
                x_33103 = ((__local
                            float *) mem_43789)[sext_i32_i64(squot32(local_tid_45028,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_45043 =
                     slt64(srem64(sext_i32_i64(local_tid_45028),
                                  iota32_arg_27946),
                           sext_i32_i64(local_tid_45028) -
                           sext_i32_i64(squot32(local_tid_45028, 32) * 32 - 1));
                
                if (inactive_45043) {
                    x_33103 = x_33104;
                }
                if (!inactive_45043) {
                    float defunc_1_op_res_33105 = x_33103 + x_33104;
                    
                    x_33103 = defunc_1_op_res_33105;
                }
            }
            // write final result
            {
                ((__local float *) mem_43789)[sext_i32_i64(local_tid_45028)] =
                    x_33103;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45028, 32) == 0) {
            ((__local float *) mem_43789)[sext_i32_i64(local_tid_45028)] =
                x_33104;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43792;
    
    mem_43792 = (__local char *) mem_43792_backing_1;
    
    bool acc0_33124;
    int32_t acc0_33125;
    float acc0_33126;
    int64_t gtid_32828 = sext_i32_i64(ltid_pre_45032);
    int32_t phys_tid_32829 = local_tid_45028;
    __local char *red_arr_mem_45044;
    
    red_arr_mem_45044 = (__local char *) red_arr_mem_45044_backing_2;
    
    __local char *red_arr_mem_45046;
    
    red_arr_mem_45046 = (__local char *) red_arr_mem_45046_backing_3;
    
    __local char *red_arr_mem_45048;
    
    red_arr_mem_45048 = (__local char *) red_arr_mem_45048_backing_4;
    
    float x_33142;
    
    x_33142 = ((__local float *) mem_43789)[gtid_32828];
    
    float x_33143 = ((__global float *) mem_43744)[gtid_32828];
    int32_t index_primexp_40946 = sext_i64_i32(gtid_32828);
    float defunc_0_f_res_33146 = x_33142 / y_33094;
    bool cond_33147 = slt32(index_primexp_40946, y_33091);
    bool isnan_res_33148;
    
    isnan_res_33148 = futrts_isnan32(defunc_0_f_res_33146);
    
    bool cond_t_res_33149 = !isnan_res_33148;
    bool x_33150 = cond_33147 && cond_t_res_33149;
    float abs_res_33151 = (float) fabs(defunc_0_f_res_33146);
    bool defunc_2_f_res_t_res_33152 = x_33143 < abs_res_33151;
    bool x_33153 = x_33150 && defunc_2_f_res_t_res_33152;
    float defunc_1_f_res_33154;
    
    if (cond_33147) {
        defunc_1_f_res_33154 = defunc_0_f_res_33146;
    } else {
        defunc_1_f_res_33154 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45044)[gtid_32828] = x_33153;
    ((__local int32_t *) red_arr_mem_45046)[gtid_32828] = index_primexp_40946;
    ((__local float *) red_arr_mem_45048)[gtid_32828] = defunc_1_f_res_33154;
    ((__local float *) mem_43792)[gtid_32828] = defunc_0_f_res_33146;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45050;
    int32_t skip_waves_45051;
    
    skip_waves_45051 = 1;
    
    bool x_33128;
    int32_t x_33129;
    float x_33130;
    bool x_33131;
    int32_t x_33132;
    float x_33133;
    
    offset_45050 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45028, sext_i64_i32(iota32_arg_27946))) {
            x_33128 = ((__local
                        bool *) red_arr_mem_45044)[sext_i32_i64(local_tid_45028 +
                                                   offset_45050)];
            x_33129 = ((__local
                        int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45028 +
                                                      offset_45050)];
            x_33130 = ((__local
                        float *) red_arr_mem_45048)[sext_i32_i64(local_tid_45028 +
                                                    offset_45050)];
        }
    }
    offset_45050 = 1;
    while (slt32(offset_45050, wave_sizze_45030)) {
        if (slt32(local_tid_45028 + offset_45050,
                  sext_i64_i32(iota32_arg_27946)) && ((local_tid_45028 -
                                                       squot32(local_tid_45028,
                                                               wave_sizze_45030) *
                                                       wave_sizze_45030) & (2 *
                                                                            offset_45050 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_33131 = ((volatile __local
                            bool *) red_arr_mem_45044)[sext_i32_i64(local_tid_45028 +
                                                       offset_45050)];
                x_33132 = ((volatile __local
                            int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45028 +
                                                          offset_45050)];
                x_33133 = ((volatile __local
                            float *) red_arr_mem_45048)[sext_i32_i64(local_tid_45028 +
                                                        offset_45050)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_33134;
                int32_t defunc_1_op_res_33135;
                
                if (x_33128) {
                    defunc_1_op_res_33134 = x_33128;
                    defunc_1_op_res_33135 = x_33129;
                } else {
                    bool x_33136 = x_33131 && x_33131;
                    bool x_33137 = !x_33131;
                    bool y_33138 = x_33128 && x_33137;
                    bool defunc_1_op_res_f_res_33139 = x_33136 || y_33138;
                    int32_t defunc_1_op_res_f_res_33140;
                    
                    if (x_33131) {
                        defunc_1_op_res_f_res_33140 = x_33132;
                    } else {
                        defunc_1_op_res_f_res_33140 = x_33129;
                    }
                    defunc_1_op_res_33134 = defunc_1_op_res_f_res_33139;
                    defunc_1_op_res_33135 = defunc_1_op_res_f_res_33140;
                }
                
                float defunc_1_op_res_33141 = x_33130 + x_33133;
                
                x_33128 = defunc_1_op_res_33134;
                x_33129 = defunc_1_op_res_33135;
                x_33130 = defunc_1_op_res_33141;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45044)[sext_i32_i64(local_tid_45028)] =
                    x_33128;
                ((volatile __local
                  int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45028)] =
                    x_33129;
                ((volatile __local
                  float *) red_arr_mem_45048)[sext_i32_i64(local_tid_45028)] =
                    x_33130;
            }
        }
        offset_45050 *= 2;
    }
    while (slt32(skip_waves_45051, squot32(sext_i64_i32(iota32_arg_27946) +
                                           wave_sizze_45030 - 1,
                                           wave_sizze_45030))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45050 = skip_waves_45051 * wave_sizze_45030;
        if (slt32(local_tid_45028 + offset_45050,
                  sext_i64_i32(iota32_arg_27946)) && ((local_tid_45028 -
                                                       squot32(local_tid_45028,
                                                               wave_sizze_45030) *
                                                       wave_sizze_45030) == 0 &&
                                                      (squot32(local_tid_45028,
                                                               wave_sizze_45030) &
                                                       (2 * skip_waves_45051 -
                                                        1)) == 0)) {
            // read array element
            {
                x_33131 = ((__local
                            bool *) red_arr_mem_45044)[sext_i32_i64(local_tid_45028 +
                                                       offset_45050)];
                x_33132 = ((__local
                            int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45028 +
                                                          offset_45050)];
                x_33133 = ((__local
                            float *) red_arr_mem_45048)[sext_i32_i64(local_tid_45028 +
                                                        offset_45050)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_33134;
                int32_t defunc_1_op_res_33135;
                
                if (x_33128) {
                    defunc_1_op_res_33134 = x_33128;
                    defunc_1_op_res_33135 = x_33129;
                } else {
                    bool x_33136 = x_33131 && x_33131;
                    bool x_33137 = !x_33131;
                    bool y_33138 = x_33128 && x_33137;
                    bool defunc_1_op_res_f_res_33139 = x_33136 || y_33138;
                    int32_t defunc_1_op_res_f_res_33140;
                    
                    if (x_33131) {
                        defunc_1_op_res_f_res_33140 = x_33132;
                    } else {
                        defunc_1_op_res_f_res_33140 = x_33129;
                    }
                    defunc_1_op_res_33134 = defunc_1_op_res_f_res_33139;
                    defunc_1_op_res_33135 = defunc_1_op_res_f_res_33140;
                }
                
                float defunc_1_op_res_33141 = x_33130 + x_33133;
                
                x_33128 = defunc_1_op_res_33134;
                x_33129 = defunc_1_op_res_33135;
                x_33130 = defunc_1_op_res_33141;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45044)[sext_i32_i64(local_tid_45028)] =
                    x_33128;
                ((__local
                  int32_t *) red_arr_mem_45046)[sext_i32_i64(local_tid_45028)] =
                    x_33129;
                ((__local
                  float *) red_arr_mem_45048)[sext_i32_i64(local_tid_45028)] =
                    x_33130;
            }
        }
        skip_waves_45051 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_33124 = ((__local bool *) red_arr_mem_45044)[(int64_t) 0];
    acc0_33125 = ((__local int32_t *) red_arr_mem_45046)[(int64_t) 0];
    acc0_33126 = ((__local float *) red_arr_mem_45048)[(int64_t) 0];
    
    bool x_33157 = acc0_33124 && acc0_33124;
    int32_t defunc_1_op_res_f_res_33161;
    
    if (acc0_33124) {
        defunc_1_op_res_f_res_33161 = acc0_33125;
    } else {
        defunc_1_op_res_f_res_33161 = -1;
    }
    
    bool cond_33168 = y_33091 == 0;
    float defunc_0_f_res_33169;
    
    if (cond_33168) {
        defunc_0_f_res_33169 = 0.0F;
    } else {
        float i32_res_33170 = sitofp_i32_f32(y_33091);
        float defunc_0_f_res_f_res_33171 = acc0_33126 / i32_res_33170;
        
        defunc_0_f_res_33169 = defunc_0_f_res_f_res_33171;
    }
    
    bool cond_33172 = !x_33157;
    int32_t fst_breakzq_33173;
    
    if (cond_33172) {
        fst_breakzq_33173 = -1;
    } else {
        bool cond_33174 = slt32(defunc_1_op_res_f_res_33161, y_33091);
        int32_t adjustValInds_res_33175;
        
        if (cond_33174) {
            int32_t i_33176 = add32(x_33085, defunc_1_op_res_f_res_33161);
            int64_t i_33177 = sext_i32_i64(i_33176);
            int32_t x_33178 = ((__global
                                int32_t *) defunc_4_map_res_mem_43639)[gtid_32823 *
                                                                       N_27550 +
                                                                       i_33177];
            int32_t adjustValInds_res_t_res_33179 = sub32(x_33178, n_27554);
            
            adjustValInds_res_33175 = adjustValInds_res_t_res_33179;
        } else {
            adjustValInds_res_33175 = -1;
        }
        fst_breakzq_33173 = adjustValInds_res_33175;
    }
    
    bool cond_33180 = sle32(x_33085, 5);
    bool cond_f_res_33181 = sle32(y_33091, 5);
    bool x_33182 = !cond_33180;
    bool y_33183 = cond_f_res_33181 && x_33182;
    bool cond_33184 = cond_33180 || y_33183;
    int32_t fst_breakzq_33185;
    
    if (cond_33184) {
        fst_breakzq_33185 = -2;
    } else {
        fst_breakzq_33185 = fst_breakzq_33173;
    }
    
    __local char *mem_43794;
    
    mem_43794 = (__local char *) mem_43794_backing_5;
    ((__local float *) mem_43794)[sext_i32_i64(local_tid_45028)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_32830 = sext_i32_i64(ltid_pre_45032);
    int32_t phys_tid_32831 = local_tid_45028;
    int32_t index_primexp_40949 = sext_i64_i32(write_i_32830);
    float write_value_33189 = ((__local float *) mem_43792)[write_i_32830];
    bool cond_33190 = slt32(index_primexp_40949, y_33091);
    int32_t defunc_0_f_res_33191;
    
    if (cond_33190) {
        int32_t i_33192 = add32(x_33085, index_primexp_40949);
        int64_t i_33193 = sext_i32_i64(i_33192);
        int32_t x_33194 = ((__global
                            int32_t *) defunc_4_map_res_mem_43639)[gtid_32823 *
                                                                   N_27550 +
                                                                   i_33193];
        int32_t defunc_0_f_res_t_res_33195 = sub32(x_33194, n_27554);
        
        defunc_0_f_res_33191 = defunc_0_f_res_t_res_33195;
    } else {
        defunc_0_f_res_33191 = -1;
    }
    
    int64_t defunc_0_f_res_33196 = sext_i32_i64(defunc_0_f_res_33191);
    
    if (sle64((int64_t) 0, defunc_0_f_res_33196) && slt64(defunc_0_f_res_33196,
                                                          iota32_arg_27946)) {
        ((__local float *) mem_43794)[defunc_0_f_res_33196] = write_value_33189;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_43798)[gtid_32823 * iota32_arg_27946 +
                                   sext_i32_i64(local_tid_45028)] = ((__local
                                                                      float *) mem_43794)[sext_i32_i64(local_tid_45028)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global float *) mem_43801)[gtid_32823 * iota32_arg_27946 +
                                   sext_i32_i64(local_tid_45028)] = ((__local
                                                                      float *) mem_43792)[sext_i32_i64(local_tid_45028)];
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_45028 == 0) {
        ((__global int32_t *) mem_43803)[gtid_32823] = fst_breakzq_33185;
    }
    if (local_tid_45028 == 0) {
        ((__global float *) mem_43805)[gtid_32823] = defunc_0_f_res_33169;
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41060(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_42940_backing_aligned_0,
                                                    int64_t m_27551,
                                                    int32_t n_27554,
                                                    int64_t i32_res_27566,
                                                    int64_t Ty_41048,
                                                    int64_t Tx_41049,
                                                    int64_t gridDim_x_41050,
                                                    int64_t gridDim_y_41051,
                                                    int64_t group_sizze_tile3d_41055,
                                                    int64_t count_shmem_41056,
                                                    __global
                                                    unsigned char *mem_42853,
                                                    __global
                                                    unsigned char *mem_42857,
                                                    __global
                                                    unsigned char *mem_42928,
                                                    __global
                                                    unsigned char *mem_42988)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42940_backing_0 = (__local volatile
                                                           char *) mem_42940_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44125;
    int32_t local_tid_44126;
    int64_t group_sizze_44129;
    int32_t wave_sizze_44128;
    int32_t group_tid_44127;
    
    global_tid_44125 = get_global_id(0);
    local_tid_44126 = get_local_id(0);
    group_sizze_44129 = get_local_size(0);
    wave_sizze_44128 = LOCKSTEP_WIDTH;
    group_tid_44127 = get_group_id(0);
    
    int32_t gid_flat_41060;
    
    gid_flat_41060 = group_tid_44127;
    
    int32_t ltid_pre_44130;
    
    ltid_pre_44130 = squot32(local_tid_44126, sext_i64_i32(Ty_41048) *
                             sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44131;
    
    ltid_pre_44131 = squot32(local_tid_44126 - squot32(local_tid_44126,
                                                       sext_i64_i32(Ty_41048) *
                                                       sext_i64_i32(Tx_41049)) *
                             (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)),
                             sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44132;
    
    ltid_pre_44132 = local_tid_44126 - squot32(local_tid_44126,
                                               sext_i64_i32(Ty_41048) *
                                               sext_i64_i32(Tx_41049)) *
        (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)) -
        squot32(local_tid_44126 - squot32(local_tid_44126,
                                          sext_i64_i32(Ty_41048) *
                                          sext_i64_i32(Tx_41049)) *
                (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)),
                sext_i64_i32(Tx_41049)) * sext_i64_i32(Tx_41049);
    
    int32_t ltid_pre_44133;
    
    ltid_pre_44133 = squot32(local_tid_44126, sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44134;
    
    ltid_pre_44134 = local_tid_44126 - squot32(local_tid_44126,
                                               sext_i64_i32(Tx_41049)) *
        sext_i64_i32(Tx_41049);
    
    int32_t ltid_pre_44135;
    
    ltid_pre_44135 = local_tid_44126;
    
    int64_t gid_zz_41059;
    
    gid_zz_41059 = squot64(sext_i32_i64(group_tid_44127), gridDim_y_41051 *
                           gridDim_x_41050);
    
    int64_t gid_y_41058;
    
    gid_y_41058 = squot64(sext_i32_i64(group_tid_44127) -
                          squot64(sext_i32_i64(group_tid_44127),
                                  gridDim_y_41051 * gridDim_x_41050) *
                          (gridDim_y_41051 * gridDim_x_41050), gridDim_x_41050);
    
    int64_t gid_x_41057;
    
    gid_x_41057 = sext_i32_i64(group_tid_44127) -
        squot64(sext_i32_i64(group_tid_44127), gridDim_y_41051 *
                gridDim_x_41050) * (gridDim_y_41051 * gridDim_x_41050) -
        squot64(sext_i32_i64(group_tid_44127) -
                squot64(sext_i32_i64(group_tid_44127), gridDim_y_41051 *
                        gridDim_x_41050) * (gridDim_y_41051 * gridDim_x_41050),
                gridDim_x_41050) * gridDim_x_41050;
    
    int64_t ii_41061;
    
    ii_41061 = (int64_t) 30 * gid_zz_41059;
    
    int64_t jj1_41062 = Ty_41048 * gid_y_41058;
    int64_t jj2_41063 = Tx_41049 * gid_x_41057;
    float mem_42938[30];
    int64_t ltid_y_41066 = sext_i32_i64(ltid_pre_44133);
    int64_t ltid_x_41064 = sext_i32_i64(ltid_pre_44134);
    int32_t ltid_flat_41065 = local_tid_44126;
    float mem_42932[30];
    
    for (int32_t i_42757 = 0; i_42757 < 30; i_42757++) {
        int64_t i_41074 = sext_i32_i64(i_42757);
        
        mem_42932[i_41074] = 0.0F;
    }
    for (int64_t i_44137 = 0; i_44137 < (int64_t) 30; i_44137++) {
        mem_42938[i_44137] = mem_42932[i_44137];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42940;
    
    mem_42940 = (__local char *) mem_42940_backing_0;
    
    float loop_mem_42970[30];
    float mem_param_42941[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42941[i_1] = mem_42938[i_1];
    for (int32_t i_42759 = 0; i_42759 < n_27554; i_42759++) {
        int64_t i_41079 = sext_i32_i64(i_42759);
        
        for (int64_t i_41082 = 0; i_41082 < count_shmem_41056; i_41082++) {
            int64_t offs_41095 = group_sizze_tile3d_41055 * i_41082;
            int64_t ltid_41085 = sext_i32_i64(ltid_pre_44135);
            int32_t ltid_flat_41084 = local_tid_44126;
            int64_t loc_ind_41096 = ltid_41085 + offs_41095;
            int64_t gtid_41097 = ii_41061 + loc_ind_41096;
            bool cond_41098 = slt64(gtid_41097, m_27551);
            float y_elem_41099;
            
            if (cond_41098) {
                float Y_elem_41101 = ((__global float *) mem_42928)[i_41079 *
                                                                    m_27551 +
                                                                    gtid_41097];
                
                y_elem_41099 = Y_elem_41101;
            } else {
                y_elem_41099 = 0.0F;
            }
            
            bool cond_41103 = slt64(loc_ind_41096, (int64_t) 30);
            int64_t y_loc_ind_41104;
            
            if (cond_41103) {
                y_loc_ind_41104 = loc_ind_41096;
            } else {
                y_loc_ind_41104 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_41104) && slt64(y_loc_ind_41104,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42940)[y_loc_ind_41104] = y_elem_41099;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42969[30];
        int64_t ltid_y_41110 = sext_i32_i64(ltid_pre_44133);
        int64_t ltid_x_41108 = sext_i32_i64(ltid_pre_44134);
        int32_t ltid_flat_41109 = local_tid_44126;
        int64_t gtid_41137 = jj1_41062 + ltid_y_41110;
        int64_t gtid_41138 = jj2_41063 + ltid_x_41108;
        bool binop_x_41140 = slt64(gtid_41137, i32_res_27566);
        bool binop_y_41141 = slt64(gtid_41138, i32_res_27566);
        bool cond_41142 = binop_x_41140 && binop_y_41141;
        float mem_43846[30];
        
        if (cond_41142) {
            float x_41145 = ((__global float *) mem_42853)[i_41079 *
                                                           i32_res_27566 +
                                                           gtid_41137];
            float x_41147 = ((__global float *) mem_42857)[i_41079 *
                                                           i32_res_27566 +
                                                           gtid_41138];
            
            for (int32_t i_42758 = 0; i_42758 < 30; i_42758++) {
                int64_t i_41149 = sext_i32_i64(i_42758);
                int64_t gtid_41151 = ii_41061 + i_41149;
                bool cond_41152 = slt64(gtid_41151, m_27551);
                
                if (cond_41152) {
                    float inp_reg_var2zz_41154 = ((__local
                                                   float *) mem_42940)[i_41149];
                    float res_reg_var2zz_41155 = mem_param_42941[i_41149];
                    float x_41159 = x_41145 * x_41147;
                    bool isnan_res_41160;
                    
                    isnan_res_41160 = futrts_isnan32(inp_reg_var2zz_41154);
                    
                    float y_41161;
                    
                    if (isnan_res_41160) {
                        y_41161 = 0.0F;
                    } else {
                        y_41161 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41162 = x_41159 * y_41161;
                    float defunc_1_op_res_41166 = res_reg_var2zz_41155 +
                          defunc_2_f_res_41162;
                    
                    mem_param_42941[i_41149] = defunc_1_op_res_41166;
                }
            }
            for (int64_t i_44143 = 0; i_44143 < (int64_t) 30; i_44143++) {
                mem_43846[i_44143] = mem_param_42941[i_44143];
            }
        } else {
            for (int64_t i_44144 = 0; i_44144 < (int64_t) 30; i_44144++) {
                mem_43846[i_44144] = mem_param_42941[i_44144];
            }
        }
        for (int64_t i_44145 = 0; i_44145 < (int64_t) 30; i_44145++) {
            mem_42969[i_44145] = mem_43846[i_44145];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44138[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44138[i_2] = mem_42969[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42941[i_3] = mem_param_tmp_44138[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42970[i_4] = mem_param_42941[i_4];
    
    float mem_42984[30 * 1 * 1];
    int64_t ltid_zz_41175 = sext_i32_i64(ltid_pre_44130);
    int64_t ltid_y_41174 = sext_i32_i64(ltid_pre_44131);
    int64_t ltid_x_41172 = sext_i32_i64(ltid_pre_44132);
    int32_t ltid_flat_41173 = local_tid_44126;
    float mem_42978[30 * 1 * 1];
    
    for (int32_t i_42761 = 0; i_42761 < 30; i_42761++) {
        int64_t i_41184 = sext_i32_i64(i_42761);
        
        for (int64_t i_44147 = 0; i_44147 < (int64_t) 1; i_44147++) {
            mem_42978[i_41184 + i_44147] = loop_mem_42970[i_41184 + i_44147];
        }
    }
    for (int64_t i_44148 = 0; i_44148 < (int64_t) 30; i_44148++) {
        for (int64_t i_44149 = 0; i_44149 < (int64_t) 1; i_44149++) {
            for (int64_t i_44150 = 0; i_44150 < (int64_t) 1; i_44150++) {
                mem_42984[i_44148 + i_44149 + i_44150] = mem_42978[i_44148 +
                                                                   i_44149 +
                                                                   i_44150];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44151 = squot64(sext_i32_i64(local_tid_44126), Ty_41048 *
                                       Tx_41049);
    int64_t reg_tile_i_44152 = squot64(sext_i32_i64(local_tid_44126) -
                                       squot64(sext_i32_i64(local_tid_44126),
                                               Ty_41048 * Tx_41049) *
                                       (Ty_41048 * Tx_41049), Tx_41049);
    int64_t reg_tile_i_44153 = sext_i32_i64(local_tid_44126) -
            squot64(sext_i32_i64(local_tid_44126), Ty_41048 * Tx_41049) *
            (Ty_41048 * Tx_41049) - squot64(sext_i32_i64(local_tid_44126) -
                                            squot64(sext_i32_i64(local_tid_44126),
                                                    Ty_41048 * Tx_41049) *
                                            (Ty_41048 * Tx_41049), Tx_41049) *
            Tx_41049;
    int64_t tile_dim_start_44154 = (int64_t) 30 * (gid_zz_41059 +
                                                   reg_tile_i_44151);
    int64_t tile_dim_start_44155 = Ty_41048 * gid_y_41058 + reg_tile_i_44152;
    int64_t tile_dim_start_44156 = Tx_41049 * gid_x_41057 + reg_tile_i_44153;
    
    for (int64_t nest_i_44157 = 0; nest_i_44157 < (int64_t) 30;
         nest_i_44157++) {
        for (int64_t nest_i_44158 = 0; nest_i_44158 < (int64_t) 1;
             nest_i_44158++) {
            for (int64_t nest_i_44159 = 0; nest_i_44159 < (int64_t) 1;
                 nest_i_44159++) {
                if ((slt64(tile_dim_start_44154 + nest_i_44157, m_27551) &&
                     slt64(tile_dim_start_44155 + nest_i_44158,
                           i32_res_27566)) && slt64(tile_dim_start_44156 +
                                                    nest_i_44159,
                                                    i32_res_27566)) {
                    ((__global float *) mem_42988)[(tile_dim_start_44154 +
                                                    nest_i_44157) *
                                                   (i32_res_27566 *
                                                    i32_res_27566) +
                                                   (tile_dim_start_44155 +
                                                    nest_i_44158) *
                                                   i32_res_27566 +
                                                   (tile_dim_start_44156 +
                                                    nest_i_44159)] =
                        mem_42984[nest_i_44157 + nest_i_44158 + nest_i_44159];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainDetailedzisegmap_intragroup_41213(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43128_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43126_backing_aligned_1,
                                                    int64_t N_27550,
                                                    int64_t m_27551,
                                                    int64_t i32_res_27560,
                                                    int64_t i32_res_27566,
                                                    int64_t gridDim_x_41207,
                                                    int64_t full_tiles_41238,
                                                    int64_t kk_41445, __global
                                                    unsigned char *images_mem_42841,
                                                    __global
                                                    unsigned char *mem_42853,
                                                    __global
                                                    unsigned char *mem_43300)
{
    #define Ty_41194 (mainDetailedziTy_41191)
    #define Ry_41195 (mainDetailedziRy_41193)
    #define Tx_41196 (mainDetailedziTx_41190)
    #define Rx_41197 (mainDetailedziRx_41192)
    #define Tk_41198 (mainDetailedziTk_41189)
    #define tk_div_tx_41199 (sdiv_up64(mainDetailedziTk_41189, mainDetailedziTx_41190))
    #define tk_div_ty_41200 (sdiv_up64(mainDetailedziTk_41189, mainDetailedziTy_41191))
    #define TxRx_41201 (mainDetailedziTx_41190 * mainDetailedziRx_41192)
    #define TyRy_41202 (mainDetailedziTy_41191 * mainDetailedziRy_41193)
    #define a_loc_szz_41204 (mainDetailedziTk_41189 * (mainDetailedziTy_41191 * mainDetailedziRy_41193))
    #define b_loc_szz_41206 (mainDetailedziRx_41192 * (mainDetailedziTx_41190 * mainDetailedziTk_41189))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43128_backing_1 = (__local volatile
                                                           char *) mem_43128_backing_aligned_0;
    __local volatile char *restrict mem_43126_backing_0 = (__local volatile
                                                           char *) mem_43126_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44300;
    int32_t local_tid_44301;
    int64_t group_sizze_44304;
    int32_t wave_sizze_44303;
    int32_t group_tid_44302;
    
    global_tid_44300 = get_global_id(0);
    local_tid_44301 = get_local_id(0);
    group_sizze_44304 = get_local_size(0);
    wave_sizze_44303 = LOCKSTEP_WIDTH;
    group_tid_44302 = get_group_id(0);
    
    int32_t gid_flat_41213;
    
    gid_flat_41213 = group_tid_44302;
    
    int32_t ltid_pre_44305;
    
    ltid_pre_44305 = squot32(local_tid_44301, sext_i64_i32(Tx_41196));
    
    int32_t ltid_pre_44306;
    
    ltid_pre_44306 = local_tid_44301 - squot32(local_tid_44301,
                                               sext_i64_i32(Tx_41196)) *
        sext_i64_i32(Tx_41196);
    
    int64_t gid_y_41212;
    
    gid_y_41212 = squot64(sext_i32_i64(group_tid_44302), gridDim_x_41207);
    
    int64_t gid_x_41211;
    
    gid_x_41211 = sext_i32_i64(group_tid_44302) -
        squot64(sext_i32_i64(group_tid_44302), gridDim_x_41207) *
        gridDim_x_41207;
    
    int64_t iii_41214;
    
    iii_41214 = TyRy_41202 * gid_y_41212;
    
    int64_t jjj_41215 = TxRx_41201 * gid_x_41211;
    float mem_43124[Ry_41195 * Rx_41197];
    int64_t ltid_y_41218 = sext_i32_i64(ltid_pre_44305);
    int64_t ltid_x_41216 = sext_i32_i64(ltid_pre_44306);
    int32_t ltid_flat_41217 = local_tid_44301;
    float mem_43115[Ry_41195 * Rx_41197];
    
    for (int64_t i_41229 = 0; i_41229 < Ry_41195; i_41229++) {
        for (int64_t i_41232 = 0; i_41232 < Rx_41197; i_41232++) {
            mem_43115[i_41229 * Rx_41197 + i_41232] = 0.0F;
        }
    }
    for (int64_t i_44309 = 0; i_44309 < Ry_41195; i_44309++) {
        for (int64_t i_44310 = 0; i_44310 < Rx_41197; i_44310++) {
            mem_43124[i_44309 * Rx_41197 + i_44310] = mem_43115[i_44309 *
                                                                Rx_41197 +
                                                                i_44310];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43126;
    
    mem_43126 = (__local char *) mem_43126_backing_0;
    
    __local char *mem_43128;
    
    mem_43128 = (__local char *) mem_43128_backing_1;
    
    float mem_43199[Ry_41195];
    float mem_43203[Rx_41197];
    float loop_mem_43215[Ry_41195 * Rx_41197];
    float mem_param_43129[Ry_41195 * Rx_41197];
    
    for (int32_t i_2 = 0; i_2 < Ry_41195 * Rx_41197; i_2++)
        mem_param_43129[i_2] = mem_43124[i_2];
    for (int64_t i_41239 = 0; i_41239 < full_tiles_41238; i_41239++) {
        int64_t kk_41243 = Tk_41198 * i_41239;
        
        for (int64_t i_41244 = 0; i_41244 < Ry_41195; i_41244++) {
            int64_t binop_y_41267 = Ty_41194 * i_41244;
            
            for (int64_t i_41246 = 0; i_41246 < tk_div_tx_41199; i_41246++) {
                int64_t binop_y_41265 = Tx_41196 * i_41246;
                int64_t ltid_x_41248 = sext_i32_i64(ltid_pre_44305);
                int64_t ltid_y_41249 = sext_i32_i64(ltid_pre_44306);
                int32_t ltid_flat_41250 = local_tid_44301;
                int64_t k_41266 = ltid_y_41249 + binop_y_41265;
                int64_t i_41268 = ltid_x_41248 + binop_y_41267;
                int64_t gtid_41269 = iii_41214 + i_41268;
                int64_t A_col_idx_41270 = kk_41243 + k_41266;
                bool cond_41271 = slt64(gtid_41269, m_27551);
                float A_elem_41272;
                
                if (cond_41271) {
                    float A_elem_41274 = ((__global
                                           float *) images_mem_42841)[gtid_41269 *
                                                                      N_27550 +
                                                                      A_col_idx_41270];
                    
                    A_elem_41272 = A_elem_41274;
                } else {
                    A_elem_41272 = 0.0F;
                }
                
                bool cond_41276 = slt64(k_41266, Tk_41198);
                int64_t a_loc_ind_41277;
                
                if (cond_41276) {
                    int64_t binop_y_41278 = Tk_41198 * i_41268;
                    int64_t loc_fi_41279 = k_41266 + binop_y_41278;
                    
                    a_loc_ind_41277 = loc_fi_41279;
                } else {
                    a_loc_ind_41277 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41277) &&
                    slt64(a_loc_ind_41277, a_loc_szz_41204)) {
                    ((__local float *) mem_43126)[a_loc_ind_41277] =
                        A_elem_41272;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41284 = 0; i_41284 < tk_div_ty_41200; i_41284++) {
            int64_t binop_y_41305 = Ty_41194 * i_41284;
            
            for (int64_t i_41286 = 0; i_41286 < Rx_41197; i_41286++) {
                int64_t binop_y_41307 = Tx_41196 * i_41286;
                int64_t ltid_x_41288 = sext_i32_i64(ltid_pre_44305);
                int64_t ltid_y_41289 = sext_i32_i64(ltid_pre_44306);
                int32_t ltid_flat_41290 = local_tid_44301;
                int64_t k_41306 = ltid_x_41288 + binop_y_41305;
                int64_t j_41308 = ltid_y_41289 + binop_y_41307;
                int64_t gtid_41309 = jjj_41215 + j_41308;
                int64_t B_row_idx_41310 = kk_41243 + k_41306;
                bool cond_41311 = slt64(gtid_41309, i32_res_27566);
                float B_elem_41312;
                
                if (cond_41311) {
                    float B_elem_41314 = ((__global
                                           float *) mem_42853)[B_row_idx_41310 *
                                                               i32_res_27566 +
                                                               gtid_41309];
                    
                    B_elem_41312 = B_elem_41314;
                } else {
                    B_elem_41312 = 0.0F;
                }
                
                bool cond_41316 = slt64(k_41306, Tk_41198);
                int64_t b_loc_ind_41317;
                
                if (cond_41316) {
                    int64_t binop_y_41318 = TxRx_41201 * k_41306;
                    int64_t loc_fi_41319 = j_41308 + binop_y_41318;
                    
                    b_loc_ind_41317 = loc_fi_41319;
                } else {
                    b_loc_ind_41317 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41317) &&
                    slt64(b_loc_ind_41317, b_loc_szz_41206)) {
                    ((__local float *) mem_43128)[b_loc_ind_41317] =
                        B_elem_41312;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43214[Ry_41195 * Rx_41197];
        float mem_param_43186[Ry_41195 * Rx_41197];
        
        for (int32_t i_3 = 0; i_3 < Ry_41195 * Rx_41197; i_3++)
            mem_param_43186[i_3] = mem_param_43129[i_3];
        for (int64_t i_41324 = 0; i_41324 < Tk_41198; i_41324++) {
            int64_t binop_y_41363 = TxRx_41201 * i_41324;
            int64_t ltid_y_41328 = sext_i32_i64(ltid_pre_44305);
            int64_t ltid_x_41326 = sext_i32_i64(ltid_pre_44306);
            int32_t ltid_flat_41327 = local_tid_44301;
            float mem_43189[Ry_41195];
            float mem_43191[Rx_41197];
            int64_t binop_x_41354 = Ry_41195 * ltid_y_41328;
            
            for (int64_t i_41352 = 0; i_41352 < Ry_41195; i_41352++) {
                int64_t binop_x_41355 = i_41352 + binop_x_41354;
                int64_t binop_y_41356 = Tk_41198 * binop_x_41355;
                int64_t a_loc_ind_41357 = i_41324 + binop_y_41356;
                
                for (int64_t i_44322 = 0; i_44322 < (int64_t) 1; i_44322++) {
                    mem_43189[i_41352 + i_44322] = ((__local
                                                     float *) mem_43126)[a_loc_ind_41357 +
                                                                         i_44322];
                }
            }
            
            int64_t binop_y_41365 = Rx_41197 * ltid_x_41326;
            
            for (int64_t i_41361 = 0; i_41361 < Rx_41197; i_41361++) {
                int64_t binop_x_41364 = i_41361 + binop_y_41363;
                int64_t b_loc_ind_41366 = binop_x_41364 + binop_y_41365;
                
                for (int64_t i_44324 = 0; i_44324 < (int64_t) 1; i_44324++) {
                    mem_43191[i_41361 + i_44324] = ((__local
                                                     float *) mem_43128)[b_loc_ind_41366 +
                                                                         i_44324];
                }
            }
            for (int64_t i_44325 = 0; i_44325 < Ry_41195; i_44325++) {
                mem_43199[i_44325] = mem_43189[i_44325];
            }
            for (int64_t i_44326 = 0; i_44326 < Rx_41197; i_44326++) {
                mem_43203[i_44326] = mem_43191[i_44326];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43213[Ry_41195 * Rx_41197];
            int64_t ltid_y_41373 = sext_i32_i64(ltid_pre_44305);
            int64_t ltid_x_41371 = sext_i32_i64(ltid_pre_44306);
            int32_t ltid_flat_41372 = local_tid_44301;
            int64_t binop_y_41416 = Ry_41195 * ltid_y_41373;
            int64_t binop_y_41420 = Rx_41197 * ltid_x_41371;
            
            for (int64_t i_41410 = 0; i_41410 < Ry_41195; i_41410++) {
                int64_t binop_x_41415 = iii_41214 + i_41410;
                int64_t cmpop_x_41417 = binop_x_41415 + binop_y_41416;
                bool binop_x_41418 = slt64(cmpop_x_41417, m_27551);
                
                for (int64_t i_41413 = 0; i_41413 < Rx_41197; i_41413++) {
                    int64_t binop_x_41419 = jjj_41215 + i_41413;
                    int64_t cmpop_x_41421 = binop_x_41419 + binop_y_41420;
                    bool binop_y_41422 = slt64(cmpop_x_41421, i32_res_27566);
                    bool cond_41423 = binop_x_41418 && binop_y_41422;
                    
                    if (cond_41423) {
                        float a_41425 = mem_43199[i_41410];
                        float c_41427 = mem_param_43186[i_41410 * Rx_41197 +
                                                        i_41413];
                        bool isnan_res_41430;
                        
                        isnan_res_41430 = futrts_isnan32(a_41425);
                        
                        float defunc_1_f_res_41431;
                        
                        if (isnan_res_41430) {
                            defunc_1_f_res_41431 = 0.0F;
                        } else {
                            float b_41426 = mem_43203[i_41413];
                            float defunc_1_f_res_f_res_41432 = a_41425 *
                                  b_41426;
                            
                            defunc_1_f_res_41431 = defunc_1_f_res_f_res_41432;
                        }
                        
                        float defunc_1_op_res_41436 = c_41427 +
                              defunc_1_f_res_41431;
                        
                        mem_param_43186[i_41410 * Rx_41197 + i_41413] =
                            defunc_1_op_res_41436;
                    }
                }
            }
            for (int64_t i_44329 = 0; i_44329 < Ry_41195; i_44329++) {
                for (int64_t i_44330 = 0; i_44330 < Rx_41197; i_44330++) {
                    mem_43213[i_44329 * Rx_41197 + i_44330] =
                        mem_param_43186[i_44329 * Rx_41197 + i_44330];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44319[Ry_41195 * Rx_41197];
            
            for (int32_t i_4 = 0; i_4 < Ry_41195 * Rx_41197; i_4++)
                mem_param_tmp_44319[i_4] = mem_43213[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41195 * Rx_41197; i_5++)
                mem_param_43186[i_5] = mem_param_tmp_44319[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41195 * Rx_41197; i_6++)
            loop_mem_43214[i_6] = mem_param_43186[i_6];
        
        float mem_param_tmp_44311[Ry_41195 * Rx_41197];
        
        for (int32_t i_7 = 0; i_7 < Ry_41195 * Rx_41197; i_7++)
            mem_param_tmp_44311[i_7] = loop_mem_43214[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41195 * Rx_41197; i_8++)
            mem_param_43129[i_8] = mem_param_tmp_44311[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41195 * Rx_41197; i_9++)
        loop_mem_43215[i_9] = mem_param_43129[i_9];
    for (int64_t i_41446 = 0; i_41446 < Ry_41195; i_41446++) {
        int64_t binop_y_41471 = Ty_41194 * i_41446;
        
        for (int64_t i_41448 = 0; i_41448 < tk_div_tx_41199; i_41448++) {
            int64_t binop_y_41469 = Tx_41196 * i_41448;
            int64_t ltid_x_41450 = sext_i32_i64(ltid_pre_44305);
            int64_t ltid_y_41451 = sext_i32_i64(ltid_pre_44306);
            int32_t ltid_flat_41452 = local_tid_44301;
            int64_t k_41470 = ltid_y_41451 + binop_y_41469;
            int64_t i_41472 = ltid_x_41450 + binop_y_41471;
            int64_t gtid_41473 = iii_41214 + i_41472;
            int64_t A_col_idx_41474 = kk_41445 + k_41470;
            bool binop_x_41475 = slt64(gtid_41473, m_27551);
            bool binop_y_41476 = slt64(A_col_idx_41474, i32_res_27560);
            bool cond_41477 = binop_x_41475 && binop_y_41476;
            float A_elem_41478;
            
            if (cond_41477) {
                float A_elem_41480 = ((__global
                                       float *) images_mem_42841)[gtid_41473 *
                                                                  N_27550 +
                                                                  A_col_idx_41474];
                
                A_elem_41478 = A_elem_41480;
            } else {
                A_elem_41478 = 0.0F;
            }
            
            bool cond_41482 = slt64(k_41470, Tk_41198);
            int64_t a_loc_ind_41483;
            
            if (cond_41482) {
                int64_t binop_y_41484 = Tk_41198 * i_41472;
                int64_t loc_fi_41485 = k_41470 + binop_y_41484;
                
                a_loc_ind_41483 = loc_fi_41485;
            } else {
                a_loc_ind_41483 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41483) && slt64(a_loc_ind_41483,
                                                             a_loc_szz_41204)) {
                ((__local float *) mem_43126)[a_loc_ind_41483] = A_elem_41478;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41490 = 0; i_41490 < tk_div_ty_41200; i_41490++) {
        int64_t binop_y_41513 = Ty_41194 * i_41490;
        
        for (int64_t i_41492 = 0; i_41492 < Rx_41197; i_41492++) {
            int64_t binop_y_41515 = Tx_41196 * i_41492;
            int64_t ltid_x_41494 = sext_i32_i64(ltid_pre_44305);
            int64_t ltid_y_41495 = sext_i32_i64(ltid_pre_44306);
            int32_t ltid_flat_41496 = local_tid_44301;
            int64_t k_41514 = ltid_x_41494 + binop_y_41513;
            int64_t j_41516 = ltid_y_41495 + binop_y_41515;
            int64_t gtid_41517 = jjj_41215 + j_41516;
            int64_t B_row_idx_41518 = kk_41445 + k_41514;
            bool binop_x_41519 = slt64(gtid_41517, i32_res_27566);
            bool binop_y_41520 = slt64(B_row_idx_41518, i32_res_27560);
            bool cond_41521 = binop_x_41519 && binop_y_41520;
            float B_elem_41522;
            
            if (cond_41521) {
                float B_elem_41524 = ((__global
                                       float *) mem_42853)[B_row_idx_41518 *
                                                           i32_res_27566 +
                                                           gtid_41517];
                
                B_elem_41522 = B_elem_41524;
            } else {
                B_elem_41522 = 0.0F;
            }
            
            bool cond_41526 = slt64(k_41514, Tk_41198);
            int64_t b_loc_ind_41527;
            
            if (cond_41526) {
                int64_t binop_y_41528 = TxRx_41201 * k_41514;
                int64_t loc_fi_41529 = j_41516 + binop_y_41528;
                
                b_loc_ind_41527 = loc_fi_41529;
            } else {
                b_loc_ind_41527 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41527) && slt64(b_loc_ind_41527,
                                                             b_loc_szz_41206)) {
                ((__local float *) mem_43128)[b_loc_ind_41527] = B_elem_41522;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43281[Ry_41195];
    float mem_43285[Rx_41197];
    float mem_43295[Ry_41195 * Rx_41197];
    float loop_mem_43297[Ry_41195 * Rx_41197];
    float mem_param_43268[Ry_41195 * Rx_41197];
    
    for (int32_t i_10 = 0; i_10 < Ry_41195 * Rx_41197; i_10++)
        mem_param_43268[i_10] = loop_mem_43215[i_10];
    for (int64_t i_41534 = 0; i_41534 < Tk_41198; i_41534++) {
        int64_t cmpop_x_41536 = kk_41445 + i_41534;
        bool cond_41537 = slt64(cmpop_x_41536, i32_res_27560);
        float mem_43864[Ry_41195 * Rx_41197];
        
        if (cond_41537) {
            int64_t binop_y_41575 = TxRx_41201 * i_41534;
            int64_t bytes_43270 = (int64_t) 4 * Ry_41195;
            int64_t bytes_43272 = (int64_t) 4 * Rx_41197;
            int64_t ltid_y_41540 = sext_i32_i64(ltid_pre_44305);
            int64_t ltid_x_41538 = sext_i32_i64(ltid_pre_44306);
            int32_t ltid_flat_41539 = local_tid_44301;
            float mem_43271[Ry_41195];
            float mem_43273[Rx_41197];
            int64_t binop_x_41566 = Ry_41195 * ltid_y_41540;
            
            for (int64_t i_41564 = 0; i_41564 < Ry_41195; i_41564++) {
                int64_t binop_x_41567 = i_41564 + binop_x_41566;
                int64_t binop_y_41568 = Tk_41198 * binop_x_41567;
                int64_t a_loc_ind_41569 = i_41534 + binop_y_41568;
                
                for (int64_t i_44338 = 0; i_44338 < (int64_t) 1; i_44338++) {
                    mem_43271[i_41564 + i_44338] = ((__local
                                                     float *) mem_43126)[a_loc_ind_41569 +
                                                                         i_44338];
                }
            }
            
            int64_t binop_y_41577 = Rx_41197 * ltid_x_41538;
            
            for (int64_t i_41573 = 0; i_41573 < Rx_41197; i_41573++) {
                int64_t binop_x_41576 = i_41573 + binop_y_41575;
                int64_t b_loc_ind_41578 = binop_x_41576 + binop_y_41577;
                
                for (int64_t i_44340 = 0; i_44340 < (int64_t) 1; i_44340++) {
                    mem_43273[i_41573 + i_44340] = ((__local
                                                     float *) mem_43128)[b_loc_ind_41578 +
                                                                         i_44340];
                }
            }
            for (int64_t i_44341 = 0; i_44341 < Ry_41195; i_44341++) {
                mem_43281[i_44341] = mem_43271[i_44341];
            }
            for (int64_t i_44342 = 0; i_44342 < Rx_41197; i_44342++) {
                mem_43285[i_44342] = mem_43273[i_44342];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41585 = sext_i32_i64(ltid_pre_44305);
            int64_t ltid_x_41583 = sext_i32_i64(ltid_pre_44306);
            int32_t ltid_flat_41584 = local_tid_44301;
            int64_t binop_y_41628 = Ry_41195 * ltid_y_41585;
            int64_t binop_y_41632 = Rx_41197 * ltid_x_41583;
            
            for (int64_t i_41622 = 0; i_41622 < Ry_41195; i_41622++) {
                int64_t binop_x_41627 = iii_41214 + i_41622;
                int64_t cmpop_x_41629 = binop_x_41627 + binop_y_41628;
                bool binop_x_41630 = slt64(cmpop_x_41629, m_27551);
                
                for (int64_t i_41625 = 0; i_41625 < Rx_41197; i_41625++) {
                    int64_t binop_x_41631 = jjj_41215 + i_41625;
                    int64_t cmpop_x_41633 = binop_x_41631 + binop_y_41632;
                    bool binop_y_41634 = slt64(cmpop_x_41633, i32_res_27566);
                    bool cond_41635 = binop_x_41630 && binop_y_41634;
                    
                    if (cond_41635) {
                        float a_41637 = mem_43281[i_41622];
                        float c_41639 = mem_param_43268[i_41622 * Rx_41197 +
                                                        i_41625];
                        bool isnan_res_41642;
                        
                        isnan_res_41642 = futrts_isnan32(a_41637);
                        
                        float defunc_1_f_res_41643;
                        
                        if (isnan_res_41642) {
                            defunc_1_f_res_41643 = 0.0F;
                        } else {
                            float b_41638 = mem_43285[i_41625];
                            float defunc_1_f_res_f_res_41644 = a_41637 *
                                  b_41638;
                            
                            defunc_1_f_res_41643 = defunc_1_f_res_f_res_41644;
                        }
                        
                        float defunc_1_op_res_41648 = c_41639 +
                              defunc_1_f_res_41643;
                        
                        mem_param_43268[i_41622 * Rx_41197 + i_41625] =
                            defunc_1_op_res_41648;
                    }
                }
            }
            for (int64_t i_44345 = 0; i_44345 < Ry_41195; i_44345++) {
                for (int64_t i_44346 = 0; i_44346 < Rx_41197; i_44346++) {
                    mem_43295[i_44345 * Rx_41197 + i_44346] =
                        mem_param_43268[i_44345 * Rx_41197 + i_44346];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44347 = 0; i_44347 < Ry_41195; i_44347++) {
                for (int64_t i_44348 = 0; i_44348 < Rx_41197; i_44348++) {
                    mem_43864[i_44347 * Rx_41197 + i_44348] =
                        mem_43295[i_44347 * Rx_41197 + i_44348];
                }
            }
        } else {
            for (int64_t i_44349 = 0; i_44349 < Ry_41195; i_44349++) {
                for (int64_t i_44350 = 0; i_44350 < Rx_41197; i_44350++) {
                    mem_43864[i_44349 * Rx_41197 + i_44350] =
                        mem_param_43268[i_44349 * Rx_41197 + i_44350];
                }
            }
        }
        
        float mem_param_tmp_44335[Ry_41195 * Rx_41197];
        
        for (int32_t i_11 = 0; i_11 < Ry_41195 * Rx_41197; i_11++)
            mem_param_tmp_44335[i_11] = mem_43864[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41195 * Rx_41197; i_12++)
            mem_param_43268[i_12] = mem_param_tmp_44335[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41195 * Rx_41197; i_13++)
        loop_mem_43297[i_13] = mem_param_43268[i_13];
    
    int64_t reg_tile_i_44351 = squot64(sext_i32_i64(local_tid_44301), Tx_41196);
    int64_t reg_tile_i_44352 = sext_i32_i64(local_tid_44301) -
            squot64(sext_i32_i64(local_tid_44301), Tx_41196) * Tx_41196;
    int64_t tile_dim_start_44353 = Ry_41195 * (Ty_41194 * gid_y_41212 +
                                               reg_tile_i_44351);
    int64_t tile_dim_start_44354 = Rx_41197 * (Tx_41196 * gid_x_41211 +
                                               reg_tile_i_44352);
    
    for (int64_t nest_i_44355 = 0; nest_i_44355 < Ry_41195; nest_i_44355++) {
        for (int64_t nest_i_44356 = 0; nest_i_44356 < Rx_41197;
             nest_i_44356++) {
            if (slt64(tile_dim_start_44353 + nest_i_44355, m_27551) &&
                slt64(tile_dim_start_44354 + nest_i_44356, i32_res_27566)) {
                ((__global float *) mem_43300)[(tile_dim_start_44353 +
                                                nest_i_44355) * i32_res_27566 +
                                               (tile_dim_start_44354 +
                                                nest_i_44356)] =
                    loop_mem_43297[nest_i_44355 * Rx_41197 + nest_i_44356];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41194
    #undef Ry_41195
    #undef Tx_41196
    #undef Rx_41197
    #undef Tk_41198
    #undef tk_div_tx_41199
    #undef tk_div_ty_41200
    #undef TxRx_41201
    #undef TyRy_41202
    #undef a_loc_szz_41204
    #undef b_loc_szz_41206
}
__kernel void mainDetailedzisegmap_intragroup_41662(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43358_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43349_backing_aligned_1,
                                                    int64_t m_27551,
                                                    int64_t i32_res_27566,
                                                    int64_t num_groups_y_41660,
                                                    int64_t num_whole_tiles_41678,
                                                    int64_t residual_input_41805,
                                                    unsigned char cond_41806,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43310,
                                                    __global
                                                    unsigned char *mem_43339,
                                                    __global
                                                    unsigned char *mem_43366)
{
    #define tile_sizze_41657 (mainDetailedzitile_sizze_41656)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43358_backing_5 = (__local volatile
                                                           char *) mem_43358_backing_aligned_0;
    __local volatile char *restrict mem_43349_backing_0 = (__local volatile
                                                           char *) mem_43349_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44432;
    int32_t local_tid_44433;
    int64_t group_sizze_44436;
    int32_t wave_sizze_44435;
    int32_t group_tid_44434;
    
    global_tid_44432 = get_global_id(0);
    local_tid_44433 = get_local_id(0);
    group_sizze_44436 = get_local_size(0);
    wave_sizze_44435 = LOCKSTEP_WIDTH;
    group_tid_44434 = get_group_id(0);
    
    int32_t gid_flat_41662;
    
    gid_flat_41662 = group_tid_44434;
    
    int32_t ltid_pre_44437;
    
    ltid_pre_44437 = squot32(local_tid_44433, sext_i64_i32(tile_sizze_41657));
    
    int32_t ltid_pre_44438;
    
    ltid_pre_44438 = local_tid_44433 - squot32(local_tid_44433,
                                               sext_i64_i32(tile_sizze_41657)) *
        sext_i64_i32(tile_sizze_41657);
    
    int64_t gid_x_41654;
    
    gid_x_41654 = squot64(sext_i32_i64(group_tid_44434), num_groups_y_41660);
    
    int64_t gid_y_41655;
    
    gid_y_41655 = sext_i32_i64(group_tid_44434) -
        squot64(sext_i32_i64(group_tid_44434), num_groups_y_41660) *
        num_groups_y_41660;
    
    float mem_43344[1];
    int64_t ltid_y_41681 = sext_i32_i64(ltid_pre_44437);
    int64_t ltid_x_41679 = sext_i32_i64(ltid_pre_44438);
    int32_t ltid_flat_41680 = local_tid_44433;
    
    if (slt64(ltid_y_41681, tile_sizze_41657) && slt64(ltid_x_41679,
                                                       tile_sizze_41657)) {
        mem_43344[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41764 = gid_x_41654 * tile_sizze_41657;
    int64_t binop_x_41779 = gid_y_41655 * tile_sizze_41657;
    __local char *mem_43349;
    
    mem_43349 = (__local char *) mem_43349_backing_0;
    
    float accs_mem_43354[1];
    float mem_param_43345[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43345[i_1] = mem_43344[i_1];
    for (int64_t tile_id_41690 = 0; tile_id_41690 < num_whole_tiles_41678;
         tile_id_41690++) {
        int64_t binop_x_41762 = tile_sizze_41657 * tile_id_41690;
        int64_t ltid_y_41693 = sext_i32_i64(ltid_pre_44437);
        int64_t ltid_x_41691 = sext_i32_i64(ltid_pre_44438);
        int32_t ltid_flat_41692 = local_tid_44433;
        int64_t j_41763 = ltid_x_41691 + binop_x_41762;
        int64_t gtid_41765 = ltid_y_41693 + binop_x_41764;
        bool binop_x_41770 = slt64(j_41763, i32_res_27566);
        bool binop_y_41771 = slt64(gtid_41765, m_27551);
        bool cond_41772 = binop_x_41770 && binop_y_41771;
        float pre_41773;
        
        if (cond_41772) {
            float x_41774 = ((__global
                              float *) defunc_3_map_res_mem_43310)[gtid_41765 *
                                                                   i32_res_27566 +
                                                                   j_41763];
            
            pre_41773 = x_41774;
        } else {
            pre_41773 = 0.0F;
        }
        ((__local float *) mem_43349)[ltid_y_41693 * tile_sizze_41657 +
                                      ltid_x_41691] = pre_41773;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43353[1];
        int64_t ltid_y_41725 = sext_i32_i64(ltid_pre_44437);
        int64_t ltid_x_41723 = sext_i32_i64(ltid_pre_44438);
        int32_t ltid_flat_41724 = local_tid_44433;
        int64_t gtid_41778 = ltid_y_41725 + binop_x_41764;
        int64_t gtid_41780 = ltid_x_41723 + binop_x_41779;
        float acc_41783 = mem_param_43345[(int64_t) 0];
        bool binop_x_41787 = slt64(gtid_41778, m_27551);
        bool binop_y_41788 = slt64(gtid_41780, i32_res_27566);
        bool cond_41789 = binop_x_41787 && binop_y_41788;
        float acc_41790;
        
        if (cond_41789) {
            float x_41791;
            float redout_42802 = acc_41783;
            
            for (int64_t i_42803 = 0; i_42803 < tile_sizze_41657; i_42803++) {
                float x_41795 = ((__local float *) mem_43349)[ltid_y_41725 *
                                                              tile_sizze_41657 +
                                                              i_42803];
                int64_t slice_42831 = binop_x_41762 + i_42803;
                float x_41796 = ((__global float *) mem_43339)[slice_42831 *
                                                               (i32_res_27566 *
                                                                m_27551) +
                                                               gtid_41778 *
                                                               i32_res_27566 +
                                                               gtid_41780];
                float defunc_1_f_res_41797 = x_41795 * x_41796;
                float defunc_1_op_res_41794 = defunc_1_f_res_41797 +
                      redout_42802;
                float redout_tmp_44441 = defunc_1_op_res_41794;
                
                redout_42802 = redout_tmp_44441;
            }
            x_41791 = redout_42802;
            acc_41790 = x_41791;
        } else {
            acc_41790 = acc_41783;
        }
        mem_43353[(int64_t) 0] = acc_41790;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44439[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44439[i_2] = mem_43353[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43345[i_3] = mem_param_tmp_44439[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43354[i_4] = mem_param_43345[i_4];
    
    __local char *mem_43358;
    
    mem_43358 = (__local char *) mem_43358_backing_5;
    
    float mem_43362[1];
    float mem_43878[1];
    
    if (cond_41806) {
        mem_43878[(int64_t) 0] = accs_mem_43354[(int64_t) 0];
    } else {
        int64_t binop_x_41879 = tile_sizze_41657 * num_whole_tiles_41678;
        int64_t ltid_y_41809 = sext_i32_i64(ltid_pre_44437);
        int64_t ltid_x_41807 = sext_i32_i64(ltid_pre_44438);
        int32_t ltid_flat_41808 = local_tid_44433;
        int64_t j_41880 = ltid_x_41807 + binop_x_41879;
        int64_t gtid_41882 = binop_x_41764 + ltid_y_41809;
        bool binop_x_41887 = slt64(j_41880, i32_res_27566);
        bool binop_y_41888 = slt64(gtid_41882, m_27551);
        bool cond_41889 = binop_x_41887 && binop_y_41888;
        float pre_41890;
        
        if (cond_41889) {
            float x_41891 = ((__global
                              float *) defunc_3_map_res_mem_43310)[gtid_41882 *
                                                                   i32_res_27566 +
                                                                   j_41880];
            
            pre_41890 = x_41891;
        } else {
            pre_41890 = 0.0F;
        }
        ((__local float *) mem_43358)[ltid_y_41809 * tile_sizze_41657 +
                                      ltid_x_41807] = pre_41890;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41842 = sext_i32_i64(ltid_pre_44437);
        int64_t ltid_x_41840 = sext_i32_i64(ltid_pre_44438);
        int32_t ltid_flat_41841 = local_tid_44433;
        int64_t gtid_41896 = binop_x_41764 + ltid_y_41842;
        int64_t gtid_41898 = binop_x_41779 + ltid_x_41840;
        float acc_41901 = accs_mem_43354[(int64_t) 0];
        bool binop_x_41905 = slt64(gtid_41896, m_27551);
        bool binop_y_41906 = slt64(gtid_41898, i32_res_27566);
        bool cond_41907 = binop_x_41905 && binop_y_41906;
        float acc_41908;
        
        if (cond_41907) {
            float x_41909;
            float redout_42804 = acc_41901;
            
            for (int64_t i_42805 = 0; i_42805 < residual_input_41805;
                 i_42805++) {
                float x_41913 = ((__local float *) mem_43358)[ltid_y_41842 *
                                                              tile_sizze_41657 +
                                                              i_42805];
                int64_t slice_42832 = binop_x_41879 + i_42805;
                float x_41914 = ((__global float *) mem_43339)[slice_42832 *
                                                               (i32_res_27566 *
                                                                m_27551) +
                                                               gtid_41896 *
                                                               i32_res_27566 +
                                                               gtid_41898];
                float defunc_1_f_res_41915 = x_41913 * x_41914;
                float defunc_1_op_res_41912 = defunc_1_f_res_41915 +
                      redout_42804;
                float redout_tmp_44442 = defunc_1_op_res_41912;
                
                redout_42804 = redout_tmp_44442;
            }
            x_41909 = redout_42804;
            acc_41908 = x_41909;
        } else {
            acc_41908 = acc_41901;
        }
        mem_43362[(int64_t) 0] = acc_41908;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43878[(int64_t) 0] = mem_43362[(int64_t) 0];
    }
    
    int64_t thread_out_index_44443 = gid_x_41654 * tile_sizze_41657 +
            sext_i32_i64(ltid_pre_44437);
    int64_t thread_out_index_44444 = gid_y_41655 * tile_sizze_41657 +
            sext_i32_i64(ltid_pre_44438);
    
    if (slt64(thread_out_index_44443, m_27551) && slt64(thread_out_index_44444,
                                                        i32_res_27566)) {
        ((__global float *) mem_43366)[thread_out_index_44443 * i32_res_27566 +
                                       thread_out_index_44444] =
            mem_43878[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41657
}
__kernel void mainDetailedzisegmap_intragroup_41954(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43418_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43416_backing_aligned_1,
                                                    int64_t N_27550,
                                                    int64_t m_27551,
                                                    int64_t i32_res_27566,
                                                    int64_t gridDim_x_41948,
                                                    int64_t full_tiles_41979,
                                                    int64_t kk_42182, __global
                                                    unsigned char *defunc_4_map_res_mem_43376,
                                                    __global
                                                    unsigned char *mem_43400,
                                                    __global
                                                    unsigned char *mem_43590)
{
    #define Ty_41935 (mainDetailedziTy_41932)
    #define Ry_41936 (mainDetailedziRy_41934)
    #define Tx_41937 (mainDetailedziTx_41931)
    #define Rx_41938 (mainDetailedziRx_41933)
    #define Tk_41939 (mainDetailedziTk_41930)
    #define tk_div_tx_41940 (sdiv_up64(mainDetailedziTk_41930, mainDetailedziTx_41931))
    #define tk_div_ty_41941 (sdiv_up64(mainDetailedziTk_41930, mainDetailedziTy_41932))
    #define TxRx_41942 (mainDetailedziTx_41931 * mainDetailedziRx_41933)
    #define TyRy_41943 (mainDetailedziTy_41932 * mainDetailedziRy_41934)
    #define a_loc_szz_41945 (mainDetailedziTk_41930 * (mainDetailedziTy_41932 * mainDetailedziRy_41934))
    #define b_loc_szz_41947 (mainDetailedziRx_41933 * (mainDetailedziTx_41931 * mainDetailedziTk_41930))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43418_backing_1 = (__local volatile
                                                           char *) mem_43418_backing_aligned_0;
    __local volatile char *restrict mem_43416_backing_0 = (__local volatile
                                                           char *) mem_43416_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44520;
    int32_t local_tid_44521;
    int64_t group_sizze_44524;
    int32_t wave_sizze_44523;
    int32_t group_tid_44522;
    
    global_tid_44520 = get_global_id(0);
    local_tid_44521 = get_local_id(0);
    group_sizze_44524 = get_local_size(0);
    wave_sizze_44523 = LOCKSTEP_WIDTH;
    group_tid_44522 = get_group_id(0);
    
    int32_t gid_flat_41954;
    
    gid_flat_41954 = group_tid_44522;
    
    int32_t ltid_pre_44525;
    
    ltid_pre_44525 = squot32(local_tid_44521, sext_i64_i32(Tx_41937));
    
    int32_t ltid_pre_44526;
    
    ltid_pre_44526 = local_tid_44521 - squot32(local_tid_44521,
                                               sext_i64_i32(Tx_41937)) *
        sext_i64_i32(Tx_41937);
    
    int64_t gid_y_41953;
    
    gid_y_41953 = squot64(sext_i32_i64(group_tid_44522), gridDim_x_41948);
    
    int64_t gid_x_41952;
    
    gid_x_41952 = sext_i32_i64(group_tid_44522) -
        squot64(sext_i32_i64(group_tid_44522), gridDim_x_41948) *
        gridDim_x_41948;
    
    int64_t iii_41955;
    
    iii_41955 = TyRy_41943 * gid_y_41953;
    
    int64_t jjj_41956 = TxRx_41942 * gid_x_41952;
    float mem_43414[Ry_41936 * Rx_41938];
    int64_t ltid_y_41959 = sext_i32_i64(ltid_pre_44525);
    int64_t ltid_x_41957 = sext_i32_i64(ltid_pre_44526);
    int32_t ltid_flat_41958 = local_tid_44521;
    float mem_43405[Ry_41936 * Rx_41938];
    
    for (int64_t i_41970 = 0; i_41970 < Ry_41936; i_41970++) {
        for (int64_t i_41973 = 0; i_41973 < Rx_41938; i_41973++) {
            mem_43405[i_41970 * Rx_41938 + i_41973] = 0.0F;
        }
    }
    for (int64_t i_44529 = 0; i_44529 < Ry_41936; i_44529++) {
        for (int64_t i_44530 = 0; i_44530 < Rx_41938; i_44530++) {
            mem_43414[i_44529 * Rx_41938 + i_44530] = mem_43405[i_44529 *
                                                                Rx_41938 +
                                                                i_44530];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43416;
    
    mem_43416 = (__local char *) mem_43416_backing_0;
    
    __local char *mem_43418;
    
    mem_43418 = (__local char *) mem_43418_backing_1;
    
    float mem_43489[Ry_41936];
    float mem_43493[Rx_41938];
    float loop_mem_43505[Ry_41936 * Rx_41938];
    float mem_param_43419[Ry_41936 * Rx_41938];
    
    for (int32_t i_2 = 0; i_2 < Ry_41936 * Rx_41938; i_2++)
        mem_param_43419[i_2] = mem_43414[i_2];
    for (int64_t i_41980 = 0; i_41980 < full_tiles_41979; i_41980++) {
        int64_t kk_41984 = Tk_41939 * i_41980;
        
        for (int64_t i_41985 = 0; i_41985 < Ry_41936; i_41985++) {
            int64_t binop_y_42008 = Ty_41935 * i_41985;
            
            for (int64_t i_41987 = 0; i_41987 < tk_div_tx_41940; i_41987++) {
                int64_t binop_y_42006 = Tx_41937 * i_41987;
                int64_t ltid_x_41989 = sext_i32_i64(ltid_pre_44525);
                int64_t ltid_y_41990 = sext_i32_i64(ltid_pre_44526);
                int32_t ltid_flat_41991 = local_tid_44521;
                int64_t k_42007 = ltid_y_41990 + binop_y_42006;
                int64_t i_42009 = ltid_x_41989 + binop_y_42008;
                int64_t gtid_42010 = iii_41955 + i_42009;
                int64_t A_col_idx_42011 = kk_41984 + k_42007;
                bool cond_42012 = slt64(gtid_42010, m_27551);
                float A_elem_42013;
                
                if (cond_42012) {
                    float A_elem_42015 = ((__global
                                           float *) defunc_4_map_res_mem_43376)[gtid_42010 *
                                                                                i32_res_27566 +
                                                                                A_col_idx_42011];
                    
                    A_elem_42013 = A_elem_42015;
                } else {
                    A_elem_42013 = 0.0F;
                }
                
                bool cond_42017 = slt64(k_42007, Tk_41939);
                int64_t a_loc_ind_42018;
                
                if (cond_42017) {
                    int64_t binop_y_42019 = Tk_41939 * i_42009;
                    int64_t loc_fi_42020 = k_42007 + binop_y_42019;
                    
                    a_loc_ind_42018 = loc_fi_42020;
                } else {
                    a_loc_ind_42018 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_42018) &&
                    slt64(a_loc_ind_42018, a_loc_szz_41945)) {
                    ((__local float *) mem_43416)[a_loc_ind_42018] =
                        A_elem_42013;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42025 = 0; i_42025 < tk_div_ty_41941; i_42025++) {
            int64_t binop_y_42046 = Ty_41935 * i_42025;
            
            for (int64_t i_42027 = 0; i_42027 < Rx_41938; i_42027++) {
                int64_t binop_y_42048 = Tx_41937 * i_42027;
                int64_t ltid_x_42029 = sext_i32_i64(ltid_pre_44525);
                int64_t ltid_y_42030 = sext_i32_i64(ltid_pre_44526);
                int32_t ltid_flat_42031 = local_tid_44521;
                int64_t k_42047 = ltid_x_42029 + binop_y_42046;
                int64_t j_42049 = ltid_y_42030 + binop_y_42048;
                int64_t gtid_42050 = jjj_41956 + j_42049;
                int64_t B_row_idx_42051 = kk_41984 + k_42047;
                bool cond_42052 = slt64(gtid_42050, N_27550);
                float B_elem_42053;
                
                if (cond_42052) {
                    float B_elem_42055 = ((__global
                                           float *) mem_43400)[B_row_idx_42051 *
                                                               N_27550 +
                                                               gtid_42050];
                    
                    B_elem_42053 = B_elem_42055;
                } else {
                    B_elem_42053 = 0.0F;
                }
                
                bool cond_42057 = slt64(k_42047, Tk_41939);
                int64_t b_loc_ind_42058;
                
                if (cond_42057) {
                    int64_t binop_y_42059 = TxRx_41942 * k_42047;
                    int64_t loc_fi_42060 = j_42049 + binop_y_42059;
                    
                    b_loc_ind_42058 = loc_fi_42060;
                } else {
                    b_loc_ind_42058 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_42058) &&
                    slt64(b_loc_ind_42058, b_loc_szz_41947)) {
                    ((__local float *) mem_43418)[b_loc_ind_42058] =
                        B_elem_42053;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43504[Ry_41936 * Rx_41938];
        float mem_param_43476[Ry_41936 * Rx_41938];
        
        for (int32_t i_3 = 0; i_3 < Ry_41936 * Rx_41938; i_3++)
            mem_param_43476[i_3] = mem_param_43419[i_3];
        for (int64_t i_42065 = 0; i_42065 < Tk_41939; i_42065++) {
            int64_t binop_y_42104 = TxRx_41942 * i_42065;
            int64_t ltid_y_42069 = sext_i32_i64(ltid_pre_44525);
            int64_t ltid_x_42067 = sext_i32_i64(ltid_pre_44526);
            int32_t ltid_flat_42068 = local_tid_44521;
            float mem_43479[Ry_41936];
            float mem_43481[Rx_41938];
            int64_t binop_x_42095 = Ry_41936 * ltid_y_42069;
            
            for (int64_t i_42093 = 0; i_42093 < Ry_41936; i_42093++) {
                int64_t binop_x_42096 = i_42093 + binop_x_42095;
                int64_t binop_y_42097 = Tk_41939 * binop_x_42096;
                int64_t a_loc_ind_42098 = i_42065 + binop_y_42097;
                
                for (int64_t i_44542 = 0; i_44542 < (int64_t) 1; i_44542++) {
                    mem_43479[i_42093 + i_44542] = ((__local
                                                     float *) mem_43416)[a_loc_ind_42098 +
                                                                         i_44542];
                }
            }
            
            int64_t binop_y_42106 = Rx_41938 * ltid_x_42067;
            
            for (int64_t i_42102 = 0; i_42102 < Rx_41938; i_42102++) {
                int64_t binop_x_42105 = i_42102 + binop_y_42104;
                int64_t b_loc_ind_42107 = binop_x_42105 + binop_y_42106;
                
                for (int64_t i_44544 = 0; i_44544 < (int64_t) 1; i_44544++) {
                    mem_43481[i_42102 + i_44544] = ((__local
                                                     float *) mem_43418)[b_loc_ind_42107 +
                                                                         i_44544];
                }
            }
            for (int64_t i_44545 = 0; i_44545 < Ry_41936; i_44545++) {
                mem_43489[i_44545] = mem_43479[i_44545];
            }
            for (int64_t i_44546 = 0; i_44546 < Rx_41938; i_44546++) {
                mem_43493[i_44546] = mem_43481[i_44546];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43503[Ry_41936 * Rx_41938];
            int64_t ltid_y_42114 = sext_i32_i64(ltid_pre_44525);
            int64_t ltid_x_42112 = sext_i32_i64(ltid_pre_44526);
            int32_t ltid_flat_42113 = local_tid_44521;
            int64_t binop_y_42155 = Ry_41936 * ltid_y_42114;
            int64_t binop_y_42159 = Rx_41938 * ltid_x_42112;
            
            for (int64_t i_42149 = 0; i_42149 < Ry_41936; i_42149++) {
                int64_t binop_x_42154 = iii_41955 + i_42149;
                int64_t cmpop_x_42156 = binop_x_42154 + binop_y_42155;
                bool binop_x_42157 = slt64(cmpop_x_42156, m_27551);
                
                for (int64_t i_42152 = 0; i_42152 < Rx_41938; i_42152++) {
                    int64_t binop_x_42158 = jjj_41956 + i_42152;
                    int64_t cmpop_x_42160 = binop_x_42158 + binop_y_42159;
                    bool binop_y_42161 = slt64(cmpop_x_42160, N_27550);
                    bool cond_42162 = binop_x_42157 && binop_y_42161;
                    
                    if (cond_42162) {
                        float a_42164 = mem_43489[i_42149];
                        float b_42165 = mem_43493[i_42152];
                        float c_42166 = mem_param_43476[i_42149 * Rx_41938 +
                                                        i_42152];
                        float defunc_1_f_res_42169 = a_42164 * b_42165;
                        float defunc_1_op_res_42173 = c_42166 +
                              defunc_1_f_res_42169;
                        
                        mem_param_43476[i_42149 * Rx_41938 + i_42152] =
                            defunc_1_op_res_42173;
                    }
                }
            }
            for (int64_t i_44549 = 0; i_44549 < Ry_41936; i_44549++) {
                for (int64_t i_44550 = 0; i_44550 < Rx_41938; i_44550++) {
                    mem_43503[i_44549 * Rx_41938 + i_44550] =
                        mem_param_43476[i_44549 * Rx_41938 + i_44550];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44539[Ry_41936 * Rx_41938];
            
            for (int32_t i_4 = 0; i_4 < Ry_41936 * Rx_41938; i_4++)
                mem_param_tmp_44539[i_4] = mem_43503[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41936 * Rx_41938; i_5++)
                mem_param_43476[i_5] = mem_param_tmp_44539[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41936 * Rx_41938; i_6++)
            loop_mem_43504[i_6] = mem_param_43476[i_6];
        
        float mem_param_tmp_44531[Ry_41936 * Rx_41938];
        
        for (int32_t i_7 = 0; i_7 < Ry_41936 * Rx_41938; i_7++)
            mem_param_tmp_44531[i_7] = loop_mem_43504[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41936 * Rx_41938; i_8++)
            mem_param_43419[i_8] = mem_param_tmp_44531[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41936 * Rx_41938; i_9++)
        loop_mem_43505[i_9] = mem_param_43419[i_9];
    for (int64_t i_42183 = 0; i_42183 < Ry_41936; i_42183++) {
        int64_t binop_y_42208 = Ty_41935 * i_42183;
        
        for (int64_t i_42185 = 0; i_42185 < tk_div_tx_41940; i_42185++) {
            int64_t binop_y_42206 = Tx_41937 * i_42185;
            int64_t ltid_x_42187 = sext_i32_i64(ltid_pre_44525);
            int64_t ltid_y_42188 = sext_i32_i64(ltid_pre_44526);
            int32_t ltid_flat_42189 = local_tid_44521;
            int64_t k_42207 = ltid_y_42188 + binop_y_42206;
            int64_t i_42209 = ltid_x_42187 + binop_y_42208;
            int64_t gtid_42210 = iii_41955 + i_42209;
            int64_t A_col_idx_42211 = kk_42182 + k_42207;
            bool binop_x_42212 = slt64(gtid_42210, m_27551);
            bool binop_y_42213 = slt64(A_col_idx_42211, i32_res_27566);
            bool cond_42214 = binop_x_42212 && binop_y_42213;
            float A_elem_42215;
            
            if (cond_42214) {
                float A_elem_42217 = ((__global
                                       float *) defunc_4_map_res_mem_43376)[gtid_42210 *
                                                                            i32_res_27566 +
                                                                            A_col_idx_42211];
                
                A_elem_42215 = A_elem_42217;
            } else {
                A_elem_42215 = 0.0F;
            }
            
            bool cond_42219 = slt64(k_42207, Tk_41939);
            int64_t a_loc_ind_42220;
            
            if (cond_42219) {
                int64_t binop_y_42221 = Tk_41939 * i_42209;
                int64_t loc_fi_42222 = k_42207 + binop_y_42221;
                
                a_loc_ind_42220 = loc_fi_42222;
            } else {
                a_loc_ind_42220 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_42220) && slt64(a_loc_ind_42220,
                                                             a_loc_szz_41945)) {
                ((__local float *) mem_43416)[a_loc_ind_42220] = A_elem_42215;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42227 = 0; i_42227 < tk_div_ty_41941; i_42227++) {
        int64_t binop_y_42250 = Ty_41935 * i_42227;
        
        for (int64_t i_42229 = 0; i_42229 < Rx_41938; i_42229++) {
            int64_t binop_y_42252 = Tx_41937 * i_42229;
            int64_t ltid_x_42231 = sext_i32_i64(ltid_pre_44525);
            int64_t ltid_y_42232 = sext_i32_i64(ltid_pre_44526);
            int32_t ltid_flat_42233 = local_tid_44521;
            int64_t k_42251 = ltid_x_42231 + binop_y_42250;
            int64_t j_42253 = ltid_y_42232 + binop_y_42252;
            int64_t gtid_42254 = jjj_41956 + j_42253;
            int64_t B_row_idx_42255 = kk_42182 + k_42251;
            bool binop_x_42256 = slt64(gtid_42254, N_27550);
            bool binop_y_42257 = slt64(B_row_idx_42255, i32_res_27566);
            bool cond_42258 = binop_x_42256 && binop_y_42257;
            float B_elem_42259;
            
            if (cond_42258) {
                float B_elem_42261 = ((__global
                                       float *) mem_43400)[B_row_idx_42255 *
                                                           N_27550 +
                                                           gtid_42254];
                
                B_elem_42259 = B_elem_42261;
            } else {
                B_elem_42259 = 0.0F;
            }
            
            bool cond_42263 = slt64(k_42251, Tk_41939);
            int64_t b_loc_ind_42264;
            
            if (cond_42263) {
                int64_t binop_y_42265 = TxRx_41942 * k_42251;
                int64_t loc_fi_42266 = j_42253 + binop_y_42265;
                
                b_loc_ind_42264 = loc_fi_42266;
            } else {
                b_loc_ind_42264 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_42264) && slt64(b_loc_ind_42264,
                                                             b_loc_szz_41947)) {
                ((__local float *) mem_43418)[b_loc_ind_42264] = B_elem_42259;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43571[Ry_41936];
    float mem_43575[Rx_41938];
    float mem_43585[Ry_41936 * Rx_41938];
    float loop_mem_43587[Ry_41936 * Rx_41938];
    float mem_param_43558[Ry_41936 * Rx_41938];
    
    for (int32_t i_10 = 0; i_10 < Ry_41936 * Rx_41938; i_10++)
        mem_param_43558[i_10] = loop_mem_43505[i_10];
    for (int64_t i_42271 = 0; i_42271 < Tk_41939; i_42271++) {
        int64_t cmpop_x_42273 = kk_42182 + i_42271;
        bool cond_42274 = slt64(cmpop_x_42273, i32_res_27566);
        float mem_43894[Ry_41936 * Rx_41938];
        
        if (cond_42274) {
            int64_t binop_y_42312 = TxRx_41942 * i_42271;
            int64_t bytes_43560 = (int64_t) 4 * Ry_41936;
            int64_t bytes_43562 = (int64_t) 4 * Rx_41938;
            int64_t ltid_y_42277 = sext_i32_i64(ltid_pre_44525);
            int64_t ltid_x_42275 = sext_i32_i64(ltid_pre_44526);
            int32_t ltid_flat_42276 = local_tid_44521;
            float mem_43561[Ry_41936];
            float mem_43563[Rx_41938];
            int64_t binop_x_42303 = Ry_41936 * ltid_y_42277;
            
            for (int64_t i_42301 = 0; i_42301 < Ry_41936; i_42301++) {
                int64_t binop_x_42304 = i_42301 + binop_x_42303;
                int64_t binop_y_42305 = Tk_41939 * binop_x_42304;
                int64_t a_loc_ind_42306 = i_42271 + binop_y_42305;
                
                for (int64_t i_44558 = 0; i_44558 < (int64_t) 1; i_44558++) {
                    mem_43561[i_42301 + i_44558] = ((__local
                                                     float *) mem_43416)[a_loc_ind_42306 +
                                                                         i_44558];
                }
            }
            
            int64_t binop_y_42314 = Rx_41938 * ltid_x_42275;
            
            for (int64_t i_42310 = 0; i_42310 < Rx_41938; i_42310++) {
                int64_t binop_x_42313 = i_42310 + binop_y_42312;
                int64_t b_loc_ind_42315 = binop_x_42313 + binop_y_42314;
                
                for (int64_t i_44560 = 0; i_44560 < (int64_t) 1; i_44560++) {
                    mem_43563[i_42310 + i_44560] = ((__local
                                                     float *) mem_43418)[b_loc_ind_42315 +
                                                                         i_44560];
                }
            }
            for (int64_t i_44561 = 0; i_44561 < Ry_41936; i_44561++) {
                mem_43571[i_44561] = mem_43561[i_44561];
            }
            for (int64_t i_44562 = 0; i_44562 < Rx_41938; i_44562++) {
                mem_43575[i_44562] = mem_43563[i_44562];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42322 = sext_i32_i64(ltid_pre_44525);
            int64_t ltid_x_42320 = sext_i32_i64(ltid_pre_44526);
            int32_t ltid_flat_42321 = local_tid_44521;
            int64_t binop_y_42363 = Ry_41936 * ltid_y_42322;
            int64_t binop_y_42367 = Rx_41938 * ltid_x_42320;
            
            for (int64_t i_42357 = 0; i_42357 < Ry_41936; i_42357++) {
                int64_t binop_x_42362 = iii_41955 + i_42357;
                int64_t cmpop_x_42364 = binop_x_42362 + binop_y_42363;
                bool binop_x_42365 = slt64(cmpop_x_42364, m_27551);
                
                for (int64_t i_42360 = 0; i_42360 < Rx_41938; i_42360++) {
                    int64_t binop_x_42366 = jjj_41956 + i_42360;
                    int64_t cmpop_x_42368 = binop_x_42366 + binop_y_42367;
                    bool binop_y_42369 = slt64(cmpop_x_42368, N_27550);
                    bool cond_42370 = binop_x_42365 && binop_y_42369;
                    
                    if (cond_42370) {
                        float a_42372 = mem_43571[i_42357];
                        float b_42373 = mem_43575[i_42360];
                        float c_42374 = mem_param_43558[i_42357 * Rx_41938 +
                                                        i_42360];
                        float defunc_1_f_res_42377 = a_42372 * b_42373;
                        float defunc_1_op_res_42381 = c_42374 +
                              defunc_1_f_res_42377;
                        
                        mem_param_43558[i_42357 * Rx_41938 + i_42360] =
                            defunc_1_op_res_42381;
                    }
                }
            }
            for (int64_t i_44565 = 0; i_44565 < Ry_41936; i_44565++) {
                for (int64_t i_44566 = 0; i_44566 < Rx_41938; i_44566++) {
                    mem_43585[i_44565 * Rx_41938 + i_44566] =
                        mem_param_43558[i_44565 * Rx_41938 + i_44566];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44567 = 0; i_44567 < Ry_41936; i_44567++) {
                for (int64_t i_44568 = 0; i_44568 < Rx_41938; i_44568++) {
                    mem_43894[i_44567 * Rx_41938 + i_44568] =
                        mem_43585[i_44567 * Rx_41938 + i_44568];
                }
            }
        } else {
            for (int64_t i_44569 = 0; i_44569 < Ry_41936; i_44569++) {
                for (int64_t i_44570 = 0; i_44570 < Rx_41938; i_44570++) {
                    mem_43894[i_44569 * Rx_41938 + i_44570] =
                        mem_param_43558[i_44569 * Rx_41938 + i_44570];
                }
            }
        }
        
        float mem_param_tmp_44555[Ry_41936 * Rx_41938];
        
        for (int32_t i_11 = 0; i_11 < Ry_41936 * Rx_41938; i_11++)
            mem_param_tmp_44555[i_11] = mem_43894[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41936 * Rx_41938; i_12++)
            mem_param_43558[i_12] = mem_param_tmp_44555[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41936 * Rx_41938; i_13++)
        loop_mem_43587[i_13] = mem_param_43558[i_13];
    
    int64_t reg_tile_i_44571 = squot64(sext_i32_i64(local_tid_44521), Tx_41937);
    int64_t reg_tile_i_44572 = sext_i32_i64(local_tid_44521) -
            squot64(sext_i32_i64(local_tid_44521), Tx_41937) * Tx_41937;
    int64_t tile_dim_start_44573 = Ry_41936 * (Ty_41935 * gid_y_41953 +
                                               reg_tile_i_44571);
    int64_t tile_dim_start_44574 = Rx_41938 * (Tx_41937 * gid_x_41952 +
                                               reg_tile_i_44572);
    
    for (int64_t nest_i_44575 = 0; nest_i_44575 < Ry_41936; nest_i_44575++) {
        for (int64_t nest_i_44576 = 0; nest_i_44576 < Rx_41938;
             nest_i_44576++) {
            if (slt64(tile_dim_start_44573 + nest_i_44575, m_27551) &&
                slt64(tile_dim_start_44574 + nest_i_44576, N_27550)) {
                ((__global float *) mem_43590)[(tile_dim_start_44573 +
                                                nest_i_44575) * N_27550 +
                                               (tile_dim_start_44574 +
                                                nest_i_44576)] =
                    loop_mem_43587[nest_i_44575 * Rx_41938 + nest_i_44576];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41935
    #undef Ry_41936
    #undef Tx_41937
    #undef Rx_41938
    #undef Tk_41939
    #undef tk_div_tx_41940
    #undef tk_div_ty_41941
    #undef TxRx_41942
    #undef TyRy_41943
    #undef a_loc_szz_41945
    #undef b_loc_szz_41947
}
__kernel void mainDetailedzisegmap_intragroup_42388(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43663_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43656_backing_aligned_1,
                                                    int64_t m_27551,
                                                    int32_t n_27554,
                                                    float hfrac_27556,
                                                    int64_t i32_res_27560,
                                                    int32_t k2p2_27562,
                                                    int64_t num_whole_tiles_42410,
                                                    int64_t residual_input_42499,
                                                    unsigned char cond_42500,
                                                    __global
                                                    unsigned char *mem_43642,
                                                    __global
                                                    unsigned char *mem_43645,
                                                    __global
                                                    unsigned char *mem_43676,
                                                    __global
                                                    unsigned char *mem_43678,
                                                    __global
                                                    unsigned char *mem_43680)
{
    #define segmap_group_sizze_31887 (mainDetailedzisegmap_group_sizze_31856)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43663_backing_5 = (__local volatile
                                                           char *) mem_43663_backing_aligned_0;
    __local volatile char *restrict mem_43656_backing_0 = (__local volatile
                                                           char *) mem_43656_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44744;
    int32_t local_tid_44745;
    int64_t group_sizze_44748;
    int32_t wave_sizze_44747;
    int32_t group_tid_44746;
    
    global_tid_44744 = get_global_id(0);
    local_tid_44745 = get_local_id(0);
    group_sizze_44748 = get_local_size(0);
    wave_sizze_44747 = LOCKSTEP_WIDTH;
    group_tid_44746 = get_group_id(0);
    
    int32_t gid_flat_42388;
    
    gid_flat_42388 = group_tid_44746;
    
    int32_t ltid_pre_44749;
    
    ltid_pre_44749 = local_tid_44745;
    
    int64_t gid_42387;
    
    gid_42387 = sext_i32_i64(group_tid_44746);
    
    int64_t binop_x_42395;
    
    binop_x_42395 = segmap_group_sizze_31887 * gid_42387;
    
    int32_t mem_43649[1];
    int64_t ltid_42389 = sext_i32_i64(ltid_pre_44749);
    int32_t ltid_flat_42390 = local_tid_44745;
    int64_t gtid_42396 = ltid_42389 + binop_x_42395;
    bool cond_42397 = slt64(gtid_42396, m_27551);
    int32_t pre_42398;
    
    if (cond_42397) {
        int32_t defunc_0_f_res_42400;
        int32_t redout_42812 = 0;
        
        for (int32_t i_42834 = 0; i_42834 < n_27554; i_42834++) {
            int64_t i_42813 = sext_i32_i64(i_42834);
            float x_42404 = ((__global float *) mem_43642)[i_42813 * m_27551 +
                                                           gtid_42396];
            bool isnan_res_42405;
            
            isnan_res_42405 = futrts_isnan32(x_42404);
            
            bool cond_42406 = !isnan_res_42405;
            int32_t defunc_0_f_res_42407 = btoi_bool_i32(cond_42406);
            int32_t defunc_1_op_res_42403 = add32(defunc_0_f_res_42407,
                                                  redout_42812);
            int32_t redout_tmp_44750 = defunc_1_op_res_42403;
            
            redout_42812 = redout_tmp_44750;
        }
        defunc_0_f_res_42400 = redout_42812;
        pre_42398 = defunc_0_f_res_42400;
    } else {
        pre_42398 = 0;
    }
    mem_43649[(int64_t) 0] = pre_42398;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43652[1];
    int64_t ltid_42411 = sext_i32_i64(ltid_pre_44749);
    int32_t ltid_flat_42412 = local_tid_44745;
    
    mem_43652[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43656;
    
    mem_43656 = (__local char *) mem_43656_backing_0;
    
    float accs_mem_43660[1];
    float mem_param_43653[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43653[i_1] = mem_43652[i_1];
    for (int64_t tile_id_42418 = 0; tile_id_42418 < num_whole_tiles_42410;
         tile_id_42418++) {
        int64_t binop_x_42463 = segmap_group_sizze_31887 * tile_id_42418;
        int64_t ltid_42419 = sext_i32_i64(ltid_pre_44749);
        int32_t ltid_flat_42420 = local_tid_44745;
        int64_t j_42464 = ltid_42419 + binop_x_42463;
        bool cond_42468 = slt64(j_42464, i32_res_27560);
        int32_t pre_42469;
        
        if (cond_42468) {
            int32_t index_primexp_42770 = sext_i64_i32(j_42464);
            
            pre_42469 = index_primexp_42770;
        } else {
            pre_42469 = 0;
        }
        ((__local int32_t *) mem_43656)[ltid_42419] = pre_42469;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43659[1];
        int64_t ltid_42438 = sext_i32_i64(ltid_pre_44749);
        int32_t ltid_flat_42439 = local_tid_44745;
        int64_t gtid_42474 = binop_x_42395 + ltid_42438;
        float acc_42476 = mem_param_43653[(int64_t) 0];
        bool cond_42477 = slt64(gtid_42474, m_27551);
        float acc_42478;
        
        if (cond_42477) {
            int32_t defunc_0_f_res_42475 = mem_43649[(int64_t) 0];
            float x_42479;
            float redout_42814 = acc_42476;
            
            for (int64_t i_42815 = 0; i_42815 < segmap_group_sizze_31887;
                 i_42815++) {
                int32_t x_42483 = ((__local int32_t *) mem_43656)[i_42815];
                bool cond_42484 = slt32(x_42483, defunc_0_f_res_42475);
                float defunc_0_f_res_42485;
                
                if (cond_42484) {
                    int64_t i_42486 = sext_i32_i64(x_42483);
                    float defunc_0_f_res_t_res_42487 = ((__global
                                                         float *) mem_43645)[i_42486 *
                                                                             m_27551 +
                                                                             gtid_42474];
                    
                    defunc_0_f_res_42485 = defunc_0_f_res_t_res_42487;
                } else {
                    defunc_0_f_res_42485 = 0.0F;
                }
                
                float defunc_0_f_res_42488 = defunc_0_f_res_42485 *
                      defunc_0_f_res_42485;
                float defunc_1_op_res_42482 = defunc_0_f_res_42488 +
                      redout_42814;
                float redout_tmp_44753 = defunc_1_op_res_42482;
                
                redout_42814 = redout_tmp_44753;
            }
            x_42479 = redout_42814;
            acc_42478 = x_42479;
        } else {
            acc_42478 = acc_42476;
        }
        mem_43659[(int64_t) 0] = acc_42478;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44751[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44751[i_2] = mem_43659[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43653[i_3] = mem_param_tmp_44751[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43660[i_4] = mem_param_43653[i_4];
    
    __local char *mem_43663;
    
    mem_43663 = (__local char *) mem_43663_backing_5;
    
    float mem_43666[1];
    float mem_43907[1];
    
    if (cond_42500) {
        mem_43907[(int64_t) 0] = accs_mem_43660[(int64_t) 0];
    } else {
        int64_t binop_x_42510 = segmap_group_sizze_31887 *
                num_whole_tiles_42410;
        int64_t ltid_42501 = sext_i32_i64(ltid_pre_44749);
        int32_t ltid_flat_42502 = local_tid_44745;
        int64_t j_42511 = ltid_42501 + binop_x_42510;
        bool cond_42515 = slt64(j_42511, i32_res_27560);
        int32_t pre_42516;
        
        if (cond_42515) {
            int32_t index_primexp_42771 = sext_i64_i32(j_42511);
            
            pre_42516 = index_primexp_42771;
        } else {
            pre_42516 = 0;
        }
        ((__local int32_t *) mem_43663)[ltid_42501] = pre_42516;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42521 = sext_i32_i64(ltid_pre_44749);
        int32_t ltid_flat_42522 = local_tid_44745;
        int64_t gtid_42529 = binop_x_42395 + ltid_42521;
        float acc_42531 = accs_mem_43660[(int64_t) 0];
        bool cond_42532 = slt64(gtid_42529, m_27551);
        float acc_42533;
        
        if (cond_42532) {
            int32_t defunc_0_f_res_42530 = mem_43649[(int64_t) 0];
            float x_42534;
            float redout_42816 = acc_42531;
            
            for (int64_t i_42817 = 0; i_42817 < residual_input_42499;
                 i_42817++) {
                int32_t x_42538 = ((__local int32_t *) mem_43663)[i_42817];
                bool cond_42539 = slt32(x_42538, defunc_0_f_res_42530);
                float defunc_0_f_res_42540;
                
                if (cond_42539) {
                    int64_t i_42541 = sext_i32_i64(x_42538);
                    float defunc_0_f_res_t_res_42542 = ((__global
                                                         float *) mem_43645)[i_42541 *
                                                                             m_27551 +
                                                                             gtid_42529];
                    
                    defunc_0_f_res_42540 = defunc_0_f_res_t_res_42542;
                } else {
                    defunc_0_f_res_42540 = 0.0F;
                }
                
                float defunc_0_f_res_42543 = defunc_0_f_res_42540 *
                      defunc_0_f_res_42540;
                float defunc_1_op_res_42537 = defunc_0_f_res_42543 +
                      redout_42816;
                float redout_tmp_44754 = defunc_1_op_res_42537;
                
                redout_42816 = redout_tmp_44754;
            }
            x_42534 = redout_42816;
            acc_42533 = x_42534;
        } else {
            acc_42533 = acc_42531;
        }
        mem_43666[(int64_t) 0] = acc_42533;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43907[(int64_t) 0] = mem_43666[(int64_t) 0];
    }
    
    int32_t mem_43670[1];
    int32_t mem_43672[1];
    float mem_43674[1];
    int64_t ltid_42546 = sext_i32_i64(ltid_pre_44749);
    int32_t ltid_flat_42547 = local_tid_44745;
    int64_t gtid_42557 = binop_x_42395 + ltid_42546;
    bool cond_42559 = slt64(gtid_42557, m_27551);
    int32_t postlude_42560;
    int32_t postlude_42561;
    float postlude_42562;
    
    if (cond_42559) {
        float defunc_0_f_res_42558 = mem_43907[(int64_t) 0];
        int32_t defunc_0_f_res_42563 = mem_43649[(int64_t) 0];
        int32_t r32_arg_42564 = sub32(defunc_0_f_res_42563, k2p2_27562);
        float i32_res_42565 = sitofp_i32_f32(r32_arg_42564);
        float sqrt_arg_42566 = defunc_0_f_res_42558 / i32_res_42565;
        float sqrt_res_42567;
        
        sqrt_res_42567 = futrts_sqrt32(sqrt_arg_42566);
        
        float i32_res_42568 = sitofp_i32_f32(defunc_0_f_res_42563);
        float t32_arg_42569 = hfrac_27556 * i32_res_42568;
        int32_t f32_res_42570 = fptosi_f32_i32(t32_arg_42569);
        
        postlude_42560 = f32_res_42570;
        postlude_42561 = defunc_0_f_res_42563;
        postlude_42562 = sqrt_res_42567;
    } else {
        postlude_42560 = 0;
        postlude_42561 = 0;
        postlude_42562 = 0.0F;
    }
    mem_43670[(int64_t) 0] = postlude_42560;
    mem_43672[(int64_t) 0] = postlude_42561;
    mem_43674[(int64_t) 0] = postlude_42562;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44745) + segmap_group_sizze_31887 *
              sext_i32_i64(group_tid_44746), m_27551)) {
        ((__global int32_t *) mem_43676)[sext_i32_i64(local_tid_44745) +
                                         segmap_group_sizze_31887 *
                                         sext_i32_i64(group_tid_44746)] =
            mem_43670[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44745) + segmap_group_sizze_31887 *
              sext_i32_i64(group_tid_44746), m_27551)) {
        ((__global int32_t *) mem_43678)[sext_i32_i64(local_tid_44745) +
                                         segmap_group_sizze_31887 *
                                         sext_i32_i64(group_tid_44746)] =
            mem_43672[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44745) + segmap_group_sizze_31887 *
              sext_i32_i64(group_tid_44746), m_27551)) {
        ((__global float *) mem_43680)[sext_i32_i64(local_tid_44745) +
                                       segmap_group_sizze_31887 *
                                       sext_i32_i64(group_tid_44746)] =
            mem_43674[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_31887
}
__kernel void mainDetailedzisegmap_intragroup_42578(__global
                                                    int *global_failure,
                                                    __local volatile
                                                    int64_t *mem_43729_backing_aligned_0,
                                                    __local volatile
                                                    int64_t *mem_43722_backing_aligned_1,
                                                    int64_t N_27550,
                                                    int64_t m_27551,
                                                    int64_t i32_res_27921,
                                                    int64_t num_whole_tiles_42598,
                                                    int64_t residual_input_42697,
                                                    unsigned char cond_42698,
                                                    __global
                                                    unsigned char *defunc_4_map_res_mem_43638,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43704,
                                                    __global
                                                    unsigned char *defunc_3_map_res_mem_43705,
                                                    __global
                                                    unsigned char *mem_43735)
{
    #define segmap_group_sizze_32124 (mainDetailedzisegmap_group_sizze_32105)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43729_backing_5 = (__local volatile
                                                           char *) mem_43729_backing_aligned_0;
    __local volatile char *restrict mem_43722_backing_0 = (__local volatile
                                                           char *) mem_43722_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44928;
    int32_t local_tid_44929;
    int64_t group_sizze_44932;
    int32_t wave_sizze_44931;
    int32_t group_tid_44930;
    
    global_tid_44928 = get_global_id(0);
    local_tid_44929 = get_local_id(0);
    group_sizze_44932 = get_local_size(0);
    wave_sizze_44931 = LOCKSTEP_WIDTH;
    group_tid_44930 = get_group_id(0);
    
    int32_t gid_flat_42578;
    
    gid_flat_42578 = group_tid_44930;
    
    int32_t ltid_pre_44933;
    
    ltid_pre_44933 = local_tid_44929;
    
    int64_t gid_42577;
    
    gid_42577 = sext_i32_i64(group_tid_44930);
    
    int64_t binop_x_42587;
    
    binop_x_42587 = segmap_group_sizze_32124 * gid_42577;
    
    int32_t mem_43713[1];
    int32_t mem_43715[1];
    int64_t ltid_42579 = sext_i32_i64(ltid_pre_44933);
    int32_t ltid_flat_42580 = local_tid_44929;
    int64_t gtid_42588 = ltid_42579 + binop_x_42587;
    bool cond_42589 = slt64(gtid_42588, m_27551);
    int32_t pre_42590;
    int32_t pre_42591;
    
    if (cond_42589) {
        int32_t x_42592 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_42588];
        int32_t x_42593 = ((__global
                            int32_t *) defunc_3_map_res_mem_43704)[gtid_42588];
        
        pre_42590 = x_42592;
        pre_42591 = x_42593;
    } else {
        pre_42590 = 0;
        pre_42591 = 0;
    }
    mem_43713[(int64_t) 0] = pre_42590;
    mem_43715[(int64_t) 0] = pre_42591;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43718[1];
    int64_t ltid_42599 = sext_i32_i64(ltid_pre_44933);
    int32_t ltid_flat_42600 = local_tid_44929;
    
    mem_43718[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43722;
    
    mem_43722 = (__local char *) mem_43722_backing_0;
    
    float accs_mem_43726[1];
    float mem_param_43719[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43719[i_1] = mem_43718[i_1];
    for (int64_t tile_id_42606 = 0; tile_id_42606 < num_whole_tiles_42598;
         tile_id_42606++) {
        int64_t binop_x_42655 = segmap_group_sizze_32124 * tile_id_42606;
        int64_t ltid_42607 = sext_i32_i64(ltid_pre_44933);
        int32_t ltid_flat_42608 = local_tid_44929;
        int64_t j_42656 = ltid_42607 + binop_x_42655;
        bool cond_42661 = slt64(j_42656, i32_res_27921);
        int32_t pre_42662;
        
        if (cond_42661) {
            int32_t index_primexp_42772 = sext_i64_i32(j_42656);
            int32_t tile_elem_42663 = index_primexp_42772;
            
            pre_42662 = tile_elem_42663;
        } else {
            pre_42662 = 0;
        }
        ((__local int32_t *) mem_43722)[ltid_42607] = pre_42662;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43725[1];
        int64_t ltid_42627 = sext_i32_i64(ltid_pre_44933);
        int32_t ltid_flat_42628 = local_tid_44929;
        int64_t gtid_42667 = binop_x_42587 + ltid_42627;
        float acc_42670 = mem_param_43719[(int64_t) 0];
        bool cond_42671 = slt64(gtid_42667, m_27551);
        float acc_42672;
        
        if (cond_42671) {
            int32_t x_42668 = mem_43713[(int64_t) 0];
            int32_t x_42669 = mem_43715[(int64_t) 0];
            float x_42673;
            float redout_42818 = acc_42670;
            
            for (int64_t i_42819 = 0; i_42819 < segmap_group_sizze_32124;
                 i_42819++) {
                int32_t x_42677 = ((__local int32_t *) mem_43722)[i_42819];
                bool cond_42678 = slt32(x_42677, x_42669);
                float defunc_0_f_res_42679;
                
                if (cond_42678) {
                    int32_t x_42680 = add32(x_42668, x_42677);
                    int32_t x_42681 = sub32(x_42680, x_42669);
                    int32_t i_42682 = add32(1, x_42681);
                    int64_t i_42683 = sext_i32_i64(i_42682);
                    float defunc_0_f_res_t_res_42684 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_42667 *
                                                                                              N_27550 +
                                                                                              i_42683];
                    
                    defunc_0_f_res_42679 = defunc_0_f_res_t_res_42684;
                } else {
                    defunc_0_f_res_42679 = 0.0F;
                }
                
                float defunc_1_op_res_42676 = defunc_0_f_res_42679 +
                      redout_42818;
                float redout_tmp_44936 = defunc_1_op_res_42676;
                
                redout_42818 = redout_tmp_44936;
            }
            x_42673 = redout_42818;
            acc_42672 = x_42673;
        } else {
            acc_42672 = acc_42670;
        }
        mem_43725[(int64_t) 0] = acc_42672;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44934[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44934[i_2] = mem_43725[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43719[i_3] = mem_param_tmp_44934[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43726[i_4] = mem_param_43719[i_4];
    
    __local char *mem_43729;
    
    mem_43729 = (__local char *) mem_43729_backing_5;
    
    float mem_43732[1];
    float mem_43916[1];
    
    if (cond_42698) {
        mem_43916[(int64_t) 0] = accs_mem_43726[(int64_t) 0];
    } else {
        int64_t binop_x_42708 = segmap_group_sizze_32124 *
                num_whole_tiles_42598;
        int64_t ltid_42699 = sext_i32_i64(ltid_pre_44933);
        int32_t ltid_flat_42700 = local_tid_44929;
        int64_t j_42709 = ltid_42699 + binop_x_42708;
        bool cond_42714 = slt64(j_42709, i32_res_27921);
        int32_t pre_42715;
        
        if (cond_42714) {
            int32_t index_primexp_42773 = sext_i64_i32(j_42709);
            int32_t tile_elem_42716 = index_primexp_42773;
            
            pre_42715 = tile_elem_42716;
        } else {
            pre_42715 = 0;
        }
        ((__local int32_t *) mem_43729)[ltid_42699] = pre_42715;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42720 = sext_i32_i64(ltid_pre_44933);
        int32_t ltid_flat_42721 = local_tid_44929;
        int64_t gtid_42728 = binop_x_42587 + ltid_42720;
        float acc_42731 = accs_mem_43726[(int64_t) 0];
        bool cond_42732 = slt64(gtid_42728, m_27551);
        float acc_42733;
        
        if (cond_42732) {
            int32_t x_42729 = mem_43713[(int64_t) 0];
            int32_t x_42730 = mem_43715[(int64_t) 0];
            float x_42734;
            float redout_42820 = acc_42731;
            
            for (int64_t i_42821 = 0; i_42821 < residual_input_42697;
                 i_42821++) {
                int32_t x_42738 = ((__local int32_t *) mem_43729)[i_42821];
                bool cond_42739 = slt32(x_42738, x_42730);
                float defunc_0_f_res_42740;
                
                if (cond_42739) {
                    int32_t x_42741 = add32(x_42729, x_42738);
                    int32_t x_42742 = sub32(x_42741, x_42730);
                    int32_t i_42743 = add32(1, x_42742);
                    int64_t i_42744 = sext_i32_i64(i_42743);
                    float defunc_0_f_res_t_res_42745 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_42728 *
                                                                                              N_27550 +
                                                                                              i_42744];
                    
                    defunc_0_f_res_42740 = defunc_0_f_res_t_res_42745;
                } else {
                    defunc_0_f_res_42740 = 0.0F;
                }
                
                float defunc_1_op_res_42737 = defunc_0_f_res_42740 +
                      redout_42820;
                float redout_tmp_44937 = defunc_1_op_res_42737;
                
                redout_42820 = redout_tmp_44937;
            }
            x_42734 = redout_42820;
            acc_42733 = x_42734;
        } else {
            acc_42733 = acc_42731;
        }
        mem_43732[(int64_t) 0] = acc_42733;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43916[(int64_t) 0] = mem_43732[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44929) + segmap_group_sizze_32124 *
              sext_i32_i64(group_tid_44930), m_27551)) {
        ((__global float *) mem_43735)[sext_i32_i64(local_tid_44929) +
                                       segmap_group_sizze_32124 *
                                       sext_i32_i64(group_tid_44930)] =
            mem_43916[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_32124
}
__kernel void mainDetailedzisegred_large_30099(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44197_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44195_backing_aligned_1,
                                               int64_t N_27550,
                                               int64_t i32_res_27560,
                                               int64_t i32_res_27566,
                                               int64_t num_groups_30238,
                                               int64_t groups_per_segment_44181,
                                               int64_t elements_per_thread_44182,
                                               int64_t virt_num_groups_44183,
                                               int64_t threads_per_segment_44185,
                                               __global
                                               unsigned char *images_mem_42841,
                                               __global
                                               unsigned char *binop_p_mem_42850,
                                               __global
                                               unsigned char *mem_42991,
                                               __global
                                               unsigned char *mem_42996,
                                               __global
                                               unsigned char *group_res_arr_mem_44186,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44188)
{
    #define segred_group_sizze_30237 (mainDetailedzisegred_group_sizze_30093)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44197_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44197_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44195_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44195_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44190;
    int32_t local_tid_44191;
    int64_t group_sizze_44194;
    int32_t wave_sizze_44193;
    int32_t group_tid_44192;
    
    global_tid_44190 = get_global_id(0);
    local_tid_44191 = get_local_id(0);
    group_sizze_44194 = get_local_size(0);
    wave_sizze_44193 = LOCKSTEP_WIDTH;
    group_tid_44192 = get_group_id(0);
    
    int32_t phys_tid_30099;
    
    phys_tid_30099 = global_tid_44190;
    
    __local char *red_arr_mem_44195;
    
    red_arr_mem_44195 = (__local char *) red_arr_mem_44195_backing_0;
    
    __local char *sync_arr_mem_44197;
    
    sync_arr_mem_44197 = (__local char *) sync_arr_mem_44197_backing_1;
    
    int32_t phys_group_id_44199;
    
    phys_group_id_44199 = get_group_id(0);
    for (int32_t i_44200 = 0; i_44200 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44183) - phys_group_id_44199,
                   sext_i64_i32(num_groups_30238)); i_44200++) {
        int32_t virt_group_id_44201 = phys_group_id_44199 + i_44200 *
                sext_i64_i32(num_groups_30238);
        int32_t flat_segment_id_44202 = squot32(virt_group_id_44201,
                                                sext_i64_i32(groups_per_segment_44181));
        int64_t global_tid_44203 = srem64(sext_i32_i64(virt_group_id_44201) *
                                          segred_group_sizze_30237 +
                                          sext_i32_i64(local_tid_44191),
                                          segred_group_sizze_30237 *
                                          groups_per_segment_44181);
        int64_t gtid_30086 = squot64(sext_i32_i64(flat_segment_id_44202),
                                     i32_res_27566 * i32_res_27566);
        int64_t gtid_30087 = squot64(sext_i32_i64(flat_segment_id_44202) -
                                     squot64(sext_i32_i64(flat_segment_id_44202),
                                             i32_res_27566 * i32_res_27566) *
                                     (i32_res_27566 * i32_res_27566),
                                     i32_res_27566);
        int64_t gtid_30088 = sext_i32_i64(flat_segment_id_44202) -
                squot64(sext_i32_i64(flat_segment_id_44202), i32_res_27566 *
                        i32_res_27566) * (i32_res_27566 * i32_res_27566) -
                squot64(sext_i32_i64(flat_segment_id_44202) -
                        squot64(sext_i32_i64(flat_segment_id_44202),
                                i32_res_27566 * i32_res_27566) *
                        (i32_res_27566 * i32_res_27566), i32_res_27566) *
                i32_res_27566;
        int64_t gtid_30098;
        float x_acc_44204;
        int64_t chunk_sizze_44205;
        
        chunk_sizze_44205 = smin64(elements_per_thread_44182,
                                   sdiv_up64(i32_res_27560 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44203)),
                                             threads_per_segment_44185));
        
        float x_30241;
        float x_30242;
        
        // neutral-initialise the accumulators
        {
            x_acc_44204 = 0.0F;
        }
        for (int64_t i_44209 = 0; i_44209 < chunk_sizze_44205; i_44209++) {
            gtid_30098 = sext_i32_i64(sext_i64_i32(global_tid_44203)) +
                threads_per_segment_44185 * i_44209;
            // apply map function
            {
                float x_30247 = ((__global
                                  float *) images_mem_42841)[gtid_30086 *
                                                             N_27550 +
                                                             gtid_30098];
                float x_30248 = ((__global
                                  float *) binop_p_mem_42850)[gtid_30087 *
                                                              N_27550 +
                                                              gtid_30098];
                float x_30249 = ((__global float *) mem_42991)[gtid_30088 *
                                                               N_27550 +
                                                               gtid_30098];
                float x_30250 = x_30248 * x_30249;
                bool isnan_res_30251;
                
                isnan_res_30251 = futrts_isnan32(x_30247);
                
                float y_30252;
                
                if (isnan_res_30251) {
                    y_30252 = 0.0F;
                } else {
                    y_30252 = 1.0F;
                }
                
                float defunc_2_f_res_30253 = x_30250 * y_30252;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_30241 = x_acc_44204;
                }
                // load new values
                {
                    x_30242 = defunc_2_f_res_30253;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_30243 = x_30241 + x_30242;
                    
                    // store in accumulator
                    {
                        x_acc_44204 = defunc_1_op_res_30243;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_30241 = x_acc_44204;
            ((__local
              float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191)] =
                x_30241;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44210;
        int32_t skip_waves_44211;
        
        skip_waves_44211 = 1;
        
        float x_44206;
        float x_44207;
        
        offset_44210 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44191,
                      sext_i64_i32(segred_group_sizze_30237))) {
                x_44206 = ((__local
                            float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191 +
                                                        offset_44210)];
            }
        }
        offset_44210 = 1;
        while (slt32(offset_44210, wave_sizze_44193)) {
            if (slt32(local_tid_44191 + offset_44210,
                      sext_i64_i32(segred_group_sizze_30237)) &&
                ((local_tid_44191 - squot32(local_tid_44191, wave_sizze_44193) *
                  wave_sizze_44193) & (2 * offset_44210 - 1)) == 0) {
                // read array element
                {
                    x_44207 = ((volatile __local
                                float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191 +
                                                            offset_44210)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44208 = x_44206 + x_44207;
                    
                    x_44206 = defunc_1_op_res_44208;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191)] =
                        x_44206;
                }
            }
            offset_44210 *= 2;
        }
        while (slt32(skip_waves_44211,
                     squot32(sext_i64_i32(segred_group_sizze_30237) +
                             wave_sizze_44193 - 1, wave_sizze_44193))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44210 = skip_waves_44211 * wave_sizze_44193;
            if (slt32(local_tid_44191 + offset_44210,
                      sext_i64_i32(segred_group_sizze_30237)) &&
                ((local_tid_44191 - squot32(local_tid_44191, wave_sizze_44193) *
                  wave_sizze_44193) == 0 && (squot32(local_tid_44191,
                                                     wave_sizze_44193) & (2 *
                                                                          skip_waves_44211 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44207 = ((__local
                                float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191 +
                                                            offset_44210)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44208 = x_44206 + x_44207;
                    
                    x_44206 = defunc_1_op_res_44208;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191)] =
                        x_44206;
                }
            }
            skip_waves_44211 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44191) == (int64_t) 0) {
                x_acc_44204 = x_44206;
            }
        }
        if (groups_per_segment_44181 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44191 == 0) {
                    ((__global float *) mem_42996)[gtid_30086 * (i32_res_27566 *
                                                                 i32_res_27566) +
                                                   gtid_30087 * i32_res_27566 +
                                                   gtid_30088] = x_acc_44204;
                }
            }
        } else {
            int32_t old_counter_44212;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44191 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44186)[sext_i32_i64(virt_group_id_44201) *
                                                        segred_group_sizze_30237] =
                        x_acc_44204;
                    mem_fence_global();
                    old_counter_44212 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44188)[sext_i32_i64(srem32(flat_segment_id_44202,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44197)[(int64_t) 0] =
                        old_counter_44212 == groups_per_segment_44181 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44213;
            
            is_last_group_44213 = ((__local
                                    bool *) sync_arr_mem_44197)[(int64_t) 0];
            if (is_last_group_44213) {
                if (local_tid_44191 == 0) {
                    old_counter_44212 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44188)[sext_i32_i64(srem32(flat_segment_id_44202,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44181));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44214 =
                            sdiv_up64(groups_per_segment_44181,
                                      segred_group_sizze_30237);
                    
                    x_30241 = 0.0F;
                    for (int64_t i_44215 = 0; i_44215 < read_per_thread_44214;
                         i_44215++) {
                        int64_t group_res_id_44216 =
                                sext_i32_i64(local_tid_44191) *
                                read_per_thread_44214 + i_44215;
                        int64_t index_of_group_res_44217 =
                                sext_i32_i64(flat_segment_id_44202) *
                                groups_per_segment_44181 + group_res_id_44216;
                        
                        if (slt64(group_res_id_44216,
                                  groups_per_segment_44181)) {
                            x_30242 = ((__global
                                        float *) group_res_arr_mem_44186)[index_of_group_res_44217 *
                                                                          segred_group_sizze_30237];
                            
                            float defunc_1_op_res_30243;
                            
                            defunc_1_op_res_30243 = x_30241 + x_30242;
                            x_30241 = defunc_1_op_res_30243;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191)] =
                    x_30241;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44218;
                    int32_t skip_waves_44219;
                    
                    skip_waves_44219 = 1;
                    
                    float x_44206;
                    float x_44207;
                    
                    offset_44218 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44191,
                                  sext_i64_i32(segred_group_sizze_30237))) {
                            x_44206 = ((__local
                                        float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191 +
                                                                    offset_44218)];
                        }
                    }
                    offset_44218 = 1;
                    while (slt32(offset_44218, wave_sizze_44193)) {
                        if (slt32(local_tid_44191 + offset_44218,
                                  sext_i64_i32(segred_group_sizze_30237)) &&
                            ((local_tid_44191 - squot32(local_tid_44191,
                                                        wave_sizze_44193) *
                              wave_sizze_44193) & (2 * offset_44218 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44207 = ((volatile __local
                                            float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191 +
                                                                        offset_44218)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44208 = x_44206 + x_44207;
                                
                                x_44206 = defunc_1_op_res_44208;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191)] =
                                    x_44206;
                            }
                        }
                        offset_44218 *= 2;
                    }
                    while (slt32(skip_waves_44219,
                                 squot32(sext_i64_i32(segred_group_sizze_30237) +
                                         wave_sizze_44193 - 1,
                                         wave_sizze_44193))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44218 = skip_waves_44219 * wave_sizze_44193;
                        if (slt32(local_tid_44191 + offset_44218,
                                  sext_i64_i32(segred_group_sizze_30237)) &&
                            ((local_tid_44191 - squot32(local_tid_44191,
                                                        wave_sizze_44193) *
                              wave_sizze_44193) == 0 &&
                             (squot32(local_tid_44191, wave_sizze_44193) & (2 *
                                                                            skip_waves_44219 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44207 = ((__local
                                            float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191 +
                                                                        offset_44218)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44208 = x_44206 + x_44207;
                                
                                x_44206 = defunc_1_op_res_44208;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44195)[sext_i32_i64(local_tid_44191)] =
                                    x_44206;
                            }
                        }
                        skip_waves_44219 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44191 == 0) {
                            ((__global float *) mem_42996)[gtid_30086 *
                                                           (i32_res_27566 *
                                                            i32_res_27566) +
                                                           gtid_30087 *
                                                           i32_res_27566 +
                                                           gtid_30088] =
                                x_44206;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30237
}
__kernel void mainDetailedzisegred_large_31146(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44394_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44392_backing_aligned_1,
                                               int64_t N_27550,
                                               int64_t i32_res_27560,
                                               int64_t i32_res_27566,
                                               int64_t num_groups_31199,
                                               int64_t groups_per_segment_44378,
                                               int64_t elements_per_thread_44379,
                                               int64_t virt_num_groups_44380,
                                               int64_t threads_per_segment_44382,
                                               __global
                                               unsigned char *images_mem_42841,
                                               __global
                                               unsigned char *binop_p_mem_42850,
                                               __global
                                               unsigned char *mem_43304,
                                               __global
                                               unsigned char *group_res_arr_mem_44383,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44385)
{
    #define segred_group_sizze_31198 (mainDetailedzisegred_group_sizze_31140)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44394_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44394_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44392_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44392_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44387;
    int32_t local_tid_44388;
    int64_t group_sizze_44391;
    int32_t wave_sizze_44390;
    int32_t group_tid_44389;
    
    global_tid_44387 = get_global_id(0);
    local_tid_44388 = get_local_id(0);
    group_sizze_44391 = get_local_size(0);
    wave_sizze_44390 = LOCKSTEP_WIDTH;
    group_tid_44389 = get_group_id(0);
    
    int32_t phys_tid_31146;
    
    phys_tid_31146 = global_tid_44387;
    
    __local char *red_arr_mem_44392;
    
    red_arr_mem_44392 = (__local char *) red_arr_mem_44392_backing_0;
    
    __local char *sync_arr_mem_44394;
    
    sync_arr_mem_44394 = (__local char *) sync_arr_mem_44394_backing_1;
    
    int32_t phys_group_id_44396;
    
    phys_group_id_44396 = get_group_id(0);
    for (int32_t i_44397 = 0; i_44397 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44380) - phys_group_id_44396,
                   sext_i64_i32(num_groups_31199)); i_44397++) {
        int32_t virt_group_id_44398 = phys_group_id_44396 + i_44397 *
                sext_i64_i32(num_groups_31199);
        int32_t flat_segment_id_44399 = squot32(virt_group_id_44398,
                                                sext_i64_i32(groups_per_segment_44378));
        int64_t global_tid_44400 = srem64(sext_i32_i64(virt_group_id_44398) *
                                          segred_group_sizze_31198 +
                                          sext_i32_i64(local_tid_44388),
                                          segred_group_sizze_31198 *
                                          groups_per_segment_44378);
        int64_t gtid_31135 = squot64(sext_i32_i64(flat_segment_id_44399),
                                     i32_res_27566);
        int64_t gtid_31136 = sext_i32_i64(flat_segment_id_44399) -
                squot64(sext_i32_i64(flat_segment_id_44399), i32_res_27566) *
                i32_res_27566;
        int64_t gtid_31145;
        float x_acc_44401;
        int64_t chunk_sizze_44402;
        
        chunk_sizze_44402 = smin64(elements_per_thread_44379,
                                   sdiv_up64(i32_res_27560 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44400)),
                                             threads_per_segment_44382));
        
        float x_31202;
        float x_31203;
        
        // neutral-initialise the accumulators
        {
            x_acc_44401 = 0.0F;
        }
        for (int64_t i_44406 = 0; i_44406 < chunk_sizze_44402; i_44406++) {
            gtid_31145 = sext_i32_i64(sext_i64_i32(global_tid_44400)) +
                threads_per_segment_44382 * i_44406;
            // apply map function
            {
                float x_31208 = ((__global
                                  float *) images_mem_42841)[gtid_31135 *
                                                             N_27550 +
                                                             gtid_31145];
                bool isnan_res_31209;
                
                isnan_res_31209 = futrts_isnan32(x_31208);
                
                float defunc_1_f_res_31210;
                
                if (isnan_res_31209) {
                    defunc_1_f_res_31210 = 0.0F;
                } else {
                    float x_31207 = ((__global
                                      float *) binop_p_mem_42850)[gtid_31136 *
                                                                  N_27550 +
                                                                  gtid_31145];
                    float defunc_1_f_res_f_res_31211 = x_31207 * x_31208;
                    
                    defunc_1_f_res_31210 = defunc_1_f_res_f_res_31211;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_31202 = x_acc_44401;
                }
                // load new values
                {
                    x_31203 = defunc_1_f_res_31210;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31204 = x_31202 + x_31203;
                    
                    // store in accumulator
                    {
                        x_acc_44401 = defunc_1_op_res_31204;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31202 = x_acc_44401;
            ((__local
              float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388)] =
                x_31202;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44407;
        int32_t skip_waves_44408;
        
        skip_waves_44408 = 1;
        
        float x_44403;
        float x_44404;
        
        offset_44407 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44388,
                      sext_i64_i32(segred_group_sizze_31198))) {
                x_44403 = ((__local
                            float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388 +
                                                        offset_44407)];
            }
        }
        offset_44407 = 1;
        while (slt32(offset_44407, wave_sizze_44390)) {
            if (slt32(local_tid_44388 + offset_44407,
                      sext_i64_i32(segred_group_sizze_31198)) &&
                ((local_tid_44388 - squot32(local_tid_44388, wave_sizze_44390) *
                  wave_sizze_44390) & (2 * offset_44407 - 1)) == 0) {
                // read array element
                {
                    x_44404 = ((volatile __local
                                float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388 +
                                                            offset_44407)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44405 = x_44403 + x_44404;
                    
                    x_44403 = defunc_1_op_res_44405;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388)] =
                        x_44403;
                }
            }
            offset_44407 *= 2;
        }
        while (slt32(skip_waves_44408,
                     squot32(sext_i64_i32(segred_group_sizze_31198) +
                             wave_sizze_44390 - 1, wave_sizze_44390))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44407 = skip_waves_44408 * wave_sizze_44390;
            if (slt32(local_tid_44388 + offset_44407,
                      sext_i64_i32(segred_group_sizze_31198)) &&
                ((local_tid_44388 - squot32(local_tid_44388, wave_sizze_44390) *
                  wave_sizze_44390) == 0 && (squot32(local_tid_44388,
                                                     wave_sizze_44390) & (2 *
                                                                          skip_waves_44408 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44404 = ((__local
                                float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388 +
                                                            offset_44407)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44405 = x_44403 + x_44404;
                    
                    x_44403 = defunc_1_op_res_44405;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388)] =
                        x_44403;
                }
            }
            skip_waves_44408 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44388) == (int64_t) 0) {
                x_acc_44401 = x_44403;
            }
        }
        if (groups_per_segment_44378 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44388 == 0) {
                    ((__global float *) mem_43304)[gtid_31135 * i32_res_27566 +
                                                   gtid_31136] = x_acc_44401;
                }
            }
        } else {
            int32_t old_counter_44409;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44388 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44383)[sext_i32_i64(virt_group_id_44398) *
                                                        segred_group_sizze_31198] =
                        x_acc_44401;
                    mem_fence_global();
                    old_counter_44409 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44385)[sext_i32_i64(srem32(flat_segment_id_44399,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44394)[(int64_t) 0] =
                        old_counter_44409 == groups_per_segment_44378 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44410;
            
            is_last_group_44410 = ((__local
                                    bool *) sync_arr_mem_44394)[(int64_t) 0];
            if (is_last_group_44410) {
                if (local_tid_44388 == 0) {
                    old_counter_44409 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44385)[sext_i32_i64(srem32(flat_segment_id_44399,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44378));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44411 =
                            sdiv_up64(groups_per_segment_44378,
                                      segred_group_sizze_31198);
                    
                    x_31202 = 0.0F;
                    for (int64_t i_44412 = 0; i_44412 < read_per_thread_44411;
                         i_44412++) {
                        int64_t group_res_id_44413 =
                                sext_i32_i64(local_tid_44388) *
                                read_per_thread_44411 + i_44412;
                        int64_t index_of_group_res_44414 =
                                sext_i32_i64(flat_segment_id_44399) *
                                groups_per_segment_44378 + group_res_id_44413;
                        
                        if (slt64(group_res_id_44413,
                                  groups_per_segment_44378)) {
                            x_31203 = ((__global
                                        float *) group_res_arr_mem_44383)[index_of_group_res_44414 *
                                                                          segred_group_sizze_31198];
                            
                            float defunc_1_op_res_31204;
                            
                            defunc_1_op_res_31204 = x_31202 + x_31203;
                            x_31202 = defunc_1_op_res_31204;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388)] =
                    x_31202;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44415;
                    int32_t skip_waves_44416;
                    
                    skip_waves_44416 = 1;
                    
                    float x_44403;
                    float x_44404;
                    
                    offset_44415 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44388,
                                  sext_i64_i32(segred_group_sizze_31198))) {
                            x_44403 = ((__local
                                        float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388 +
                                                                    offset_44415)];
                        }
                    }
                    offset_44415 = 1;
                    while (slt32(offset_44415, wave_sizze_44390)) {
                        if (slt32(local_tid_44388 + offset_44415,
                                  sext_i64_i32(segred_group_sizze_31198)) &&
                            ((local_tid_44388 - squot32(local_tid_44388,
                                                        wave_sizze_44390) *
                              wave_sizze_44390) & (2 * offset_44415 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44404 = ((volatile __local
                                            float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388 +
                                                                        offset_44415)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44405 = x_44403 + x_44404;
                                
                                x_44403 = defunc_1_op_res_44405;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388)] =
                                    x_44403;
                            }
                        }
                        offset_44415 *= 2;
                    }
                    while (slt32(skip_waves_44416,
                                 squot32(sext_i64_i32(segred_group_sizze_31198) +
                                         wave_sizze_44390 - 1,
                                         wave_sizze_44390))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44415 = skip_waves_44416 * wave_sizze_44390;
                        if (slt32(local_tid_44388 + offset_44415,
                                  sext_i64_i32(segred_group_sizze_31198)) &&
                            ((local_tid_44388 - squot32(local_tid_44388,
                                                        wave_sizze_44390) *
                              wave_sizze_44390) == 0 &&
                             (squot32(local_tid_44388, wave_sizze_44390) & (2 *
                                                                            skip_waves_44416 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44404 = ((__local
                                            float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388 +
                                                                        offset_44415)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44405 = x_44403 + x_44404;
                                
                                x_44403 = defunc_1_op_res_44405;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44392)[sext_i32_i64(local_tid_44388)] =
                                    x_44403;
                            }
                        }
                        skip_waves_44416 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44388 == 0) {
                            ((__global float *) mem_43304)[gtid_31135 *
                                                           i32_res_27566 +
                                                           gtid_31136] =
                                x_44403;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31198
}
__kernel void mainDetailedzisegred_large_31283(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44482_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44480_backing_aligned_1,
                                               int64_t i32_res_27566,
                                               int64_t num_groups_31332,
                                               int64_t groups_per_segment_44466,
                                               int64_t elements_per_thread_44467,
                                               int64_t virt_num_groups_44468,
                                               int64_t threads_per_segment_44470,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43089,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43310,
                                               __global
                                               unsigned char *mem_43370,
                                               __global
                                               unsigned char *group_res_arr_mem_44471,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44473)
{
    #define segred_group_sizze_31331 (mainDetailedzisegred_group_sizze_31277)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44482_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44482_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44480_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44480_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44475;
    int32_t local_tid_44476;
    int64_t group_sizze_44479;
    int32_t wave_sizze_44478;
    int32_t group_tid_44477;
    
    global_tid_44475 = get_global_id(0);
    local_tid_44476 = get_local_id(0);
    group_sizze_44479 = get_local_size(0);
    wave_sizze_44478 = LOCKSTEP_WIDTH;
    group_tid_44477 = get_group_id(0);
    
    int32_t phys_tid_31283;
    
    phys_tid_31283 = global_tid_44475;
    
    __local char *red_arr_mem_44480;
    
    red_arr_mem_44480 = (__local char *) red_arr_mem_44480_backing_0;
    
    __local char *sync_arr_mem_44482;
    
    sync_arr_mem_44482 = (__local char *) sync_arr_mem_44482_backing_1;
    
    int32_t phys_group_id_44484;
    
    phys_group_id_44484 = get_group_id(0);
    for (int32_t i_44485 = 0; i_44485 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44468) - phys_group_id_44484,
                   sext_i64_i32(num_groups_31332)); i_44485++) {
        int32_t virt_group_id_44486 = phys_group_id_44484 + i_44485 *
                sext_i64_i32(num_groups_31332);
        int32_t flat_segment_id_44487 = squot32(virt_group_id_44486,
                                                sext_i64_i32(groups_per_segment_44466));
        int64_t global_tid_44488 = srem64(sext_i32_i64(virt_group_id_44486) *
                                          segred_group_sizze_31331 +
                                          sext_i32_i64(local_tid_44476),
                                          segred_group_sizze_31331 *
                                          groups_per_segment_44466);
        int64_t gtid_31272 = squot64(sext_i32_i64(flat_segment_id_44487),
                                     i32_res_27566);
        int64_t gtid_31273 = sext_i32_i64(flat_segment_id_44487) -
                squot64(sext_i32_i64(flat_segment_id_44487), i32_res_27566) *
                i32_res_27566;
        int64_t gtid_31282;
        float x_acc_44489;
        int64_t chunk_sizze_44490;
        
        chunk_sizze_44490 = smin64(elements_per_thread_44467,
                                   sdiv_up64(i32_res_27566 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44488)),
                                             threads_per_segment_44470));
        
        float x_31335;
        float x_31336;
        
        // neutral-initialise the accumulators
        {
            x_acc_44489 = 0.0F;
        }
        for (int64_t i_44494 = 0; i_44494 < chunk_sizze_44490; i_44494++) {
            gtid_31282 = sext_i32_i64(sext_i64_i32(global_tid_44488)) +
                threads_per_segment_44470 * i_44494;
            // apply map function
            {
                float x_31341 = ((__global
                                  float *) defunc_3_map_res_mem_43310)[gtid_31272 *
                                                                       i32_res_27566 +
                                                                       gtid_31282];
                float x_31342 = ((__global
                                  float *) defunc_3_map_res_mem_43089)[gtid_31272 *
                                                                       (i32_res_27566 *
                                                                        i32_res_27566) +
                                                                       gtid_31273 *
                                                                       i32_res_27566 +
                                                                       gtid_31282];
                float defunc_1_f_res_31343 = x_31341 * x_31342;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31335 = x_acc_44489;
                }
                // load new values
                {
                    x_31336 = defunc_1_f_res_31343;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31337 = x_31335 + x_31336;
                    
                    // store in accumulator
                    {
                        x_acc_44489 = defunc_1_op_res_31337;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31335 = x_acc_44489;
            ((__local
              float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476)] =
                x_31335;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44495;
        int32_t skip_waves_44496;
        
        skip_waves_44496 = 1;
        
        float x_44491;
        float x_44492;
        
        offset_44495 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44476,
                      sext_i64_i32(segred_group_sizze_31331))) {
                x_44491 = ((__local
                            float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476 +
                                                        offset_44495)];
            }
        }
        offset_44495 = 1;
        while (slt32(offset_44495, wave_sizze_44478)) {
            if (slt32(local_tid_44476 + offset_44495,
                      sext_i64_i32(segred_group_sizze_31331)) &&
                ((local_tid_44476 - squot32(local_tid_44476, wave_sizze_44478) *
                  wave_sizze_44478) & (2 * offset_44495 - 1)) == 0) {
                // read array element
                {
                    x_44492 = ((volatile __local
                                float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476 +
                                                            offset_44495)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44493 = x_44491 + x_44492;
                    
                    x_44491 = defunc_1_op_res_44493;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476)] =
                        x_44491;
                }
            }
            offset_44495 *= 2;
        }
        while (slt32(skip_waves_44496,
                     squot32(sext_i64_i32(segred_group_sizze_31331) +
                             wave_sizze_44478 - 1, wave_sizze_44478))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44495 = skip_waves_44496 * wave_sizze_44478;
            if (slt32(local_tid_44476 + offset_44495,
                      sext_i64_i32(segred_group_sizze_31331)) &&
                ((local_tid_44476 - squot32(local_tid_44476, wave_sizze_44478) *
                  wave_sizze_44478) == 0 && (squot32(local_tid_44476,
                                                     wave_sizze_44478) & (2 *
                                                                          skip_waves_44496 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44492 = ((__local
                                float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476 +
                                                            offset_44495)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44493 = x_44491 + x_44492;
                    
                    x_44491 = defunc_1_op_res_44493;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476)] =
                        x_44491;
                }
            }
            skip_waves_44496 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44476) == (int64_t) 0) {
                x_acc_44489 = x_44491;
            }
        }
        if (groups_per_segment_44466 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44476 == 0) {
                    ((__global float *) mem_43370)[gtid_31272 * i32_res_27566 +
                                                   gtid_31273] = x_acc_44489;
                }
            }
        } else {
            int32_t old_counter_44497;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44476 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44471)[sext_i32_i64(virt_group_id_44486) *
                                                        segred_group_sizze_31331] =
                        x_acc_44489;
                    mem_fence_global();
                    old_counter_44497 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44473)[sext_i32_i64(srem32(flat_segment_id_44487,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44482)[(int64_t) 0] =
                        old_counter_44497 == groups_per_segment_44466 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44498;
            
            is_last_group_44498 = ((__local
                                    bool *) sync_arr_mem_44482)[(int64_t) 0];
            if (is_last_group_44498) {
                if (local_tid_44476 == 0) {
                    old_counter_44497 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44473)[sext_i32_i64(srem32(flat_segment_id_44487,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44466));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44499 =
                            sdiv_up64(groups_per_segment_44466,
                                      segred_group_sizze_31331);
                    
                    x_31335 = 0.0F;
                    for (int64_t i_44500 = 0; i_44500 < read_per_thread_44499;
                         i_44500++) {
                        int64_t group_res_id_44501 =
                                sext_i32_i64(local_tid_44476) *
                                read_per_thread_44499 + i_44500;
                        int64_t index_of_group_res_44502 =
                                sext_i32_i64(flat_segment_id_44487) *
                                groups_per_segment_44466 + group_res_id_44501;
                        
                        if (slt64(group_res_id_44501,
                                  groups_per_segment_44466)) {
                            x_31336 = ((__global
                                        float *) group_res_arr_mem_44471)[index_of_group_res_44502 *
                                                                          segred_group_sizze_31331];
                            
                            float defunc_1_op_res_31337;
                            
                            defunc_1_op_res_31337 = x_31335 + x_31336;
                            x_31335 = defunc_1_op_res_31337;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476)] =
                    x_31335;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44503;
                    int32_t skip_waves_44504;
                    
                    skip_waves_44504 = 1;
                    
                    float x_44491;
                    float x_44492;
                    
                    offset_44503 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44476,
                                  sext_i64_i32(segred_group_sizze_31331))) {
                            x_44491 = ((__local
                                        float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476 +
                                                                    offset_44503)];
                        }
                    }
                    offset_44503 = 1;
                    while (slt32(offset_44503, wave_sizze_44478)) {
                        if (slt32(local_tid_44476 + offset_44503,
                                  sext_i64_i32(segred_group_sizze_31331)) &&
                            ((local_tid_44476 - squot32(local_tid_44476,
                                                        wave_sizze_44478) *
                              wave_sizze_44478) & (2 * offset_44503 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44492 = ((volatile __local
                                            float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476 +
                                                                        offset_44503)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44493 = x_44491 + x_44492;
                                
                                x_44491 = defunc_1_op_res_44493;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476)] =
                                    x_44491;
                            }
                        }
                        offset_44503 *= 2;
                    }
                    while (slt32(skip_waves_44504,
                                 squot32(sext_i64_i32(segred_group_sizze_31331) +
                                         wave_sizze_44478 - 1,
                                         wave_sizze_44478))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44503 = skip_waves_44504 * wave_sizze_44478;
                        if (slt32(local_tid_44476 + offset_44503,
                                  sext_i64_i32(segred_group_sizze_31331)) &&
                            ((local_tid_44476 - squot32(local_tid_44476,
                                                        wave_sizze_44478) *
                              wave_sizze_44478) == 0 &&
                             (squot32(local_tid_44476, wave_sizze_44478) & (2 *
                                                                            skip_waves_44504 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44492 = ((__local
                                            float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476 +
                                                                        offset_44503)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44493 = x_44491 + x_44492;
                                
                                x_44491 = defunc_1_op_res_44493;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44480)[sext_i32_i64(local_tid_44476)] =
                                    x_44491;
                            }
                        }
                        skip_waves_44504 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44476 == 0) {
                            ((__global float *) mem_43370)[gtid_31272 *
                                                           i32_res_27566 +
                                                           gtid_31273] =
                                x_44491;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31331
}
__kernel void mainDetailedzisegred_large_31413(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44614_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44612_backing_aligned_1,
                                               int64_t N_27550,
                                               int64_t i32_res_27566,
                                               int64_t num_groups_31460,
                                               int64_t groups_per_segment_44598,
                                               int64_t elements_per_thread_44599,
                                               int64_t virt_num_groups_44600,
                                               int64_t threads_per_segment_44602,
                                               __global
                                               unsigned char *mem_42857,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43376,
                                               __global
                                               unsigned char *mem_43594,
                                               __global
                                               unsigned char *group_res_arr_mem_44603,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44605)
{
    #define segred_group_sizze_31459 (mainDetailedzisegred_group_sizze_31407)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44614_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44614_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44612_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44612_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44607;
    int32_t local_tid_44608;
    int64_t group_sizze_44611;
    int32_t wave_sizze_44610;
    int32_t group_tid_44609;
    
    global_tid_44607 = get_global_id(0);
    local_tid_44608 = get_local_id(0);
    group_sizze_44611 = get_local_size(0);
    wave_sizze_44610 = LOCKSTEP_WIDTH;
    group_tid_44609 = get_group_id(0);
    
    int32_t phys_tid_31413;
    
    phys_tid_31413 = global_tid_44607;
    
    __local char *red_arr_mem_44612;
    
    red_arr_mem_44612 = (__local char *) red_arr_mem_44612_backing_0;
    
    __local char *sync_arr_mem_44614;
    
    sync_arr_mem_44614 = (__local char *) sync_arr_mem_44614_backing_1;
    
    int32_t phys_group_id_44616;
    
    phys_group_id_44616 = get_group_id(0);
    for (int32_t i_44617 = 0; i_44617 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44600) - phys_group_id_44616,
                   sext_i64_i32(num_groups_31460)); i_44617++) {
        int32_t virt_group_id_44618 = phys_group_id_44616 + i_44617 *
                sext_i64_i32(num_groups_31460);
        int32_t flat_segment_id_44619 = squot32(virt_group_id_44618,
                                                sext_i64_i32(groups_per_segment_44598));
        int64_t global_tid_44620 = srem64(sext_i32_i64(virt_group_id_44618) *
                                          segred_group_sizze_31459 +
                                          sext_i32_i64(local_tid_44608),
                                          segred_group_sizze_31459 *
                                          groups_per_segment_44598);
        int64_t gtid_31402 = squot64(sext_i32_i64(flat_segment_id_44619),
                                     N_27550);
        int64_t gtid_31403 = sext_i32_i64(flat_segment_id_44619) -
                squot64(sext_i32_i64(flat_segment_id_44619), N_27550) * N_27550;
        int64_t gtid_31412;
        float x_acc_44621;
        int64_t chunk_sizze_44622;
        
        chunk_sizze_44622 = smin64(elements_per_thread_44599,
                                   sdiv_up64(i32_res_27566 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44620)),
                                             threads_per_segment_44602));
        
        float x_31463;
        float x_31464;
        
        // neutral-initialise the accumulators
        {
            x_acc_44621 = 0.0F;
        }
        for (int64_t i_44626 = 0; i_44626 < chunk_sizze_44622; i_44626++) {
            gtid_31412 = sext_i32_i64(sext_i64_i32(global_tid_44620)) +
                threads_per_segment_44602 * i_44626;
            // apply map function
            {
                float x_31468 = ((__global
                                  float *) defunc_4_map_res_mem_43376)[gtid_31402 *
                                                                       i32_res_27566 +
                                                                       gtid_31412];
                float x_31469 = ((__global float *) mem_42857)[gtid_31403 *
                                                               i32_res_27566 +
                                                               gtid_31412];
                float defunc_1_f_res_31470 = x_31468 * x_31469;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_31463 = x_acc_44621;
                }
                // load new values
                {
                    x_31464 = defunc_1_f_res_31470;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_31465 = x_31463 + x_31464;
                    
                    // store in accumulator
                    {
                        x_acc_44621 = defunc_1_op_res_31465;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_31463 = x_acc_44621;
            ((__local
              float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608)] =
                x_31463;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44627;
        int32_t skip_waves_44628;
        
        skip_waves_44628 = 1;
        
        float x_44623;
        float x_44624;
        
        offset_44627 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44608,
                      sext_i64_i32(segred_group_sizze_31459))) {
                x_44623 = ((__local
                            float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608 +
                                                        offset_44627)];
            }
        }
        offset_44627 = 1;
        while (slt32(offset_44627, wave_sizze_44610)) {
            if (slt32(local_tid_44608 + offset_44627,
                      sext_i64_i32(segred_group_sizze_31459)) &&
                ((local_tid_44608 - squot32(local_tid_44608, wave_sizze_44610) *
                  wave_sizze_44610) & (2 * offset_44627 - 1)) == 0) {
                // read array element
                {
                    x_44624 = ((volatile __local
                                float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608 +
                                                            offset_44627)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44625 = x_44623 + x_44624;
                    
                    x_44623 = defunc_1_op_res_44625;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608)] =
                        x_44623;
                }
            }
            offset_44627 *= 2;
        }
        while (slt32(skip_waves_44628,
                     squot32(sext_i64_i32(segred_group_sizze_31459) +
                             wave_sizze_44610 - 1, wave_sizze_44610))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44627 = skip_waves_44628 * wave_sizze_44610;
            if (slt32(local_tid_44608 + offset_44627,
                      sext_i64_i32(segred_group_sizze_31459)) &&
                ((local_tid_44608 - squot32(local_tid_44608, wave_sizze_44610) *
                  wave_sizze_44610) == 0 && (squot32(local_tid_44608,
                                                     wave_sizze_44610) & (2 *
                                                                          skip_waves_44628 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44624 = ((__local
                                float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608 +
                                                            offset_44627)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44625 = x_44623 + x_44624;
                    
                    x_44623 = defunc_1_op_res_44625;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608)] =
                        x_44623;
                }
            }
            skip_waves_44628 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44608) == (int64_t) 0) {
                x_acc_44621 = x_44623;
            }
        }
        if (groups_per_segment_44598 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44608 == 0) {
                    ((__global float *) mem_43594)[gtid_31402 * N_27550 +
                                                   gtid_31403] = x_acc_44621;
                }
            }
        } else {
            int32_t old_counter_44629;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44608 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44603)[sext_i32_i64(virt_group_id_44618) *
                                                        segred_group_sizze_31459] =
                        x_acc_44621;
                    mem_fence_global();
                    old_counter_44629 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44605)[sext_i32_i64(srem32(flat_segment_id_44619,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44614)[(int64_t) 0] =
                        old_counter_44629 == groups_per_segment_44598 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44630;
            
            is_last_group_44630 = ((__local
                                    bool *) sync_arr_mem_44614)[(int64_t) 0];
            if (is_last_group_44630) {
                if (local_tid_44608 == 0) {
                    old_counter_44629 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44605)[sext_i32_i64(srem32(flat_segment_id_44619,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44598));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44631 =
                            sdiv_up64(groups_per_segment_44598,
                                      segred_group_sizze_31459);
                    
                    x_31463 = 0.0F;
                    for (int64_t i_44632 = 0; i_44632 < read_per_thread_44631;
                         i_44632++) {
                        int64_t group_res_id_44633 =
                                sext_i32_i64(local_tid_44608) *
                                read_per_thread_44631 + i_44632;
                        int64_t index_of_group_res_44634 =
                                sext_i32_i64(flat_segment_id_44619) *
                                groups_per_segment_44598 + group_res_id_44633;
                        
                        if (slt64(group_res_id_44633,
                                  groups_per_segment_44598)) {
                            x_31464 = ((__global
                                        float *) group_res_arr_mem_44603)[index_of_group_res_44634 *
                                                                          segred_group_sizze_31459];
                            
                            float defunc_1_op_res_31465;
                            
                            defunc_1_op_res_31465 = x_31463 + x_31464;
                            x_31463 = defunc_1_op_res_31465;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608)] =
                    x_31463;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44635;
                    int32_t skip_waves_44636;
                    
                    skip_waves_44636 = 1;
                    
                    float x_44623;
                    float x_44624;
                    
                    offset_44635 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44608,
                                  sext_i64_i32(segred_group_sizze_31459))) {
                            x_44623 = ((__local
                                        float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608 +
                                                                    offset_44635)];
                        }
                    }
                    offset_44635 = 1;
                    while (slt32(offset_44635, wave_sizze_44610)) {
                        if (slt32(local_tid_44608 + offset_44635,
                                  sext_i64_i32(segred_group_sizze_31459)) &&
                            ((local_tid_44608 - squot32(local_tid_44608,
                                                        wave_sizze_44610) *
                              wave_sizze_44610) & (2 * offset_44635 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44624 = ((volatile __local
                                            float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608 +
                                                                        offset_44635)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44625 = x_44623 + x_44624;
                                
                                x_44623 = defunc_1_op_res_44625;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608)] =
                                    x_44623;
                            }
                        }
                        offset_44635 *= 2;
                    }
                    while (slt32(skip_waves_44636,
                                 squot32(sext_i64_i32(segred_group_sizze_31459) +
                                         wave_sizze_44610 - 1,
                                         wave_sizze_44610))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44635 = skip_waves_44636 * wave_sizze_44610;
                        if (slt32(local_tid_44608 + offset_44635,
                                  sext_i64_i32(segred_group_sizze_31459)) &&
                            ((local_tid_44608 - squot32(local_tid_44608,
                                                        wave_sizze_44610) *
                              wave_sizze_44610) == 0 &&
                             (squot32(local_tid_44608, wave_sizze_44610) & (2 *
                                                                            skip_waves_44636 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44624 = ((__local
                                            float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608 +
                                                                        offset_44635)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44625 = x_44623 + x_44624;
                                
                                x_44623 = defunc_1_op_res_44625;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44612)[sext_i32_i64(local_tid_44608)] =
                                    x_44623;
                            }
                        }
                        skip_waves_44636 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44608 == 0) {
                            ((__global float *) mem_43594)[gtid_31402 *
                                                           N_27550 +
                                                           gtid_31403] =
                                x_44623;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31459
}
__kernel void mainDetailedzisegred_large_31979(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44866_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44864_backing_aligned_1,
                                               int64_t N_27550,
                                               int64_t i32_res_27560,
                                               int64_t num_groups_32026,
                                               int64_t groups_per_segment_44850,
                                               int64_t elements_per_thread_44851,
                                               int64_t virt_num_groups_44852,
                                               int64_t threads_per_segment_44854,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43638,
                                               __global
                                               unsigned char *mem_43692,
                                               __global
                                               unsigned char *mem_43695,
                                               __global
                                               unsigned char *group_res_arr_mem_44855,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44857)
{
    #define segred_group_sizze_32025 (mainDetailedzisegred_group_sizze_31973)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44866_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44866_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44864_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44864_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44859;
    int32_t local_tid_44860;
    int64_t group_sizze_44863;
    int32_t wave_sizze_44862;
    int32_t group_tid_44861;
    
    global_tid_44859 = get_global_id(0);
    local_tid_44860 = get_local_id(0);
    group_sizze_44863 = get_local_size(0);
    wave_sizze_44862 = LOCKSTEP_WIDTH;
    group_tid_44861 = get_group_id(0);
    
    int32_t phys_tid_31979;
    
    phys_tid_31979 = global_tid_44859;
    
    __local char *red_arr_mem_44864;
    
    red_arr_mem_44864 = (__local char *) red_arr_mem_44864_backing_0;
    
    __local char *sync_arr_mem_44866;
    
    sync_arr_mem_44866 = (__local char *) sync_arr_mem_44866_backing_1;
    
    int32_t phys_group_id_44868;
    
    phys_group_id_44868 = get_group_id(0);
    for (int32_t i_44869 = 0; i_44869 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44852) - phys_group_id_44868,
                   sext_i64_i32(num_groups_32026)); i_44869++) {
        int32_t virt_group_id_44870 = phys_group_id_44868 + i_44869 *
                sext_i64_i32(num_groups_32026);
        int32_t flat_segment_id_44871 = squot32(virt_group_id_44870,
                                                sext_i64_i32(groups_per_segment_44850));
        int64_t global_tid_44872 = srem64(sext_i32_i64(virt_group_id_44870) *
                                          segred_group_sizze_32025 +
                                          sext_i32_i64(local_tid_44860),
                                          segred_group_sizze_32025 *
                                          groups_per_segment_44850);
        int64_t gtid_31970 = sext_i32_i64(flat_segment_id_44871);
        int64_t gtid_31978;
        float x_acc_44873;
        int64_t chunk_sizze_44874;
        
        chunk_sizze_44874 = smin64(elements_per_thread_44851,
                                   sdiv_up64(i32_res_27560 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44872)),
                                             threads_per_segment_44854));
        
        float x_32029;
        float x_32030;
        
        // neutral-initialise the accumulators
        {
            x_acc_44873 = 0.0F;
        }
        for (int64_t i_44878 = 0; i_44878 < chunk_sizze_44874; i_44878++) {
            gtid_31978 = sext_i32_i64(sext_i64_i32(global_tid_44872)) +
                threads_per_segment_44854 * i_44878;
            // apply map function
            {
                int32_t defunc_0_f_res_32033 = ((__global
                                                 int32_t *) mem_43692)[gtid_31970];
                int32_t index_primexp_40928 = sext_i64_i32(gtid_31978);
                bool cond_32035 = slt32(index_primexp_40928,
                                        defunc_0_f_res_32033);
                float defunc_0_f_res_32036;
                
                if (cond_32035) {
                    int64_t i_32037 = sext_i32_i64(index_primexp_40928);
                    float defunc_0_f_res_t_res_32038 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_31970 *
                                                                                              N_27550 +
                                                                                              i_32037];
                    
                    defunc_0_f_res_32036 = defunc_0_f_res_t_res_32038;
                } else {
                    defunc_0_f_res_32036 = 0.0F;
                }
                
                float defunc_0_f_res_32039 = defunc_0_f_res_32036 *
                      defunc_0_f_res_32036;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32029 = x_acc_44873;
                }
                // load new values
                {
                    x_32030 = defunc_0_f_res_32039;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32031 = x_32029 + x_32030;
                    
                    // store in accumulator
                    {
                        x_acc_44873 = defunc_1_op_res_32031;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32029 = x_acc_44873;
            ((__local
              float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860)] =
                x_32029;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44879;
        int32_t skip_waves_44880;
        
        skip_waves_44880 = 1;
        
        float x_44875;
        float x_44876;
        
        offset_44879 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44860,
                      sext_i64_i32(segred_group_sizze_32025))) {
                x_44875 = ((__local
                            float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860 +
                                                        offset_44879)];
            }
        }
        offset_44879 = 1;
        while (slt32(offset_44879, wave_sizze_44862)) {
            if (slt32(local_tid_44860 + offset_44879,
                      sext_i64_i32(segred_group_sizze_32025)) &&
                ((local_tid_44860 - squot32(local_tid_44860, wave_sizze_44862) *
                  wave_sizze_44862) & (2 * offset_44879 - 1)) == 0) {
                // read array element
                {
                    x_44876 = ((volatile __local
                                float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860 +
                                                            offset_44879)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44877 = x_44875 + x_44876;
                    
                    x_44875 = defunc_1_op_res_44877;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860)] =
                        x_44875;
                }
            }
            offset_44879 *= 2;
        }
        while (slt32(skip_waves_44880,
                     squot32(sext_i64_i32(segred_group_sizze_32025) +
                             wave_sizze_44862 - 1, wave_sizze_44862))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44879 = skip_waves_44880 * wave_sizze_44862;
            if (slt32(local_tid_44860 + offset_44879,
                      sext_i64_i32(segred_group_sizze_32025)) &&
                ((local_tid_44860 - squot32(local_tid_44860, wave_sizze_44862) *
                  wave_sizze_44862) == 0 && (squot32(local_tid_44860,
                                                     wave_sizze_44862) & (2 *
                                                                          skip_waves_44880 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44876 = ((__local
                                float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860 +
                                                            offset_44879)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44877 = x_44875 + x_44876;
                    
                    x_44875 = defunc_1_op_res_44877;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860)] =
                        x_44875;
                }
            }
            skip_waves_44880 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44860) == (int64_t) 0) {
                x_acc_44873 = x_44875;
            }
        }
        if (groups_per_segment_44850 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44860 == 0) {
                    ((__global float *) mem_43695)[gtid_31970] = x_acc_44873;
                }
            }
        } else {
            int32_t old_counter_44881;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44860 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44855)[sext_i32_i64(virt_group_id_44870) *
                                                        segred_group_sizze_32025] =
                        x_acc_44873;
                    mem_fence_global();
                    old_counter_44881 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44857)[sext_i32_i64(srem32(flat_segment_id_44871,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44866)[(int64_t) 0] =
                        old_counter_44881 == groups_per_segment_44850 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44882;
            
            is_last_group_44882 = ((__local
                                    bool *) sync_arr_mem_44866)[(int64_t) 0];
            if (is_last_group_44882) {
                if (local_tid_44860 == 0) {
                    old_counter_44881 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44857)[sext_i32_i64(srem32(flat_segment_id_44871,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44850));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44883 =
                            sdiv_up64(groups_per_segment_44850,
                                      segred_group_sizze_32025);
                    
                    x_32029 = 0.0F;
                    for (int64_t i_44884 = 0; i_44884 < read_per_thread_44883;
                         i_44884++) {
                        int64_t group_res_id_44885 =
                                sext_i32_i64(local_tid_44860) *
                                read_per_thread_44883 + i_44884;
                        int64_t index_of_group_res_44886 =
                                sext_i32_i64(flat_segment_id_44871) *
                                groups_per_segment_44850 + group_res_id_44885;
                        
                        if (slt64(group_res_id_44885,
                                  groups_per_segment_44850)) {
                            x_32030 = ((__global
                                        float *) group_res_arr_mem_44855)[index_of_group_res_44886 *
                                                                          segred_group_sizze_32025];
                            
                            float defunc_1_op_res_32031;
                            
                            defunc_1_op_res_32031 = x_32029 + x_32030;
                            x_32029 = defunc_1_op_res_32031;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860)] =
                    x_32029;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44887;
                    int32_t skip_waves_44888;
                    
                    skip_waves_44888 = 1;
                    
                    float x_44875;
                    float x_44876;
                    
                    offset_44887 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44860,
                                  sext_i64_i32(segred_group_sizze_32025))) {
                            x_44875 = ((__local
                                        float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860 +
                                                                    offset_44887)];
                        }
                    }
                    offset_44887 = 1;
                    while (slt32(offset_44887, wave_sizze_44862)) {
                        if (slt32(local_tid_44860 + offset_44887,
                                  sext_i64_i32(segred_group_sizze_32025)) &&
                            ((local_tid_44860 - squot32(local_tid_44860,
                                                        wave_sizze_44862) *
                              wave_sizze_44862) & (2 * offset_44887 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44876 = ((volatile __local
                                            float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860 +
                                                                        offset_44887)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44877 = x_44875 + x_44876;
                                
                                x_44875 = defunc_1_op_res_44877;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860)] =
                                    x_44875;
                            }
                        }
                        offset_44887 *= 2;
                    }
                    while (slt32(skip_waves_44888,
                                 squot32(sext_i64_i32(segred_group_sizze_32025) +
                                         wave_sizze_44862 - 1,
                                         wave_sizze_44862))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44887 = skip_waves_44888 * wave_sizze_44862;
                        if (slt32(local_tid_44860 + offset_44887,
                                  sext_i64_i32(segred_group_sizze_32025)) &&
                            ((local_tid_44860 - squot32(local_tid_44860,
                                                        wave_sizze_44862) *
                              wave_sizze_44862) == 0 &&
                             (squot32(local_tid_44860, wave_sizze_44862) & (2 *
                                                                            skip_waves_44888 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44876 = ((__local
                                            float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860 +
                                                                        offset_44887)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44877 = x_44875 + x_44876;
                                
                                x_44875 = defunc_1_op_res_44877;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44864)[sext_i32_i64(local_tid_44860)] =
                                    x_44875;
                            }
                        }
                        skip_waves_44888 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44860 == 0) {
                            ((__global float *) mem_43695)[gtid_31970] =
                                x_44875;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32025
}
__kernel void mainDetailedzisegred_large_32000(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44806_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44804_backing_aligned_1,
                                               int64_t N_27550,
                                               int64_t i32_res_27560,
                                               int64_t num_groups_32012,
                                               int64_t groups_per_segment_44790,
                                               int64_t elements_per_thread_44791,
                                               int64_t virt_num_groups_44792,
                                               int64_t threads_per_segment_44794,
                                               __global
                                               unsigned char *images_mem_42841,
                                               __global
                                               unsigned char *mem_43692,
                                               __global
                                               unsigned char *group_res_arr_mem_44795,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44797)
{
    #define segred_group_sizze_32011 (mainDetailedzisegred_group_sizze_31994)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44806_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44806_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44804_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44804_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44799;
    int32_t local_tid_44800;
    int64_t group_sizze_44803;
    int32_t wave_sizze_44802;
    int32_t group_tid_44801;
    
    global_tid_44799 = get_global_id(0);
    local_tid_44800 = get_local_id(0);
    group_sizze_44803 = get_local_size(0);
    wave_sizze_44802 = LOCKSTEP_WIDTH;
    group_tid_44801 = get_group_id(0);
    
    int32_t phys_tid_32000;
    
    phys_tid_32000 = global_tid_44799;
    
    __local char *red_arr_mem_44804;
    
    red_arr_mem_44804 = (__local char *) red_arr_mem_44804_backing_0;
    
    __local char *sync_arr_mem_44806;
    
    sync_arr_mem_44806 = (__local char *) sync_arr_mem_44806_backing_1;
    
    int32_t phys_group_id_44808;
    
    phys_group_id_44808 = get_group_id(0);
    for (int32_t i_44809 = 0; i_44809 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44792) - phys_group_id_44808,
                   sext_i64_i32(num_groups_32012)); i_44809++) {
        int32_t virt_group_id_44810 = phys_group_id_44808 + i_44809 *
                sext_i64_i32(num_groups_32012);
        int32_t flat_segment_id_44811 = squot32(virt_group_id_44810,
                                                sext_i64_i32(groups_per_segment_44790));
        int64_t global_tid_44812 = srem64(sext_i32_i64(virt_group_id_44810) *
                                          segred_group_sizze_32011 +
                                          sext_i32_i64(local_tid_44800),
                                          segred_group_sizze_32011 *
                                          groups_per_segment_44790);
        int64_t gtid_31991 = sext_i32_i64(flat_segment_id_44811);
        int64_t gtid_31999;
        int32_t x_acc_44813;
        int64_t chunk_sizze_44814;
        
        chunk_sizze_44814 = smin64(elements_per_thread_44791,
                                   sdiv_up64(i32_res_27560 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44812)),
                                             threads_per_segment_44794));
        
        int32_t x_32015;
        int32_t x_32016;
        
        // neutral-initialise the accumulators
        {
            x_acc_44813 = 0;
        }
        for (int64_t i_44818 = 0; i_44818 < chunk_sizze_44814; i_44818++) {
            gtid_31999 = sext_i32_i64(sext_i64_i32(global_tid_44812)) +
                threads_per_segment_44794 * i_44818;
            // apply map function
            {
                float x_32019 = ((__global
                                  float *) images_mem_42841)[gtid_31991 *
                                                             N_27550 +
                                                             gtid_31999];
                bool isnan_res_32020;
                
                isnan_res_32020 = futrts_isnan32(x_32019);
                
                bool cond_32021 = !isnan_res_32020;
                int32_t defunc_0_f_res_32022 = btoi_bool_i32(cond_32021);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_32015 = x_acc_44813;
                }
                // load new values
                {
                    x_32016 = defunc_0_f_res_32022;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_32017 = add32(x_32015, x_32016);
                    
                    // store in accumulator
                    {
                        x_acc_44813 = defunc_1_op_res_32017;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32015 = x_acc_44813;
            ((__local
              int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800)] =
                x_32015;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44819;
        int32_t skip_waves_44820;
        
        skip_waves_44820 = 1;
        
        int32_t x_44815;
        int32_t x_44816;
        
        offset_44819 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44800,
                      sext_i64_i32(segred_group_sizze_32011))) {
                x_44815 = ((__local
                            int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800 +
                                                          offset_44819)];
            }
        }
        offset_44819 = 1;
        while (slt32(offset_44819, wave_sizze_44802)) {
            if (slt32(local_tid_44800 + offset_44819,
                      sext_i64_i32(segred_group_sizze_32011)) &&
                ((local_tid_44800 - squot32(local_tid_44800, wave_sizze_44802) *
                  wave_sizze_44802) & (2 * offset_44819 - 1)) == 0) {
                // read array element
                {
                    x_44816 = ((volatile __local
                                int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800 +
                                                              offset_44819)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44817 = add32(x_44815, x_44816);
                    
                    x_44815 = defunc_1_op_res_44817;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800)] =
                        x_44815;
                }
            }
            offset_44819 *= 2;
        }
        while (slt32(skip_waves_44820,
                     squot32(sext_i64_i32(segred_group_sizze_32011) +
                             wave_sizze_44802 - 1, wave_sizze_44802))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44819 = skip_waves_44820 * wave_sizze_44802;
            if (slt32(local_tid_44800 + offset_44819,
                      sext_i64_i32(segred_group_sizze_32011)) &&
                ((local_tid_44800 - squot32(local_tid_44800, wave_sizze_44802) *
                  wave_sizze_44802) == 0 && (squot32(local_tid_44800,
                                                     wave_sizze_44802) & (2 *
                                                                          skip_waves_44820 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44816 = ((__local
                                int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800 +
                                                              offset_44819)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44817 = add32(x_44815, x_44816);
                    
                    x_44815 = defunc_1_op_res_44817;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800)] =
                        x_44815;
                }
            }
            skip_waves_44820 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44800) == (int64_t) 0) {
                x_acc_44813 = x_44815;
            }
        }
        if (groups_per_segment_44790 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44800 == 0) {
                    ((__global int32_t *) mem_43692)[gtid_31991] = x_acc_44813;
                }
            }
        } else {
            int32_t old_counter_44821;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44800 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44795)[sext_i32_i64(virt_group_id_44810) *
                                                          segred_group_sizze_32011] =
                        x_acc_44813;
                    mem_fence_global();
                    old_counter_44821 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44797)[sext_i32_i64(srem32(flat_segment_id_44811,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44806)[(int64_t) 0] =
                        old_counter_44821 == groups_per_segment_44790 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44822;
            
            is_last_group_44822 = ((__local
                                    bool *) sync_arr_mem_44806)[(int64_t) 0];
            if (is_last_group_44822) {
                if (local_tid_44800 == 0) {
                    old_counter_44821 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44797)[sext_i32_i64(srem32(flat_segment_id_44811,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44790));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44823 =
                            sdiv_up64(groups_per_segment_44790,
                                      segred_group_sizze_32011);
                    
                    x_32015 = 0;
                    for (int64_t i_44824 = 0; i_44824 < read_per_thread_44823;
                         i_44824++) {
                        int64_t group_res_id_44825 =
                                sext_i32_i64(local_tid_44800) *
                                read_per_thread_44823 + i_44824;
                        int64_t index_of_group_res_44826 =
                                sext_i32_i64(flat_segment_id_44811) *
                                groups_per_segment_44790 + group_res_id_44825;
                        
                        if (slt64(group_res_id_44825,
                                  groups_per_segment_44790)) {
                            x_32016 = ((__global
                                        int32_t *) group_res_arr_mem_44795)[index_of_group_res_44826 *
                                                                            segred_group_sizze_32011];
                            
                            int32_t defunc_1_op_res_32017;
                            
                            defunc_1_op_res_32017 = add32(x_32015, x_32016);
                            x_32015 = defunc_1_op_res_32017;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800)] =
                    x_32015;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44827;
                    int32_t skip_waves_44828;
                    
                    skip_waves_44828 = 1;
                    
                    int32_t x_44815;
                    int32_t x_44816;
                    
                    offset_44827 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44800,
                                  sext_i64_i32(segred_group_sizze_32011))) {
                            x_44815 = ((__local
                                        int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800 +
                                                                      offset_44827)];
                        }
                    }
                    offset_44827 = 1;
                    while (slt32(offset_44827, wave_sizze_44802)) {
                        if (slt32(local_tid_44800 + offset_44827,
                                  sext_i64_i32(segred_group_sizze_32011)) &&
                            ((local_tid_44800 - squot32(local_tid_44800,
                                                        wave_sizze_44802) *
                              wave_sizze_44802) & (2 * offset_44827 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44816 = ((volatile __local
                                            int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800 +
                                                                          offset_44827)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44817 = add32(x_44815,
                                                                      x_44816);
                                
                                x_44815 = defunc_1_op_res_44817;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800)] =
                                    x_44815;
                            }
                        }
                        offset_44827 *= 2;
                    }
                    while (slt32(skip_waves_44828,
                                 squot32(sext_i64_i32(segred_group_sizze_32011) +
                                         wave_sizze_44802 - 1,
                                         wave_sizze_44802))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44827 = skip_waves_44828 * wave_sizze_44802;
                        if (slt32(local_tid_44800 + offset_44827,
                                  sext_i64_i32(segred_group_sizze_32011)) &&
                            ((local_tid_44800 - squot32(local_tid_44800,
                                                        wave_sizze_44802) *
                              wave_sizze_44802) == 0 &&
                             (squot32(local_tid_44800, wave_sizze_44802) & (2 *
                                                                            skip_waves_44828 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44816 = ((__local
                                            int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800 +
                                                                          offset_44827)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44817 = add32(x_44815,
                                                                      x_44816);
                                
                                x_44815 = defunc_1_op_res_44817;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44804)[sext_i32_i64(local_tid_44800)] =
                                    x_44815;
                            }
                        }
                        skip_waves_44828 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44800 == 0) {
                            ((__global int32_t *) mem_43692)[gtid_31991] =
                                x_44815;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32011
}
__kernel void mainDetailedzisegred_large_32151(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_44975_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_44973_backing_aligned_1,
                                               int64_t N_27550,
                                               int64_t i32_res_27921,
                                               int64_t num_groups_32169,
                                               int64_t groups_per_segment_44959,
                                               int64_t elements_per_thread_44960,
                                               int64_t virt_num_groups_44961,
                                               int64_t threads_per_segment_44963,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43638,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43704,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43705,
                                               __global
                                               unsigned char *mem_43738,
                                               __global
                                               unsigned char *group_res_arr_mem_44964,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_44966)
{
    #define segred_group_sizze_32168 (mainDetailedzisegred_group_sizze_32145)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44975_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44975_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44973_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44973_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44968;
    int32_t local_tid_44969;
    int64_t group_sizze_44972;
    int32_t wave_sizze_44971;
    int32_t group_tid_44970;
    
    global_tid_44968 = get_global_id(0);
    local_tid_44969 = get_local_id(0);
    group_sizze_44972 = get_local_size(0);
    wave_sizze_44971 = LOCKSTEP_WIDTH;
    group_tid_44970 = get_group_id(0);
    
    int32_t phys_tid_32151;
    
    phys_tid_32151 = global_tid_44968;
    
    __local char *red_arr_mem_44973;
    
    red_arr_mem_44973 = (__local char *) red_arr_mem_44973_backing_0;
    
    __local char *sync_arr_mem_44975;
    
    sync_arr_mem_44975 = (__local char *) sync_arr_mem_44975_backing_1;
    
    int32_t phys_group_id_44977;
    
    phys_group_id_44977 = get_group_id(0);
    for (int32_t i_44978 = 0; i_44978 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44961) - phys_group_id_44977,
                   sext_i64_i32(num_groups_32169)); i_44978++) {
        int32_t virt_group_id_44979 = phys_group_id_44977 + i_44978 *
                sext_i64_i32(num_groups_32169);
        int32_t flat_segment_id_44980 = squot32(virt_group_id_44979,
                                                sext_i64_i32(groups_per_segment_44959));
        int64_t global_tid_44981 = srem64(sext_i32_i64(virt_group_id_44979) *
                                          segred_group_sizze_32168 +
                                          sext_i32_i64(local_tid_44969),
                                          segred_group_sizze_32168 *
                                          groups_per_segment_44959);
        int64_t gtid_32142 = sext_i32_i64(flat_segment_id_44980);
        int64_t gtid_32150;
        float x_acc_44982;
        int64_t chunk_sizze_44983;
        
        chunk_sizze_44983 = smin64(elements_per_thread_44960,
                                   sdiv_up64(i32_res_27921 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44981)),
                                             threads_per_segment_44963));
        
        float x_32172;
        float x_32173;
        
        // neutral-initialise the accumulators
        {
            x_acc_44982 = 0.0F;
        }
        for (int64_t i_44987 = 0; i_44987 < chunk_sizze_44983; i_44987++) {
            gtid_32150 = sext_i32_i64(sext_i64_i32(global_tid_44981)) +
                threads_per_segment_44963 * i_44987;
            // apply map function
            {
                int32_t x_32177 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43704)[gtid_32142];
                int32_t index_primexp_40933 = sext_i64_i32(gtid_32150);
                bool cond_32179 = slt32(index_primexp_40933, x_32177);
                float defunc_0_f_res_32180;
                
                if (cond_32179) {
                    int32_t x_32176 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_32142];
                    int32_t x_32181 = add32(x_32176, index_primexp_40933);
                    int32_t x_32182 = sub32(x_32181, x_32177);
                    int32_t i_32183 = add32(1, x_32182);
                    int64_t i_32184 = sext_i32_i64(i_32183);
                    float defunc_0_f_res_t_res_32185 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_32142 *
                                                                                              N_27550 +
                                                                                              i_32184];
                    
                    defunc_0_f_res_32180 = defunc_0_f_res_t_res_32185;
                } else {
                    defunc_0_f_res_32180 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_32172 = x_acc_44982;
                }
                // load new values
                {
                    x_32173 = defunc_0_f_res_32180;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_32174 = x_32172 + x_32173;
                    
                    // store in accumulator
                    {
                        x_acc_44982 = defunc_1_op_res_32174;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_32172 = x_acc_44982;
            ((__local
              float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                x_32172;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44988;
        int32_t skip_waves_44989;
        
        skip_waves_44989 = 1;
        
        float x_44984;
        float x_44985;
        
        offset_44988 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44969,
                      sext_i64_i32(segred_group_sizze_32168))) {
                x_44984 = ((__local
                            float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969 +
                                                        offset_44988)];
            }
        }
        offset_44988 = 1;
        while (slt32(offset_44988, wave_sizze_44971)) {
            if (slt32(local_tid_44969 + offset_44988,
                      sext_i64_i32(segred_group_sizze_32168)) &&
                ((local_tid_44969 - squot32(local_tid_44969, wave_sizze_44971) *
                  wave_sizze_44971) & (2 * offset_44988 - 1)) == 0) {
                // read array element
                {
                    x_44985 = ((volatile __local
                                float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969 +
                                                            offset_44988)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44986 = x_44984 + x_44985;
                    
                    x_44984 = defunc_1_op_res_44986;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                        x_44984;
                }
            }
            offset_44988 *= 2;
        }
        while (slt32(skip_waves_44989,
                     squot32(sext_i64_i32(segred_group_sizze_32168) +
                             wave_sizze_44971 - 1, wave_sizze_44971))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44988 = skip_waves_44989 * wave_sizze_44971;
            if (slt32(local_tid_44969 + offset_44988,
                      sext_i64_i32(segred_group_sizze_32168)) &&
                ((local_tid_44969 - squot32(local_tid_44969, wave_sizze_44971) *
                  wave_sizze_44971) == 0 && (squot32(local_tid_44969,
                                                     wave_sizze_44971) & (2 *
                                                                          skip_waves_44989 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44985 = ((__local
                                float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969 +
                                                            offset_44988)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44986 = x_44984 + x_44985;
                    
                    x_44984 = defunc_1_op_res_44986;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                        x_44984;
                }
            }
            skip_waves_44989 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44969) == (int64_t) 0) {
                x_acc_44982 = x_44984;
            }
        }
        if (groups_per_segment_44959 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44969 == 0) {
                    ((__global float *) mem_43738)[gtid_32142] = x_acc_44982;
                }
            }
        } else {
            int32_t old_counter_44990;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44969 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44964)[sext_i32_i64(virt_group_id_44979) *
                                                        segred_group_sizze_32168] =
                        x_acc_44982;
                    mem_fence_global();
                    old_counter_44990 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44966)[sext_i32_i64(srem32(flat_segment_id_44980,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44975)[(int64_t) 0] =
                        old_counter_44990 == groups_per_segment_44959 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44991;
            
            is_last_group_44991 = ((__local
                                    bool *) sync_arr_mem_44975)[(int64_t) 0];
            if (is_last_group_44991) {
                if (local_tid_44969 == 0) {
                    old_counter_44990 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_44966)[sext_i32_i64(srem32(flat_segment_id_44980,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44959));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44992 =
                            sdiv_up64(groups_per_segment_44959,
                                      segred_group_sizze_32168);
                    
                    x_32172 = 0.0F;
                    for (int64_t i_44993 = 0; i_44993 < read_per_thread_44992;
                         i_44993++) {
                        int64_t group_res_id_44994 =
                                sext_i32_i64(local_tid_44969) *
                                read_per_thread_44992 + i_44993;
                        int64_t index_of_group_res_44995 =
                                sext_i32_i64(flat_segment_id_44980) *
                                groups_per_segment_44959 + group_res_id_44994;
                        
                        if (slt64(group_res_id_44994,
                                  groups_per_segment_44959)) {
                            x_32173 = ((__global
                                        float *) group_res_arr_mem_44964)[index_of_group_res_44995 *
                                                                          segred_group_sizze_32168];
                            
                            float defunc_1_op_res_32174;
                            
                            defunc_1_op_res_32174 = x_32172 + x_32173;
                            x_32172 = defunc_1_op_res_32174;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                    x_32172;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44996;
                    int32_t skip_waves_44997;
                    
                    skip_waves_44997 = 1;
                    
                    float x_44984;
                    float x_44985;
                    
                    offset_44996 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44969,
                                  sext_i64_i32(segred_group_sizze_32168))) {
                            x_44984 = ((__local
                                        float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969 +
                                                                    offset_44996)];
                        }
                    }
                    offset_44996 = 1;
                    while (slt32(offset_44996, wave_sizze_44971)) {
                        if (slt32(local_tid_44969 + offset_44996,
                                  sext_i64_i32(segred_group_sizze_32168)) &&
                            ((local_tid_44969 - squot32(local_tid_44969,
                                                        wave_sizze_44971) *
                              wave_sizze_44971) & (2 * offset_44996 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44985 = ((volatile __local
                                            float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969 +
                                                                        offset_44996)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44986 = x_44984 + x_44985;
                                
                                x_44984 = defunc_1_op_res_44986;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                                    x_44984;
                            }
                        }
                        offset_44996 *= 2;
                    }
                    while (slt32(skip_waves_44997,
                                 squot32(sext_i64_i32(segred_group_sizze_32168) +
                                         wave_sizze_44971 - 1,
                                         wave_sizze_44971))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44996 = skip_waves_44997 * wave_sizze_44971;
                        if (slt32(local_tid_44969 + offset_44996,
                                  sext_i64_i32(segred_group_sizze_32168)) &&
                            ((local_tid_44969 - squot32(local_tid_44969,
                                                        wave_sizze_44971) *
                              wave_sizze_44971) == 0 &&
                             (squot32(local_tid_44969, wave_sizze_44971) & (2 *
                                                                            skip_waves_44997 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44985 = ((__local
                                            float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969 +
                                                                        offset_44996)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44986 = x_44984 + x_44985;
                                
                                x_44984 = defunc_1_op_res_44986;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44973)[sext_i32_i64(local_tid_44969)] =
                                    x_44984;
                            }
                        }
                        skip_waves_44997 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44969 == 0) {
                            ((__global float *) mem_43738)[gtid_32142] =
                                x_44984;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32168
}
__kernel void mainDetailedzisegred_large_33323(__global int *global_failure,
                                               __local volatile
                                               int64_t *sync_arr_mem_45176_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45174_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_45172_backing_aligned_2,
                                               __local volatile
                                               int64_t *red_arr_mem_45170_backing_aligned_3,
                                               int64_t iota32_arg_27946,
                                               int64_t num_groups_33494,
                                               int64_t groups_per_segment_45152,
                                               int64_t elements_per_thread_45153,
                                               int64_t virt_num_groups_45154,
                                               __global
                                               unsigned char *mem_43744,
                                               __global
                                               unsigned char *mem_43808,
                                               __global
                                               unsigned char *mem_43810,
                                               __global
                                               unsigned char *mem_43814,
                                               __global
                                               unsigned char *mem_43817,
                                               __global
                                               unsigned char *mem_43819,
                                               __global
                                               unsigned char *mem_43821,
                                               __global
                                               unsigned char *mem_43824,
                                               __global
                                               unsigned char *group_res_arr_mem_45157,
                                               __global
                                               unsigned char *group_res_arr_mem_45159,
                                               __global
                                               unsigned char *group_res_arr_mem_45161,
                                               __global
                                               unsigned char *mainDetailedzicounter_mem_45163)
{
    #define segred_group_sizze_33493 (mainDetailedzisegred_group_sizze_33317)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45176_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45176_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45174_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45174_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45172_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45172_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45170_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45170_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45165;
    int32_t local_tid_45166;
    int64_t group_sizze_45169;
    int32_t wave_sizze_45168;
    int32_t group_tid_45167;
    
    global_tid_45165 = get_global_id(0);
    local_tid_45166 = get_local_id(0);
    group_sizze_45169 = get_local_size(0);
    wave_sizze_45168 = LOCKSTEP_WIDTH;
    group_tid_45167 = get_group_id(0);
    
    int32_t phys_tid_33323;
    
    phys_tid_33323 = global_tid_45165;
    
    __local char *red_arr_mem_45170;
    
    red_arr_mem_45170 = (__local char *) red_arr_mem_45170_backing_0;
    
    __local char *red_arr_mem_45172;
    
    red_arr_mem_45172 = (__local char *) red_arr_mem_45172_backing_1;
    
    __local char *red_arr_mem_45174;
    
    red_arr_mem_45174 = (__local char *) red_arr_mem_45174_backing_2;
    
    __local char *sync_arr_mem_45176;
    
    sync_arr_mem_45176 = (__local char *) sync_arr_mem_45176_backing_3;
    
    int32_t phys_group_id_45178;
    
    phys_group_id_45178 = get_group_id(0);
    for (int32_t i_45179 = 0; i_45179 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45154) - phys_group_id_45178,
                   sext_i64_i32(num_groups_33494)); i_45179++) {
        int32_t virt_group_id_45180 = phys_group_id_45178 + i_45179 *
                sext_i64_i32(num_groups_33494);
        int32_t flat_segment_id_45181 = squot32(virt_group_id_45180,
                                                sext_i64_i32(groups_per_segment_45152));
        int64_t global_tid_45182 = srem64(sext_i32_i64(virt_group_id_45180) *
                                          segred_group_sizze_33493 +
                                          sext_i32_i64(local_tid_45166),
                                          segred_group_sizze_33493 *
                                          groups_per_segment_45152);
        int64_t gtid_33314 = sext_i32_i64(flat_segment_id_45181);
        int64_t gtid_33322;
        bool x_acc_45183;
        int32_t x_acc_45184;
        float x_acc_45185;
        int64_t chunk_sizze_45186;
        int64_t starting_point_45187;
        
        starting_point_45187 = sext_i32_i64(sext_i64_i32(global_tid_45182)) *
            elements_per_thread_45153;
        
        int64_t remaining_elements_45188;
        
        remaining_elements_45188 = iota32_arg_27946 - starting_point_45187;
        if (sle64(remaining_elements_45188, (int64_t) 0) ||
            sle64(iota32_arg_27946, starting_point_45187)) {
            chunk_sizze_45186 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_27946,
                      (sext_i32_i64(sext_i64_i32(global_tid_45182)) +
                       (int64_t) 1) * elements_per_thread_45153)) {
                chunk_sizze_45186 = iota32_arg_27946 -
                    sext_i32_i64(sext_i64_i32(global_tid_45182)) *
                    elements_per_thread_45153;
            } else {
                chunk_sizze_45186 = elements_per_thread_45153;
            }
        }
        
        bool x_33500;
        int32_t x_33501;
        float x_33502;
        bool x_33503;
        int32_t x_33504;
        float x_33505;
        
        // neutral-initialise the accumulators
        {
            x_acc_45183 = 0;
            x_acc_45184 = -1;
            x_acc_45185 = 0.0F;
        }
        for (int64_t i_45203 = 0; i_45203 < elements_per_thread_45153;
             i_45203++) {
            gtid_33322 = sext_i32_i64(local_tid_45166) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45182),
                                      sext_i64_i32(segred_group_sizze_33493))) *
                 elements_per_thread_45153 + i_45203) *
                segred_group_sizze_33493;
            if (slt64(gtid_33322, iota32_arg_27946)) {
                // apply map function
                {
                    int32_t y_33514 = ((__global
                                        int32_t *) mem_43810)[gtid_33314];
                    float y_33515 = ((__global float *) mem_43808)[gtid_33314];
                    float x_33519 = ((__global float *) mem_43814)[gtid_33314 *
                                                                   iota32_arg_27946 +
                                                                   gtid_33322];
                    float x_33520 = ((__global float *) mem_43744)[gtid_33322];
                    int32_t index_primexp_40955 = sext_i64_i32(gtid_33322);
                    float defunc_0_f_res_33523 = x_33519 / y_33515;
                    bool cond_33524 = slt32(index_primexp_40955, y_33514);
                    bool isnan_res_33525;
                    
                    isnan_res_33525 = futrts_isnan32(defunc_0_f_res_33523);
                    
                    bool cond_t_res_33526 = !isnan_res_33525;
                    bool x_33527 = cond_33524 && cond_t_res_33526;
                    float abs_res_33528 = (float) fabs(defunc_0_f_res_33523);
                    bool defunc_2_f_res_t_res_33529 = x_33520 < abs_res_33528;
                    bool x_33530 = x_33527 && defunc_2_f_res_t_res_33529;
                    float defunc_1_f_res_33531;
                    
                    if (cond_33524) {
                        defunc_1_f_res_33531 = defunc_0_f_res_33523;
                    } else {
                        defunc_1_f_res_33531 = 0.0F;
                    }
                    // save map-out results
                    {
                        ((__global float *) mem_43824)[gtid_33314 *
                                                       iota32_arg_27946 +
                                                       gtid_33322] =
                            defunc_0_f_res_33523;
                    }
                    // load accumulator
                    {
                        x_33500 = x_acc_45183;
                        x_33501 = x_acc_45184;
                        x_33502 = x_acc_45185;
                    }
                    // load new values
                    {
                        x_33503 = x_33530;
                        x_33504 = index_primexp_40955;
                        x_33505 = defunc_1_f_res_33531;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_33506;
                        int32_t defunc_1_op_res_33507;
                        
                        if (x_33500) {
                            defunc_1_op_res_33506 = x_33500;
                            defunc_1_op_res_33507 = x_33501;
                        } else {
                            bool x_33508 = x_33503 && x_33503;
                            bool x_33509 = !x_33503;
                            bool y_33510 = x_33500 && x_33509;
                            bool defunc_1_op_res_f_res_33511 = x_33508 ||
                                 y_33510;
                            int32_t defunc_1_op_res_f_res_33512;
                            
                            if (x_33503) {
                                defunc_1_op_res_f_res_33512 = x_33504;
                            } else {
                                defunc_1_op_res_f_res_33512 = x_33501;
                            }
                            defunc_1_op_res_33506 = defunc_1_op_res_f_res_33511;
                            defunc_1_op_res_33507 = defunc_1_op_res_f_res_33512;
                        }
                        
                        float defunc_1_op_res_33513 = x_33502 + x_33505;
                        
                        // store in accumulator
                        {
                            x_acc_45183 = defunc_1_op_res_33506;
                            x_acc_45184 = defunc_1_op_res_33507;
                            x_acc_45185 = defunc_1_op_res_33513;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_33500 = x_acc_45183;
                x_33501 = x_acc_45184;
                x_33502 = x_acc_45185;
                ((__local
                  bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166)] =
                    x_33500;
                ((__local
                  int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166)] =
                    x_33501;
                ((__local
                  float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166)] =
                    x_33502;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45204;
            int32_t skip_waves_45205;
            
            skip_waves_45205 = 1;
            
            bool x_45189;
            int32_t x_45190;
            float x_45191;
            bool x_45192;
            int32_t x_45193;
            float x_45194;
            
            offset_45204 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45166,
                          sext_i64_i32(segred_group_sizze_33493))) {
                    x_45189 = ((__local
                                bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166 +
                                                           offset_45204)];
                    x_45190 = ((__local
                                int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166 +
                                                              offset_45204)];
                    x_45191 = ((__local
                                float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166 +
                                                            offset_45204)];
                }
            }
            offset_45204 = 1;
            while (slt32(offset_45204, wave_sizze_45168)) {
                if (slt32(local_tid_45166 + offset_45204,
                          sext_i64_i32(segred_group_sizze_33493)) &&
                    ((local_tid_45166 - squot32(local_tid_45166,
                                                wave_sizze_45168) *
                      wave_sizze_45168) & (2 * offset_45204 - 1)) == 0) {
                    // read array element
                    {
                        x_45192 = ((volatile __local
                                    bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166 +
                                                               offset_45204)];
                        x_45193 = ((volatile __local
                                    int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166 +
                                                                  offset_45204)];
                        x_45194 = ((volatile __local
                                    float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166 +
                                                                offset_45204)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45195;
                        int32_t defunc_1_op_res_45196;
                        
                        if (x_45189) {
                            defunc_1_op_res_45195 = x_45189;
                            defunc_1_op_res_45196 = x_45190;
                        } else {
                            bool x_45197 = x_45192 && x_45192;
                            bool x_45198 = !x_45192;
                            bool y_45199 = x_45189 && x_45198;
                            bool defunc_1_op_res_f_res_45200 = x_45197 ||
                                 y_45199;
                            int32_t defunc_1_op_res_f_res_45201;
                            
                            if (x_45192) {
                                defunc_1_op_res_f_res_45201 = x_45193;
                            } else {
                                defunc_1_op_res_f_res_45201 = x_45190;
                            }
                            defunc_1_op_res_45195 = defunc_1_op_res_f_res_45200;
                            defunc_1_op_res_45196 = defunc_1_op_res_f_res_45201;
                        }
                        
                        float defunc_1_op_res_45202 = x_45191 + x_45194;
                        
                        x_45189 = defunc_1_op_res_45195;
                        x_45190 = defunc_1_op_res_45196;
                        x_45191 = defunc_1_op_res_45202;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166)] =
                            x_45189;
                        ((volatile __local
                          int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166)] =
                            x_45190;
                        ((volatile __local
                          float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166)] =
                            x_45191;
                    }
                }
                offset_45204 *= 2;
            }
            while (slt32(skip_waves_45205,
                         squot32(sext_i64_i32(segred_group_sizze_33493) +
                                 wave_sizze_45168 - 1, wave_sizze_45168))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45204 = skip_waves_45205 * wave_sizze_45168;
                if (slt32(local_tid_45166 + offset_45204,
                          sext_i64_i32(segred_group_sizze_33493)) &&
                    ((local_tid_45166 - squot32(local_tid_45166,
                                                wave_sizze_45168) *
                      wave_sizze_45168) == 0 && (squot32(local_tid_45166,
                                                         wave_sizze_45168) &
                                                 (2 * skip_waves_45205 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45192 = ((__local
                                    bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166 +
                                                               offset_45204)];
                        x_45193 = ((__local
                                    int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166 +
                                                                  offset_45204)];
                        x_45194 = ((__local
                                    float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166 +
                                                                offset_45204)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45195;
                        int32_t defunc_1_op_res_45196;
                        
                        if (x_45189) {
                            defunc_1_op_res_45195 = x_45189;
                            defunc_1_op_res_45196 = x_45190;
                        } else {
                            bool x_45197 = x_45192 && x_45192;
                            bool x_45198 = !x_45192;
                            bool y_45199 = x_45189 && x_45198;
                            bool defunc_1_op_res_f_res_45200 = x_45197 ||
                                 y_45199;
                            int32_t defunc_1_op_res_f_res_45201;
                            
                            if (x_45192) {
                                defunc_1_op_res_f_res_45201 = x_45193;
                            } else {
                                defunc_1_op_res_f_res_45201 = x_45190;
                            }
                            defunc_1_op_res_45195 = defunc_1_op_res_f_res_45200;
                            defunc_1_op_res_45196 = defunc_1_op_res_f_res_45201;
                        }
                        
                        float defunc_1_op_res_45202 = x_45191 + x_45194;
                        
                        x_45189 = defunc_1_op_res_45195;
                        x_45190 = defunc_1_op_res_45196;
                        x_45191 = defunc_1_op_res_45202;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166)] =
                            x_45189;
                        ((__local
                          int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166)] =
                            x_45190;
                        ((__local
                          float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166)] =
                            x_45191;
                    }
                }
                skip_waves_45205 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45166) == (int64_t) 0) {
                    x_acc_45183 = x_45189;
                    x_acc_45184 = x_45190;
                    x_acc_45185 = x_45191;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45166) == (int64_t) 0)) {
                    x_acc_45183 = 0;
                    x_acc_45184 = -1;
                    x_acc_45185 = 0.0F;
                }
            }
        }
        x_33500 = x_acc_45183;
        x_33501 = x_acc_45184;
        x_33502 = x_acc_45185;
        if (groups_per_segment_45152 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45166 == 0) {
                    ((__global bool *) mem_43817)[gtid_33314] = x_acc_45183;
                    ((__global int32_t *) mem_43819)[gtid_33314] = x_acc_45184;
                    ((__global float *) mem_43821)[gtid_33314] = x_acc_45185;
                }
            }
        } else {
            int32_t old_counter_45206;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45166 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45157)[sext_i32_i64(virt_group_id_45180) *
                                                       segred_group_sizze_33493] =
                        x_acc_45183;
                    ((__global
                      int32_t *) group_res_arr_mem_45159)[sext_i32_i64(virt_group_id_45180) *
                                                          segred_group_sizze_33493] =
                        x_acc_45184;
                    ((__global
                      float *) group_res_arr_mem_45161)[sext_i32_i64(virt_group_id_45180) *
                                                        segred_group_sizze_33493] =
                        x_acc_45185;
                    mem_fence_global();
                    old_counter_45206 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45163)[sext_i32_i64(srem32(flat_segment_id_45181,
                                                                                                             10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45176)[(int64_t) 0] =
                        old_counter_45206 == groups_per_segment_45152 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45207;
            
            is_last_group_45207 = ((__local
                                    bool *) sync_arr_mem_45176)[(int64_t) 0];
            if (is_last_group_45207) {
                if (local_tid_45166 == 0) {
                    old_counter_45206 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainDetailedzicounter_mem_45163)[sext_i32_i64(srem32(flat_segment_id_45181,
                                                                                                             10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45152));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45208 =
                            sdiv_up64(groups_per_segment_45152,
                                      segred_group_sizze_33493);
                    
                    x_33500 = 0;
                    x_33501 = -1;
                    x_33502 = 0.0F;
                    for (int64_t i_45209 = 0; i_45209 < read_per_thread_45208;
                         i_45209++) {
                        int64_t group_res_id_45210 =
                                sext_i32_i64(local_tid_45166) *
                                read_per_thread_45208 + i_45209;
                        int64_t index_of_group_res_45211 =
                                sext_i32_i64(flat_segment_id_45181) *
                                groups_per_segment_45152 + group_res_id_45210;
                        
                        if (slt64(group_res_id_45210,
                                  groups_per_segment_45152)) {
                            x_33503 = ((__global
                                        bool *) group_res_arr_mem_45157)[index_of_group_res_45211 *
                                                                         segred_group_sizze_33493];
                            x_33504 = ((__global
                                        int32_t *) group_res_arr_mem_45159)[index_of_group_res_45211 *
                                                                            segred_group_sizze_33493];
                            x_33505 = ((__global
                                        float *) group_res_arr_mem_45161)[index_of_group_res_45211 *
                                                                          segred_group_sizze_33493];
                            
                            bool defunc_1_op_res_33506;
                            int32_t defunc_1_op_res_33507;
                            
                            if (x_33500) {
                                defunc_1_op_res_33506 = x_33500;
                                defunc_1_op_res_33507 = x_33501;
                            } else {
                                bool x_33508 = x_33503 && x_33503;
                                bool x_33509 = !x_33503;
                                bool y_33510 = x_33500 && x_33509;
                                bool defunc_1_op_res_f_res_33511 = x_33508 ||
                                     y_33510;
                                int32_t defunc_1_op_res_f_res_33512;
                                
                                if (x_33503) {
                                    defunc_1_op_res_f_res_33512 = x_33504;
                                } else {
                                    defunc_1_op_res_f_res_33512 = x_33501;
                                }
                                defunc_1_op_res_33506 =
                                    defunc_1_op_res_f_res_33511;
                                defunc_1_op_res_33507 =
                                    defunc_1_op_res_f_res_33512;
                            }
                            
                            float defunc_1_op_res_33513 = x_33502 + x_33505;
                            
                            x_33500 = defunc_1_op_res_33506;
                            x_33501 = defunc_1_op_res_33507;
                            x_33502 = defunc_1_op_res_33513;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166)] =
                    x_33500;
                ((__local
                  int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166)] =
                    x_33501;
                ((__local
                  float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166)] =
                    x_33502;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45212;
                    int32_t skip_waves_45213;
                    
                    skip_waves_45213 = 1;
                    
                    bool x_45189;
                    int32_t x_45190;
                    float x_45191;
                    bool x_45192;
                    int32_t x_45193;
                    float x_45194;
                    
                    offset_45212 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45166,
                                  sext_i64_i32(segred_group_sizze_33493))) {
                            x_45189 = ((__local
                                        bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166 +
                                                                   offset_45212)];
                            x_45190 = ((__local
                                        int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166 +
                                                                      offset_45212)];
                            x_45191 = ((__local
                                        float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166 +
                                                                    offset_45212)];
                        }
                    }
                    offset_45212 = 1;
                    while (slt32(offset_45212, wave_sizze_45168)) {
                        if (slt32(local_tid_45166 + offset_45212,
                                  sext_i64_i32(segred_group_sizze_33493)) &&
                            ((local_tid_45166 - squot32(local_tid_45166,
                                                        wave_sizze_45168) *
                              wave_sizze_45168) & (2 * offset_45212 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45192 = ((volatile __local
                                            bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166 +
                                                                       offset_45212)];
                                x_45193 = ((volatile __local
                                            int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166 +
                                                                          offset_45212)];
                                x_45194 = ((volatile __local
                                            float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166 +
                                                                        offset_45212)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45195;
                                int32_t defunc_1_op_res_45196;
                                
                                if (x_45189) {
                                    defunc_1_op_res_45195 = x_45189;
                                    defunc_1_op_res_45196 = x_45190;
                                } else {
                                    bool x_45197 = x_45192 && x_45192;
                                    bool x_45198 = !x_45192;
                                    bool y_45199 = x_45189 && x_45198;
                                    bool defunc_1_op_res_f_res_45200 =
                                         x_45197 || y_45199;
                                    int32_t defunc_1_op_res_f_res_45201;
                                    
                                    if (x_45192) {
                                        defunc_1_op_res_f_res_45201 = x_45193;
                                    } else {
                                        defunc_1_op_res_f_res_45201 = x_45190;
                                    }
                                    defunc_1_op_res_45195 =
                                        defunc_1_op_res_f_res_45200;
                                    defunc_1_op_res_45196 =
                                        defunc_1_op_res_f_res_45201;
                                }
                                
                                float defunc_1_op_res_45202 = x_45191 + x_45194;
                                
                                x_45189 = defunc_1_op_res_45195;
                                x_45190 = defunc_1_op_res_45196;
                                x_45191 = defunc_1_op_res_45202;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166)] =
                                    x_45189;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166)] =
                                    x_45190;
                                ((volatile __local
                                  float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166)] =
                                    x_45191;
                            }
                        }
                        offset_45212 *= 2;
                    }
                    while (slt32(skip_waves_45213,
                                 squot32(sext_i64_i32(segred_group_sizze_33493) +
                                         wave_sizze_45168 - 1,
                                         wave_sizze_45168))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45212 = skip_waves_45213 * wave_sizze_45168;
                        if (slt32(local_tid_45166 + offset_45212,
                                  sext_i64_i32(segred_group_sizze_33493)) &&
                            ((local_tid_45166 - squot32(local_tid_45166,
                                                        wave_sizze_45168) *
                              wave_sizze_45168) == 0 &&
                             (squot32(local_tid_45166, wave_sizze_45168) & (2 *
                                                                            skip_waves_45213 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45192 = ((__local
                                            bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166 +
                                                                       offset_45212)];
                                x_45193 = ((__local
                                            int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166 +
                                                                          offset_45212)];
                                x_45194 = ((__local
                                            float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166 +
                                                                        offset_45212)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45195;
                                int32_t defunc_1_op_res_45196;
                                
                                if (x_45189) {
                                    defunc_1_op_res_45195 = x_45189;
                                    defunc_1_op_res_45196 = x_45190;
                                } else {
                                    bool x_45197 = x_45192 && x_45192;
                                    bool x_45198 = !x_45192;
                                    bool y_45199 = x_45189 && x_45198;
                                    bool defunc_1_op_res_f_res_45200 =
                                         x_45197 || y_45199;
                                    int32_t defunc_1_op_res_f_res_45201;
                                    
                                    if (x_45192) {
                                        defunc_1_op_res_f_res_45201 = x_45193;
                                    } else {
                                        defunc_1_op_res_f_res_45201 = x_45190;
                                    }
                                    defunc_1_op_res_45195 =
                                        defunc_1_op_res_f_res_45200;
                                    defunc_1_op_res_45196 =
                                        defunc_1_op_res_f_res_45201;
                                }
                                
                                float defunc_1_op_res_45202 = x_45191 + x_45194;
                                
                                x_45189 = defunc_1_op_res_45195;
                                x_45190 = defunc_1_op_res_45196;
                                x_45191 = defunc_1_op_res_45202;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45170)[sext_i32_i64(local_tid_45166)] =
                                    x_45189;
                                ((__local
                                  int32_t *) red_arr_mem_45172)[sext_i32_i64(local_tid_45166)] =
                                    x_45190;
                                ((__local
                                  float *) red_arr_mem_45174)[sext_i32_i64(local_tid_45166)] =
                                    x_45191;
                            }
                        }
                        skip_waves_45213 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45166 == 0) {
                            ((__global bool *) mem_43817)[gtid_33314] = x_45189;
                            ((__global int32_t *) mem_43819)[gtid_33314] =
                                x_45190;
                            ((__global float *) mem_43821)[gtid_33314] =
                                x_45191;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33493
}
__kernel void mainDetailedzisegred_nonseg_32069(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44909_backing_aligned_0,
                                                __local volatile
                                                int64_t *sync_arr_mem_44907_backing_aligned_1,
                                                int64_t m_27551,
                                                int64_t num_groups_32064,
                                                int64_t num_threads_44901,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43704,
                                                __global
                                                unsigned char *mem_43709,
                                                __global
                                                unsigned char *mainDetailedzicounter_mem_44897,
                                                __global
                                                unsigned char *group_res_arr_mem_44899)
{
    #define segred_group_sizze_32062 (mainDetailedzisegred_group_sizze_32061)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44909_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44909_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44907_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44907_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44902;
    int32_t local_tid_44903;
    int64_t group_sizze_44906;
    int32_t wave_sizze_44905;
    int32_t group_tid_44904;
    
    global_tid_44902 = get_global_id(0);
    local_tid_44903 = get_local_id(0);
    group_sizze_44906 = get_local_size(0);
    wave_sizze_44905 = LOCKSTEP_WIDTH;
    group_tid_44904 = get_group_id(0);
    
    int32_t phys_tid_32069;
    
    phys_tid_32069 = global_tid_44902;
    
    __local char *sync_arr_mem_44907;
    
    sync_arr_mem_44907 = (__local char *) sync_arr_mem_44907_backing_0;
    
    __local char *red_arr_mem_44909;
    
    red_arr_mem_44909 = (__local char *) red_arr_mem_44909_backing_1;
    
    int64_t dummy_32067;
    
    dummy_32067 = (int64_t) 0;
    
    int64_t gtid_32068;
    
    gtid_32068 = (int64_t) 0;
    
    int32_t x_acc_44911;
    int64_t chunk_sizze_44912;
    
    chunk_sizze_44912 = smin64(sdiv_up64(m_27551,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_32062 *
                                         num_groups_32064))),
                               sdiv_up64(m_27551 - sext_i32_i64(phys_tid_32069),
                                         num_threads_44901));
    
    int32_t x_27917;
    int32_t x_27918;
    
    // neutral-initialise the accumulators
    {
        x_acc_44911 = 0;
    }
    for (int64_t i_44916 = 0; i_44916 < chunk_sizze_44912; i_44916++) {
        gtid_32068 = sext_i32_i64(phys_tid_32069) + num_threads_44901 * i_44916;
        // apply map function
        {
            int32_t x_27920 = ((__global
                                int32_t *) defunc_3_map_res_mem_43704)[gtid_32068];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_27917 = x_acc_44911;
            }
            // load new values
            {
                x_27918 = x_27920;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_27919 = smax32(x_27917, x_27918);
                
                // store in accumulator
                {
                    x_acc_44911 = defunc_1_op_res_27919;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_27917 = x_acc_44911;
        ((__local int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903)] =
            x_27917;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44917;
    int32_t skip_waves_44918;
    
    skip_waves_44918 = 1;
    
    int32_t x_44913;
    int32_t x_44914;
    
    offset_44917 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44903, sext_i64_i32(segred_group_sizze_32062))) {
            x_44913 = ((__local
                        int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903 +
                                                      offset_44917)];
        }
    }
    offset_44917 = 1;
    while (slt32(offset_44917, wave_sizze_44905)) {
        if (slt32(local_tid_44903 + offset_44917,
                  sext_i64_i32(segred_group_sizze_32062)) && ((local_tid_44903 -
                                                               squot32(local_tid_44903,
                                                                       wave_sizze_44905) *
                                                               wave_sizze_44905) &
                                                              (2 *
                                                               offset_44917 -
                                                               1)) == 0) {
            // read array element
            {
                x_44914 = ((volatile __local
                            int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903 +
                                                          offset_44917)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44915 = smax32(x_44913, x_44914);
                
                x_44913 = defunc_1_op_res_44915;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903)] =
                    x_44913;
            }
        }
        offset_44917 *= 2;
    }
    while (slt32(skip_waves_44918,
                 squot32(sext_i64_i32(segred_group_sizze_32062) +
                         wave_sizze_44905 - 1, wave_sizze_44905))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44917 = skip_waves_44918 * wave_sizze_44905;
        if (slt32(local_tid_44903 + offset_44917,
                  sext_i64_i32(segred_group_sizze_32062)) && ((local_tid_44903 -
                                                               squot32(local_tid_44903,
                                                                       wave_sizze_44905) *
                                                               wave_sizze_44905) ==
                                                              0 &&
                                                              (squot32(local_tid_44903,
                                                                       wave_sizze_44905) &
                                                               (2 *
                                                                skip_waves_44918 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44914 = ((__local
                            int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903 +
                                                          offset_44917)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44915 = smax32(x_44913, x_44914);
                
                x_44913 = defunc_1_op_res_44915;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903)] =
                    x_44913;
            }
        }
        skip_waves_44918 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44903) == (int64_t) 0) {
            x_acc_44911 = x_44913;
        }
    }
    
    int32_t old_counter_44919;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44903 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44899)[sext_i32_i64(group_tid_44904) *
                                                  segred_group_sizze_32062] =
                x_acc_44911;
            mem_fence_global();
            old_counter_44919 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_44897)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44907)[(int64_t) 0] =
                old_counter_44919 == num_groups_32064 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44920;
    
    is_last_group_44920 = ((__local bool *) sync_arr_mem_44907)[(int64_t) 0];
    if (is_last_group_44920) {
        if (local_tid_44903 == 0) {
            old_counter_44919 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainDetailedzicounter_mem_44897)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_32064));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44921 = sdiv_up64(num_groups_32064,
                                                      segred_group_sizze_32062);
            
            x_27917 = 0;
            for (int64_t i_44922 = 0; i_44922 < read_per_thread_44921;
                 i_44922++) {
                int64_t group_res_id_44923 = sext_i32_i64(local_tid_44903) *
                        read_per_thread_44921 + i_44922;
                int64_t index_of_group_res_44924 = group_res_id_44923;
                
                if (slt64(group_res_id_44923, num_groups_32064)) {
                    x_27918 = ((__global
                                int32_t *) group_res_arr_mem_44899)[index_of_group_res_44924 *
                                                                    segred_group_sizze_32062];
                    
                    int32_t defunc_1_op_res_27919;
                    
                    defunc_1_op_res_27919 = smax32(x_27917, x_27918);
                    x_27917 = defunc_1_op_res_27919;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903)] =
            x_27917;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44925;
            int32_t skip_waves_44926;
            
            skip_waves_44926 = 1;
            
            int32_t x_44913;
            int32_t x_44914;
            
            offset_44925 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44903,
                          sext_i64_i32(segred_group_sizze_32062))) {
                    x_44913 = ((__local
                                int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903 +
                                                              offset_44925)];
                }
            }
            offset_44925 = 1;
            while (slt32(offset_44925, wave_sizze_44905)) {
                if (slt32(local_tid_44903 + offset_44925,
                          sext_i64_i32(segred_group_sizze_32062)) &&
                    ((local_tid_44903 - squot32(local_tid_44903,
                                                wave_sizze_44905) *
                      wave_sizze_44905) & (2 * offset_44925 - 1)) == 0) {
                    // read array element
                    {
                        x_44914 = ((volatile __local
                                    int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903 +
                                                                  offset_44925)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44915 = smax32(x_44913,
                                                               x_44914);
                        
                        x_44913 = defunc_1_op_res_44915;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903)] =
                            x_44913;
                    }
                }
                offset_44925 *= 2;
            }
            while (slt32(skip_waves_44926,
                         squot32(sext_i64_i32(segred_group_sizze_32062) +
                                 wave_sizze_44905 - 1, wave_sizze_44905))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44925 = skip_waves_44926 * wave_sizze_44905;
                if (slt32(local_tid_44903 + offset_44925,
                          sext_i64_i32(segred_group_sizze_32062)) &&
                    ((local_tid_44903 - squot32(local_tid_44903,
                                                wave_sizze_44905) *
                      wave_sizze_44905) == 0 && (squot32(local_tid_44903,
                                                         wave_sizze_44905) &
                                                 (2 * skip_waves_44926 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44914 = ((__local
                                    int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903 +
                                                                  offset_44925)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44915 = smax32(x_44913,
                                                               x_44914);
                        
                        x_44913 = defunc_1_op_res_44915;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44909)[sext_i32_i64(local_tid_44903)] =
                            x_44913;
                    }
                }
                skip_waves_44926 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44903 == 0) {
                    ((__global int32_t *) mem_43709)[(int64_t) 0] = x_44913;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32062
}
__kernel void mainDetailedzisegred_small_30099(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44167_backing_aligned_0,
                                               int64_t N_27550, int64_t m_27551,
                                               int64_t i32_res_27560,
                                               int64_t i32_res_27566,
                                               int64_t num_groups_30238,
                                               int64_t segment_sizze_nonzzero_44160,
                                               __global
                                               unsigned char *images_mem_42841,
                                               __global
                                               unsigned char *binop_p_mem_42850,
                                               __global
                                               unsigned char *mem_42991,
                                               __global
                                               unsigned char *mem_42996)
{
    #define segred_group_sizze_30237 (mainDetailedzisegred_group_sizze_30093)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44167_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44167_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44162;
    int32_t local_tid_44163;
    int64_t group_sizze_44166;
    int32_t wave_sizze_44165;
    int32_t group_tid_44164;
    
    global_tid_44162 = get_global_id(0);
    local_tid_44163 = get_local_id(0);
    group_sizze_44166 = get_local_size(0);
    wave_sizze_44165 = LOCKSTEP_WIDTH;
    group_tid_44164 = get_group_id(0);
    
    int32_t phys_tid_30099;
    
    phys_tid_30099 = global_tid_44162;
    
    __local char *red_arr_mem_44167;
    
    red_arr_mem_44167 = (__local char *) red_arr_mem_44167_backing_0;
    
    int32_t phys_group_id_44169;
    
    phys_group_id_44169 = get_group_id(0);
    for (int32_t i_44170 = 0; i_44170 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551 * i32_res_27566 *
                                          i32_res_27566,
                                          squot64(segred_group_sizze_30237,
                                                  segment_sizze_nonzzero_44160))) -
                   phys_group_id_44169, sext_i64_i32(num_groups_30238));
         i_44170++) {
        int32_t virt_group_id_44171 = phys_group_id_44169 + i_44170 *
                sext_i64_i32(num_groups_30238);
        int64_t gtid_30086 = squot64(squot64(sext_i32_i64(local_tid_44163),
                                             segment_sizze_nonzzero_44160) +
                                     sext_i32_i64(virt_group_id_44171) *
                                     squot64(segred_group_sizze_30237,
                                             segment_sizze_nonzzero_44160),
                                     i32_res_27566 * i32_res_27566);
        int64_t gtid_30087 = squot64(squot64(sext_i32_i64(local_tid_44163),
                                             segment_sizze_nonzzero_44160) +
                                     sext_i32_i64(virt_group_id_44171) *
                                     squot64(segred_group_sizze_30237,
                                             segment_sizze_nonzzero_44160) -
                                     squot64(squot64(sext_i32_i64(local_tid_44163),
                                                     segment_sizze_nonzzero_44160) +
                                             sext_i32_i64(virt_group_id_44171) *
                                             squot64(segred_group_sizze_30237,
                                                     segment_sizze_nonzzero_44160),
                                             i32_res_27566 * i32_res_27566) *
                                     (i32_res_27566 * i32_res_27566),
                                     i32_res_27566);
        int64_t gtid_30088 = squot64(sext_i32_i64(local_tid_44163),
                                     segment_sizze_nonzzero_44160) +
                sext_i32_i64(virt_group_id_44171) *
                squot64(segred_group_sizze_30237,
                        segment_sizze_nonzzero_44160) -
                squot64(squot64(sext_i32_i64(local_tid_44163),
                                segment_sizze_nonzzero_44160) +
                        sext_i32_i64(virt_group_id_44171) *
                        squot64(segred_group_sizze_30237,
                                segment_sizze_nonzzero_44160), i32_res_27566 *
                        i32_res_27566) * (i32_res_27566 * i32_res_27566) -
                squot64(squot64(sext_i32_i64(local_tid_44163),
                                segment_sizze_nonzzero_44160) +
                        sext_i32_i64(virt_group_id_44171) *
                        squot64(segred_group_sizze_30237,
                                segment_sizze_nonzzero_44160) -
                        squot64(squot64(sext_i32_i64(local_tid_44163),
                                        segment_sizze_nonzzero_44160) +
                                sext_i32_i64(virt_group_id_44171) *
                                squot64(segred_group_sizze_30237,
                                        segment_sizze_nonzzero_44160),
                                i32_res_27566 * i32_res_27566) *
                        (i32_res_27566 * i32_res_27566), i32_res_27566) *
                i32_res_27566;
        int64_t gtid_30098 = srem64(sext_i32_i64(local_tid_44163),
                                    i32_res_27560);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27560) && (((slt64(gtid_30086,
                                                              m_27551) &&
                                                        slt64(gtid_30087,
                                                              i32_res_27566)) &&
                                                       slt64(gtid_30088,
                                                             i32_res_27566)) &&
                                                      slt64(sext_i32_i64(local_tid_44163),
                                                            i32_res_27560 *
                                                            squot64(segred_group_sizze_30237,
                                                                    segment_sizze_nonzzero_44160)))) {
                float x_30247 = ((__global
                                  float *) images_mem_42841)[gtid_30086 *
                                                             N_27550 +
                                                             gtid_30098];
                float x_30248 = ((__global
                                  float *) binop_p_mem_42850)[gtid_30087 *
                                                              N_27550 +
                                                              gtid_30098];
                float x_30249 = ((__global float *) mem_42991)[gtid_30088 *
                                                               N_27550 +
                                                               gtid_30098];
                float x_30250 = x_30248 * x_30249;
                bool isnan_res_30251;
                
                isnan_res_30251 = futrts_isnan32(x_30247);
                
                float y_30252;
                
                if (isnan_res_30251) {
                    y_30252 = 0.0F;
                } else {
                    y_30252 = 1.0F;
                }
                
                float defunc_2_f_res_30253 = x_30250 * y_30252;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                        defunc_2_f_res_30253;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27560)) {
            // perform segmented scan to imitate reduction
            {
                float x_30241;
                float x_30242;
                float x_44172;
                float x_44173;
                bool ltid_in_bounds_44175;
                
                ltid_in_bounds_44175 = slt64(sext_i32_i64(local_tid_44163),
                                             i32_res_27560 *
                                             squot64(segred_group_sizze_30237,
                                                     segment_sizze_nonzzero_44160));
                
                int32_t skip_threads_44176;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44175) {
                        x_30242 = ((volatile __local
                                    float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)];
                        if ((local_tid_44163 - squot32(local_tid_44163, 32) *
                             32) == 0) {
                            x_30241 = x_30242;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44176 = 1;
                    while (slt32(skip_threads_44176, 32)) {
                        if (sle32(skip_threads_44176, local_tid_44163 -
                                  squot32(local_tid_44163, 32) * 32) &&
                            ltid_in_bounds_44175) {
                            // read operands
                            {
                                x_30241 = ((volatile __local
                                            float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163) -
                                                                        sext_i32_i64(skip_threads_44176)];
                            }
                            // perform operation
                            {
                                bool inactive_44177 =
                                     slt64(srem64(sext_i32_i64(local_tid_44163),
                                                  i32_res_27560),
                                           sext_i32_i64(local_tid_44163) -
                                           sext_i32_i64(local_tid_44163 -
                                           skip_threads_44176));
                                
                                if (inactive_44177) {
                                    x_30241 = x_30242;
                                }
                                if (!inactive_44177) {
                                    float defunc_1_op_res_30243 = x_30241 +
                                          x_30242;
                                    
                                    x_30241 = defunc_1_op_res_30243;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44165, skip_threads_44176)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44176, local_tid_44163 -
                                  squot32(local_tid_44163, 32) * 32) &&
                            ltid_in_bounds_44175) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                                    x_30241;
                                x_30242 = x_30241;
                            }
                        }
                        if (sle32(wave_sizze_44165, skip_threads_44176)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44176 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44163 - squot32(local_tid_44163, 32) * 32) ==
                        31 && ltid_in_bounds_44175) {
                        ((volatile __local
                          float *) red_arr_mem_44167)[sext_i32_i64(squot32(local_tid_44163,
                                                                           32))] =
                            x_30241;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44178;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44163, 32) == 0 &&
                            ltid_in_bounds_44175) {
                            x_44173 = ((volatile __local
                                        float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)];
                            if ((local_tid_44163 - squot32(local_tid_44163,
                                                           32) * 32) == 0) {
                                x_44172 = x_44173;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44178 = 1;
                        while (slt32(skip_threads_44178, 32)) {
                            if (sle32(skip_threads_44178, local_tid_44163 -
                                      squot32(local_tid_44163, 32) * 32) &&
                                (squot32(local_tid_44163, 32) == 0 &&
                                 ltid_in_bounds_44175)) {
                                // read operands
                                {
                                    x_44172 = ((volatile __local
                                                float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163) -
                                                                            sext_i32_i64(skip_threads_44178)];
                                }
                                // perform operation
                                {
                                    bool inactive_44179 =
                                         slt64(srem64(sext_i32_i64(local_tid_44163 *
                                                      32 + 32 - 1),
                                                      i32_res_27560),
                                               sext_i32_i64(local_tid_44163 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44163 -
                                                             skip_threads_44178) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44179) {
                                        x_44172 = x_44173;
                                    }
                                    if (!inactive_44179) {
                                        float defunc_1_op_res_44174 = x_44172 +
                                              x_44173;
                                        
                                        x_44172 = defunc_1_op_res_44174;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44165, skip_threads_44178)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44178, local_tid_44163 -
                                      squot32(local_tid_44163, 32) * 32) &&
                                (squot32(local_tid_44163, 32) == 0 &&
                                 ltid_in_bounds_44175)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                                        x_44172;
                                    x_44173 = x_44172;
                                }
                            }
                            if (sle32(wave_sizze_44165, skip_threads_44178)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44178 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44163, 32) == 0 ||
                          !ltid_in_bounds_44175)) {
                        // read operands
                        {
                            x_30242 = x_30241;
                            x_30241 = ((__local
                                        float *) red_arr_mem_44167)[sext_i32_i64(squot32(local_tid_44163,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44180 =
                                 slt64(srem64(sext_i32_i64(local_tid_44163),
                                              i32_res_27560),
                                       sext_i32_i64(local_tid_44163) -
                                       sext_i32_i64(squot32(local_tid_44163,
                                                            32) * 32 - 1));
                            
                            if (inactive_44180) {
                                x_30241 = x_30242;
                            }
                            if (!inactive_44180) {
                                float defunc_1_op_res_30243 = x_30241 + x_30242;
                                
                                x_30241 = defunc_1_op_res_30243;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                                x_30241;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44163, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44167)[sext_i32_i64(local_tid_44163)] =
                            x_30242;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44171) *
                      squot64(segred_group_sizze_30237,
                              segment_sizze_nonzzero_44160) +
                      sext_i32_i64(local_tid_44163), m_27551 * i32_res_27566 *
                      i32_res_27566) && slt64(sext_i32_i64(local_tid_44163),
                                              squot64(segred_group_sizze_30237,
                                                      segment_sizze_nonzzero_44160))) {
                ((__global
                  float *) mem_42996)[squot64(sext_i32_i64(virt_group_id_44171) *
                                              squot64(segred_group_sizze_30237,
                                                      segment_sizze_nonzzero_44160) +
                                              sext_i32_i64(local_tid_44163),
                                              i32_res_27566 * i32_res_27566) *
                                      (i32_res_27566 * i32_res_27566) +
                                      squot64(sext_i32_i64(virt_group_id_44171) *
                                              squot64(segred_group_sizze_30237,
                                                      segment_sizze_nonzzero_44160) +
                                              sext_i32_i64(local_tid_44163) -
                                              squot64(sext_i32_i64(virt_group_id_44171) *
                                                      squot64(segred_group_sizze_30237,
                                                              segment_sizze_nonzzero_44160) +
                                                      sext_i32_i64(local_tid_44163),
                                                      i32_res_27566 *
                                                      i32_res_27566) *
                                              (i32_res_27566 * i32_res_27566),
                                              i32_res_27566) * i32_res_27566 +
                                      (sext_i32_i64(virt_group_id_44171) *
                                       squot64(segred_group_sizze_30237,
                                               segment_sizze_nonzzero_44160) +
                                       sext_i32_i64(local_tid_44163) -
                                       squot64(sext_i32_i64(virt_group_id_44171) *
                                               squot64(segred_group_sizze_30237,
                                                       segment_sizze_nonzzero_44160) +
                                               sext_i32_i64(local_tid_44163),
                                               i32_res_27566 * i32_res_27566) *
                                       (i32_res_27566 * i32_res_27566) -
                                       squot64(sext_i32_i64(virt_group_id_44171) *
                                               squot64(segred_group_sizze_30237,
                                                       segment_sizze_nonzzero_44160) +
                                               sext_i32_i64(local_tid_44163) -
                                               squot64(sext_i32_i64(virt_group_id_44171) *
                                                       squot64(segred_group_sizze_30237,
                                                               segment_sizze_nonzzero_44160) +
                                                       sext_i32_i64(local_tid_44163),
                                                       i32_res_27566 *
                                                       i32_res_27566) *
                                               (i32_res_27566 * i32_res_27566),
                                               i32_res_27566) *
                                       i32_res_27566)] = ((__local
                                                           float *) red_arr_mem_44167)[(sext_i32_i64(local_tid_44163) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44160 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_30237
}
__kernel void mainDetailedzisegred_small_31146(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44364_backing_aligned_0,
                                               int64_t N_27550, int64_t m_27551,
                                               int64_t i32_res_27560,
                                               int64_t i32_res_27566,
                                               int64_t num_groups_31199,
                                               int64_t segment_sizze_nonzzero_44357,
                                               __global
                                               unsigned char *images_mem_42841,
                                               __global
                                               unsigned char *binop_p_mem_42850,
                                               __global
                                               unsigned char *mem_43304)
{
    #define segred_group_sizze_31198 (mainDetailedzisegred_group_sizze_31140)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44364_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44364_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44359;
    int32_t local_tid_44360;
    int64_t group_sizze_44363;
    int32_t wave_sizze_44362;
    int32_t group_tid_44361;
    
    global_tid_44359 = get_global_id(0);
    local_tid_44360 = get_local_id(0);
    group_sizze_44363 = get_local_size(0);
    wave_sizze_44362 = LOCKSTEP_WIDTH;
    group_tid_44361 = get_group_id(0);
    
    int32_t phys_tid_31146;
    
    phys_tid_31146 = global_tid_44359;
    
    __local char *red_arr_mem_44364;
    
    red_arr_mem_44364 = (__local char *) red_arr_mem_44364_backing_0;
    
    int32_t phys_group_id_44366;
    
    phys_group_id_44366 = get_group_id(0);
    for (int32_t i_44367 = 0; i_44367 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551 * i32_res_27566,
                                          squot64(segred_group_sizze_31198,
                                                  segment_sizze_nonzzero_44357))) -
                   phys_group_id_44366, sext_i64_i32(num_groups_31199));
         i_44367++) {
        int32_t virt_group_id_44368 = phys_group_id_44366 + i_44367 *
                sext_i64_i32(num_groups_31199);
        int64_t gtid_31135 = squot64(squot64(sext_i32_i64(local_tid_44360),
                                             segment_sizze_nonzzero_44357) +
                                     sext_i32_i64(virt_group_id_44368) *
                                     squot64(segred_group_sizze_31198,
                                             segment_sizze_nonzzero_44357),
                                     i32_res_27566);
        int64_t gtid_31136 = squot64(sext_i32_i64(local_tid_44360),
                                     segment_sizze_nonzzero_44357) +
                sext_i32_i64(virt_group_id_44368) *
                squot64(segred_group_sizze_31198,
                        segment_sizze_nonzzero_44357) -
                squot64(squot64(sext_i32_i64(local_tid_44360),
                                segment_sizze_nonzzero_44357) +
                        sext_i32_i64(virt_group_id_44368) *
                        squot64(segred_group_sizze_31198,
                                segment_sizze_nonzzero_44357), i32_res_27566) *
                i32_res_27566;
        int64_t gtid_31145 = srem64(sext_i32_i64(local_tid_44360),
                                    i32_res_27560);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27560) && ((slt64(gtid_31135,
                                                             m_27551) &&
                                                       slt64(gtid_31136,
                                                             i32_res_27566)) &&
                                                      slt64(sext_i32_i64(local_tid_44360),
                                                            i32_res_27560 *
                                                            squot64(segred_group_sizze_31198,
                                                                    segment_sizze_nonzzero_44357)))) {
                float x_31208 = ((__global
                                  float *) images_mem_42841)[gtid_31135 *
                                                             N_27550 +
                                                             gtid_31145];
                bool isnan_res_31209;
                
                isnan_res_31209 = futrts_isnan32(x_31208);
                
                float defunc_1_f_res_31210;
                
                if (isnan_res_31209) {
                    defunc_1_f_res_31210 = 0.0F;
                } else {
                    float x_31207 = ((__global
                                      float *) binop_p_mem_42850)[gtid_31136 *
                                                                  N_27550 +
                                                                  gtid_31145];
                    float defunc_1_f_res_f_res_31211 = x_31207 * x_31208;
                    
                    defunc_1_f_res_31210 = defunc_1_f_res_f_res_31211;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360)] =
                        defunc_1_f_res_31210;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27560)) {
            // perform segmented scan to imitate reduction
            {
                float x_31202;
                float x_31203;
                float x_44369;
                float x_44370;
                bool ltid_in_bounds_44372;
                
                ltid_in_bounds_44372 = slt64(sext_i32_i64(local_tid_44360),
                                             i32_res_27560 *
                                             squot64(segred_group_sizze_31198,
                                                     segment_sizze_nonzzero_44357));
                
                int32_t skip_threads_44373;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44372) {
                        x_31203 = ((volatile __local
                                    float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360)];
                        if ((local_tid_44360 - squot32(local_tid_44360, 32) *
                             32) == 0) {
                            x_31202 = x_31203;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44373 = 1;
                    while (slt32(skip_threads_44373, 32)) {
                        if (sle32(skip_threads_44373, local_tid_44360 -
                                  squot32(local_tid_44360, 32) * 32) &&
                            ltid_in_bounds_44372) {
                            // read operands
                            {
                                x_31202 = ((volatile __local
                                            float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360) -
                                                                        sext_i32_i64(skip_threads_44373)];
                            }
                            // perform operation
                            {
                                bool inactive_44374 =
                                     slt64(srem64(sext_i32_i64(local_tid_44360),
                                                  i32_res_27560),
                                           sext_i32_i64(local_tid_44360) -
                                           sext_i32_i64(local_tid_44360 -
                                           skip_threads_44373));
                                
                                if (inactive_44374) {
                                    x_31202 = x_31203;
                                }
                                if (!inactive_44374) {
                                    float defunc_1_op_res_31204 = x_31202 +
                                          x_31203;
                                    
                                    x_31202 = defunc_1_op_res_31204;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44362, skip_threads_44373)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44373, local_tid_44360 -
                                  squot32(local_tid_44360, 32) * 32) &&
                            ltid_in_bounds_44372) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360)] =
                                    x_31202;
                                x_31203 = x_31202;
                            }
                        }
                        if (sle32(wave_sizze_44362, skip_threads_44373)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44373 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44360 - squot32(local_tid_44360, 32) * 32) ==
                        31 && ltid_in_bounds_44372) {
                        ((volatile __local
                          float *) red_arr_mem_44364)[sext_i32_i64(squot32(local_tid_44360,
                                                                           32))] =
                            x_31202;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44375;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44360, 32) == 0 &&
                            ltid_in_bounds_44372) {
                            x_44370 = ((volatile __local
                                        float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360)];
                            if ((local_tid_44360 - squot32(local_tid_44360,
                                                           32) * 32) == 0) {
                                x_44369 = x_44370;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44375 = 1;
                        while (slt32(skip_threads_44375, 32)) {
                            if (sle32(skip_threads_44375, local_tid_44360 -
                                      squot32(local_tid_44360, 32) * 32) &&
                                (squot32(local_tid_44360, 32) == 0 &&
                                 ltid_in_bounds_44372)) {
                                // read operands
                                {
                                    x_44369 = ((volatile __local
                                                float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360) -
                                                                            sext_i32_i64(skip_threads_44375)];
                                }
                                // perform operation
                                {
                                    bool inactive_44376 =
                                         slt64(srem64(sext_i32_i64(local_tid_44360 *
                                                      32 + 32 - 1),
                                                      i32_res_27560),
                                               sext_i32_i64(local_tid_44360 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44360 -
                                                             skip_threads_44375) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44376) {
                                        x_44369 = x_44370;
                                    }
                                    if (!inactive_44376) {
                                        float defunc_1_op_res_44371 = x_44369 +
                                              x_44370;
                                        
                                        x_44369 = defunc_1_op_res_44371;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44362, skip_threads_44375)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44375, local_tid_44360 -
                                      squot32(local_tid_44360, 32) * 32) &&
                                (squot32(local_tid_44360, 32) == 0 &&
                                 ltid_in_bounds_44372)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360)] =
                                        x_44369;
                                    x_44370 = x_44369;
                                }
                            }
                            if (sle32(wave_sizze_44362, skip_threads_44375)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44375 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44360, 32) == 0 ||
                          !ltid_in_bounds_44372)) {
                        // read operands
                        {
                            x_31203 = x_31202;
                            x_31202 = ((__local
                                        float *) red_arr_mem_44364)[sext_i32_i64(squot32(local_tid_44360,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44377 =
                                 slt64(srem64(sext_i32_i64(local_tid_44360),
                                              i32_res_27560),
                                       sext_i32_i64(local_tid_44360) -
                                       sext_i32_i64(squot32(local_tid_44360,
                                                            32) * 32 - 1));
                            
                            if (inactive_44377) {
                                x_31202 = x_31203;
                            }
                            if (!inactive_44377) {
                                float defunc_1_op_res_31204 = x_31202 + x_31203;
                                
                                x_31202 = defunc_1_op_res_31204;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360)] =
                                x_31202;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44360, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44364)[sext_i32_i64(local_tid_44360)] =
                            x_31203;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44368) *
                      squot64(segred_group_sizze_31198,
                              segment_sizze_nonzzero_44357) +
                      sext_i32_i64(local_tid_44360), m_27551 * i32_res_27566) &&
                slt64(sext_i32_i64(local_tid_44360),
                      squot64(segred_group_sizze_31198,
                              segment_sizze_nonzzero_44357))) {
                ((__global
                  float *) mem_43304)[squot64(sext_i32_i64(virt_group_id_44368) *
                                              squot64(segred_group_sizze_31198,
                                                      segment_sizze_nonzzero_44357) +
                                              sext_i32_i64(local_tid_44360),
                                              i32_res_27566) * i32_res_27566 +
                                      (sext_i32_i64(virt_group_id_44368) *
                                       squot64(segred_group_sizze_31198,
                                               segment_sizze_nonzzero_44357) +
                                       sext_i32_i64(local_tid_44360) -
                                       squot64(sext_i32_i64(virt_group_id_44368) *
                                               squot64(segred_group_sizze_31198,
                                                       segment_sizze_nonzzero_44357) +
                                               sext_i32_i64(local_tid_44360),
                                               i32_res_27566) *
                                       i32_res_27566)] = ((__local
                                                           float *) red_arr_mem_44364)[(sext_i32_i64(local_tid_44360) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44357 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31198
}
__kernel void mainDetailedzisegred_small_31283(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44452_backing_aligned_0,
                                               int64_t m_27551,
                                               int64_t i32_res_27566,
                                               int64_t num_groups_31332,
                                               int64_t segment_sizze_nonzzero_44445,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43089,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43310,
                                               __global
                                               unsigned char *mem_43370)
{
    #define segred_group_sizze_31331 (mainDetailedzisegred_group_sizze_31277)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44452_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44452_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44447;
    int32_t local_tid_44448;
    int64_t group_sizze_44451;
    int32_t wave_sizze_44450;
    int32_t group_tid_44449;
    
    global_tid_44447 = get_global_id(0);
    local_tid_44448 = get_local_id(0);
    group_sizze_44451 = get_local_size(0);
    wave_sizze_44450 = LOCKSTEP_WIDTH;
    group_tid_44449 = get_group_id(0);
    
    int32_t phys_tid_31283;
    
    phys_tid_31283 = global_tid_44447;
    
    __local char *red_arr_mem_44452;
    
    red_arr_mem_44452 = (__local char *) red_arr_mem_44452_backing_0;
    
    int32_t phys_group_id_44454;
    
    phys_group_id_44454 = get_group_id(0);
    for (int32_t i_44455 = 0; i_44455 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551 * i32_res_27566,
                                          squot64(segred_group_sizze_31331,
                                                  segment_sizze_nonzzero_44445))) -
                   phys_group_id_44454, sext_i64_i32(num_groups_31332));
         i_44455++) {
        int32_t virt_group_id_44456 = phys_group_id_44454 + i_44455 *
                sext_i64_i32(num_groups_31332);
        int64_t gtid_31272 = squot64(squot64(sext_i32_i64(local_tid_44448),
                                             segment_sizze_nonzzero_44445) +
                                     sext_i32_i64(virt_group_id_44456) *
                                     squot64(segred_group_sizze_31331,
                                             segment_sizze_nonzzero_44445),
                                     i32_res_27566);
        int64_t gtid_31273 = squot64(sext_i32_i64(local_tid_44448),
                                     segment_sizze_nonzzero_44445) +
                sext_i32_i64(virt_group_id_44456) *
                squot64(segred_group_sizze_31331,
                        segment_sizze_nonzzero_44445) -
                squot64(squot64(sext_i32_i64(local_tid_44448),
                                segment_sizze_nonzzero_44445) +
                        sext_i32_i64(virt_group_id_44456) *
                        squot64(segred_group_sizze_31331,
                                segment_sizze_nonzzero_44445), i32_res_27566) *
                i32_res_27566;
        int64_t gtid_31282 = srem64(sext_i32_i64(local_tid_44448),
                                    i32_res_27566);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27566) && ((slt64(gtid_31272,
                                                             m_27551) &&
                                                       slt64(gtid_31273,
                                                             i32_res_27566)) &&
                                                      slt64(sext_i32_i64(local_tid_44448),
                                                            i32_res_27566 *
                                                            squot64(segred_group_sizze_31331,
                                                                    segment_sizze_nonzzero_44445)))) {
                float x_31341 = ((__global
                                  float *) defunc_3_map_res_mem_43310)[gtid_31272 *
                                                                       i32_res_27566 +
                                                                       gtid_31282];
                float x_31342 = ((__global
                                  float *) defunc_3_map_res_mem_43089)[gtid_31272 *
                                                                       (i32_res_27566 *
                                                                        i32_res_27566) +
                                                                       gtid_31273 *
                                                                       i32_res_27566 +
                                                                       gtid_31282];
                float defunc_1_f_res_31343 = x_31341 * x_31342;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448)] =
                        defunc_1_f_res_31343;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27566)) {
            // perform segmented scan to imitate reduction
            {
                float x_31335;
                float x_31336;
                float x_44457;
                float x_44458;
                bool ltid_in_bounds_44460;
                
                ltid_in_bounds_44460 = slt64(sext_i32_i64(local_tid_44448),
                                             i32_res_27566 *
                                             squot64(segred_group_sizze_31331,
                                                     segment_sizze_nonzzero_44445));
                
                int32_t skip_threads_44461;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44460) {
                        x_31336 = ((volatile __local
                                    float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448)];
                        if ((local_tid_44448 - squot32(local_tid_44448, 32) *
                             32) == 0) {
                            x_31335 = x_31336;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44461 = 1;
                    while (slt32(skip_threads_44461, 32)) {
                        if (sle32(skip_threads_44461, local_tid_44448 -
                                  squot32(local_tid_44448, 32) * 32) &&
                            ltid_in_bounds_44460) {
                            // read operands
                            {
                                x_31335 = ((volatile __local
                                            float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448) -
                                                                        sext_i32_i64(skip_threads_44461)];
                            }
                            // perform operation
                            {
                                bool inactive_44462 =
                                     slt64(srem64(sext_i32_i64(local_tid_44448),
                                                  i32_res_27566),
                                           sext_i32_i64(local_tid_44448) -
                                           sext_i32_i64(local_tid_44448 -
                                           skip_threads_44461));
                                
                                if (inactive_44462) {
                                    x_31335 = x_31336;
                                }
                                if (!inactive_44462) {
                                    float defunc_1_op_res_31337 = x_31335 +
                                          x_31336;
                                    
                                    x_31335 = defunc_1_op_res_31337;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44450, skip_threads_44461)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44461, local_tid_44448 -
                                  squot32(local_tid_44448, 32) * 32) &&
                            ltid_in_bounds_44460) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448)] =
                                    x_31335;
                                x_31336 = x_31335;
                            }
                        }
                        if (sle32(wave_sizze_44450, skip_threads_44461)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44461 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44448 - squot32(local_tid_44448, 32) * 32) ==
                        31 && ltid_in_bounds_44460) {
                        ((volatile __local
                          float *) red_arr_mem_44452)[sext_i32_i64(squot32(local_tid_44448,
                                                                           32))] =
                            x_31335;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44463;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44448, 32) == 0 &&
                            ltid_in_bounds_44460) {
                            x_44458 = ((volatile __local
                                        float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448)];
                            if ((local_tid_44448 - squot32(local_tid_44448,
                                                           32) * 32) == 0) {
                                x_44457 = x_44458;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44463 = 1;
                        while (slt32(skip_threads_44463, 32)) {
                            if (sle32(skip_threads_44463, local_tid_44448 -
                                      squot32(local_tid_44448, 32) * 32) &&
                                (squot32(local_tid_44448, 32) == 0 &&
                                 ltid_in_bounds_44460)) {
                                // read operands
                                {
                                    x_44457 = ((volatile __local
                                                float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448) -
                                                                            sext_i32_i64(skip_threads_44463)];
                                }
                                // perform operation
                                {
                                    bool inactive_44464 =
                                         slt64(srem64(sext_i32_i64(local_tid_44448 *
                                                      32 + 32 - 1),
                                                      i32_res_27566),
                                               sext_i32_i64(local_tid_44448 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44448 -
                                                             skip_threads_44463) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44464) {
                                        x_44457 = x_44458;
                                    }
                                    if (!inactive_44464) {
                                        float defunc_1_op_res_44459 = x_44457 +
                                              x_44458;
                                        
                                        x_44457 = defunc_1_op_res_44459;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44450, skip_threads_44463)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44463, local_tid_44448 -
                                      squot32(local_tid_44448, 32) * 32) &&
                                (squot32(local_tid_44448, 32) == 0 &&
                                 ltid_in_bounds_44460)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448)] =
                                        x_44457;
                                    x_44458 = x_44457;
                                }
                            }
                            if (sle32(wave_sizze_44450, skip_threads_44463)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44463 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44448, 32) == 0 ||
                          !ltid_in_bounds_44460)) {
                        // read operands
                        {
                            x_31336 = x_31335;
                            x_31335 = ((__local
                                        float *) red_arr_mem_44452)[sext_i32_i64(squot32(local_tid_44448,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44465 =
                                 slt64(srem64(sext_i32_i64(local_tid_44448),
                                              i32_res_27566),
                                       sext_i32_i64(local_tid_44448) -
                                       sext_i32_i64(squot32(local_tid_44448,
                                                            32) * 32 - 1));
                            
                            if (inactive_44465) {
                                x_31335 = x_31336;
                            }
                            if (!inactive_44465) {
                                float defunc_1_op_res_31337 = x_31335 + x_31336;
                                
                                x_31335 = defunc_1_op_res_31337;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448)] =
                                x_31335;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44448, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44452)[sext_i32_i64(local_tid_44448)] =
                            x_31336;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44456) *
                      squot64(segred_group_sizze_31331,
                              segment_sizze_nonzzero_44445) +
                      sext_i32_i64(local_tid_44448), m_27551 * i32_res_27566) &&
                slt64(sext_i32_i64(local_tid_44448),
                      squot64(segred_group_sizze_31331,
                              segment_sizze_nonzzero_44445))) {
                ((__global
                  float *) mem_43370)[squot64(sext_i32_i64(virt_group_id_44456) *
                                              squot64(segred_group_sizze_31331,
                                                      segment_sizze_nonzzero_44445) +
                                              sext_i32_i64(local_tid_44448),
                                              i32_res_27566) * i32_res_27566 +
                                      (sext_i32_i64(virt_group_id_44456) *
                                       squot64(segred_group_sizze_31331,
                                               segment_sizze_nonzzero_44445) +
                                       sext_i32_i64(local_tid_44448) -
                                       squot64(sext_i32_i64(virt_group_id_44456) *
                                               squot64(segred_group_sizze_31331,
                                                       segment_sizze_nonzzero_44445) +
                                               sext_i32_i64(local_tid_44448),
                                               i32_res_27566) *
                                       i32_res_27566)] = ((__local
                                                           float *) red_arr_mem_44452)[(sext_i32_i64(local_tid_44448) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44445 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31331
}
__kernel void mainDetailedzisegred_small_31413(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44584_backing_aligned_0,
                                               int64_t N_27550, int64_t m_27551,
                                               int64_t i32_res_27566,
                                               int64_t num_groups_31460,
                                               int64_t segment_sizze_nonzzero_44577,
                                               __global
                                               unsigned char *mem_42857,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43376,
                                               __global
                                               unsigned char *mem_43594)
{
    #define segred_group_sizze_31459 (mainDetailedzisegred_group_sizze_31407)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44584_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44584_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44579;
    int32_t local_tid_44580;
    int64_t group_sizze_44583;
    int32_t wave_sizze_44582;
    int32_t group_tid_44581;
    
    global_tid_44579 = get_global_id(0);
    local_tid_44580 = get_local_id(0);
    group_sizze_44583 = get_local_size(0);
    wave_sizze_44582 = LOCKSTEP_WIDTH;
    group_tid_44581 = get_group_id(0);
    
    int32_t phys_tid_31413;
    
    phys_tid_31413 = global_tid_44579;
    
    __local char *red_arr_mem_44584;
    
    red_arr_mem_44584 = (__local char *) red_arr_mem_44584_backing_0;
    
    int32_t phys_group_id_44586;
    
    phys_group_id_44586 = get_group_id(0);
    for (int32_t i_44587 = 0; i_44587 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551 * N_27550,
                                          squot64(segred_group_sizze_31459,
                                                  segment_sizze_nonzzero_44577))) -
                   phys_group_id_44586, sext_i64_i32(num_groups_31460));
         i_44587++) {
        int32_t virt_group_id_44588 = phys_group_id_44586 + i_44587 *
                sext_i64_i32(num_groups_31460);
        int64_t gtid_31402 = squot64(squot64(sext_i32_i64(local_tid_44580),
                                             segment_sizze_nonzzero_44577) +
                                     sext_i32_i64(virt_group_id_44588) *
                                     squot64(segred_group_sizze_31459,
                                             segment_sizze_nonzzero_44577),
                                     N_27550);
        int64_t gtid_31403 = squot64(sext_i32_i64(local_tid_44580),
                                     segment_sizze_nonzzero_44577) +
                sext_i32_i64(virt_group_id_44588) *
                squot64(segred_group_sizze_31459,
                        segment_sizze_nonzzero_44577) -
                squot64(squot64(sext_i32_i64(local_tid_44580),
                                segment_sizze_nonzzero_44577) +
                        sext_i32_i64(virt_group_id_44588) *
                        squot64(segred_group_sizze_31459,
                                segment_sizze_nonzzero_44577), N_27550) *
                N_27550;
        int64_t gtid_31412 = srem64(sext_i32_i64(local_tid_44580),
                                    i32_res_27566);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27566) && ((slt64(gtid_31402,
                                                             m_27551) &&
                                                       slt64(gtid_31403,
                                                             N_27550)) &&
                                                      slt64(sext_i32_i64(local_tid_44580),
                                                            i32_res_27566 *
                                                            squot64(segred_group_sizze_31459,
                                                                    segment_sizze_nonzzero_44577)))) {
                float x_31468 = ((__global
                                  float *) defunc_4_map_res_mem_43376)[gtid_31402 *
                                                                       i32_res_27566 +
                                                                       gtid_31412];
                float x_31469 = ((__global float *) mem_42857)[gtid_31403 *
                                                               i32_res_27566 +
                                                               gtid_31412];
                float defunc_1_f_res_31470 = x_31468 * x_31469;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580)] =
                        defunc_1_f_res_31470;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27566)) {
            // perform segmented scan to imitate reduction
            {
                float x_31463;
                float x_31464;
                float x_44589;
                float x_44590;
                bool ltid_in_bounds_44592;
                
                ltid_in_bounds_44592 = slt64(sext_i32_i64(local_tid_44580),
                                             i32_res_27566 *
                                             squot64(segred_group_sizze_31459,
                                                     segment_sizze_nonzzero_44577));
                
                int32_t skip_threads_44593;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44592) {
                        x_31464 = ((volatile __local
                                    float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580)];
                        if ((local_tid_44580 - squot32(local_tid_44580, 32) *
                             32) == 0) {
                            x_31463 = x_31464;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44593 = 1;
                    while (slt32(skip_threads_44593, 32)) {
                        if (sle32(skip_threads_44593, local_tid_44580 -
                                  squot32(local_tid_44580, 32) * 32) &&
                            ltid_in_bounds_44592) {
                            // read operands
                            {
                                x_31463 = ((volatile __local
                                            float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580) -
                                                                        sext_i32_i64(skip_threads_44593)];
                            }
                            // perform operation
                            {
                                bool inactive_44594 =
                                     slt64(srem64(sext_i32_i64(local_tid_44580),
                                                  i32_res_27566),
                                           sext_i32_i64(local_tid_44580) -
                                           sext_i32_i64(local_tid_44580 -
                                           skip_threads_44593));
                                
                                if (inactive_44594) {
                                    x_31463 = x_31464;
                                }
                                if (!inactive_44594) {
                                    float defunc_1_op_res_31465 = x_31463 +
                                          x_31464;
                                    
                                    x_31463 = defunc_1_op_res_31465;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44582, skip_threads_44593)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44593, local_tid_44580 -
                                  squot32(local_tid_44580, 32) * 32) &&
                            ltid_in_bounds_44592) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580)] =
                                    x_31463;
                                x_31464 = x_31463;
                            }
                        }
                        if (sle32(wave_sizze_44582, skip_threads_44593)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44593 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44580 - squot32(local_tid_44580, 32) * 32) ==
                        31 && ltid_in_bounds_44592) {
                        ((volatile __local
                          float *) red_arr_mem_44584)[sext_i32_i64(squot32(local_tid_44580,
                                                                           32))] =
                            x_31463;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44595;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44580, 32) == 0 &&
                            ltid_in_bounds_44592) {
                            x_44590 = ((volatile __local
                                        float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580)];
                            if ((local_tid_44580 - squot32(local_tid_44580,
                                                           32) * 32) == 0) {
                                x_44589 = x_44590;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44595 = 1;
                        while (slt32(skip_threads_44595, 32)) {
                            if (sle32(skip_threads_44595, local_tid_44580 -
                                      squot32(local_tid_44580, 32) * 32) &&
                                (squot32(local_tid_44580, 32) == 0 &&
                                 ltid_in_bounds_44592)) {
                                // read operands
                                {
                                    x_44589 = ((volatile __local
                                                float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580) -
                                                                            sext_i32_i64(skip_threads_44595)];
                                }
                                // perform operation
                                {
                                    bool inactive_44596 =
                                         slt64(srem64(sext_i32_i64(local_tid_44580 *
                                                      32 + 32 - 1),
                                                      i32_res_27566),
                                               sext_i32_i64(local_tid_44580 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44580 -
                                                             skip_threads_44595) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44596) {
                                        x_44589 = x_44590;
                                    }
                                    if (!inactive_44596) {
                                        float defunc_1_op_res_44591 = x_44589 +
                                              x_44590;
                                        
                                        x_44589 = defunc_1_op_res_44591;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44582, skip_threads_44595)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44595, local_tid_44580 -
                                      squot32(local_tid_44580, 32) * 32) &&
                                (squot32(local_tid_44580, 32) == 0 &&
                                 ltid_in_bounds_44592)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580)] =
                                        x_44589;
                                    x_44590 = x_44589;
                                }
                            }
                            if (sle32(wave_sizze_44582, skip_threads_44595)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44595 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44580, 32) == 0 ||
                          !ltid_in_bounds_44592)) {
                        // read operands
                        {
                            x_31464 = x_31463;
                            x_31463 = ((__local
                                        float *) red_arr_mem_44584)[sext_i32_i64(squot32(local_tid_44580,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44597 =
                                 slt64(srem64(sext_i32_i64(local_tid_44580),
                                              i32_res_27566),
                                       sext_i32_i64(local_tid_44580) -
                                       sext_i32_i64(squot32(local_tid_44580,
                                                            32) * 32 - 1));
                            
                            if (inactive_44597) {
                                x_31463 = x_31464;
                            }
                            if (!inactive_44597) {
                                float defunc_1_op_res_31465 = x_31463 + x_31464;
                                
                                x_31463 = defunc_1_op_res_31465;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580)] =
                                x_31463;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44580, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44584)[sext_i32_i64(local_tid_44580)] =
                            x_31464;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44588) *
                      squot64(segred_group_sizze_31459,
                              segment_sizze_nonzzero_44577) +
                      sext_i32_i64(local_tid_44580), m_27551 * N_27550) &&
                slt64(sext_i32_i64(local_tid_44580),
                      squot64(segred_group_sizze_31459,
                              segment_sizze_nonzzero_44577))) {
                ((__global
                  float *) mem_43594)[squot64(sext_i32_i64(virt_group_id_44588) *
                                              squot64(segred_group_sizze_31459,
                                                      segment_sizze_nonzzero_44577) +
                                              sext_i32_i64(local_tid_44580),
                                              N_27550) * N_27550 +
                                      (sext_i32_i64(virt_group_id_44588) *
                                       squot64(segred_group_sizze_31459,
                                               segment_sizze_nonzzero_44577) +
                                       sext_i32_i64(local_tid_44580) -
                                       squot64(sext_i32_i64(virt_group_id_44588) *
                                               squot64(segred_group_sizze_31459,
                                                       segment_sizze_nonzzero_44577) +
                                               sext_i32_i64(local_tid_44580),
                                               N_27550) * N_27550)] = ((__local
                                                                        float *) red_arr_mem_44584)[(sext_i32_i64(local_tid_44580) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44577 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_31459
}
__kernel void mainDetailedzisegred_small_31979(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44836_backing_aligned_0,
                                               int64_t N_27550, int64_t m_27551,
                                               int64_t i32_res_27560,
                                               int64_t num_groups_32026,
                                               int64_t segment_sizze_nonzzero_44829,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43638,
                                               __global
                                               unsigned char *mem_43692,
                                               __global
                                               unsigned char *mem_43695)
{
    #define segred_group_sizze_32025 (mainDetailedzisegred_group_sizze_31973)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44836_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44836_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44831;
    int32_t local_tid_44832;
    int64_t group_sizze_44835;
    int32_t wave_sizze_44834;
    int32_t group_tid_44833;
    
    global_tid_44831 = get_global_id(0);
    local_tid_44832 = get_local_id(0);
    group_sizze_44835 = get_local_size(0);
    wave_sizze_44834 = LOCKSTEP_WIDTH;
    group_tid_44833 = get_group_id(0);
    
    int32_t phys_tid_31979;
    
    phys_tid_31979 = global_tid_44831;
    
    __local char *red_arr_mem_44836;
    
    red_arr_mem_44836 = (__local char *) red_arr_mem_44836_backing_0;
    
    int32_t phys_group_id_44838;
    
    phys_group_id_44838 = get_group_id(0);
    for (int32_t i_44839 = 0; i_44839 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551,
                                          squot64(segred_group_sizze_32025,
                                                  segment_sizze_nonzzero_44829))) -
                   phys_group_id_44838, sext_i64_i32(num_groups_32026));
         i_44839++) {
        int32_t virt_group_id_44840 = phys_group_id_44838 + i_44839 *
                sext_i64_i32(num_groups_32026);
        int64_t gtid_31970 = squot64(sext_i32_i64(local_tid_44832),
                                     segment_sizze_nonzzero_44829) +
                sext_i32_i64(virt_group_id_44840) *
                squot64(segred_group_sizze_32025, segment_sizze_nonzzero_44829);
        int64_t gtid_31978 = srem64(sext_i32_i64(local_tid_44832),
                                    i32_res_27560);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27560) && (slt64(gtid_31970,
                                                            m_27551) &&
                                                      slt64(sext_i32_i64(local_tid_44832),
                                                            i32_res_27560 *
                                                            squot64(segred_group_sizze_32025,
                                                                    segment_sizze_nonzzero_44829)))) {
                int32_t defunc_0_f_res_32033 = ((__global
                                                 int32_t *) mem_43692)[gtid_31970];
                int32_t index_primexp_40928 = sext_i64_i32(gtid_31978);
                bool cond_32035 = slt32(index_primexp_40928,
                                        defunc_0_f_res_32033);
                float defunc_0_f_res_32036;
                
                if (cond_32035) {
                    int64_t i_32037 = sext_i32_i64(index_primexp_40928);
                    float defunc_0_f_res_t_res_32038 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_31970 *
                                                                                              N_27550 +
                                                                                              i_32037];
                    
                    defunc_0_f_res_32036 = defunc_0_f_res_t_res_32038;
                } else {
                    defunc_0_f_res_32036 = 0.0F;
                }
                
                float defunc_0_f_res_32039 = defunc_0_f_res_32036 *
                      defunc_0_f_res_32036;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832)] =
                        defunc_0_f_res_32039;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27560)) {
            // perform segmented scan to imitate reduction
            {
                float x_32029;
                float x_32030;
                float x_44841;
                float x_44842;
                bool ltid_in_bounds_44844;
                
                ltid_in_bounds_44844 = slt64(sext_i32_i64(local_tid_44832),
                                             i32_res_27560 *
                                             squot64(segred_group_sizze_32025,
                                                     segment_sizze_nonzzero_44829));
                
                int32_t skip_threads_44845;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44844) {
                        x_32030 = ((volatile __local
                                    float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832)];
                        if ((local_tid_44832 - squot32(local_tid_44832, 32) *
                             32) == 0) {
                            x_32029 = x_32030;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44845 = 1;
                    while (slt32(skip_threads_44845, 32)) {
                        if (sle32(skip_threads_44845, local_tid_44832 -
                                  squot32(local_tid_44832, 32) * 32) &&
                            ltid_in_bounds_44844) {
                            // read operands
                            {
                                x_32029 = ((volatile __local
                                            float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832) -
                                                                        sext_i32_i64(skip_threads_44845)];
                            }
                            // perform operation
                            {
                                bool inactive_44846 =
                                     slt64(srem64(sext_i32_i64(local_tid_44832),
                                                  i32_res_27560),
                                           sext_i32_i64(local_tid_44832) -
                                           sext_i32_i64(local_tid_44832 -
                                           skip_threads_44845));
                                
                                if (inactive_44846) {
                                    x_32029 = x_32030;
                                }
                                if (!inactive_44846) {
                                    float defunc_1_op_res_32031 = x_32029 +
                                          x_32030;
                                    
                                    x_32029 = defunc_1_op_res_32031;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44834, skip_threads_44845)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44845, local_tid_44832 -
                                  squot32(local_tid_44832, 32) * 32) &&
                            ltid_in_bounds_44844) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832)] =
                                    x_32029;
                                x_32030 = x_32029;
                            }
                        }
                        if (sle32(wave_sizze_44834, skip_threads_44845)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44845 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44832 - squot32(local_tid_44832, 32) * 32) ==
                        31 && ltid_in_bounds_44844) {
                        ((volatile __local
                          float *) red_arr_mem_44836)[sext_i32_i64(squot32(local_tid_44832,
                                                                           32))] =
                            x_32029;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44847;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44832, 32) == 0 &&
                            ltid_in_bounds_44844) {
                            x_44842 = ((volatile __local
                                        float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832)];
                            if ((local_tid_44832 - squot32(local_tid_44832,
                                                           32) * 32) == 0) {
                                x_44841 = x_44842;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44847 = 1;
                        while (slt32(skip_threads_44847, 32)) {
                            if (sle32(skip_threads_44847, local_tid_44832 -
                                      squot32(local_tid_44832, 32) * 32) &&
                                (squot32(local_tid_44832, 32) == 0 &&
                                 ltid_in_bounds_44844)) {
                                // read operands
                                {
                                    x_44841 = ((volatile __local
                                                float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832) -
                                                                            sext_i32_i64(skip_threads_44847)];
                                }
                                // perform operation
                                {
                                    bool inactive_44848 =
                                         slt64(srem64(sext_i32_i64(local_tid_44832 *
                                                      32 + 32 - 1),
                                                      i32_res_27560),
                                               sext_i32_i64(local_tid_44832 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44832 -
                                                             skip_threads_44847) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44848) {
                                        x_44841 = x_44842;
                                    }
                                    if (!inactive_44848) {
                                        float defunc_1_op_res_44843 = x_44841 +
                                              x_44842;
                                        
                                        x_44841 = defunc_1_op_res_44843;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44834, skip_threads_44847)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44847, local_tid_44832 -
                                      squot32(local_tid_44832, 32) * 32) &&
                                (squot32(local_tid_44832, 32) == 0 &&
                                 ltid_in_bounds_44844)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832)] =
                                        x_44841;
                                    x_44842 = x_44841;
                                }
                            }
                            if (sle32(wave_sizze_44834, skip_threads_44847)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44847 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44832, 32) == 0 ||
                          !ltid_in_bounds_44844)) {
                        // read operands
                        {
                            x_32030 = x_32029;
                            x_32029 = ((__local
                                        float *) red_arr_mem_44836)[sext_i32_i64(squot32(local_tid_44832,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44849 =
                                 slt64(srem64(sext_i32_i64(local_tid_44832),
                                              i32_res_27560),
                                       sext_i32_i64(local_tid_44832) -
                                       sext_i32_i64(squot32(local_tid_44832,
                                                            32) * 32 - 1));
                            
                            if (inactive_44849) {
                                x_32029 = x_32030;
                            }
                            if (!inactive_44849) {
                                float defunc_1_op_res_32031 = x_32029 + x_32030;
                                
                                x_32029 = defunc_1_op_res_32031;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832)] =
                                x_32029;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44832, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44836)[sext_i32_i64(local_tid_44832)] =
                            x_32030;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44840) *
                      squot64(segred_group_sizze_32025,
                              segment_sizze_nonzzero_44829) +
                      sext_i32_i64(local_tid_44832), m_27551) &&
                slt64(sext_i32_i64(local_tid_44832),
                      squot64(segred_group_sizze_32025,
                              segment_sizze_nonzzero_44829))) {
                ((__global
                  float *) mem_43695)[sext_i32_i64(virt_group_id_44840) *
                                      squot64(segred_group_sizze_32025,
                                              segment_sizze_nonzzero_44829) +
                                      sext_i32_i64(local_tid_44832)] = ((__local
                                                                         float *) red_arr_mem_44836)[(sext_i32_i64(local_tid_44832) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44829 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32025
}
__kernel void mainDetailedzisegred_small_32000(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44776_backing_aligned_0,
                                               int64_t N_27550, int64_t m_27551,
                                               int64_t i32_res_27560,
                                               int64_t num_groups_32012,
                                               int64_t segment_sizze_nonzzero_44769,
                                               __global
                                               unsigned char *images_mem_42841,
                                               __global
                                               unsigned char *mem_43692)
{
    #define segred_group_sizze_32011 (mainDetailedzisegred_group_sizze_31994)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44776_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44776_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44771;
    int32_t local_tid_44772;
    int64_t group_sizze_44775;
    int32_t wave_sizze_44774;
    int32_t group_tid_44773;
    
    global_tid_44771 = get_global_id(0);
    local_tid_44772 = get_local_id(0);
    group_sizze_44775 = get_local_size(0);
    wave_sizze_44774 = LOCKSTEP_WIDTH;
    group_tid_44773 = get_group_id(0);
    
    int32_t phys_tid_32000;
    
    phys_tid_32000 = global_tid_44771;
    
    __local char *red_arr_mem_44776;
    
    red_arr_mem_44776 = (__local char *) red_arr_mem_44776_backing_0;
    
    int32_t phys_group_id_44778;
    
    phys_group_id_44778 = get_group_id(0);
    for (int32_t i_44779 = 0; i_44779 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551,
                                          squot64(segred_group_sizze_32011,
                                                  segment_sizze_nonzzero_44769))) -
                   phys_group_id_44778, sext_i64_i32(num_groups_32012));
         i_44779++) {
        int32_t virt_group_id_44780 = phys_group_id_44778 + i_44779 *
                sext_i64_i32(num_groups_32012);
        int64_t gtid_31991 = squot64(sext_i32_i64(local_tid_44772),
                                     segment_sizze_nonzzero_44769) +
                sext_i32_i64(virt_group_id_44780) *
                squot64(segred_group_sizze_32011, segment_sizze_nonzzero_44769);
        int64_t gtid_31999 = srem64(sext_i32_i64(local_tid_44772),
                                    i32_res_27560);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27560) && (slt64(gtid_31991,
                                                            m_27551) &&
                                                      slt64(sext_i32_i64(local_tid_44772),
                                                            i32_res_27560 *
                                                            squot64(segred_group_sizze_32011,
                                                                    segment_sizze_nonzzero_44769)))) {
                float x_32019 = ((__global
                                  float *) images_mem_42841)[gtid_31991 *
                                                             N_27550 +
                                                             gtid_31999];
                bool isnan_res_32020;
                
                isnan_res_32020 = futrts_isnan32(x_32019);
                
                bool cond_32021 = !isnan_res_32020;
                int32_t defunc_0_f_res_32022 = btoi_bool_i32(cond_32021);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772)] =
                        defunc_0_f_res_32022;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27560)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_32015;
                int32_t x_32016;
                int32_t x_44781;
                int32_t x_44782;
                bool ltid_in_bounds_44784;
                
                ltid_in_bounds_44784 = slt64(sext_i32_i64(local_tid_44772),
                                             i32_res_27560 *
                                             squot64(segred_group_sizze_32011,
                                                     segment_sizze_nonzzero_44769));
                
                int32_t skip_threads_44785;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44784) {
                        x_32016 = ((volatile __local
                                    int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772)];
                        if ((local_tid_44772 - squot32(local_tid_44772, 32) *
                             32) == 0) {
                            x_32015 = x_32016;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44785 = 1;
                    while (slt32(skip_threads_44785, 32)) {
                        if (sle32(skip_threads_44785, local_tid_44772 -
                                  squot32(local_tid_44772, 32) * 32) &&
                            ltid_in_bounds_44784) {
                            // read operands
                            {
                                x_32015 = ((volatile __local
                                            int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772) -
                                                                          sext_i32_i64(skip_threads_44785)];
                            }
                            // perform operation
                            {
                                bool inactive_44786 =
                                     slt64(srem64(sext_i32_i64(local_tid_44772),
                                                  i32_res_27560),
                                           sext_i32_i64(local_tid_44772) -
                                           sext_i32_i64(local_tid_44772 -
                                           skip_threads_44785));
                                
                                if (inactive_44786) {
                                    x_32015 = x_32016;
                                }
                                if (!inactive_44786) {
                                    int32_t defunc_1_op_res_32017 =
                                            add32(x_32015, x_32016);
                                    
                                    x_32015 = defunc_1_op_res_32017;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44774, skip_threads_44785)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44785, local_tid_44772 -
                                  squot32(local_tid_44772, 32) * 32) &&
                            ltid_in_bounds_44784) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772)] =
                                    x_32015;
                                x_32016 = x_32015;
                            }
                        }
                        if (sle32(wave_sizze_44774, skip_threads_44785)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44785 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44772 - squot32(local_tid_44772, 32) * 32) ==
                        31 && ltid_in_bounds_44784) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44776)[sext_i32_i64(squot32(local_tid_44772,
                                                                             32))] =
                            x_32015;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44787;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44772, 32) == 0 &&
                            ltid_in_bounds_44784) {
                            x_44782 = ((volatile __local
                                        int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772)];
                            if ((local_tid_44772 - squot32(local_tid_44772,
                                                           32) * 32) == 0) {
                                x_44781 = x_44782;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44787 = 1;
                        while (slt32(skip_threads_44787, 32)) {
                            if (sle32(skip_threads_44787, local_tid_44772 -
                                      squot32(local_tid_44772, 32) * 32) &&
                                (squot32(local_tid_44772, 32) == 0 &&
                                 ltid_in_bounds_44784)) {
                                // read operands
                                {
                                    x_44781 = ((volatile __local
                                                int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772) -
                                                                              sext_i32_i64(skip_threads_44787)];
                                }
                                // perform operation
                                {
                                    bool inactive_44788 =
                                         slt64(srem64(sext_i32_i64(local_tid_44772 *
                                                      32 + 32 - 1),
                                                      i32_res_27560),
                                               sext_i32_i64(local_tid_44772 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44772 -
                                                             skip_threads_44787) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44788) {
                                        x_44781 = x_44782;
                                    }
                                    if (!inactive_44788) {
                                        int32_t defunc_1_op_res_44783 =
                                                add32(x_44781, x_44782);
                                        
                                        x_44781 = defunc_1_op_res_44783;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44774, skip_threads_44787)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44787, local_tid_44772 -
                                      squot32(local_tid_44772, 32) * 32) &&
                                (squot32(local_tid_44772, 32) == 0 &&
                                 ltid_in_bounds_44784)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772)] =
                                        x_44781;
                                    x_44782 = x_44781;
                                }
                            }
                            if (sle32(wave_sizze_44774, skip_threads_44787)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44787 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44772, 32) == 0 ||
                          !ltid_in_bounds_44784)) {
                        // read operands
                        {
                            x_32016 = x_32015;
                            x_32015 = ((__local
                                        int32_t *) red_arr_mem_44776)[sext_i32_i64(squot32(local_tid_44772,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44789 =
                                 slt64(srem64(sext_i32_i64(local_tid_44772),
                                              i32_res_27560),
                                       sext_i32_i64(local_tid_44772) -
                                       sext_i32_i64(squot32(local_tid_44772,
                                                            32) * 32 - 1));
                            
                            if (inactive_44789) {
                                x_32015 = x_32016;
                            }
                            if (!inactive_44789) {
                                int32_t defunc_1_op_res_32017 = add32(x_32015,
                                                                      x_32016);
                                
                                x_32015 = defunc_1_op_res_32017;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772)] =
                                x_32015;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44772, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44776)[sext_i32_i64(local_tid_44772)] =
                            x_32016;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44780) *
                      squot64(segred_group_sizze_32011,
                              segment_sizze_nonzzero_44769) +
                      sext_i32_i64(local_tid_44772), m_27551) &&
                slt64(sext_i32_i64(local_tid_44772),
                      squot64(segred_group_sizze_32011,
                              segment_sizze_nonzzero_44769))) {
                ((__global
                  int32_t *) mem_43692)[sext_i32_i64(virt_group_id_44780) *
                                        squot64(segred_group_sizze_32011,
                                                segment_sizze_nonzzero_44769) +
                                        sext_i32_i64(local_tid_44772)] =
                    ((__local
                      int32_t *) red_arr_mem_44776)[(sext_i32_i64(local_tid_44772) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44769 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32011
}
__kernel void mainDetailedzisegred_small_32151(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_44945_backing_aligned_0,
                                               int64_t N_27550, int64_t m_27551,
                                               int64_t i32_res_27921,
                                               int64_t num_groups_32169,
                                               int64_t segment_sizze_nonzzero_44938,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43638,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43704,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43705,
                                               __global
                                               unsigned char *mem_43738)
{
    #define segred_group_sizze_32168 (mainDetailedzisegred_group_sizze_32145)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44945_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44945_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44940;
    int32_t local_tid_44941;
    int64_t group_sizze_44944;
    int32_t wave_sizze_44943;
    int32_t group_tid_44942;
    
    global_tid_44940 = get_global_id(0);
    local_tid_44941 = get_local_id(0);
    group_sizze_44944 = get_local_size(0);
    wave_sizze_44943 = LOCKSTEP_WIDTH;
    group_tid_44942 = get_group_id(0);
    
    int32_t phys_tid_32151;
    
    phys_tid_32151 = global_tid_44940;
    
    __local char *red_arr_mem_44945;
    
    red_arr_mem_44945 = (__local char *) red_arr_mem_44945_backing_0;
    
    int32_t phys_group_id_44947;
    
    phys_group_id_44947 = get_group_id(0);
    for (int32_t i_44948 = 0; i_44948 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551,
                                          squot64(segred_group_sizze_32168,
                                                  segment_sizze_nonzzero_44938))) -
                   phys_group_id_44947, sext_i64_i32(num_groups_32169));
         i_44948++) {
        int32_t virt_group_id_44949 = phys_group_id_44947 + i_44948 *
                sext_i64_i32(num_groups_32169);
        int64_t gtid_32142 = squot64(sext_i32_i64(local_tid_44941),
                                     segment_sizze_nonzzero_44938) +
                sext_i32_i64(virt_group_id_44949) *
                squot64(segred_group_sizze_32168, segment_sizze_nonzzero_44938);
        int64_t gtid_32150 = srem64(sext_i32_i64(local_tid_44941),
                                    i32_res_27921);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_27921) && (slt64(gtid_32142,
                                                            m_27551) &&
                                                      slt64(sext_i32_i64(local_tid_44941),
                                                            i32_res_27921 *
                                                            squot64(segred_group_sizze_32168,
                                                                    segment_sizze_nonzzero_44938)))) {
                int32_t x_32177 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43704)[gtid_32142];
                int32_t index_primexp_40933 = sext_i64_i32(gtid_32150);
                bool cond_32179 = slt32(index_primexp_40933, x_32177);
                float defunc_0_f_res_32180;
                
                if (cond_32179) {
                    int32_t x_32176 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_32142];
                    int32_t x_32181 = add32(x_32176, index_primexp_40933);
                    int32_t x_32182 = sub32(x_32181, x_32177);
                    int32_t i_32183 = add32(1, x_32182);
                    int64_t i_32184 = sext_i32_i64(i_32183);
                    float defunc_0_f_res_t_res_32185 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_32142 *
                                                                                              N_27550 +
                                                                                              i_32184];
                    
                    defunc_0_f_res_32180 = defunc_0_f_res_t_res_32185;
                } else {
                    defunc_0_f_res_32180 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                        defunc_0_f_res_32180;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_27921)) {
            // perform segmented scan to imitate reduction
            {
                float x_32172;
                float x_32173;
                float x_44950;
                float x_44951;
                bool ltid_in_bounds_44953;
                
                ltid_in_bounds_44953 = slt64(sext_i32_i64(local_tid_44941),
                                             i32_res_27921 *
                                             squot64(segred_group_sizze_32168,
                                                     segment_sizze_nonzzero_44938));
                
                int32_t skip_threads_44954;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44953) {
                        x_32173 = ((volatile __local
                                    float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)];
                        if ((local_tid_44941 - squot32(local_tid_44941, 32) *
                             32) == 0) {
                            x_32172 = x_32173;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44954 = 1;
                    while (slt32(skip_threads_44954, 32)) {
                        if (sle32(skip_threads_44954, local_tid_44941 -
                                  squot32(local_tid_44941, 32) * 32) &&
                            ltid_in_bounds_44953) {
                            // read operands
                            {
                                x_32172 = ((volatile __local
                                            float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941) -
                                                                        sext_i32_i64(skip_threads_44954)];
                            }
                            // perform operation
                            {
                                bool inactive_44955 =
                                     slt64(srem64(sext_i32_i64(local_tid_44941),
                                                  i32_res_27921),
                                           sext_i32_i64(local_tid_44941) -
                                           sext_i32_i64(local_tid_44941 -
                                           skip_threads_44954));
                                
                                if (inactive_44955) {
                                    x_32172 = x_32173;
                                }
                                if (!inactive_44955) {
                                    float defunc_1_op_res_32174 = x_32172 +
                                          x_32173;
                                    
                                    x_32172 = defunc_1_op_res_32174;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44943, skip_threads_44954)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44954, local_tid_44941 -
                                  squot32(local_tid_44941, 32) * 32) &&
                            ltid_in_bounds_44953) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                                    x_32172;
                                x_32173 = x_32172;
                            }
                        }
                        if (sle32(wave_sizze_44943, skip_threads_44954)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44954 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44941 - squot32(local_tid_44941, 32) * 32) ==
                        31 && ltid_in_bounds_44953) {
                        ((volatile __local
                          float *) red_arr_mem_44945)[sext_i32_i64(squot32(local_tid_44941,
                                                                           32))] =
                            x_32172;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44956;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44941, 32) == 0 &&
                            ltid_in_bounds_44953) {
                            x_44951 = ((volatile __local
                                        float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)];
                            if ((local_tid_44941 - squot32(local_tid_44941,
                                                           32) * 32) == 0) {
                                x_44950 = x_44951;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44956 = 1;
                        while (slt32(skip_threads_44956, 32)) {
                            if (sle32(skip_threads_44956, local_tid_44941 -
                                      squot32(local_tid_44941, 32) * 32) &&
                                (squot32(local_tid_44941, 32) == 0 &&
                                 ltid_in_bounds_44953)) {
                                // read operands
                                {
                                    x_44950 = ((volatile __local
                                                float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941) -
                                                                            sext_i32_i64(skip_threads_44956)];
                                }
                                // perform operation
                                {
                                    bool inactive_44957 =
                                         slt64(srem64(sext_i32_i64(local_tid_44941 *
                                                      32 + 32 - 1),
                                                      i32_res_27921),
                                               sext_i32_i64(local_tid_44941 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44941 -
                                                             skip_threads_44956) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44957) {
                                        x_44950 = x_44951;
                                    }
                                    if (!inactive_44957) {
                                        float defunc_1_op_res_44952 = x_44950 +
                                              x_44951;
                                        
                                        x_44950 = defunc_1_op_res_44952;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44943, skip_threads_44956)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44956, local_tid_44941 -
                                      squot32(local_tid_44941, 32) * 32) &&
                                (squot32(local_tid_44941, 32) == 0 &&
                                 ltid_in_bounds_44953)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                                        x_44950;
                                    x_44951 = x_44950;
                                }
                            }
                            if (sle32(wave_sizze_44943, skip_threads_44956)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44956 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44941, 32) == 0 ||
                          !ltid_in_bounds_44953)) {
                        // read operands
                        {
                            x_32173 = x_32172;
                            x_32172 = ((__local
                                        float *) red_arr_mem_44945)[sext_i32_i64(squot32(local_tid_44941,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44958 =
                                 slt64(srem64(sext_i32_i64(local_tid_44941),
                                              i32_res_27921),
                                       sext_i32_i64(local_tid_44941) -
                                       sext_i32_i64(squot32(local_tid_44941,
                                                            32) * 32 - 1));
                            
                            if (inactive_44958) {
                                x_32172 = x_32173;
                            }
                            if (!inactive_44958) {
                                float defunc_1_op_res_32174 = x_32172 + x_32173;
                                
                                x_32172 = defunc_1_op_res_32174;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                                x_32172;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44941, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44945)[sext_i32_i64(local_tid_44941)] =
                            x_32173;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44949) *
                      squot64(segred_group_sizze_32168,
                              segment_sizze_nonzzero_44938) +
                      sext_i32_i64(local_tid_44941), m_27551) &&
                slt64(sext_i32_i64(local_tid_44941),
                      squot64(segred_group_sizze_32168,
                              segment_sizze_nonzzero_44938))) {
                ((__global
                  float *) mem_43738)[sext_i32_i64(virt_group_id_44949) *
                                      squot64(segred_group_sizze_32168,
                                              segment_sizze_nonzzero_44938) +
                                      sext_i32_i64(local_tid_44941)] = ((__local
                                                                         float *) red_arr_mem_44945)[(sext_i32_i64(local_tid_44941) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44938 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_32168
}
__kernel void mainDetailedzisegred_small_33323(__global int *global_failure,
                                               __local volatile
                                               int64_t *red_arr_mem_45127_backing_aligned_0,
                                               __local volatile
                                               int64_t *red_arr_mem_45125_backing_aligned_1,
                                               __local volatile
                                               int64_t *red_arr_mem_45123_backing_aligned_2,
                                               int64_t m_27551,
                                               int64_t iota32_arg_27946,
                                               int64_t num_groups_33494,
                                               int64_t segment_sizze_nonzzero_45116,
                                               __global
                                               unsigned char *mem_43744,
                                               __global
                                               unsigned char *mem_43808,
                                               __global
                                               unsigned char *mem_43810,
                                               __global
                                               unsigned char *mem_43814,
                                               __global
                                               unsigned char *mem_43817,
                                               __global
                                               unsigned char *mem_43819,
                                               __global
                                               unsigned char *mem_43821,
                                               __global
                                               unsigned char *mem_43824)
{
    #define segred_group_sizze_33493 (mainDetailedzisegred_group_sizze_33317)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45127_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45127_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45125_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45125_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45123_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45123_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45118;
    int32_t local_tid_45119;
    int64_t group_sizze_45122;
    int32_t wave_sizze_45121;
    int32_t group_tid_45120;
    
    global_tid_45118 = get_global_id(0);
    local_tid_45119 = get_local_id(0);
    group_sizze_45122 = get_local_size(0);
    wave_sizze_45121 = LOCKSTEP_WIDTH;
    group_tid_45120 = get_group_id(0);
    
    int32_t phys_tid_33323;
    
    phys_tid_33323 = global_tid_45118;
    
    __local char *red_arr_mem_45123;
    
    red_arr_mem_45123 = (__local char *) red_arr_mem_45123_backing_0;
    
    __local char *red_arr_mem_45125;
    
    red_arr_mem_45125 = (__local char *) red_arr_mem_45125_backing_1;
    
    __local char *red_arr_mem_45127;
    
    red_arr_mem_45127 = (__local char *) red_arr_mem_45127_backing_2;
    
    int32_t phys_group_id_45129;
    
    phys_group_id_45129 = get_group_id(0);
    for (int32_t i_45130 = 0; i_45130 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_27551,
                                          squot64(segred_group_sizze_33493,
                                                  segment_sizze_nonzzero_45116))) -
                   phys_group_id_45129, sext_i64_i32(num_groups_33494));
         i_45130++) {
        int32_t virt_group_id_45131 = phys_group_id_45129 + i_45130 *
                sext_i64_i32(num_groups_33494);
        int64_t gtid_33314 = squot64(sext_i32_i64(local_tid_45119),
                                     segment_sizze_nonzzero_45116) +
                sext_i32_i64(virt_group_id_45131) *
                squot64(segred_group_sizze_33493, segment_sizze_nonzzero_45116);
        int64_t gtid_33322 = srem64(sext_i32_i64(local_tid_45119),
                                    iota32_arg_27946);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_27946) && (slt64(gtid_33314,
                                                               m_27551) &&
                                                         slt64(sext_i32_i64(local_tid_45119),
                                                               iota32_arg_27946 *
                                                               squot64(segred_group_sizze_33493,
                                                                       segment_sizze_nonzzero_45116)))) {
                int32_t y_33514 = ((__global int32_t *) mem_43810)[gtid_33314];
                float y_33515 = ((__global float *) mem_43808)[gtid_33314];
                float x_33519 = ((__global float *) mem_43814)[gtid_33314 *
                                                               iota32_arg_27946 +
                                                               gtid_33322];
                float x_33520 = ((__global float *) mem_43744)[gtid_33322];
                int32_t index_primexp_40955 = sext_i64_i32(gtid_33322);
                float defunc_0_f_res_33523 = x_33519 / y_33515;
                bool cond_33524 = slt32(index_primexp_40955, y_33514);
                bool isnan_res_33525;
                
                isnan_res_33525 = futrts_isnan32(defunc_0_f_res_33523);
                
                bool cond_t_res_33526 = !isnan_res_33525;
                bool x_33527 = cond_33524 && cond_t_res_33526;
                float abs_res_33528 = (float) fabs(defunc_0_f_res_33523);
                bool defunc_2_f_res_t_res_33529 = x_33520 < abs_res_33528;
                bool x_33530 = x_33527 && defunc_2_f_res_t_res_33529;
                float defunc_1_f_res_33531;
                
                if (cond_33524) {
                    defunc_1_f_res_33531 = defunc_0_f_res_33523;
                } else {
                    defunc_1_f_res_33531 = 0.0F;
                }
                // save map-out results
                {
                    ((__global float *) mem_43824)[gtid_33314 *
                                                   iota32_arg_27946 +
                                                   gtid_33322] =
                        defunc_0_f_res_33523;
                }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                        x_33530;
                    ((__local
                      int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119)] =
                        index_primexp_40955;
                    ((__local
                      float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119)] =
                        defunc_1_f_res_33531;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_27946)) {
            // perform segmented scan to imitate reduction
            {
                bool x_33500;
                int32_t x_33501;
                float x_33502;
                bool x_33503;
                int32_t x_33504;
                float x_33505;
                bool x_45132;
                int32_t x_45133;
                float x_45134;
                bool x_45135;
                int32_t x_45136;
                float x_45137;
                bool ltid_in_bounds_45146;
                
                ltid_in_bounds_45146 = slt64(sext_i32_i64(local_tid_45119),
                                             iota32_arg_27946 *
                                             squot64(segred_group_sizze_33493,
                                                     segment_sizze_nonzzero_45116));
                
                int32_t skip_threads_45147;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45146) {
                        x_33503 = ((volatile __local
                                    bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)];
                        x_33504 = ((volatile __local
                                    int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119)];
                        x_33505 = ((volatile __local
                                    float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119)];
                        if ((local_tid_45119 - squot32(local_tid_45119, 32) *
                             32) == 0) {
                            x_33500 = x_33503;
                            x_33501 = x_33504;
                            x_33502 = x_33505;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45147 = 1;
                    while (slt32(skip_threads_45147, 32)) {
                        if (sle32(skip_threads_45147, local_tid_45119 -
                                  squot32(local_tid_45119, 32) * 32) &&
                            ltid_in_bounds_45146) {
                            // read operands
                            {
                                x_33500 = ((volatile __local
                                            bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119) -
                                                                       sext_i32_i64(skip_threads_45147)];
                                x_33501 = ((volatile __local
                                            int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119) -
                                                                          sext_i32_i64(skip_threads_45147)];
                                x_33502 = ((volatile __local
                                            float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119) -
                                                                        sext_i32_i64(skip_threads_45147)];
                            }
                            // perform operation
                            {
                                bool inactive_45148 =
                                     slt64(srem64(sext_i32_i64(local_tid_45119),
                                                  iota32_arg_27946),
                                           sext_i32_i64(local_tid_45119) -
                                           sext_i32_i64(local_tid_45119 -
                                           skip_threads_45147));
                                
                                if (inactive_45148) {
                                    x_33500 = x_33503;
                                    x_33501 = x_33504;
                                    x_33502 = x_33505;
                                }
                                if (!inactive_45148) {
                                    bool defunc_1_op_res_33506;
                                    int32_t defunc_1_op_res_33507;
                                    
                                    if (x_33500) {
                                        defunc_1_op_res_33506 = x_33500;
                                        defunc_1_op_res_33507 = x_33501;
                                    } else {
                                        bool x_33508 = x_33503 && x_33503;
                                        bool x_33509 = !x_33503;
                                        bool y_33510 = x_33500 && x_33509;
                                        bool defunc_1_op_res_f_res_33511 =
                                             x_33508 || y_33510;
                                        int32_t defunc_1_op_res_f_res_33512;
                                        
                                        if (x_33503) {
                                            defunc_1_op_res_f_res_33512 =
                                                x_33504;
                                        } else {
                                            defunc_1_op_res_f_res_33512 =
                                                x_33501;
                                        }
                                        defunc_1_op_res_33506 =
                                            defunc_1_op_res_f_res_33511;
                                        defunc_1_op_res_33507 =
                                            defunc_1_op_res_f_res_33512;
                                    }
                                    
                                    float defunc_1_op_res_33513 = x_33502 +
                                          x_33505;
                                    
                                    x_33500 = defunc_1_op_res_33506;
                                    x_33501 = defunc_1_op_res_33507;
                                    x_33502 = defunc_1_op_res_33513;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45121, skip_threads_45147)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45147, local_tid_45119 -
                                  squot32(local_tid_45119, 32) * 32) &&
                            ltid_in_bounds_45146) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                                    x_33500;
                                x_33503 = x_33500;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119)] =
                                    x_33501;
                                x_33504 = x_33501;
                                ((volatile __local
                                  float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119)] =
                                    x_33502;
                                x_33505 = x_33502;
                            }
                        }
                        if (sle32(wave_sizze_45121, skip_threads_45147)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45147 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45119 - squot32(local_tid_45119, 32) * 32) ==
                        31 && ltid_in_bounds_45146) {
                        ((volatile __local
                          bool *) red_arr_mem_45123)[sext_i32_i64(squot32(local_tid_45119,
                                                                          32))] =
                            x_33500;
                        ((volatile __local
                          int32_t *) red_arr_mem_45125)[sext_i32_i64(squot32(local_tid_45119,
                                                                             32))] =
                            x_33501;
                        ((volatile __local
                          float *) red_arr_mem_45127)[sext_i32_i64(squot32(local_tid_45119,
                                                                           32))] =
                            x_33502;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45149;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45119, 32) == 0 &&
                            ltid_in_bounds_45146) {
                            x_45135 = ((volatile __local
                                        bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)];
                            x_45136 = ((volatile __local
                                        int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119)];
                            x_45137 = ((volatile __local
                                        float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119)];
                            if ((local_tid_45119 - squot32(local_tid_45119,
                                                           32) * 32) == 0) {
                                x_45132 = x_45135;
                                x_45133 = x_45136;
                                x_45134 = x_45137;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45149 = 1;
                        while (slt32(skip_threads_45149, 32)) {
                            if (sle32(skip_threads_45149, local_tid_45119 -
                                      squot32(local_tid_45119, 32) * 32) &&
                                (squot32(local_tid_45119, 32) == 0 &&
                                 ltid_in_bounds_45146)) {
                                // read operands
                                {
                                    x_45132 = ((volatile __local
                                                bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119) -
                                                                           sext_i32_i64(skip_threads_45149)];
                                    x_45133 = ((volatile __local
                                                int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119) -
                                                                              sext_i32_i64(skip_threads_45149)];
                                    x_45134 = ((volatile __local
                                                float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119) -
                                                                            sext_i32_i64(skip_threads_45149)];
                                }
                                // perform operation
                                {
                                    bool inactive_45150 =
                                         slt64(srem64(sext_i32_i64(local_tid_45119 *
                                                      32 + 32 - 1),
                                                      iota32_arg_27946),
                                               sext_i32_i64(local_tid_45119 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45119 -
                                                             skip_threads_45149) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45150) {
                                        x_45132 = x_45135;
                                        x_45133 = x_45136;
                                        x_45134 = x_45137;
                                    }
                                    if (!inactive_45150) {
                                        bool defunc_1_op_res_45138;
                                        int32_t defunc_1_op_res_45139;
                                        
                                        if (x_45132) {
                                            defunc_1_op_res_45138 = x_45132;
                                            defunc_1_op_res_45139 = x_45133;
                                        } else {
                                            bool x_45140 = x_45135 && x_45135;
                                            bool x_45141 = !x_45135;
                                            bool y_45142 = x_45132 && x_45141;
                                            bool defunc_1_op_res_f_res_45143 =
                                                 x_45140 || y_45142;
                                            int32_t defunc_1_op_res_f_res_45144;
                                            
                                            if (x_45135) {
                                                defunc_1_op_res_f_res_45144 =
                                                    x_45136;
                                            } else {
                                                defunc_1_op_res_f_res_45144 =
                                                    x_45133;
                                            }
                                            defunc_1_op_res_45138 =
                                                defunc_1_op_res_f_res_45143;
                                            defunc_1_op_res_45139 =
                                                defunc_1_op_res_f_res_45144;
                                        }
                                        
                                        float defunc_1_op_res_45145 = x_45134 +
                                              x_45137;
                                        
                                        x_45132 = defunc_1_op_res_45138;
                                        x_45133 = defunc_1_op_res_45139;
                                        x_45134 = defunc_1_op_res_45145;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45121, skip_threads_45149)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45149, local_tid_45119 -
                                      squot32(local_tid_45119, 32) * 32) &&
                                (squot32(local_tid_45119, 32) == 0 &&
                                 ltid_in_bounds_45146)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                                        x_45132;
                                    x_45135 = x_45132;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119)] =
                                        x_45133;
                                    x_45136 = x_45133;
                                    ((volatile __local
                                      float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119)] =
                                        x_45134;
                                    x_45137 = x_45134;
                                }
                            }
                            if (sle32(wave_sizze_45121, skip_threads_45149)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45149 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45119, 32) == 0 ||
                          !ltid_in_bounds_45146)) {
                        // read operands
                        {
                            x_33503 = x_33500;
                            x_33504 = x_33501;
                            x_33505 = x_33502;
                            x_33500 = ((__local
                                        bool *) red_arr_mem_45123)[sext_i32_i64(squot32(local_tid_45119,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_33501 = ((__local
                                        int32_t *) red_arr_mem_45125)[sext_i32_i64(squot32(local_tid_45119,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_33502 = ((__local
                                        float *) red_arr_mem_45127)[sext_i32_i64(squot32(local_tid_45119,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45151 =
                                 slt64(srem64(sext_i32_i64(local_tid_45119),
                                              iota32_arg_27946),
                                       sext_i32_i64(local_tid_45119) -
                                       sext_i32_i64(squot32(local_tid_45119,
                                                            32) * 32 - 1));
                            
                            if (inactive_45151) {
                                x_33500 = x_33503;
                                x_33501 = x_33504;
                                x_33502 = x_33505;
                            }
                            if (!inactive_45151) {
                                bool defunc_1_op_res_33506;
                                int32_t defunc_1_op_res_33507;
                                
                                if (x_33500) {
                                    defunc_1_op_res_33506 = x_33500;
                                    defunc_1_op_res_33507 = x_33501;
                                } else {
                                    bool x_33508 = x_33503 && x_33503;
                                    bool x_33509 = !x_33503;
                                    bool y_33510 = x_33500 && x_33509;
                                    bool defunc_1_op_res_f_res_33511 =
                                         x_33508 || y_33510;
                                    int32_t defunc_1_op_res_f_res_33512;
                                    
                                    if (x_33503) {
                                        defunc_1_op_res_f_res_33512 = x_33504;
                                    } else {
                                        defunc_1_op_res_f_res_33512 = x_33501;
                                    }
                                    defunc_1_op_res_33506 =
                                        defunc_1_op_res_f_res_33511;
                                    defunc_1_op_res_33507 =
                                        defunc_1_op_res_f_res_33512;
                                }
                                
                                float defunc_1_op_res_33513 = x_33502 + x_33505;
                                
                                x_33500 = defunc_1_op_res_33506;
                                x_33501 = defunc_1_op_res_33507;
                                x_33502 = defunc_1_op_res_33513;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                                x_33500;
                            ((__local
                              int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119)] =
                                x_33501;
                            ((__local
                              float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119)] =
                                x_33502;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45119, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45123)[sext_i32_i64(local_tid_45119)] =
                            x_33503;
                        ((__local
                          int32_t *) red_arr_mem_45125)[sext_i32_i64(local_tid_45119)] =
                            x_33504;
                        ((__local
                          float *) red_arr_mem_45127)[sext_i32_i64(local_tid_45119)] =
                            x_33505;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45131) *
                      squot64(segred_group_sizze_33493,
                              segment_sizze_nonzzero_45116) +
                      sext_i32_i64(local_tid_45119), m_27551) &&
                slt64(sext_i32_i64(local_tid_45119),
                      squot64(segred_group_sizze_33493,
                              segment_sizze_nonzzero_45116))) {
                ((__global
                  bool *) mem_43817)[sext_i32_i64(virt_group_id_45131) *
                                     squot64(segred_group_sizze_33493,
                                             segment_sizze_nonzzero_45116) +
                                     sext_i32_i64(local_tid_45119)] = ((__local
                                                                        bool *) red_arr_mem_45123)[(sext_i32_i64(local_tid_45119) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_45116 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43819)[sext_i32_i64(virt_group_id_45131) *
                                        squot64(segred_group_sizze_33493,
                                                segment_sizze_nonzzero_45116) +
                                        sext_i32_i64(local_tid_45119)] =
                    ((__local
                      int32_t *) red_arr_mem_45125)[(sext_i32_i64(local_tid_45119) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_45116 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43821)[sext_i32_i64(virt_group_id_45131) *
                                      squot64(segred_group_sizze_33493,
                                              segment_sizze_nonzzero_45116) +
                                      sext_i32_i64(local_tid_45119)] = ((__local
                                                                         float *) red_arr_mem_45127)[(sext_i32_i64(local_tid_45119) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_45116 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_33493
}
__kernel void mainMagnitudezicopy_44241(int64_t m_28248, int64_t i32_res_28396,
                                        int64_t ctx_param_ext_43040,
                                        int64_t ctx_param_ext_43041,
                                        int64_t ctx_param_ext_43043, __global
                                        unsigned char *mem_param_43045, __global
                                        unsigned char *mem_43050)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    int32_t copy_gtid_44241;
    int32_t copy_ltid_44242;
    int32_t copy_gid_44243;
    
    copy_gtid_44241 = get_global_id(0);
    copy_ltid_44242 = get_local_id(0);
    copy_gid_44243 = get_group_id(0);
    if (slt64(sext_i32_i64(copy_gtid_44241), m_28248 * i32_res_28396)) {
        ((__global float *) mem_43050)[(sext_i32_i64(copy_gtid_44241) -
                                        squot64(sext_i32_i64(copy_gtid_44241),
                                                i32_res_28396) *
                                        i32_res_28396) * m_28248 +
                                       squot64(sext_i32_i64(copy_gtid_44241),
                                               i32_res_28396)] = ((__global
                                                                   float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                                             (squot64(sext_i32_i64(copy_gtid_44241),
                                                                                                      i32_res_28396) *
                                                                                              ctx_param_ext_43041 +
                                                                                              (sext_i32_i64(copy_gtid_44241) -
                                                                                               squot64(sext_i32_i64(copy_gtid_44241),
                                                                                                       i32_res_28396) *
                                                                                               i32_res_28396) *
                                                                                              ctx_param_ext_43043)];
    }
    
  error_0:
    return;
}
__kernel void mainMagnitudeziscan_stage1_35787(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44653_backing_aligned_0,
                                               int64_t N_28247, int64_t m_28248,
                                               int32_t num_threads_44647,
                                               __global
                                               unsigned char *images_mem_42841,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43600,
                                               __global
                                               unsigned char *mem_43623,
                                               __global
                                               unsigned char *mem_43626)
{
    #define segscan_group_sizze_35804 (mainMagnitudezisegscan_group_sizze_35781)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44653_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44653_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44648;
    int32_t local_tid_44649;
    int64_t group_sizze_44652;
    int32_t wave_sizze_44651;
    int32_t group_tid_44650;
    
    global_tid_44648 = get_global_id(0);
    local_tid_44649 = get_local_id(0);
    group_sizze_44652 = get_local_size(0);
    wave_sizze_44651 = LOCKSTEP_WIDTH;
    group_tid_44650 = get_group_id(0);
    
    int32_t phys_tid_35787;
    
    phys_tid_35787 = global_tid_44648;
    
    __local char *scan_arr_mem_44653;
    
    scan_arr_mem_44653 = (__local char *) scan_arr_mem_44653_backing_0;
    
    int64_t x_35809;
    int64_t x_35810;
    
    x_35809 = (int64_t) 0;
    for (int64_t j_44655 = 0; j_44655 < sdiv_up64(m_28248 * N_28247,
                                                  sext_i32_i64(num_threads_44647));
         j_44655++) {
        int64_t chunk_offset_44656 = segscan_group_sizze_35804 * j_44655 +
                sext_i32_i64(group_tid_44650) * (segscan_group_sizze_35804 *
                                                 sdiv_up64(m_28248 * N_28247,
                                                           sext_i32_i64(num_threads_44647)));
        int64_t flat_idx_44657 = chunk_offset_44656 +
                sext_i32_i64(local_tid_44649);
        int64_t gtid_35778 = squot64(flat_idx_44657, N_28247);
        int64_t gtid_35786 = flat_idx_44657 - squot64(flat_idx_44657, N_28247) *
                N_28247;
        
        // threads in bounds read input
        {
            if (slt64(gtid_35778, m_28248) && slt64(gtid_35786, N_28247)) {
                float x_35814 = ((__global
                                  float *) images_mem_42841)[gtid_35778 *
                                                             N_28247 +
                                                             gtid_35786];
                bool isnan_res_35816;
                
                isnan_res_35816 = futrts_isnan32(x_35814);
                
                bool cond_35817 = !isnan_res_35816;
                float defunc_0_f_res_35818;
                
                if (cond_35817) {
                    float x_35815 = ((__global
                                      float *) defunc_3_map_res_mem_43600)[gtid_35778 *
                                                                           N_28247 +
                                                                           gtid_35786];
                    float defunc_0_f_res_t_res_35819 = x_35814 - x_35815;
                    
                    defunc_0_f_res_35818 = defunc_0_f_res_t_res_35819;
                } else {
                    defunc_0_f_res_35818 = NAN;
                }
                
                bool isnan_res_35820;
                
                isnan_res_35820 = futrts_isnan32(defunc_0_f_res_35818);
                
                bool defunc_0_p_res_35821 = !isnan_res_35820;
                int64_t defunc_0_f_res_35822 =
                        btoi_bool_i64(defunc_0_p_res_35821);
                
                // write to-scan values to parameters
                {
                    x_35810 = defunc_0_f_res_35822;
                }
                // write mapped values results to global memory
                {
                    ((__global float *) mem_43626)[gtid_35778 * N_28247 +
                                                   gtid_35786] =
                        defunc_0_f_res_35818;
                }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_35778, m_28248) && slt64(gtid_35786,
                                                          N_28247))) {
                    x_35810 = (int64_t) 0;
                }
            }
            // combine with carry and write to local memory
            {
                int64_t defunc_1_op_res_35811 = add64(x_35809, x_35810);
                
                ((__local
                  int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649)] =
                    defunc_1_op_res_35811;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t x_44658;
            int64_t x_44659;
            int64_t x_44661;
            int64_t x_44662;
            bool ltid_in_bounds_44664;
            
            ltid_in_bounds_44664 = slt64(sext_i32_i64(local_tid_44649),
                                         segscan_group_sizze_35804);
            
            int32_t skip_threads_44665;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_44664) {
                    x_44659 = ((volatile __local
                                int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649)];
                    if ((local_tid_44649 - squot32(local_tid_44649, 32) * 32) ==
                        0) {
                        x_44658 = x_44659;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_44665 = 1;
                while (slt32(skip_threads_44665, 32)) {
                    if (sle32(skip_threads_44665, local_tid_44649 -
                              squot32(local_tid_44649, 32) * 32) &&
                        ltid_in_bounds_44664) {
                        // read operands
                        {
                            x_44658 = ((volatile __local
                                        int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649) -
                                                                       sext_i32_i64(skip_threads_44665)];
                        }
                        // perform operation
                        {
                            bool inactive_44666 =
                                 slt64(srem64(sext_i32_i64(local_tid_44649) +
                                              chunk_offset_44656, N_28247),
                                       sext_i32_i64(local_tid_44649) +
                                       chunk_offset_44656 -
                                       (sext_i32_i64(local_tid_44649 -
                                        skip_threads_44665) +
                                        chunk_offset_44656));
                            
                            if (inactive_44666) {
                                x_44658 = x_44659;
                            }
                            if (!inactive_44666) {
                                int64_t defunc_1_op_res_44660 = add64(x_44658,
                                                                      x_44659);
                                
                                x_44658 = defunc_1_op_res_44660;
                            }
                        }
                    }
                    if (sle32(wave_sizze_44651, skip_threads_44665)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_44665, local_tid_44649 -
                              squot32(local_tid_44649, 32) * 32) &&
                        ltid_in_bounds_44664) {
                        // write result
                        {
                            ((volatile __local
                              int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649)] =
                                x_44658;
                            x_44659 = x_44658;
                        }
                    }
                    if (sle32(wave_sizze_44651, skip_threads_44665)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_44665 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_44649 - squot32(local_tid_44649, 32) * 32) ==
                    31 && ltid_in_bounds_44664) {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44653)[sext_i32_i64(squot32(local_tid_44649,
                                                                          32))] =
                        x_44658;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_44667;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_44649, 32) == 0 &&
                        ltid_in_bounds_44664) {
                        x_44662 = ((volatile __local
                                    int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649)];
                        if ((local_tid_44649 - squot32(local_tid_44649, 32) *
                             32) == 0) {
                            x_44661 = x_44662;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44667 = 1;
                    while (slt32(skip_threads_44667, 32)) {
                        if (sle32(skip_threads_44667, local_tid_44649 -
                                  squot32(local_tid_44649, 32) * 32) &&
                            (squot32(local_tid_44649, 32) == 0 &&
                             ltid_in_bounds_44664)) {
                            // read operands
                            {
                                x_44661 = ((volatile __local
                                            int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649) -
                                                                           sext_i32_i64(skip_threads_44667)];
                            }
                            // perform operation
                            {
                                bool inactive_44668 =
                                     slt64(srem64(sext_i32_i64(local_tid_44649 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_44656, N_28247),
                                           sext_i32_i64(local_tid_44649 * 32 +
                                           32 - 1) + chunk_offset_44656 -
                                           (sext_i32_i64((local_tid_44649 -
                                                          skip_threads_44667) *
                                            32 + 32 - 1) + chunk_offset_44656));
                                
                                if (inactive_44668) {
                                    x_44661 = x_44662;
                                }
                                if (!inactive_44668) {
                                    int64_t defunc_1_op_res_44663 =
                                            add64(x_44661, x_44662);
                                    
                                    x_44661 = defunc_1_op_res_44663;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44651, skip_threads_44667)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44667, local_tid_44649 -
                                  squot32(local_tid_44649, 32) * 32) &&
                            (squot32(local_tid_44649, 32) == 0 &&
                             ltid_in_bounds_44664)) {
                            // write result
                            {
                                ((volatile __local
                                  int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649)] =
                                    x_44661;
                                x_44662 = x_44661;
                            }
                        }
                        if (sle32(wave_sizze_44651, skip_threads_44667)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44667 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_44649, 32) == 0 ||
                      !ltid_in_bounds_44664)) {
                    // read operands
                    {
                        x_44659 = x_44658;
                        x_44658 = ((__local
                                    int64_t *) scan_arr_mem_44653)[sext_i32_i64(squot32(local_tid_44649,
                                                                                        32)) -
                                                                   (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_44669 =
                             slt64(srem64(sext_i32_i64(local_tid_44649) +
                                          chunk_offset_44656, N_28247),
                                   sext_i32_i64(local_tid_44649) +
                                   chunk_offset_44656 -
                                   (sext_i32_i64(squot32(local_tid_44649, 32) *
                                    32 - 1) + chunk_offset_44656));
                        
                        if (inactive_44669) {
                            x_44658 = x_44659;
                        }
                        if (!inactive_44669) {
                            int64_t defunc_1_op_res_44660 = add64(x_44658,
                                                                  x_44659);
                            
                            x_44658 = defunc_1_op_res_44660;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649)] =
                            x_44658;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_44649, 32) == 0) {
                    ((__local
                      int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649)] =
                        x_44659;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_35778, m_28248) && slt64(gtid_35786, N_28247)) {
                    ((__global int64_t *) mem_43623)[gtid_35778 * N_28247 +
                                                     gtid_35786] = ((__local
                                                                     int64_t *) scan_arr_mem_44653)[sext_i32_i64(local_tid_44649)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_44670 = slt64(srem64(chunk_offset_44656 +
                                                          segscan_group_sizze_35804,
                                                          N_28247),
                                                   chunk_offset_44656 +
                                                   segscan_group_sizze_35804 -
                                                   (chunk_offset_44656 +
                                                    segscan_group_sizze_35804 -
                                                    (int64_t) 1));
                bool should_load_carry_44671 = local_tid_44649 == 0 &&
                     !crosses_segment_44670;
                
                if (should_load_carry_44671) {
                    x_35809 = ((__local
                                int64_t *) scan_arr_mem_44653)[segscan_group_sizze_35804 -
                                                               (int64_t) 1];
                }
                if (!should_load_carry_44671) {
                    x_35809 = (int64_t) 0;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_35804
}
__kernel void mainMagnitudeziscan_stage1_37329(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_45056_backing_aligned_0,
                                               int64_t N_28247, int64_t m_28248,
                                               int64_t iota32_arg_28643,
                                               int32_t num_threads_45050,
                                               __global
                                               unsigned char *defunc_4_map_res_mem_43638,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43704,
                                               __global
                                               unsigned char *defunc_3_map_res_mem_43705,
                                               __global
                                               unsigned char *defunc_0_f_res_mem_43739,
                                               __global
                                               unsigned char *mem_43799,
                                               __global
                                               unsigned char *mem_43803)
{
    #define segscan_group_sizze_37407 (mainMagnitudezisegscan_group_sizze_37323)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45056_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45056_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45051;
    int32_t local_tid_45052;
    int64_t group_sizze_45055;
    int32_t wave_sizze_45054;
    int32_t group_tid_45053;
    
    global_tid_45051 = get_global_id(0);
    local_tid_45052 = get_local_id(0);
    group_sizze_45055 = get_local_size(0);
    wave_sizze_45054 = LOCKSTEP_WIDTH;
    group_tid_45053 = get_group_id(0);
    
    int32_t phys_tid_37329;
    
    phys_tid_37329 = global_tid_45051;
    
    __local char *scan_arr_mem_45056;
    
    scan_arr_mem_45056 = (__local char *) scan_arr_mem_45056_backing_0;
    
    float x_37411;
    float x_37412;
    
    x_37411 = 0.0F;
    for (int64_t j_45058 = 0; j_45058 < sdiv_up64(m_28248 * iota32_arg_28643,
                                                  sext_i32_i64(num_threads_45050));
         j_45058++) {
        int64_t chunk_offset_45059 = segscan_group_sizze_37407 * j_45058 +
                sext_i32_i64(group_tid_45053) * (segscan_group_sizze_37407 *
                                                 sdiv_up64(m_28248 *
                                                           iota32_arg_28643,
                                                           sext_i32_i64(num_threads_45050)));
        int64_t flat_idx_45060 = chunk_offset_45059 +
                sext_i32_i64(local_tid_45052);
        int64_t gtid_37320 = squot64(flat_idx_45060, iota32_arg_28643);
        int64_t gtid_37328 = flat_idx_45060 - squot64(flat_idx_45060,
                                                      iota32_arg_28643) *
                iota32_arg_28643;
        
        // threads in bounds read input
        {
            if (slt64(gtid_37320, m_28248) && slt64(gtid_37328,
                                                    iota32_arg_28643)) {
                int32_t y_37418 = ((__global int32_t *) mem_43799)[gtid_37320];
                int32_t index_primexp_40949 = sext_i64_i32(gtid_37328);
                bool cond_37421 = sle32(y_37418, index_primexp_40949);
                float defunc_0_f_res_37422;
                
                if (cond_37421) {
                    defunc_0_f_res_37422 = 0.0F;
                } else {
                    int32_t x_37414 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_37320];
                    int32_t x_37415 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43704)[gtid_37320];
                    float x_37416 = ((__global
                                      float *) defunc_0_f_res_mem_43739)[gtid_37320];
                    bool cond_37423 = index_primexp_40949 == 0;
                    float defunc_0_f_res_f_res_37424;
                    
                    if (cond_37423) {
                        defunc_0_f_res_f_res_37424 = x_37416;
                    } else {
                        int32_t i_37425 = add32(x_37414, index_primexp_40949);
                        int64_t i_37426 = sext_i32_i64(i_37425);
                        float x_37427 = ((__global
                                          float *) defunc_4_map_res_mem_43638)[gtid_37320 *
                                                                               N_28247 +
                                                                               i_37426];
                        int32_t x_37428 = sub32(x_37414, x_37415);
                        int32_t i_37429 = add32(x_37428, index_primexp_40949);
                        int64_t i_37430 = sext_i32_i64(i_37429);
                        float y_37431 = ((__global
                                          float *) defunc_4_map_res_mem_43638)[gtid_37320 *
                                                                               N_28247 +
                                                                               i_37430];
                        float defunc_0_f_res_f_res_f_res_37432 = x_37427 -
                              y_37431;
                        
                        defunc_0_f_res_f_res_37424 =
                            defunc_0_f_res_f_res_f_res_37432;
                    }
                    defunc_0_f_res_37422 = defunc_0_f_res_f_res_37424;
                }
                // write to-scan values to parameters
                {
                    x_37412 = defunc_0_f_res_37422;
                }
                // write mapped values results to global memory
                { }
            }
        }
        // do one intra-group scan operation
        {
            // maybe restore some to-scan values to parameters, or read neutral
            {
                if (!(slt64(gtid_37320, m_28248) && slt64(gtid_37328,
                                                          iota32_arg_28643))) {
                    x_37412 = 0.0F;
                }
            }
            // combine with carry and write to local memory
            {
                float defunc_1_op_res_37413 = x_37411 + x_37412;
                
                ((__local
                  float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052)] =
                    defunc_1_op_res_37413;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float x_45061;
            float x_45062;
            float x_45064;
            float x_45065;
            bool ltid_in_bounds_45067;
            
            ltid_in_bounds_45067 = slt64(sext_i32_i64(local_tid_45052),
                                         segscan_group_sizze_37407);
            
            int32_t skip_threads_45068;
            
            // read input for in-block scan
            {
                if (ltid_in_bounds_45067) {
                    x_45062 = ((volatile __local
                                float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052)];
                    if ((local_tid_45052 - squot32(local_tid_45052, 32) * 32) ==
                        0) {
                        x_45061 = x_45062;
                    }
                }
            }
            // in-block scan (hopefully no barriers needed)
            {
                skip_threads_45068 = 1;
                while (slt32(skip_threads_45068, 32)) {
                    if (sle32(skip_threads_45068, local_tid_45052 -
                              squot32(local_tid_45052, 32) * 32) &&
                        ltid_in_bounds_45067) {
                        // read operands
                        {
                            x_45061 = ((volatile __local
                                        float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052) -
                                                                     sext_i32_i64(skip_threads_45068)];
                        }
                        // perform operation
                        {
                            bool inactive_45069 =
                                 slt64(srem64(sext_i32_i64(local_tid_45052) +
                                              chunk_offset_45059,
                                              iota32_arg_28643),
                                       sext_i32_i64(local_tid_45052) +
                                       chunk_offset_45059 -
                                       (sext_i32_i64(local_tid_45052 -
                                        skip_threads_45068) +
                                        chunk_offset_45059));
                            
                            if (inactive_45069) {
                                x_45061 = x_45062;
                            }
                            if (!inactive_45069) {
                                float defunc_1_op_res_45063 = x_45061 + x_45062;
                                
                                x_45061 = defunc_1_op_res_45063;
                            }
                        }
                    }
                    if (sle32(wave_sizze_45054, skip_threads_45068)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    if (sle32(skip_threads_45068, local_tid_45052 -
                              squot32(local_tid_45052, 32) * 32) &&
                        ltid_in_bounds_45067) {
                        // write result
                        {
                            ((volatile __local
                              float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052)] =
                                x_45061;
                            x_45062 = x_45061;
                        }
                    }
                    if (sle32(wave_sizze_45054, skip_threads_45068)) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                    }
                    skip_threads_45068 *= 2;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // last thread of block 'i' writes its result to offset 'i'
            {
                if ((local_tid_45052 - squot32(local_tid_45052, 32) * 32) ==
                    31 && ltid_in_bounds_45067) {
                    ((volatile __local
                      float *) scan_arr_mem_45056)[sext_i32_i64(squot32(local_tid_45052,
                                                                        32))] =
                        x_45061;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
            {
                int32_t skip_threads_45070;
                
                // read input for in-block scan
                {
                    if (squot32(local_tid_45052, 32) == 0 &&
                        ltid_in_bounds_45067) {
                        x_45065 = ((volatile __local
                                    float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052)];
                        if ((local_tid_45052 - squot32(local_tid_45052, 32) *
                             32) == 0) {
                            x_45064 = x_45065;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45070 = 1;
                    while (slt32(skip_threads_45070, 32)) {
                        if (sle32(skip_threads_45070, local_tid_45052 -
                                  squot32(local_tid_45052, 32) * 32) &&
                            (squot32(local_tid_45052, 32) == 0 &&
                             ltid_in_bounds_45067)) {
                            // read operands
                            {
                                x_45064 = ((volatile __local
                                            float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052) -
                                                                         sext_i32_i64(skip_threads_45070)];
                            }
                            // perform operation
                            {
                                bool inactive_45071 =
                                     slt64(srem64(sext_i32_i64(local_tid_45052 *
                                                  32 + 32 - 1) +
                                                  chunk_offset_45059,
                                                  iota32_arg_28643),
                                           sext_i32_i64(local_tid_45052 * 32 +
                                           32 - 1) + chunk_offset_45059 -
                                           (sext_i32_i64((local_tid_45052 -
                                                          skip_threads_45070) *
                                            32 + 32 - 1) + chunk_offset_45059));
                                
                                if (inactive_45071) {
                                    x_45064 = x_45065;
                                }
                                if (!inactive_45071) {
                                    float defunc_1_op_res_45066 = x_45064 +
                                          x_45065;
                                    
                                    x_45064 = defunc_1_op_res_45066;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45054, skip_threads_45070)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45070, local_tid_45052 -
                                  squot32(local_tid_45052, 32) * 32) &&
                            (squot32(local_tid_45052, 32) == 0 &&
                             ltid_in_bounds_45067)) {
                            // write result
                            {
                                ((volatile __local
                                  float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052)] =
                                    x_45064;
                                x_45065 = x_45064;
                            }
                        }
                        if (sle32(wave_sizze_45054, skip_threads_45070)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45070 *= 2;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // carry-in for every block except the first
            {
                if (!(squot32(local_tid_45052, 32) == 0 ||
                      !ltid_in_bounds_45067)) {
                    // read operands
                    {
                        x_45062 = x_45061;
                        x_45061 = ((__local
                                    float *) scan_arr_mem_45056)[sext_i32_i64(squot32(local_tid_45052,
                                                                                      32)) -
                                                                 (int64_t) 1];
                    }
                    // perform operation
                    {
                        bool inactive_45072 =
                             slt64(srem64(sext_i32_i64(local_tid_45052) +
                                          chunk_offset_45059, iota32_arg_28643),
                                   sext_i32_i64(local_tid_45052) +
                                   chunk_offset_45059 -
                                   (sext_i32_i64(squot32(local_tid_45052, 32) *
                                    32 - 1) + chunk_offset_45059));
                        
                        if (inactive_45072) {
                            x_45061 = x_45062;
                        }
                        if (!inactive_45072) {
                            float defunc_1_op_res_45063 = x_45061 + x_45062;
                            
                            x_45061 = defunc_1_op_res_45063;
                        }
                    }
                    // write final result
                    {
                        ((__local
                          float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052)] =
                            x_45061;
                    }
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // restore correct values for first block
            {
                if (squot32(local_tid_45052, 32) == 0) {
                    ((__local
                      float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052)] =
                        x_45062;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // threads in bounds write partial scan result
            {
                if (slt64(gtid_37320, m_28248) && slt64(gtid_37328,
                                                        iota32_arg_28643)) {
                    ((__global float *) mem_43803)[gtid_37320 *
                                                   iota32_arg_28643 +
                                                   gtid_37328] = ((__local
                                                                   float *) scan_arr_mem_45056)[sext_i32_i64(local_tid_45052)];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread reads last element as carry-in for next iteration
            {
                bool crosses_segment_45073 = slt64(srem64(chunk_offset_45059 +
                                                          segscan_group_sizze_37407,
                                                          iota32_arg_28643),
                                                   chunk_offset_45059 +
                                                   segscan_group_sizze_37407 -
                                                   (chunk_offset_45059 +
                                                    segscan_group_sizze_37407 -
                                                    (int64_t) 1));
                bool should_load_carry_45074 = local_tid_45052 == 0 &&
                     !crosses_segment_45073;
                
                if (should_load_carry_45074) {
                    x_37411 = ((__local
                                float *) scan_arr_mem_45056)[segscan_group_sizze_37407 -
                                                             (int64_t) 1];
                }
                if (!should_load_carry_45074) {
                    x_37411 = 0.0F;
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
  error_1:
    return;
    #undef segscan_group_sizze_37407
}
__kernel void mainMagnitudeziscan_stage2_35787(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_44677_backing_aligned_0,
                                               int64_t N_28247, int64_t m_28248,
                                               int64_t stage1_num_groups_44646,
                                               int32_t num_threads_44647,
                                               __global
                                               unsigned char *mem_43623)
{
    #define segscan_group_sizze_35804 (mainMagnitudezisegscan_group_sizze_35781)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_44677_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_44677_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44672;
    int32_t local_tid_44673;
    int64_t group_sizze_44676;
    int32_t wave_sizze_44675;
    int32_t group_tid_44674;
    
    global_tid_44672 = get_global_id(0);
    local_tid_44673 = get_local_id(0);
    group_sizze_44676 = get_local_size(0);
    wave_sizze_44675 = LOCKSTEP_WIDTH;
    group_tid_44674 = get_group_id(0);
    
    int32_t phys_tid_35787;
    
    phys_tid_35787 = global_tid_44672;
    
    __local char *scan_arr_mem_44677;
    
    scan_arr_mem_44677 = (__local char *) scan_arr_mem_44677_backing_0;
    
    int64_t flat_idx_44679;
    
    flat_idx_44679 = (sext_i32_i64(local_tid_44673) + (int64_t) 1) *
        (segscan_group_sizze_35804 * sdiv_up64(m_28248 * N_28247,
                                               sext_i32_i64(num_threads_44647))) -
        (int64_t) 1;
    
    int64_t gtid_35778;
    
    gtid_35778 = squot64(flat_idx_44679, N_28247);
    
    int64_t gtid_35786;
    
    gtid_35786 = flat_idx_44679 - squot64(flat_idx_44679, N_28247) * N_28247;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_35778, m_28248) && slt64(gtid_35786, N_28247)) {
            ((__local
              int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)] =
                ((__global int64_t *) mem_43623)[gtid_35778 * N_28247 +
                                                 gtid_35786];
        } else {
            ((__local
              int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)] =
                (int64_t) 0;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t x_35809;
    int64_t x_35810;
    int64_t x_44680;
    int64_t x_44681;
    bool ltid_in_bounds_44683;
    
    ltid_in_bounds_44683 = slt64(sext_i32_i64(local_tid_44673),
                                 stage1_num_groups_44646);
    
    int32_t skip_threads_44684;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44683) {
            x_35810 = ((volatile __local
                        int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)];
            if ((local_tid_44673 - squot32(local_tid_44673, 32) * 32) == 0) {
                x_35809 = x_35810;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44684 = 1;
        while (slt32(skip_threads_44684, 32)) {
            if (sle32(skip_threads_44684, local_tid_44673 -
                      squot32(local_tid_44673, 32) * 32) &&
                ltid_in_bounds_44683) {
                // read operands
                {
                    x_35809 = ((volatile __local
                                int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673) -
                                                               sext_i32_i64(skip_threads_44684)];
                }
                // perform operation
                {
                    bool inactive_44685 =
                         slt64(srem64((sext_i32_i64(local_tid_44673) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_35804 *
                                       sdiv_up64(m_28248 * N_28247,
                                                 sext_i32_i64(num_threads_44647))) -
                                      (int64_t) 1, N_28247),
                               (sext_i32_i64(local_tid_44673) + (int64_t) 1) *
                               (segscan_group_sizze_35804 * sdiv_up64(m_28248 *
                                                                      N_28247,
                                                                      sext_i32_i64(num_threads_44647))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_44673 -
                                               skip_threads_44684) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_35804 *
                                               sdiv_up64(m_28248 * N_28247,
                                                         sext_i32_i64(num_threads_44647))) -
                                              (int64_t) 1));
                    
                    if (inactive_44685) {
                        x_35809 = x_35810;
                    }
                    if (!inactive_44685) {
                        int64_t defunc_1_op_res_35811 = add64(x_35809, x_35810);
                        
                        x_35809 = defunc_1_op_res_35811;
                    }
                }
            }
            if (sle32(wave_sizze_44675, skip_threads_44684)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44684, local_tid_44673 -
                      squot32(local_tid_44673, 32) * 32) &&
                ltid_in_bounds_44683) {
                // write result
                {
                    ((volatile __local
                      int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)] =
                        x_35809;
                    x_35810 = x_35809;
                }
            }
            if (sle32(wave_sizze_44675, skip_threads_44684)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44684 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44673 - squot32(local_tid_44673, 32) * 32) == 31 &&
            ltid_in_bounds_44683) {
            ((volatile __local
              int64_t *) scan_arr_mem_44677)[sext_i32_i64(squot32(local_tid_44673,
                                                                  32))] =
                x_35809;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44686;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44673, 32) == 0 && ltid_in_bounds_44683) {
                x_44681 = ((volatile __local
                            int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)];
                if ((local_tid_44673 - squot32(local_tid_44673, 32) * 32) ==
                    0) {
                    x_44680 = x_44681;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44686 = 1;
            while (slt32(skip_threads_44686, 32)) {
                if (sle32(skip_threads_44686, local_tid_44673 -
                          squot32(local_tid_44673, 32) * 32) &&
                    (squot32(local_tid_44673, 32) == 0 &&
                     ltid_in_bounds_44683)) {
                    // read operands
                    {
                        x_44680 = ((volatile __local
                                    int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673) -
                                                                   sext_i32_i64(skip_threads_44686)];
                    }
                    // perform operation
                    {
                        bool inactive_44687 =
                             slt64(srem64((sext_i32_i64(local_tid_44673 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_35804 *
                                           sdiv_up64(m_28248 * N_28247,
                                                     sext_i32_i64(num_threads_44647))) -
                                          (int64_t) 1, N_28247),
                                   (sext_i32_i64(local_tid_44673 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_35804 *
                                    sdiv_up64(m_28248 * N_28247,
                                              sext_i32_i64(num_threads_44647))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_44673 -
                                                   skip_threads_44686) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_35804 *
                                     sdiv_up64(m_28248 * N_28247,
                                               sext_i32_i64(num_threads_44647))) -
                                    (int64_t) 1));
                        
                        if (inactive_44687) {
                            x_44680 = x_44681;
                        }
                        if (!inactive_44687) {
                            int64_t defunc_1_op_res_44682 = add64(x_44680,
                                                                  x_44681);
                            
                            x_44680 = defunc_1_op_res_44682;
                        }
                    }
                }
                if (sle32(wave_sizze_44675, skip_threads_44686)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44686, local_tid_44673 -
                          squot32(local_tid_44673, 32) * 32) &&
                    (squot32(local_tid_44673, 32) == 0 &&
                     ltid_in_bounds_44683)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)] =
                            x_44680;
                        x_44681 = x_44680;
                    }
                }
                if (sle32(wave_sizze_44675, skip_threads_44686)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44686 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44673, 32) == 0 || !ltid_in_bounds_44683)) {
            // read operands
            {
                x_35810 = x_35809;
                x_35809 = ((__local
                            int64_t *) scan_arr_mem_44677)[sext_i32_i64(squot32(local_tid_44673,
                                                                                32)) -
                                                           (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44688 =
                     slt64(srem64((sext_i32_i64(local_tid_44673) +
                                   (int64_t) 1) * (segscan_group_sizze_35804 *
                                                   sdiv_up64(m_28248 * N_28247,
                                                             sext_i32_i64(num_threads_44647))) -
                                  (int64_t) 1, N_28247),
                           (sext_i32_i64(local_tid_44673) + (int64_t) 1) *
                           (segscan_group_sizze_35804 * sdiv_up64(m_28248 *
                                                                  N_28247,
                                                                  sext_i32_i64(num_threads_44647))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_44673,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_35804 *
                                           sdiv_up64(m_28248 * N_28247,
                                                     sext_i32_i64(num_threads_44647))) -
                                          (int64_t) 1));
                
                if (inactive_44688) {
                    x_35809 = x_35810;
                }
                if (!inactive_44688) {
                    int64_t defunc_1_op_res_35811 = add64(x_35809, x_35810);
                    
                    x_35809 = defunc_1_op_res_35811;
                }
            }
            // write final result
            {
                ((__local
                  int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)] =
                    x_35809;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44673, 32) == 0) {
            ((__local
              int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)] =
                x_35810;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_35778, m_28248) && slt64(gtid_35786, N_28247)) {
            ((__global int64_t *) mem_43623)[gtid_35778 * N_28247 +
                                             gtid_35786] = ((__local
                                                             int64_t *) scan_arr_mem_44677)[sext_i32_i64(local_tid_44673)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_35804
}
__kernel void mainMagnitudeziscan_stage2_37329(__global int *global_failure,
                                               __local volatile
                                               int64_t *scan_arr_mem_45080_backing_aligned_0,
                                               int64_t m_28248,
                                               int64_t iota32_arg_28643,
                                               int64_t stage1_num_groups_45049,
                                               int32_t num_threads_45050,
                                               __global
                                               unsigned char *mem_43803)
{
    #define segscan_group_sizze_37407 (mainMagnitudezisegscan_group_sizze_37323)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict scan_arr_mem_45080_backing_0 =
                          (__local volatile
                           char *) scan_arr_mem_45080_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45075;
    int32_t local_tid_45076;
    int64_t group_sizze_45079;
    int32_t wave_sizze_45078;
    int32_t group_tid_45077;
    
    global_tid_45075 = get_global_id(0);
    local_tid_45076 = get_local_id(0);
    group_sizze_45079 = get_local_size(0);
    wave_sizze_45078 = LOCKSTEP_WIDTH;
    group_tid_45077 = get_group_id(0);
    
    int32_t phys_tid_37329;
    
    phys_tid_37329 = global_tid_45075;
    
    __local char *scan_arr_mem_45080;
    
    scan_arr_mem_45080 = (__local char *) scan_arr_mem_45080_backing_0;
    
    int64_t flat_idx_45082;
    
    flat_idx_45082 = (sext_i32_i64(local_tid_45076) + (int64_t) 1) *
        (segscan_group_sizze_37407 * sdiv_up64(m_28248 * iota32_arg_28643,
                                               sext_i32_i64(num_threads_45050))) -
        (int64_t) 1;
    
    int64_t gtid_37320;
    
    gtid_37320 = squot64(flat_idx_45082, iota32_arg_28643);
    
    int64_t gtid_37328;
    
    gtid_37328 = flat_idx_45082 - squot64(flat_idx_45082, iota32_arg_28643) *
        iota32_arg_28643;
    // threads in bound read carries; others get neutral element
    {
        if (slt64(gtid_37320, m_28248) && slt64(gtid_37328, iota32_arg_28643)) {
            ((__local
              float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)] =
                ((__global float *) mem_43803)[gtid_37320 * iota32_arg_28643 +
                                               gtid_37328];
        } else {
            ((__local
              float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)] =
                0.0F;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float x_37411;
    float x_37412;
    float x_45083;
    float x_45084;
    bool ltid_in_bounds_45086;
    
    ltid_in_bounds_45086 = slt64(sext_i32_i64(local_tid_45076),
                                 stage1_num_groups_45049);
    
    int32_t skip_threads_45087;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45086) {
            x_37412 = ((volatile __local
                        float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)];
            if ((local_tid_45076 - squot32(local_tid_45076, 32) * 32) == 0) {
                x_37411 = x_37412;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45087 = 1;
        while (slt32(skip_threads_45087, 32)) {
            if (sle32(skip_threads_45087, local_tid_45076 -
                      squot32(local_tid_45076, 32) * 32) &&
                ltid_in_bounds_45086) {
                // read operands
                {
                    x_37411 = ((volatile __local
                                float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076) -
                                                             sext_i32_i64(skip_threads_45087)];
                }
                // perform operation
                {
                    bool inactive_45088 =
                         slt64(srem64((sext_i32_i64(local_tid_45076) +
                                       (int64_t) 1) *
                                      (segscan_group_sizze_37407 *
                                       sdiv_up64(m_28248 * iota32_arg_28643,
                                                 sext_i32_i64(num_threads_45050))) -
                                      (int64_t) 1, iota32_arg_28643),
                               (sext_i32_i64(local_tid_45076) + (int64_t) 1) *
                               (segscan_group_sizze_37407 * sdiv_up64(m_28248 *
                                                                      iota32_arg_28643,
                                                                      sext_i32_i64(num_threads_45050))) -
                               (int64_t) 1 - ((sext_i32_i64(local_tid_45076 -
                                               skip_threads_45087) +
                                               (int64_t) 1) *
                                              (segscan_group_sizze_37407 *
                                               sdiv_up64(m_28248 *
                                                         iota32_arg_28643,
                                                         sext_i32_i64(num_threads_45050))) -
                                              (int64_t) 1));
                    
                    if (inactive_45088) {
                        x_37411 = x_37412;
                    }
                    if (!inactive_45088) {
                        float defunc_1_op_res_37413 = x_37411 + x_37412;
                        
                        x_37411 = defunc_1_op_res_37413;
                    }
                }
            }
            if (sle32(wave_sizze_45078, skip_threads_45087)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45087, local_tid_45076 -
                      squot32(local_tid_45076, 32) * 32) &&
                ltid_in_bounds_45086) {
                // write result
                {
                    ((volatile __local
                      float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)] =
                        x_37411;
                    x_37412 = x_37411;
                }
            }
            if (sle32(wave_sizze_45078, skip_threads_45087)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45087 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45076 - squot32(local_tid_45076, 32) * 32) == 31 &&
            ltid_in_bounds_45086) {
            ((volatile __local
              float *) scan_arr_mem_45080)[sext_i32_i64(squot32(local_tid_45076,
                                                                32))] = x_37411;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45089;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45076, 32) == 0 && ltid_in_bounds_45086) {
                x_45084 = ((volatile __local
                            float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)];
                if ((local_tid_45076 - squot32(local_tid_45076, 32) * 32) ==
                    0) {
                    x_45083 = x_45084;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45089 = 1;
            while (slt32(skip_threads_45089, 32)) {
                if (sle32(skip_threads_45089, local_tid_45076 -
                          squot32(local_tid_45076, 32) * 32) &&
                    (squot32(local_tid_45076, 32) == 0 &&
                     ltid_in_bounds_45086)) {
                    // read operands
                    {
                        x_45083 = ((volatile __local
                                    float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076) -
                                                                 sext_i32_i64(skip_threads_45089)];
                    }
                    // perform operation
                    {
                        bool inactive_45090 =
                             slt64(srem64((sext_i32_i64(local_tid_45076 * 32 +
                                           32 - 1) + (int64_t) 1) *
                                          (segscan_group_sizze_37407 *
                                           sdiv_up64(m_28248 * iota32_arg_28643,
                                                     sext_i32_i64(num_threads_45050))) -
                                          (int64_t) 1, iota32_arg_28643),
                                   (sext_i32_i64(local_tid_45076 * 32 + 32 -
                                    1) + (int64_t) 1) *
                                   (segscan_group_sizze_37407 *
                                    sdiv_up64(m_28248 * iota32_arg_28643,
                                              sext_i32_i64(num_threads_45050))) -
                                   (int64_t) 1 -
                                   ((sext_i32_i64((local_tid_45076 -
                                                   skip_threads_45089) * 32 +
                                     32 - 1) + (int64_t) 1) *
                                    (segscan_group_sizze_37407 *
                                     sdiv_up64(m_28248 * iota32_arg_28643,
                                               sext_i32_i64(num_threads_45050))) -
                                    (int64_t) 1));
                        
                        if (inactive_45090) {
                            x_45083 = x_45084;
                        }
                        if (!inactive_45090) {
                            float defunc_1_op_res_45085 = x_45083 + x_45084;
                            
                            x_45083 = defunc_1_op_res_45085;
                        }
                    }
                }
                if (sle32(wave_sizze_45078, skip_threads_45089)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45089, local_tid_45076 -
                          squot32(local_tid_45076, 32) * 32) &&
                    (squot32(local_tid_45076, 32) == 0 &&
                     ltid_in_bounds_45086)) {
                    // write result
                    {
                        ((volatile __local
                          float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)] =
                            x_45083;
                        x_45084 = x_45083;
                    }
                }
                if (sle32(wave_sizze_45078, skip_threads_45089)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45089 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45076, 32) == 0 || !ltid_in_bounds_45086)) {
            // read operands
            {
                x_37412 = x_37411;
                x_37411 = ((__local
                            float *) scan_arr_mem_45080)[sext_i32_i64(squot32(local_tid_45076,
                                                                              32)) -
                                                         (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_45091 =
                     slt64(srem64((sext_i32_i64(local_tid_45076) +
                                   (int64_t) 1) * (segscan_group_sizze_37407 *
                                                   sdiv_up64(m_28248 *
                                                             iota32_arg_28643,
                                                             sext_i32_i64(num_threads_45050))) -
                                  (int64_t) 1, iota32_arg_28643),
                           (sext_i32_i64(local_tid_45076) + (int64_t) 1) *
                           (segscan_group_sizze_37407 * sdiv_up64(m_28248 *
                                                                  iota32_arg_28643,
                                                                  sext_i32_i64(num_threads_45050))) -
                           (int64_t) 1 - ((sext_i32_i64(squot32(local_tid_45076,
                                                                32) * 32 - 1) +
                                           (int64_t) 1) *
                                          (segscan_group_sizze_37407 *
                                           sdiv_up64(m_28248 * iota32_arg_28643,
                                                     sext_i32_i64(num_threads_45050))) -
                                          (int64_t) 1));
                
                if (inactive_45091) {
                    x_37411 = x_37412;
                }
                if (!inactive_45091) {
                    float defunc_1_op_res_37413 = x_37411 + x_37412;
                    
                    x_37411 = defunc_1_op_res_37413;
                }
            }
            // write final result
            {
                ((__local
                  float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)] =
                    x_37411;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45076, 32) == 0) {
            ((__local
              float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)] =
                x_37412;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // threads in bounds write scanned carries
    {
        if (slt64(gtid_37320, m_28248) && slt64(gtid_37328, iota32_arg_28643)) {
            ((__global float *) mem_43803)[gtid_37320 * iota32_arg_28643 +
                                           gtid_37328] = ((__local
                                                           float *) scan_arr_mem_45080)[sext_i32_i64(local_tid_45076)];
        }
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37407
}
__kernel void mainMagnitudeziscan_stage3_35787(__global int *global_failure,
                                               int64_t N_28247, int64_t m_28248,
                                               int64_t num_groups_35805,
                                               int32_t num_threads_44647,
                                               int32_t required_groups_44689,
                                               __global
                                               unsigned char *mem_43623)
{
    #define segscan_group_sizze_35804 (mainMagnitudezisegscan_group_sizze_35781)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44690;
    int32_t local_tid_44691;
    int64_t group_sizze_44694;
    int32_t wave_sizze_44693;
    int32_t group_tid_44692;
    
    global_tid_44690 = get_global_id(0);
    local_tid_44691 = get_local_id(0);
    group_sizze_44694 = get_local_size(0);
    wave_sizze_44693 = LOCKSTEP_WIDTH;
    group_tid_44692 = get_group_id(0);
    
    int32_t phys_tid_35787;
    
    phys_tid_35787 = global_tid_44690;
    
    int32_t phys_group_id_44695;
    
    phys_group_id_44695 = get_group_id(0);
    for (int32_t i_44696 = 0; i_44696 < sdiv_up32(required_groups_44689 -
                                                  phys_group_id_44695,
                                                  sext_i64_i32(num_groups_35805));
         i_44696++) {
        int32_t virt_group_id_44697 = phys_group_id_44695 + i_44696 *
                sext_i64_i32(num_groups_35805);
        int64_t flat_idx_44698 = sext_i32_i64(virt_group_id_44697) *
                segscan_group_sizze_35804 + sext_i32_i64(local_tid_44691);
        int64_t gtid_35778 = squot64(flat_idx_44698, N_28247);
        int64_t gtid_35786 = flat_idx_44698 - squot64(flat_idx_44698, N_28247) *
                N_28247;
        int64_t orig_group_44699 = squot64(flat_idx_44698,
                                           segscan_group_sizze_35804 *
                                           sdiv_up64(m_28248 * N_28247,
                                                     sext_i32_i64(num_threads_44647)));
        int64_t carry_in_flat_idx_44700 = orig_group_44699 *
                (segscan_group_sizze_35804 * sdiv_up64(m_28248 * N_28247,
                                                       sext_i32_i64(num_threads_44647))) -
                (int64_t) 1;
        
        if (slt64(gtid_35778, m_28248) && slt64(gtid_35786, N_28247)) {
            if (!(orig_group_44699 == (int64_t) 0 || (flat_idx_44698 ==
                                                      (orig_group_44699 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_35804 *
                                                       sdiv_up64(m_28248 *
                                                                 N_28247,
                                                                 sext_i32_i64(num_threads_44647))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_44698,
                                                                   N_28247),
                                                            flat_idx_44698 -
                                                            carry_in_flat_idx_44700)))) {
                int64_t x_35809;
                int64_t x_35810;
                
                x_35809 = ((__global
                            int64_t *) mem_43623)[squot64(carry_in_flat_idx_44700,
                                                          N_28247) * N_28247 +
                                                  (carry_in_flat_idx_44700 -
                                                   squot64(carry_in_flat_idx_44700,
                                                           N_28247) * N_28247)];
                x_35810 = ((__global int64_t *) mem_43623)[gtid_35778 *
                                                           N_28247 +
                                                           gtid_35786];
                
                int64_t defunc_1_op_res_35811;
                
                defunc_1_op_res_35811 = add64(x_35809, x_35810);
                x_35809 = defunc_1_op_res_35811;
                ((__global int64_t *) mem_43623)[gtid_35778 * N_28247 +
                                                 gtid_35786] = x_35809;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_35804
}
__kernel void mainMagnitudeziscan_stage3_37329(__global int *global_failure,
                                               int64_t m_28248,
                                               int64_t iota32_arg_28643,
                                               int64_t num_groups_37408,
                                               int32_t num_threads_45050,
                                               int32_t required_groups_45092,
                                               __global
                                               unsigned char *mem_43803)
{
    #define segscan_group_sizze_37407 (mainMagnitudezisegscan_group_sizze_37323)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45093;
    int32_t local_tid_45094;
    int64_t group_sizze_45097;
    int32_t wave_sizze_45096;
    int32_t group_tid_45095;
    
    global_tid_45093 = get_global_id(0);
    local_tid_45094 = get_local_id(0);
    group_sizze_45097 = get_local_size(0);
    wave_sizze_45096 = LOCKSTEP_WIDTH;
    group_tid_45095 = get_group_id(0);
    
    int32_t phys_tid_37329;
    
    phys_tid_37329 = global_tid_45093;
    
    int32_t phys_group_id_45098;
    
    phys_group_id_45098 = get_group_id(0);
    for (int32_t i_45099 = 0; i_45099 < sdiv_up32(required_groups_45092 -
                                                  phys_group_id_45098,
                                                  sext_i64_i32(num_groups_37408));
         i_45099++) {
        int32_t virt_group_id_45100 = phys_group_id_45098 + i_45099 *
                sext_i64_i32(num_groups_37408);
        int64_t flat_idx_45101 = sext_i32_i64(virt_group_id_45100) *
                segscan_group_sizze_37407 + sext_i32_i64(local_tid_45094);
        int64_t gtid_37320 = squot64(flat_idx_45101, iota32_arg_28643);
        int64_t gtid_37328 = flat_idx_45101 - squot64(flat_idx_45101,
                                                      iota32_arg_28643) *
                iota32_arg_28643;
        int64_t orig_group_45102 = squot64(flat_idx_45101,
                                           segscan_group_sizze_37407 *
                                           sdiv_up64(m_28248 * iota32_arg_28643,
                                                     sext_i32_i64(num_threads_45050)));
        int64_t carry_in_flat_idx_45103 = orig_group_45102 *
                (segscan_group_sizze_37407 * sdiv_up64(m_28248 *
                                                       iota32_arg_28643,
                                                       sext_i32_i64(num_threads_45050))) -
                (int64_t) 1;
        
        if (slt64(gtid_37320, m_28248) && slt64(gtid_37328, iota32_arg_28643)) {
            if (!(orig_group_45102 == (int64_t) 0 || (flat_idx_45101 ==
                                                      (orig_group_45102 +
                                                       (int64_t) 1) *
                                                      (segscan_group_sizze_37407 *
                                                       sdiv_up64(m_28248 *
                                                                 iota32_arg_28643,
                                                                 sext_i32_i64(num_threads_45050))) -
                                                      (int64_t) 1 ||
                                                      slt64(srem64(flat_idx_45101,
                                                                   iota32_arg_28643),
                                                            flat_idx_45101 -
                                                            carry_in_flat_idx_45103)))) {
                float x_37411;
                float x_37412;
                
                x_37411 = ((__global
                            float *) mem_43803)[squot64(carry_in_flat_idx_45103,
                                                        iota32_arg_28643) *
                                                iota32_arg_28643 +
                                                (carry_in_flat_idx_45103 -
                                                 squot64(carry_in_flat_idx_45103,
                                                         iota32_arg_28643) *
                                                 iota32_arg_28643)];
                x_37412 = ((__global float *) mem_43803)[gtid_37320 *
                                                         iota32_arg_28643 +
                                                         gtid_37328];
                
                float defunc_1_op_res_37413;
                
                defunc_1_op_res_37413 = x_37411 + x_37412;
                x_37411 = defunc_1_op_res_37413;
                ((__global float *) mem_43803)[gtid_37320 * iota32_arg_28643 +
                                               gtid_37328] = x_37411;
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segscan_group_sizze_37407
}
__kernel void mainMagnitudezisegmap_33710(__global int *global_failure,
                                          int64_t N_28247, float freq_28252,
                                          int64_t i32_res_28263, __global
                                          unsigned char *mappingindices_mem_42840,
                                          __global unsigned char *mem_42845)
{
    #define segmap_group_sizze_33783 (mainMagnitudezisegmap_group_sizze_33713)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44071;
    int32_t local_tid_44072;
    int64_t group_sizze_44075;
    int32_t wave_sizze_44074;
    int32_t group_tid_44073;
    
    global_tid_44071 = get_global_id(0);
    local_tid_44072 = get_local_id(0);
    group_sizze_44075 = get_local_size(0);
    wave_sizze_44074 = LOCKSTEP_WIDTH;
    group_tid_44073 = get_group_id(0);
    
    int32_t phys_tid_33710;
    
    phys_tid_33710 = global_tid_44071;
    
    int64_t gtid_33708;
    
    gtid_33708 = squot64(sext_i32_i64(group_tid_44073) *
                         segmap_group_sizze_33783 +
                         sext_i32_i64(local_tid_44072), N_28247);
    
    int64_t gtid_33709;
    
    gtid_33709 = sext_i32_i64(group_tid_44073) * segmap_group_sizze_33783 +
        sext_i32_i64(local_tid_44072) - squot64(sext_i32_i64(group_tid_44073) *
                                                segmap_group_sizze_33783 +
                                                sext_i32_i64(local_tid_44072),
                                                N_28247) * N_28247;
    if (slt64(gtid_33708, i32_res_28263) && slt64(gtid_33709, N_28247)) {
        int32_t index_primexp_40883 = sext_i64_i32(gtid_33708);
        bool index_primexp_40880 = index_primexp_40883 == 0;
        float defunc_0_f_res_33789;
        
        if (index_primexp_40880) {
            defunc_0_f_res_33789 = 1.0F;
        } else {
            int32_t x_33788 = ((__global
                                int32_t *) mappingindices_mem_42840)[gtid_33709];
            bool cond_33790 = index_primexp_40883 == 1;
            float defunc_0_f_res_f_res_33791;
            
            if (cond_33790) {
                float i32_res_33792 = sitofp_i32_f32(x_33788);
                
                defunc_0_f_res_f_res_33791 = i32_res_33792;
            } else {
                int32_t r32_arg_33793 = sdiv32(index_primexp_40883, 2);
                float i32_res_33794 = sitofp_i32_f32(r32_arg_33793);
                float i32_res_33795 = sitofp_i32_f32(x_33788);
                float x_33796 = 6.2831855F * i32_res_33794;
                float x_33797 = i32_res_33795 * x_33796;
                float angle_33798 = x_33797 / freq_28252;
                int32_t x_33799 = smod32(index_primexp_40883, 2);
                bool cond_33800 = x_33799 == 0;
                float defunc_0_f_res_f_res_f_res_33801;
                
                if (cond_33800) {
                    float sin_res_33802;
                    
                    sin_res_33802 = futrts_sin32(angle_33798);
                    defunc_0_f_res_f_res_f_res_33801 = sin_res_33802;
                } else {
                    float cos_res_33803;
                    
                    cos_res_33803 = futrts_cos32(angle_33798);
                    defunc_0_f_res_f_res_f_res_33801 = cos_res_33803;
                }
                defunc_0_f_res_f_res_33791 = defunc_0_f_res_f_res_f_res_33801;
            }
            defunc_0_f_res_33789 = defunc_0_f_res_f_res_33791;
        }
        ((__global float *) mem_42845)[gtid_33708 * N_28247 + gtid_33709] =
            defunc_0_f_res_33789;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33783
}
__kernel void mainMagnitudezisegmap_33888(__global int *global_failure,
                                          int64_t N_28247, float freq_28252,
                                          int64_t i32_res_28263, __global
                                          unsigned char *mappingindices_mem_42840,
                                          __global unsigned char *mem_42849)
{
    #define segmap_group_sizze_33957 (mainMagnitudezisegmap_group_sizze_33891)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44076;
    int32_t local_tid_44077;
    int64_t group_sizze_44080;
    int32_t wave_sizze_44079;
    int32_t group_tid_44078;
    
    global_tid_44076 = get_global_id(0);
    local_tid_44077 = get_local_id(0);
    group_sizze_44080 = get_local_size(0);
    wave_sizze_44079 = LOCKSTEP_WIDTH;
    group_tid_44078 = get_group_id(0);
    
    int32_t phys_tid_33888;
    
    phys_tid_33888 = global_tid_44076;
    
    int64_t gtid_33886;
    
    gtid_33886 = squot64(sext_i32_i64(group_tid_44078) *
                         segmap_group_sizze_33957 +
                         sext_i32_i64(local_tid_44077), N_28247);
    
    int64_t gtid_33887;
    
    gtid_33887 = sext_i32_i64(group_tid_44078) * segmap_group_sizze_33957 +
        sext_i32_i64(local_tid_44077) - squot64(sext_i32_i64(group_tid_44078) *
                                                segmap_group_sizze_33957 +
                                                sext_i32_i64(local_tid_44077),
                                                N_28247) * N_28247;
    if (slt64(gtid_33886, i32_res_28263) && slt64(gtid_33887, N_28247)) {
        int32_t index_primexp_40892 = sext_i64_i32(gtid_33886);
        bool index_primexp_40889 = index_primexp_40892 == 0;
        float defunc_0_f_res_33963;
        
        if (index_primexp_40889) {
            defunc_0_f_res_33963 = 1.0F;
        } else {
            int32_t x_33962 = ((__global
                                int32_t *) mappingindices_mem_42840)[gtid_33887];
            int32_t i_33964 = add32(1, index_primexp_40892);
            int32_t r32_arg_33965 = sdiv32(i_33964, 2);
            float i32_res_33966 = sitofp_i32_f32(r32_arg_33965);
            float i32_res_33967 = sitofp_i32_f32(x_33962);
            float x_33968 = 6.2831855F * i32_res_33966;
            float x_33969 = i32_res_33967 * x_33968;
            float angle_33970 = x_33969 / freq_28252;
            int32_t x_33971 = smod32(i_33964, 2);
            bool cond_33972 = x_33971 == 0;
            float defunc_0_f_res_f_res_33973;
            
            if (cond_33972) {
                float sin_res_33974;
                
                sin_res_33974 = futrts_sin32(angle_33970);
                defunc_0_f_res_f_res_33973 = sin_res_33974;
            } else {
                float cos_res_33975;
                
                cos_res_33975 = futrts_cos32(angle_33970);
                defunc_0_f_res_f_res_33973 = cos_res_33975;
            }
            defunc_0_f_res_33963 = defunc_0_f_res_f_res_33973;
        }
        ((__global float *) mem_42849)[gtid_33886 * N_28247 + gtid_33887] =
            defunc_0_f_res_33963;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_33957
}
__kernel void mainMagnitudezisegmap_34016(__global int *global_failure,
                                          int64_t N_28247,
                                          int64_t i32_res_28263,
                                          float i32_res_28328, __global
                                          unsigned char *mem_42853, __global
                                          unsigned char *mem_42857)
{
    #define segmap_group_sizze_34040 (mainMagnitudezisegmap_group_sizze_34019)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44081;
    int32_t local_tid_44082;
    int64_t group_sizze_44085;
    int32_t wave_sizze_44084;
    int32_t group_tid_44083;
    
    global_tid_44081 = get_global_id(0);
    local_tid_44082 = get_local_id(0);
    group_sizze_44085 = get_local_size(0);
    wave_sizze_44084 = LOCKSTEP_WIDTH;
    group_tid_44083 = get_group_id(0);
    
    int32_t phys_tid_34016;
    
    phys_tid_34016 = global_tid_44081;
    
    int64_t gtid_34014;
    
    gtid_34014 = squot64(sext_i32_i64(group_tid_44083) *
                         segmap_group_sizze_34040 +
                         sext_i32_i64(local_tid_44082), i32_res_28263);
    
    int64_t gtid_34015;
    
    gtid_34015 = sext_i32_i64(group_tid_44083) * segmap_group_sizze_34040 +
        sext_i32_i64(local_tid_44082) - squot64(sext_i32_i64(group_tid_44083) *
                                                segmap_group_sizze_34040 +
                                                sext_i32_i64(local_tid_44082),
                                                i32_res_28263) * i32_res_28263;
    if (slt64(gtid_34014, N_28247) && slt64(gtid_34015, i32_res_28263)) {
        float x_34043 = ((__global float *) mem_42853)[gtid_34014 *
                                                       i32_res_28263 +
                                                       gtid_34015];
        float defunc_0_f_res_34044 = i32_res_28328 + x_34043;
        
        ((__global float *) mem_42857)[gtid_34014 * i32_res_28263 +
                                       gtid_34015] = defunc_0_f_res_34044;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34040
}
__kernel void mainMagnitudezisegmap_34049(__global int *global_failure,
                                          int64_t N_28247, int64_t m_28248,
                                          int32_t n_28251, int32_t k2p2zq_28261,
                                          int64_t i32_res_28263,
                                          int64_t num_groups_34074, __global
                                          unsigned char *binop_p_mem_42850,
                                          __global unsigned char *mem_42857,
                                          __global unsigned char *mem_42860,
                                          __global unsigned char *mem_42864,
                                          __global unsigned char *mem_42906)
{
    #define segmap_group_sizze_34073 (mainMagnitudezisegmap_group_sizze_34051)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44089;
    int32_t local_tid_44090;
    int64_t group_sizze_44093;
    int32_t wave_sizze_44092;
    int32_t group_tid_44091;
    
    global_tid_44089 = get_global_id(0);
    local_tid_44090 = get_local_id(0);
    group_sizze_44093 = get_local_size(0);
    wave_sizze_44092 = LOCKSTEP_WIDTH;
    group_tid_44091 = get_group_id(0);
    
    int32_t phys_tid_34049;
    
    phys_tid_34049 = global_tid_44089;
    
    int32_t phys_group_id_44094;
    
    phys_group_id_44094 = get_group_id(0);
    for (int32_t i_44095 = 0; i_44095 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248, segmap_group_sizze_34073)) -
                   phys_group_id_44094, sext_i64_i32(num_groups_34074));
         i_44095++) {
        int32_t virt_group_id_44096 = phys_group_id_44094 + i_44095 *
                sext_i64_i32(num_groups_34074);
        int64_t gtid_34048 = sext_i32_i64(virt_group_id_44096) *
                segmap_group_sizze_34073 + sext_i32_i64(local_tid_44090);
        
        if (slt64(gtid_34048, m_28248)) {
            for (int32_t i_42824 = 0; i_42824 < k2p2zq_28261; i_42824++) {
                int64_t i_42776 = sext_i32_i64(i_42824);
                
                for (int32_t i_42823 = 0; i_42823 < k2p2zq_28261; i_42823++) {
                    int64_t i_42780 = sext_i32_i64(i_42823);
                    float defunc_2_reduce_res_34082;
                    float redout_42782 = 0.0F;
                    
                    for (int32_t i_42822 = 0; i_42822 < n_28251; i_42822++) {
                        int64_t i_42783 = sext_i32_i64(i_42822);
                        float x_34086 = ((__global float *) mem_42860)[i_42783 *
                                                                       m_28248 +
                                                                       gtid_34048];
                        float x_34087 = ((__global
                                          float *) binop_p_mem_42850)[i_42776 *
                                                                      N_28247 +
                                                                      i_42783];
                        float x_34088 = ((__global float *) mem_42857)[i_42783 *
                                                                       i32_res_28263 +
                                                                       i_42780];
                        float x_34089 = x_34087 * x_34088;
                        bool isnan_res_34090;
                        
                        isnan_res_34090 = futrts_isnan32(x_34086);
                        
                        float y_34091;
                        
                        if (isnan_res_34090) {
                            y_34091 = 0.0F;
                        } else {
                            y_34091 = 1.0F;
                        }
                        
                        float defunc_2_f_res_34092 = x_34089 * y_34091;
                        float defunc_1_op_res_34085 = defunc_2_f_res_34092 +
                              redout_42782;
                        float redout_tmp_44099 = defunc_1_op_res_34085;
                        
                        redout_42782 = redout_tmp_44099;
                    }
                    defunc_2_reduce_res_34082 = redout_42782;
                    ((__global float *) mem_42864)[phys_tid_34049 + (i_42776 *
                                                                     (num_groups_34074 *
                                                                      segmap_group_sizze_34073 *
                                                                      i32_res_28263) +
                                                                     i_42780 *
                                                                     (num_groups_34074 *
                                                                      segmap_group_sizze_34073))] =
                        defunc_2_reduce_res_34082;
                }
            }
            for (int64_t i_44100 = 0; i_44100 < i32_res_28263; i_44100++) {
                for (int64_t i_44101 = 0; i_44101 < i32_res_28263; i_44101++) {
                    ((__global float *) mem_42906)[i_44100 * (m_28248 *
                                                              i32_res_28263) +
                                                   i_44101 * m_28248 +
                                                   gtid_34048] = ((__global
                                                                   float *) mem_42864)[phys_tid_34049 +
                                                                                       (i_44100 *
                                                                                        (num_groups_34074 *
                                                                                         segmap_group_sizze_34073 *
                                                                                         i32_res_28263) +
                                                                                        i_44101 *
                                                                                        (num_groups_34074 *
                                                                                         segmap_group_sizze_34073))];
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34073
}
__kernel void mainMagnitudezisegmap_34095(__global int *global_failure,
                                          int64_t N_28247, int64_t m_28248,
                                          int32_t n_28251, int32_t k2p2zq_28261,
                                          int64_t i32_res_28263,
                                          int64_t num_groups_34251, __global
                                          unsigned char *images_mem_42841,
                                          __global unsigned char *mem_42853,
                                          __global unsigned char *mem_42857,
                                          __global unsigned char *mem_42909,
                                          __global unsigned char *mem_42925)
{
    #define segmap_group_sizze_34250 (mainMagnitudezisegmap_group_sizze_34098)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44102;
    int32_t local_tid_44103;
    int64_t group_sizze_44106;
    int32_t wave_sizze_44105;
    int32_t group_tid_44104;
    
    global_tid_44102 = get_global_id(0);
    local_tid_44103 = get_local_id(0);
    group_sizze_44106 = get_local_size(0);
    wave_sizze_44105 = LOCKSTEP_WIDTH;
    group_tid_44104 = get_group_id(0);
    
    int32_t phys_tid_34095;
    
    phys_tid_34095 = global_tid_44102;
    
    int32_t phys_group_id_44107;
    
    phys_group_id_44107 = get_group_id(0);
    for (int32_t i_44108 = 0; i_44108 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248 * i32_res_28263,
                                          segmap_group_sizze_34250)) -
                   phys_group_id_44107, sext_i64_i32(num_groups_34251));
         i_44108++) {
        int32_t virt_group_id_44109 = phys_group_id_44107 + i_44108 *
                sext_i64_i32(num_groups_34251);
        int64_t gtid_34093 = squot64(sext_i32_i64(virt_group_id_44109) *
                                     segmap_group_sizze_34250 +
                                     sext_i32_i64(local_tid_44103),
                                     i32_res_28263);
        int64_t gtid_34094 = sext_i32_i64(virt_group_id_44109) *
                segmap_group_sizze_34250 + sext_i32_i64(local_tid_44103) -
                squot64(sext_i32_i64(virt_group_id_44109) *
                        segmap_group_sizze_34250 +
                        sext_i32_i64(local_tid_44103), i32_res_28263) *
                i32_res_28263;
        
        if (slt64(gtid_34093, m_28248) && slt64(gtid_34094, i32_res_28263)) {
            for (int32_t i_42826 = 0; i_42826 < k2p2zq_28261; i_42826++) {
                int64_t i_42786 = sext_i32_i64(i_42826);
                float defunc_2_reduce_res_34262;
                float redout_42788 = 0.0F;
                
                for (int32_t i_42825 = 0; i_42825 < n_28251; i_42825++) {
                    int64_t i_42789 = sext_i32_i64(i_42825);
                    float x_34266 = ((__global
                                      float *) images_mem_42841)[gtid_34093 *
                                                                 N_28247 +
                                                                 i_42789];
                    float x_34267 = ((__global float *) mem_42853)[i_42789 *
                                                                   i32_res_28263 +
                                                                   gtid_34094];
                    float x_34268 = ((__global float *) mem_42857)[i_42789 *
                                                                   i32_res_28263 +
                                                                   i_42786];
                    float x_34269 = x_34267 * x_34268;
                    bool isnan_res_34270;
                    
                    isnan_res_34270 = futrts_isnan32(x_34266);
                    
                    float y_34271;
                    
                    if (isnan_res_34270) {
                        y_34271 = 0.0F;
                    } else {
                        y_34271 = 1.0F;
                    }
                    
                    float defunc_2_f_res_34272 = x_34269 * y_34271;
                    float defunc_1_op_res_34265 = defunc_2_f_res_34272 +
                          redout_42788;
                    float redout_tmp_44111 = defunc_1_op_res_34265;
                    
                    redout_42788 = redout_tmp_44111;
                }
                defunc_2_reduce_res_34262 = redout_42788;
                ((__global float *) mem_42909)[phys_tid_34095 + i_42786 *
                                               (num_groups_34251 *
                                                segmap_group_sizze_34250)] =
                    defunc_2_reduce_res_34262;
            }
            for (int64_t i_44112 = 0; i_44112 < i32_res_28263; i_44112++) {
                ((__global float *) mem_42925)[i_44112 * (i32_res_28263 *
                                                          m_28248) +
                                               gtid_34093 * i32_res_28263 +
                                               gtid_34094] = ((__global
                                                               float *) mem_42909)[phys_tid_34095 +
                                                                                   i_44112 *
                                                                                   (num_groups_34251 *
                                                                                    segmap_group_sizze_34250)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_34250
}
__kernel void mainMagnitudezisegmap_34579(__global int *global_failure,
                                          int64_t m_28248,
                                          int64_t i32_res_28263,
                                          int64_t i32_res_28396,
                                          int64_t i32_res_28411,
                                          int64_t x_28412, int64_t j_m_i_28415,
                                          int64_t gauss_jordan_res_r_ixfn_43077,
                                          int64_t gauss_jordan_res_r_ixfn_43078,
                                          int64_t gauss_jordan_res_r_ixfn_43080,
                                          __global
                                          unsigned char *gauss_jordan_res_r_mem_43082,
                                          __global unsigned char *mem_43087)
{
    #define segmap_group_sizze_35130 (mainMagnitudezisegmap_group_sizze_34583)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44269;
    int32_t local_tid_44270;
    int64_t group_sizze_44273;
    int32_t wave_sizze_44272;
    int32_t group_tid_44271;
    
    global_tid_44269 = get_global_id(0);
    local_tid_44270 = get_local_id(0);
    group_sizze_44273 = get_local_size(0);
    wave_sizze_44272 = LOCKSTEP_WIDTH;
    group_tid_44271 = get_group_id(0);
    
    int32_t phys_tid_34579;
    
    phys_tid_34579 = global_tid_44269;
    
    int64_t gtid_34576;
    
    gtid_34576 = squot64(sext_i32_i64(group_tid_44271) *
                         segmap_group_sizze_35130 +
                         sext_i32_i64(local_tid_44270), i32_res_28263 *
                         j_m_i_28415);
    
    int64_t gtid_slice_34574;
    
    gtid_slice_34574 = squot64(sext_i32_i64(group_tid_44271) *
                               segmap_group_sizze_35130 +
                               sext_i32_i64(local_tid_44270) -
                               squot64(sext_i32_i64(group_tid_44271) *
                                       segmap_group_sizze_35130 +
                                       sext_i32_i64(local_tid_44270),
                                       i32_res_28263 * j_m_i_28415) *
                               (i32_res_28263 * j_m_i_28415), j_m_i_28415);
    
    int64_t gtid_slice_34575;
    
    gtid_slice_34575 = sext_i32_i64(group_tid_44271) *
        segmap_group_sizze_35130 + sext_i32_i64(local_tid_44270) -
        squot64(sext_i32_i64(group_tid_44271) * segmap_group_sizze_35130 +
                sext_i32_i64(local_tid_44270), i32_res_28263 * j_m_i_28415) *
        (i32_res_28263 * j_m_i_28415) - squot64(sext_i32_i64(group_tid_44271) *
                                                segmap_group_sizze_35130 +
                                                sext_i32_i64(local_tid_44270) -
                                                squot64(sext_i32_i64(group_tid_44271) *
                                                        segmap_group_sizze_35130 +
                                                        sext_i32_i64(local_tid_44270),
                                                        i32_res_28263 *
                                                        j_m_i_28415) *
                                                (i32_res_28263 * j_m_i_28415),
                                                j_m_i_28415) * j_m_i_28415;
    if ((slt64(gtid_34576, m_28248) && slt64(gtid_slice_34574,
                                             i32_res_28263)) &&
        slt64(gtid_slice_34575, j_m_i_28415)) {
        int64_t slice_35134 = i32_res_28263 + gtid_slice_34575;
        int64_t binop_x_40955 = x_28412 * gtid_34576;
        int64_t binop_y_40956 = i32_res_28411 * gtid_slice_34574;
        int64_t binop_x_40957 = binop_x_40955 + binop_y_40956;
        int64_t binop_x_40958 = slice_35134 + binop_x_40957;
        int64_t new_index_40959 = squot64(binop_x_40958, i32_res_28396);
        int64_t binop_y_40971 = i32_res_28396 * new_index_40959;
        int64_t new_index_40972 = binop_x_40958 - binop_y_40971;
        float v_35135 = ((__global
                          float *) gauss_jordan_res_r_mem_43082)[gauss_jordan_res_r_ixfn_43077 +
                                                                 (new_index_40959 *
                                                                  gauss_jordan_res_r_ixfn_43078 +
                                                                  new_index_40972 *
                                                                  gauss_jordan_res_r_ixfn_43080)];
        
        ((__global float *) mem_43087)[gtid_34576 * (j_m_i_28415 *
                                                     i32_res_28263) +
                                       gtid_slice_34574 * j_m_i_28415 +
                                       gtid_slice_34575] = v_35135;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35130
}
__kernel void mainMagnitudezisegmap_34745(__global int *global_failure,
                                          int64_t m_28248,
                                          int64_t i32_res_28396,
                                          int64_t ctx_param_ext_43040,
                                          int64_t ctx_param_ext_43041,
                                          int64_t ctx_param_ext_43043, __global
                                          unsigned char *mem_param_43045,
                                          __global unsigned char *mem_43065)
{
    #define segmap_group_sizze_35118 (mainMagnitudezisegmap_group_sizze_34748)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44263;
    int32_t local_tid_44264;
    int64_t group_sizze_44267;
    int32_t wave_sizze_44266;
    int32_t group_tid_44265;
    
    global_tid_44263 = get_global_id(0);
    local_tid_44264 = get_local_id(0);
    group_sizze_44267 = get_local_size(0);
    wave_sizze_44266 = LOCKSTEP_WIDTH;
    group_tid_44265 = get_group_id(0);
    
    int32_t phys_tid_34745;
    
    phys_tid_34745 = global_tid_44263;
    
    int64_t gtid_34743;
    
    gtid_34743 = squot64(sext_i32_i64(group_tid_44265) *
                         segmap_group_sizze_35118 +
                         sext_i32_i64(local_tid_44264), i32_res_28396);
    
    int64_t gtid_34744;
    
    gtid_34744 = sext_i32_i64(group_tid_44265) * segmap_group_sizze_35118 +
        sext_i32_i64(local_tid_44264) - squot64(sext_i32_i64(group_tid_44265) *
                                                segmap_group_sizze_35118 +
                                                sext_i32_i64(local_tid_44264),
                                                i32_res_28396) * i32_res_28396;
    if (slt64(gtid_34743, m_28248) && slt64(gtid_34744, i32_res_28396)) {
        float write_value_35124 = ((__global float *) mem_43065)[gtid_34743 *
                                                                 i32_res_28396 +
                                                                 gtid_34744];
        
        if ((sle64((int64_t) 0, gtid_34743) && slt64(gtid_34743, m_28248)) &&
            (sle64((int64_t) 0, gtid_34744) && slt64(gtid_34744,
                                                     i32_res_28396))) {
            ((__global float *) mem_param_43045)[ctx_param_ext_43040 +
                                                 (gtid_34743 *
                                                  ctx_param_ext_43041 +
                                                  gtid_34744 *
                                                  ctx_param_ext_43043)] =
                write_value_35124;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35118
}
__kernel void mainMagnitudezisegmap_34799(__global int *global_failure,
                                          int64_t m_28248, int32_t k2p2zq_28261,
                                          int32_t m_28394,
                                          int64_t i32_res_28396,
                                          int32_t i_35021,
                                          int64_t i32_res_35023,
                                          int64_t ctx_param_ext_43040,
                                          int64_t ctx_param_ext_43041,
                                          int64_t ctx_param_ext_43043, __global
                                          unsigned char *mem_param_43045,
                                          __global unsigned char *mem_43061,
                                          __global unsigned char *mem_43065)
{
    #define segmap_group_sizze_35084 (mainMagnitudezisegmap_group_sizze_34802)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44258;
    int32_t local_tid_44259;
    int64_t group_sizze_44262;
    int32_t wave_sizze_44261;
    int32_t group_tid_44260;
    
    global_tid_44258 = get_global_id(0);
    local_tid_44259 = get_local_id(0);
    group_sizze_44262 = get_local_size(0);
    wave_sizze_44261 = LOCKSTEP_WIDTH;
    group_tid_44260 = get_group_id(0);
    
    int32_t phys_tid_34799;
    
    phys_tid_34799 = global_tid_44258;
    
    int64_t gtid_34797;
    
    gtid_34797 = squot64(sext_i32_i64(group_tid_44260) *
                         segmap_group_sizze_35084 +
                         sext_i32_i64(local_tid_44259), i32_res_28396);
    
    int64_t gtid_34798;
    
    gtid_34798 = sext_i32_i64(group_tid_44260) * segmap_group_sizze_35084 +
        sext_i32_i64(local_tid_44259) - squot64(sext_i32_i64(group_tid_44260) *
                                                segmap_group_sizze_35084 +
                                                sext_i32_i64(local_tid_44259),
                                                i32_res_28396) * i32_res_28396;
    if (slt64(gtid_34797, m_28248) && slt64(gtid_34798, i32_res_28396)) {
        bool cond_35089 = ((__global bool *) mem_43061)[gtid_34797];
        int32_t defunc_0_f_res_35091 = sext_i64_i32(gtid_34798);
        int32_t defunc_0_f_res_35092 = sdiv32(defunc_0_f_res_35091, m_28394);
        int32_t defunc_0_f_res_35093 = smod32(defunc_0_f_res_35091, m_28394);
        float defunc_0_f_res_35094;
        
        if (cond_35089) {
            int32_t x_35095 = mul32(m_28394, defunc_0_f_res_35092);
            int32_t i32_arg_35096 = add32(defunc_0_f_res_35093, x_35095);
            int64_t i32_res_35097 = sext_i32_i64(i32_arg_35096);
            float defunc_0_f_res_t_res_35098 = ((__global
                                                 float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                           (gtid_34797 *
                                                                            ctx_param_ext_43041 +
                                                                            i32_res_35097 *
                                                                            ctx_param_ext_43043)];
            
            defunc_0_f_res_35094 = defunc_0_f_res_t_res_35098;
        } else {
            float v1_35088 = ((__global
                               float *) mem_param_43045)[ctx_param_ext_43040 +
                                                         (gtid_34797 *
                                                          ctx_param_ext_43041 +
                                                          i32_res_35023 *
                                                          ctx_param_ext_43043)];
            int64_t i32_res_35099 = sext_i32_i64(defunc_0_f_res_35093);
            float x_35100 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_34797 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_35099 *
                                                         ctx_param_ext_43043)];
            float x_35101 = x_35100 / v1_35088;
            int32_t y_35102 = sub32(k2p2zq_28261, 1);
            bool cond_35103 = slt32(defunc_0_f_res_35092, y_35102);
            float defunc_0_f_res_f_res_35104;
            
            if (cond_35103) {
                int32_t x_35105 = add32(1, defunc_0_f_res_35092);
                int32_t x_35106 = mul32(m_28394, x_35105);
                int32_t i32_arg_35107 = add32(defunc_0_f_res_35093, x_35106);
                int64_t i32_res_35108 = sext_i32_i64(i32_arg_35107);
                float x_35109 = ((__global
                                  float *) mem_param_43045)[ctx_param_ext_43040 +
                                                            (gtid_34797 *
                                                             ctx_param_ext_43041 +
                                                             i32_res_35108 *
                                                             ctx_param_ext_43043)];
                int32_t i32_arg_35110 = add32(i_35021, x_35106);
                int64_t i32_res_35111 = sext_i32_i64(i32_arg_35110);
                float x_35112 = ((__global
                                  float *) mem_param_43045)[ctx_param_ext_43040 +
                                                            (gtid_34797 *
                                                             ctx_param_ext_43041 +
                                                             i32_res_35111 *
                                                             ctx_param_ext_43043)];
                float y_35113 = x_35101 * x_35112;
                float defunc_0_f_res_f_res_t_res_35114 = x_35109 - y_35113;
                
                defunc_0_f_res_f_res_35104 = defunc_0_f_res_f_res_t_res_35114;
            } else {
                defunc_0_f_res_f_res_35104 = x_35101;
            }
            defunc_0_f_res_35094 = defunc_0_f_res_f_res_35104;
        }
        ((__global float *) mem_43065)[gtid_34797 * i32_res_28396 +
                                       gtid_34798] = defunc_0_f_res_35094;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35084
}
__kernel void mainMagnitudezisegmap_34867(__global int *global_failure,
                                          int64_t m_28248,
                                          int64_t i32_res_35023,
                                          int64_t ctx_param_ext_43040,
                                          int64_t ctx_param_ext_43041,
                                          int64_t ctx_param_ext_43043, __global
                                          unsigned char *mem_param_43045,
                                          __global unsigned char *mem_43061)
{
    #define segmap_group_sizze_35068 (mainMagnitudezisegmap_group_sizze_34869)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44253;
    int32_t local_tid_44254;
    int64_t group_sizze_44257;
    int32_t wave_sizze_44256;
    int32_t group_tid_44255;
    
    global_tid_44253 = get_global_id(0);
    local_tid_44254 = get_local_id(0);
    group_sizze_44257 = get_local_size(0);
    wave_sizze_44256 = LOCKSTEP_WIDTH;
    group_tid_44255 = get_group_id(0);
    
    int32_t phys_tid_34867;
    
    phys_tid_34867 = global_tid_44253;
    
    int64_t gtid_34866;
    
    gtid_34866 = sext_i32_i64(group_tid_44255) * segmap_group_sizze_35068 +
        sext_i32_i64(local_tid_44254);
    if (slt64(gtid_34866, m_28248)) {
        float v1_35073 = ((__global
                           float *) mem_param_43045)[ctx_param_ext_43040 +
                                                     (gtid_34866 *
                                                      ctx_param_ext_43041 +
                                                      i32_res_35023 *
                                                      ctx_param_ext_43043)];
        bool cond_35074 = v1_35073 == 0.0F;
        
        ((__global bool *) mem_43061)[gtid_34866] = cond_35074;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35068
}
__kernel void mainMagnitudezisegmap_34960(__global int *global_failure,
                                          int64_t m_28248, int32_t k2p2zq_28261,
                                          int64_t i32_res_28263,
                                          int32_t m_28394,
                                          int64_t i32_res_28396, __global
                                          unsigned char *defunc_3_map_res_mem_43009,
                                          __global unsigned char *mem_43037)
{
    #define segmap_group_sizze_35004 (mainMagnitudezisegmap_group_sizze_34963)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44220;
    int32_t local_tid_44221;
    int64_t group_sizze_44224;
    int32_t wave_sizze_44223;
    int32_t group_tid_44222;
    
    global_tid_44220 = get_global_id(0);
    local_tid_44221 = get_local_id(0);
    group_sizze_44224 = get_local_size(0);
    wave_sizze_44223 = LOCKSTEP_WIDTH;
    group_tid_44222 = get_group_id(0);
    
    int32_t phys_tid_34960;
    
    phys_tid_34960 = global_tid_44220;
    
    int64_t gtid_34958;
    
    gtid_34958 = squot64(sext_i32_i64(group_tid_44222) *
                         segmap_group_sizze_35004 +
                         sext_i32_i64(local_tid_44221), i32_res_28396);
    
    int64_t gtid_34959;
    
    gtid_34959 = sext_i32_i64(group_tid_44222) * segmap_group_sizze_35004 +
        sext_i32_i64(local_tid_44221) - squot64(sext_i32_i64(group_tid_44222) *
                                                segmap_group_sizze_35004 +
                                                sext_i32_i64(local_tid_44221),
                                                i32_res_28396) * i32_res_28396;
    if (slt64(gtid_34958, m_28248) && slt64(gtid_34959, i32_res_28396)) {
        int32_t index_primexp_40904 = sext_i64_i32(gtid_34959);
        int32_t defunc_0_f_res_35009 = sdiv32(index_primexp_40904, m_28394);
        int32_t defunc_0_f_res_35010 = smod32(index_primexp_40904, m_28394);
        bool cond_35011 = slt32(defunc_0_f_res_35010, k2p2zq_28261);
        float defunc_0_f_res_35012;
        
        if (cond_35011) {
            int64_t i_35013 = sext_i32_i64(defunc_0_f_res_35009);
            int64_t j_35014 = sext_i32_i64(defunc_0_f_res_35010);
            float defunc_0_f_res_t_res_35015 = ((__global
                                                 float *) defunc_3_map_res_mem_43009)[gtid_34958 *
                                                                                      (i32_res_28263 *
                                                                                       i32_res_28263) +
                                                                                      i_35013 *
                                                                                      i32_res_28263 +
                                                                                      j_35014];
            
            defunc_0_f_res_35012 = defunc_0_f_res_t_res_35015;
        } else {
            int32_t y_35016 = add32(k2p2zq_28261, defunc_0_f_res_35009);
            bool cond_35017 = defunc_0_f_res_35010 == y_35016;
            float defunc_0_f_res_f_res_35018;
            
            if (cond_35017) {
                defunc_0_f_res_f_res_35018 = 1.0F;
            } else {
                defunc_0_f_res_f_res_35018 = 0.0F;
            }
            defunc_0_f_res_35012 = defunc_0_f_res_f_res_35018;
        }
        ((__global float *) mem_43037)[gtid_34958 * i32_res_28396 +
                                       gtid_34959] = defunc_0_f_res_35012;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35004
}
__kernel void mainMagnitudezisegmap_35141(__global int *global_failure,
                                          int64_t N_28247, int64_t m_28248,
                                          int32_t n_28251, int32_t k2p2zq_28261,
                                          int64_t i32_res_28263,
                                          int64_t num_groups_35162, __global
                                          unsigned char *binop_p_mem_42850,
                                          __global unsigned char *mem_43092,
                                          __global unsigned char *mem_43095,
                                          __global unsigned char *mem_43110)
{
    #define segmap_group_sizze_35161 (mainMagnitudezisegmap_group_sizze_35143)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44277;
    int32_t local_tid_44278;
    int64_t group_sizze_44281;
    int32_t wave_sizze_44280;
    int32_t group_tid_44279;
    
    global_tid_44277 = get_global_id(0);
    local_tid_44278 = get_local_id(0);
    group_sizze_44281 = get_local_size(0);
    wave_sizze_44280 = LOCKSTEP_WIDTH;
    group_tid_44279 = get_group_id(0);
    
    int32_t phys_tid_35141;
    
    phys_tid_35141 = global_tid_44277;
    
    int32_t phys_group_id_44282;
    
    phys_group_id_44282 = get_group_id(0);
    for (int32_t i_44283 = 0; i_44283 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248, segmap_group_sizze_35161)) -
                   phys_group_id_44282, sext_i64_i32(num_groups_35162));
         i_44283++) {
        int32_t virt_group_id_44284 = phys_group_id_44282 + i_44283 *
                sext_i64_i32(num_groups_35162);
        int64_t gtid_35140 = sext_i32_i64(virt_group_id_44284) *
                segmap_group_sizze_35161 + sext_i32_i64(local_tid_44278);
        
        if (slt64(gtid_35140, m_28248)) {
            for (int32_t i_42828 = 0; i_42828 < k2p2zq_28261; i_42828++) {
                int64_t i_42792 = sext_i32_i64(i_42828);
                float defunc_2_reduce_res_35168;
                float redout_42794 = 0.0F;
                
                for (int32_t i_42827 = 0; i_42827 < n_28251; i_42827++) {
                    int64_t i_42795 = sext_i32_i64(i_42827);
                    float x_35173 = ((__global float *) mem_43092)[i_42795 *
                                                                   m_28248 +
                                                                   gtid_35140];
                    bool isnan_res_35174;
                    
                    isnan_res_35174 = futrts_isnan32(x_35173);
                    
                    float defunc_1_f_res_35175;
                    
                    if (isnan_res_35174) {
                        defunc_1_f_res_35175 = 0.0F;
                    } else {
                        float x_35172 = ((__global
                                          float *) binop_p_mem_42850)[i_42792 *
                                                                      N_28247 +
                                                                      i_42795];
                        float defunc_1_f_res_f_res_35176 = x_35172 * x_35173;
                        
                        defunc_1_f_res_35175 = defunc_1_f_res_f_res_35176;
                    }
                    
                    float defunc_1_op_res_35171 = defunc_1_f_res_35175 +
                          redout_42794;
                    float redout_tmp_44286 = defunc_1_op_res_35171;
                    
                    redout_42794 = redout_tmp_44286;
                }
                defunc_2_reduce_res_35168 = redout_42794;
                ((__global float *) mem_43095)[phys_tid_35141 + i_42792 *
                                               (num_groups_35162 *
                                                segmap_group_sizze_35161)] =
                    defunc_2_reduce_res_35168;
            }
            for (int64_t i_44287 = 0; i_44287 < i32_res_28263; i_44287++) {
                ((__global float *) mem_43110)[i_44287 * m_28248 + gtid_35140] =
                    ((__global float *) mem_43095)[phys_tid_35141 + i_44287 *
                                                   (num_groups_35162 *
                                                    segmap_group_sizze_35161)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35161
}
__kernel void mainMagnitudezisegmap_35282(__global int *global_failure,
                                          int64_t m_28248, int32_t k2p2zq_28261,
                                          int64_t i32_res_28263,
                                          int64_t num_groups_35302, __global
                                          unsigned char *mem_43314, __global
                                          unsigned char *mem_43317, __global
                                          unsigned char *mem_43320, __global
                                          unsigned char *mem_43335)
{
    #define segmap_group_sizze_35301 (mainMagnitudezisegmap_group_sizze_35284)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44409;
    int32_t local_tid_44410;
    int64_t group_sizze_44413;
    int32_t wave_sizze_44412;
    int32_t group_tid_44411;
    
    global_tid_44409 = get_global_id(0);
    local_tid_44410 = get_local_id(0);
    group_sizze_44413 = get_local_size(0);
    wave_sizze_44412 = LOCKSTEP_WIDTH;
    group_tid_44411 = get_group_id(0);
    
    int32_t phys_tid_35282;
    
    phys_tid_35282 = global_tid_44409;
    
    int32_t phys_group_id_44414;
    
    phys_group_id_44414 = get_group_id(0);
    for (int32_t i_44415 = 0; i_44415 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248, segmap_group_sizze_35301)) -
                   phys_group_id_44414, sext_i64_i32(num_groups_35302));
         i_44415++) {
        int32_t virt_group_id_44416 = phys_group_id_44414 + i_44415 *
                sext_i64_i32(num_groups_35302);
        int64_t gtid_35281 = sext_i32_i64(virt_group_id_44416) *
                segmap_group_sizze_35301 + sext_i32_i64(local_tid_44410);
        
        if (slt64(gtid_35281, m_28248)) {
            for (int32_t i_42830 = 0; i_42830 < k2p2zq_28261; i_42830++) {
                int64_t i_42798 = sext_i32_i64(i_42830);
                float defunc_0_f_res_35309;
                float redout_42800 = 0.0F;
                
                for (int32_t i_42829 = 0; i_42829 < k2p2zq_28261; i_42829++) {
                    int64_t i_42801 = sext_i32_i64(i_42829);
                    float x_35313 = ((__global float *) mem_43317)[i_42801 *
                                                                   m_28248 +
                                                                   gtid_35281];
                    float x_35314 = ((__global float *) mem_43314)[i_42798 *
                                                                   (m_28248 *
                                                                    i32_res_28263) +
                                                                   i_42801 *
                                                                   m_28248 +
                                                                   gtid_35281];
                    float defunc_1_f_res_35315 = x_35313 * x_35314;
                    float defunc_1_op_res_35312 = defunc_1_f_res_35315 +
                          redout_42800;
                    float redout_tmp_44418 = defunc_1_op_res_35312;
                    
                    redout_42800 = redout_tmp_44418;
                }
                defunc_0_f_res_35309 = redout_42800;
                ((__global float *) mem_43320)[phys_tid_35282 + i_42798 *
                                               (num_groups_35302 *
                                                segmap_group_sizze_35301)] =
                    defunc_0_f_res_35309;
            }
            for (int64_t i_44419 = 0; i_44419 < i32_res_28263; i_44419++) {
                ((__global float *) mem_43335)[i_44419 * m_28248 + gtid_35281] =
                    ((__global float *) mem_43320)[phys_tid_35282 + i_44419 *
                                                   (num_groups_35302 *
                                                    segmap_group_sizze_35301)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35301
}
__kernel void mainMagnitudezisegmap_35414(__global int *global_failure,
                                          int64_t N_28247, int64_t m_28248,
                                          int32_t k2p2zq_28261,
                                          int64_t i32_res_28263,
                                          int64_t num_groups_35433, __global
                                          unsigned char *mem_42857, __global
                                          unsigned char *mem_43379, __global
                                          unsigned char *mem_43382, __global
                                          unsigned char *mem_43397)
{
    #define segmap_group_sizze_35432 (mainMagnitudezisegmap_group_sizze_35416)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44497;
    int32_t local_tid_44498;
    int64_t group_sizze_44501;
    int32_t wave_sizze_44500;
    int32_t group_tid_44499;
    
    global_tid_44497 = get_global_id(0);
    local_tid_44498 = get_local_id(0);
    group_sizze_44501 = get_local_size(0);
    wave_sizze_44500 = LOCKSTEP_WIDTH;
    group_tid_44499 = get_group_id(0);
    
    int32_t phys_tid_35414;
    
    phys_tid_35414 = global_tid_44497;
    
    int32_t phys_group_id_44502;
    
    phys_group_id_44502 = get_group_id(0);
    for (int32_t i_44503 = 0; i_44503 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248, segmap_group_sizze_35432)) -
                   phys_group_id_44502, sext_i64_i32(num_groups_35433));
         i_44503++) {
        int32_t virt_group_id_44504 = phys_group_id_44502 + i_44503 *
                sext_i64_i32(num_groups_35433);
        int64_t gtid_35413 = sext_i32_i64(virt_group_id_44504) *
                segmap_group_sizze_35432 + sext_i32_i64(local_tid_44498);
        
        if (slt64(gtid_35413, m_28248)) {
            for (int64_t i_42808 = 0; i_42808 < N_28247; i_42808++) {
                float defunc_0_f_res_35439;
                float redout_42810 = 0.0F;
                
                for (int32_t i_42833 = 0; i_42833 < k2p2zq_28261; i_42833++) {
                    int64_t i_42811 = sext_i32_i64(i_42833);
                    float x_35443 = ((__global float *) mem_43379)[i_42811 *
                                                                   m_28248 +
                                                                   gtid_35413];
                    float x_35444 = ((__global float *) mem_42857)[i_42808 *
                                                                   i32_res_28263 +
                                                                   i_42811];
                    float defunc_1_f_res_35445 = x_35443 * x_35444;
                    float defunc_1_op_res_35442 = defunc_1_f_res_35445 +
                          redout_42810;
                    float redout_tmp_44506 = defunc_1_op_res_35442;
                    
                    redout_42810 = redout_tmp_44506;
                }
                defunc_0_f_res_35439 = redout_42810;
                ((__global float *) mem_43382)[phys_tid_35414 + i_42808 *
                                               (num_groups_35433 *
                                                segmap_group_sizze_35432)] =
                    defunc_0_f_res_35439;
            }
            for (int64_t i_44507 = 0; i_44507 < N_28247; i_44507++) {
                ((__global float *) mem_43397)[i_44507 * m_28248 + gtid_35413] =
                    ((__global float *) mem_43382)[phys_tid_35414 + i_44507 *
                                                   (num_groups_35433 *
                                                    segmap_group_sizze_35432)];
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35432
}
__kernel void mainMagnitudezisegmap_35694(__global int *global_failure,
                                          int64_t N_28247, int64_t m_28248,
                                          __global unsigned char *mem_43623,
                                          __global unsigned char *mem_43626,
                                          __global unsigned char *mem_43632,
                                          __global unsigned char *mem_43635)
{
    #define segmap_group_sizze_35860 (mainMagnitudezisegmap_group_sizze_35697)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44724;
    int32_t local_tid_44725;
    int64_t group_sizze_44728;
    int32_t wave_sizze_44727;
    int32_t group_tid_44726;
    
    global_tid_44724 = get_global_id(0);
    local_tid_44725 = get_local_id(0);
    group_sizze_44728 = get_local_size(0);
    wave_sizze_44727 = LOCKSTEP_WIDTH;
    group_tid_44726 = get_group_id(0);
    
    int32_t phys_tid_35694;
    
    phys_tid_35694 = global_tid_44724;
    
    int64_t gtid_35692;
    
    gtid_35692 = squot64(sext_i32_i64(group_tid_44726) *
                         segmap_group_sizze_35860 +
                         sext_i32_i64(local_tid_44725), N_28247);
    
    int64_t gtid_35693;
    
    gtid_35693 = sext_i32_i64(group_tid_44726) * segmap_group_sizze_35860 +
        sext_i32_i64(local_tid_44725) - squot64(sext_i32_i64(group_tid_44726) *
                                                segmap_group_sizze_35860 +
                                                sext_i32_i64(local_tid_44725),
                                                N_28247) * N_28247;
    if (slt64(gtid_35692, m_28248) && slt64(gtid_35693, N_28247)) {
        float x_35868 = ((__global float *) mem_43626)[gtid_35692 * N_28247 +
                                                       gtid_35693];
        int32_t index_primexp_40920 = sext_i64_i32(gtid_35693);
        bool isnan_res_35871;
        
        isnan_res_35871 = futrts_isnan32(x_35868);
        
        bool defunc_0_p_res_35872 = !isnan_res_35871;
        int64_t defunc_1_f_res_35873;
        
        if (defunc_0_p_res_35872) {
            int64_t x_35869 = ((__global int64_t *) mem_43623)[gtid_35692 *
                                                               N_28247 +
                                                               gtid_35693];
            int64_t defunc_1_f_res_t_res_35874 = sub64(x_35869, (int64_t) 1);
            
            defunc_1_f_res_35873 = defunc_1_f_res_t_res_35874;
        } else {
            defunc_1_f_res_35873 = (int64_t) -1;
        }
        if ((sle64((int64_t) 0, gtid_35692) && slt64(gtid_35692, m_28248)) &&
            (sle64((int64_t) 0, defunc_1_f_res_35873) &&
             slt64(defunc_1_f_res_35873, N_28247))) {
            ((__global int32_t *) mem_43635)[gtid_35692 * N_28247 +
                                             defunc_1_f_res_35873] =
                index_primexp_40920;
        }
        if ((sle64((int64_t) 0, gtid_35692) && slt64(gtid_35692, m_28248)) &&
            (sle64((int64_t) 0, defunc_1_f_res_35873) &&
             slt64(defunc_1_f_res_35873, N_28247))) {
            ((__global float *) mem_43632)[gtid_35692 * N_28247 +
                                           defunc_1_f_res_35873] = x_35868;
        }
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35860
}
__kernel void mainMagnitudezisegmap_35770(__global int *global_failure,
                                          int64_t N_28247, int64_t m_28248,
                                          int64_t i_28523, __global
                                          unsigned char *mem_43623, __global
                                          unsigned char *mem_43629)
{
    #define segmap_group_sizze_35824 (mainMagnitudezisegmap_group_sizze_35772)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44701;
    int32_t local_tid_44702;
    int64_t group_sizze_44705;
    int32_t wave_sizze_44704;
    int32_t group_tid_44703;
    
    global_tid_44701 = get_global_id(0);
    local_tid_44702 = get_local_id(0);
    group_sizze_44705 = get_local_size(0);
    wave_sizze_44704 = LOCKSTEP_WIDTH;
    group_tid_44703 = get_group_id(0);
    
    int32_t phys_tid_35770;
    
    phys_tid_35770 = global_tid_44701;
    
    int64_t gtid_35769;
    
    gtid_35769 = sext_i32_i64(group_tid_44703) * segmap_group_sizze_35824 +
        sext_i32_i64(local_tid_44702);
    if (slt64(gtid_35769, m_28248)) {
        int64_t last_res_35828 = ((__global int64_t *) mem_43623)[gtid_35769 *
                                                                  N_28247 +
                                                                  i_28523];
        int32_t defunc_0_f_res_35829 = sext_i64_i32(last_res_35828);
        
        ((__global int32_t *) mem_43629)[gtid_35769] = defunc_0_f_res_35829;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_35824
}
__kernel void mainMagnitudezisegmap_36021(__global int *global_failure,
                                          int64_t m_28248, float hfrac_28253,
                                          int32_t k2p2_28259, __global
                                          unsigned char *mem_43692, __global
                                          unsigned char *mem_43695, __global
                                          unsigned char *mem_43698, __global
                                          unsigned char *mem_43700)
{
    #define segmap_group_sizze_36106 (mainMagnitudezisegmap_group_sizze_36023)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44877;
    int32_t local_tid_44878;
    int64_t group_sizze_44881;
    int32_t wave_sizze_44880;
    int32_t group_tid_44879;
    
    global_tid_44877 = get_global_id(0);
    local_tid_44878 = get_local_id(0);
    group_sizze_44881 = get_local_size(0);
    wave_sizze_44880 = LOCKSTEP_WIDTH;
    group_tid_44879 = get_group_id(0);
    
    int32_t phys_tid_36021;
    
    phys_tid_36021 = global_tid_44877;
    
    int64_t gtid_36020;
    
    gtid_36020 = sext_i32_i64(group_tid_44879) * segmap_group_sizze_36106 +
        sext_i32_i64(local_tid_44878);
    if (slt64(gtid_36020, m_28248)) {
        int32_t defunc_0_f_res_36110 = ((__global
                                         int32_t *) mem_43692)[gtid_36020];
        float defunc_0_f_res_36111 = ((__global float *) mem_43695)[gtid_36020];
        int32_t r32_arg_36112 = sub32(defunc_0_f_res_36110, k2p2_28259);
        float i32_res_36113 = sitofp_i32_f32(r32_arg_36112);
        float sqrt_arg_36114 = defunc_0_f_res_36111 / i32_res_36113;
        float sqrt_res_36115;
        
        sqrt_res_36115 = futrts_sqrt32(sqrt_arg_36114);
        
        float i32_res_36116 = sitofp_i32_f32(defunc_0_f_res_36110);
        float t32_arg_36117 = hfrac_28253 * i32_res_36116;
        int32_t f32_res_36118 = fptosi_f32_i32(t32_arg_36117);
        
        ((__global int32_t *) mem_43698)[gtid_36020] = f32_res_36118;
        ((__global float *) mem_43700)[gtid_36020] = sqrt_res_36115;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36106
}
__kernel void mainMagnitudezisegmap_36292(__global int *global_failure,
                                          float lam_28254,
                                          int64_t iota32_arg_28643,
                                          int32_t x_28648, float i32_res_28656,
                                          __global
                                          unsigned char *mappingindices_mem_42840,
                                          __global unsigned char *mem_43742,
                                          __global unsigned char *mem_43744)
{
    #define segmap_group_sizze_36311 (mainMagnitudezisegmap_group_sizze_36294)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44987;
    int32_t local_tid_44988;
    int64_t group_sizze_44991;
    int32_t wave_sizze_44990;
    int32_t group_tid_44989;
    
    global_tid_44987 = get_global_id(0);
    local_tid_44988 = get_local_id(0);
    group_sizze_44991 = get_local_size(0);
    wave_sizze_44990 = LOCKSTEP_WIDTH;
    group_tid_44989 = get_group_id(0);
    
    int32_t phys_tid_36292;
    
    phys_tid_36292 = global_tid_44987;
    
    int64_t gtid_36291;
    
    gtid_36291 = sext_i32_i64(group_tid_44989) * segmap_group_sizze_36311 +
        sext_i32_i64(local_tid_44988);
    if (slt64(gtid_36291, iota32_arg_28643)) {
        int32_t defunc_0_f_res_36316 = sext_i64_i32(gtid_36291);
        int32_t t_36317 = add32(x_28648, defunc_0_f_res_36316);
        int32_t i_36318 = sub32(t_36317, 1);
        int64_t i_36319 = sext_i32_i64(i_36318);
        int32_t time_36320 = ((__global
                               int32_t *) mappingindices_mem_42840)[i_36319];
        float i32_res_36321 = sitofp_i32_f32(time_36320);
        float logplus_arg_36322 = i32_res_36321 / i32_res_28656;
        bool cond_36323 = 2.7182817F < logplus_arg_36322;
        float logplus_res_36324;
        
        if (cond_36323) {
            float log_res_36325;
            
            log_res_36325 = futrts_log32(logplus_arg_36322);
            logplus_res_36324 = log_res_36325;
        } else {
            logplus_res_36324 = 1.0F;
        }
        
        float sqrt_res_36326;
        
        sqrt_res_36326 = futrts_sqrt32(logplus_res_36324);
        
        float defunc_0_f_res_36327 = lam_28254 * sqrt_res_36326;
        
        ((__global int32_t *) mem_43742)[gtid_36291] = defunc_0_f_res_36316;
        ((__global float *) mem_43744)[gtid_36291] = defunc_0_f_res_36327;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36311
}
__kernel void mainMagnitudezisegmap_36543(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t m_28248,
                                          int64_t iota32_arg_28643,
                                          int64_t distance_28675,
                                          int64_t segmap_usable_groups_36776,
                                          __global
                                          unsigned char *defunc_4_map_res_mem_43637,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43705,
                                          __global unsigned char *mem_43747,
                                          __global unsigned char *mem_43754,
                                          __global unsigned char *mem_43765,
                                          __global unsigned char *mem_43785)
{
    #define segmap_group_sizze_36775 (mainMagnitudezisegmap_group_sizze_36545)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45002;
    int32_t local_tid_45003;
    int64_t group_sizze_45006;
    int32_t wave_sizze_45005;
    int32_t group_tid_45004;
    
    global_tid_45002 = get_global_id(0);
    local_tid_45003 = get_local_id(0);
    group_sizze_45006 = get_local_size(0);
    wave_sizze_45005 = LOCKSTEP_WIDTH;
    group_tid_45004 = get_group_id(0);
    
    int32_t phys_tid_36543;
    
    phys_tid_36543 = global_tid_45002;
    
    int64_t gtid_36542;
    
    gtid_36542 = sext_i32_i64(group_tid_45004) * segmap_group_sizze_36775 +
        sext_i32_i64(local_tid_45003);
    if (slt64(gtid_36542, m_28248)) {
        int32_t x_36778 = ((__global
                            int32_t *) defunc_4_map_res_mem_43637)[gtid_36542];
        int32_t x_36779 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_36542];
        int32_t y_36780 = ((__global int32_t *) mem_43747)[gtid_36542];
        
        for (int64_t i_45007 = 0; i_45007 < iota32_arg_28643; i_45007++) {
            ((__global float *) mem_43765)[phys_tid_36543 + i_45007 *
                                           (segmap_usable_groups_36776 *
                                            segmap_group_sizze_36775)] =
                ((__global float *) mem_43754)[gtid_36542 + i_45007 * m_28248];
        }
        for (int64_t i_36783 = 0; i_36783 < distance_28675; i_36783++) {
            int64_t index_primexp_36785 = add64((int64_t) 1, i_36783);
            bool cond_36786 = slt64((int64_t) 0, index_primexp_36785);
            bool loop_cond_36787;
            
            if (cond_36786) {
                bool x_36788 = sle64((int64_t) 0, index_primexp_36785);
                bool y_36789 = slt64(index_primexp_36785, iota32_arg_28643);
                bool bounds_check_36790 = x_36788 && y_36789;
                bool index_certs_36791;
                
                if (!bounds_check_36790) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 13) ==
                            -1) {
                            global_failure_args[0] = index_primexp_36785;
                            global_failure_args[1] = iota32_arg_28643;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_2_lifted_gt_arg_36792 = ((__global
                                                       float *) mem_43765)[phys_tid_36543 +
                                                                           index_primexp_36785 *
                                                                           (segmap_usable_groups_36776 *
                                                                            segmap_group_sizze_36775)];
                bool y_36793 = slt64(i_36783, iota32_arg_28643);
                bool index_certs_36794;
                
                if (!y_36793) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 14) ==
                            -1) {
                            global_failure_args[0] = i_36783;
                            global_failure_args[1] = iota32_arg_28643;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_1_lifted_gt_arg_36795 = ((__global
                                                       float *) mem_43765)[phys_tid_36543 +
                                                                           i_36783 *
                                                                           (segmap_usable_groups_36776 *
                                                                            segmap_group_sizze_36775)];
                bool defunc_1_zlze_res_36796 = defunc_1_lifted_gt_arg_36795 <=
                     defunc_2_lifted_gt_arg_36792;
                bool defunc_2_lifted_gt_res_36797 = !defunc_1_zlze_res_36796;
                
                loop_cond_36787 = defunc_2_lifted_gt_res_36797;
            } else {
                loop_cond_36787 = 0;
            }
            
            bool xszq_36798;
            int64_t xszq_36799;
            bool loop_while_36801;
            int64_t j_36802;
            
            loop_while_36801 = loop_cond_36787;
            j_36802 = index_primexp_36785;
            while (loop_while_36801) {
                int64_t loopres_36804 = sub64(j_36802, (int64_t) 1);
                bool x_36805 = sle64((int64_t) 0, j_36802);
                bool y_36806 = slt64(j_36802, iota32_arg_28643);
                bool bounds_check_36807 = x_36805 && y_36806;
                bool index_certs_36808;
                
                if (!bounds_check_36807) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 15) ==
                            -1) {
                            global_failure_args[0] = j_36802;
                            global_failure_args[1] = iota32_arg_28643;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_36809 = ((__global
                                         float *) mem_43765)[phys_tid_36543 +
                                                             j_36802 *
                                                             (segmap_usable_groups_36776 *
                                                              segmap_group_sizze_36775)];
                bool x_36810 = sle64((int64_t) 0, loopres_36804);
                bool y_36811 = slt64(loopres_36804, iota32_arg_28643);
                bool bounds_check_36812 = x_36810 && y_36811;
                bool index_certs_36813;
                
                if (!bounds_check_36812) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 16) ==
                            -1) {
                            global_failure_args[0] = loopres_36804;
                            global_failure_args[1] = iota32_arg_28643;
                            ;
                        }
                        return;
                    }
                }
                
                float copy_arg_36814 = ((__global
                                         float *) mem_43765)[phys_tid_36543 +
                                                             loopres_36804 *
                                                             (segmap_usable_groups_36776 *
                                                              segmap_group_sizze_36775)];
                
                ((__global float *) mem_43765)[phys_tid_36543 + j_36802 *
                                               (segmap_usable_groups_36776 *
                                                segmap_group_sizze_36775)] =
                    copy_arg_36814;
                ((__global float *) mem_43765)[phys_tid_36543 + loopres_36804 *
                                               (segmap_usable_groups_36776 *
                                                segmap_group_sizze_36775)] =
                    copy_arg_36809;
                
                bool cond_36817 = slt64((int64_t) 0, loopres_36804);
                bool loop_cond_36818;
                
                if (cond_36817) {
                    bool index_certs_36819;
                    
                    if (!bounds_check_36812) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          17) == -1) {
                                global_failure_args[0] = loopres_36804;
                                global_failure_args[1] = iota32_arg_28643;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_2_lifted_gt_arg_36820 = ((__global
                                                           float *) mem_43765)[phys_tid_36543 +
                                                                               loopres_36804 *
                                                                               (segmap_usable_groups_36776 *
                                                                                segmap_group_sizze_36775)];
                    int64_t i_36821 = sub64(loopres_36804, (int64_t) 1);
                    bool x_36822 = sle64((int64_t) 0, i_36821);
                    bool y_36823 = slt64(i_36821, iota32_arg_28643);
                    bool bounds_check_36824 = x_36822 && y_36823;
                    bool index_certs_36825;
                    
                    if (!bounds_check_36824) {
                        {
                            if (atomic_cmpxchg_i32_global(global_failure, -1,
                                                          18) == -1) {
                                global_failure_args[0] = i_36821;
                                global_failure_args[1] = iota32_arg_28643;
                                ;
                            }
                            return;
                        }
                    }
                    
                    float defunc_1_lifted_gt_arg_36826 = ((__global
                                                           float *) mem_43765)[phys_tid_36543 +
                                                                               i_36821 *
                                                                               (segmap_usable_groups_36776 *
                                                                                segmap_group_sizze_36775)];
                    bool defunc_1_zlze_res_36827 =
                         defunc_1_lifted_gt_arg_36826 <=
                         defunc_2_lifted_gt_arg_36820;
                    bool defunc_2_lifted_gt_res_36828 =
                         !defunc_1_zlze_res_36827;
                    
                    loop_cond_36818 = defunc_2_lifted_gt_res_36828;
                } else {
                    loop_cond_36818 = 0;
                }
                
                bool loop_while_tmp_45009 = loop_cond_36818;
                int64_t j_tmp_45010 = loopres_36804;
                
                loop_while_36801 = loop_while_tmp_45009;
                j_36802 = j_tmp_45010;
            }
            xszq_36798 = loop_while_36801;
            xszq_36799 = j_36802;
        }
        
        int32_t i_36829 = sdiv32(y_36780, 2);
        int32_t j_36830 = sub32(i_36829, 1);
        bool cond_36831 = x_36778 == x_36779;
        float defunc_0_f_res_36832;
        
        if (cond_36831) {
            defunc_0_f_res_36832 = 0.0F;
        } else {
            int32_t x_36833 = smod32(y_36780, 2);
            bool cond_36834 = x_36833 == 0;
            float defunc_0_f_res_f_res_36835;
            
            if (cond_36834) {
                int64_t j_36836 = sext_i32_i64(j_36830);
                bool x_36837 = sle64((int64_t) 0, j_36836);
                bool y_36838 = slt64(j_36836, iota32_arg_28643);
                bool bounds_check_36839 = x_36837 && y_36838;
                bool index_certs_36840;
                
                if (!bounds_check_36839) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 19) ==
                            -1) {
                            global_failure_args[0] = j_36836;
                            global_failure_args[1] = iota32_arg_28643;
                            ;
                        }
                        return;
                    }
                }
                
                float x_36841 = ((__global float *) mem_43765)[phys_tid_36543 +
                                                               j_36836 *
                                                               (segmap_usable_groups_36776 *
                                                                segmap_group_sizze_36775)];
                int64_t i_36842 = sext_i32_i64(i_36829);
                bool x_36843 = sle64((int64_t) 0, i_36842);
                bool y_36844 = slt64(i_36842, iota32_arg_28643);
                bool bounds_check_36845 = x_36843 && y_36844;
                bool index_certs_36846;
                
                if (!bounds_check_36845) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 20) ==
                            -1) {
                            global_failure_args[0] = i_36842;
                            global_failure_args[1] = iota32_arg_28643;
                            ;
                        }
                        return;
                    }
                }
                
                float y_36847 = ((__global float *) mem_43765)[phys_tid_36543 +
                                                               i_36842 *
                                                               (segmap_usable_groups_36776 *
                                                                segmap_group_sizze_36775)];
                float x_36848 = x_36841 + y_36847;
                float defunc_0_f_res_f_res_t_res_36849 = x_36848 / 2.0F;
                
                defunc_0_f_res_f_res_36835 = defunc_0_f_res_f_res_t_res_36849;
            } else {
                int64_t i_36850 = sext_i32_i64(i_36829);
                bool x_36851 = sle64((int64_t) 0, i_36850);
                bool y_36852 = slt64(i_36850, iota32_arg_28643);
                bool bounds_check_36853 = x_36851 && y_36852;
                bool index_certs_36854;
                
                if (!bounds_check_36853) {
                    {
                        if (atomic_cmpxchg_i32_global(global_failure, -1, 21) ==
                            -1) {
                            global_failure_args[0] = i_36850;
                            global_failure_args[1] = iota32_arg_28643;
                            ;
                        }
                        return;
                    }
                }
                
                float defunc_0_f_res_f_res_f_res_36855 = ((__global
                                                           float *) mem_43765)[phys_tid_36543 +
                                                                               i_36850 *
                                                                               (segmap_usable_groups_36776 *
                                                                                segmap_group_sizze_36775)];
                
                defunc_0_f_res_f_res_36835 = defunc_0_f_res_f_res_f_res_36855;
            }
            defunc_0_f_res_36832 = defunc_0_f_res_f_res_36835;
        }
        ((__global float *) mem_43785)[gtid_36542] = defunc_0_f_res_36832;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36775
}
__kernel void mainMagnitudezisegmap_36664(__global int *global_failure,
                                          int failure_is_an_option, __global
                                          int64_t *global_failure_args,
                                          int64_t N_28247, int64_t m_28248,
                                          int64_t iota32_arg_28643, __global
                                          unsigned char *defunc_4_map_res_mem_43638,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43705,
                                          __global unsigned char *mem_43747,
                                          __global unsigned char *mem_43751)
{
    #define segmap_group_sizze_36746 (mainMagnitudezisegmap_group_sizze_36667)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44997;
    int32_t local_tid_44998;
    int64_t group_sizze_45001;
    int32_t wave_sizze_45000;
    int32_t group_tid_44999;
    
    global_tid_44997 = get_global_id(0);
    local_tid_44998 = get_local_id(0);
    group_sizze_45001 = get_local_size(0);
    wave_sizze_45000 = LOCKSTEP_WIDTH;
    group_tid_44999 = get_group_id(0);
    
    int32_t phys_tid_36664;
    
    phys_tid_36664 = global_tid_44997;
    
    int64_t gtid_36662;
    
    gtid_36662 = squot64(sext_i32_i64(group_tid_44999) *
                         segmap_group_sizze_36746 +
                         sext_i32_i64(local_tid_44998), iota32_arg_28643);
    
    int64_t gtid_36663;
    
    gtid_36663 = sext_i32_i64(group_tid_44999) * segmap_group_sizze_36746 +
        sext_i32_i64(local_tid_44998) - squot64(sext_i32_i64(group_tid_44999) *
                                                segmap_group_sizze_36746 +
                                                sext_i32_i64(local_tid_44998),
                                                iota32_arg_28643) *
        iota32_arg_28643;
    if (slt64(gtid_36662, m_28248) && slt64(gtid_36663, iota32_arg_28643)) {
        int32_t x_36749 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_36662];
        int32_t y_36751 = ((__global int32_t *) mem_43747)[gtid_36662];
        int32_t index_primexp_40938 = sext_i64_i32(gtid_36663);
        bool cond_36753 = slt32(index_primexp_40938, y_36751);
        bool cond_36754;
        
        if (cond_36753) {
            int32_t i_36755 = add32(x_36749, index_primexp_40938);
            int64_t i_36756 = sext_i32_i64(i_36755);
            bool x_36757 = sle64((int64_t) 0, i_36756);
            bool y_36758 = slt64(i_36756, N_28247);
            bool bounds_check_36759 = x_36757 && y_36758;
            bool index_certs_36760;
            
            if (!bounds_check_36759) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 11) ==
                        -1) {
                        global_failure_args[0] = i_36756;
                        global_failure_args[1] = N_28247;
                        ;
                    }
                    return;
                }
            }
            
            float isnan_arg_36761 = ((__global
                                      float *) defunc_4_map_res_mem_43638)[gtid_36662 *
                                                                           N_28247 +
                                                                           i_36756];
            bool isnan_res_36762;
            
            isnan_res_36762 = futrts_isnan32(isnan_arg_36761);
            
            bool cond_t_res_36763 = !isnan_res_36762;
            
            cond_36754 = cond_t_res_36763;
        } else {
            cond_36754 = 0;
        }
        
        float defunc_0_f_res_36764;
        
        if (cond_36754) {
            int32_t i_36765 = add32(x_36749, index_primexp_40938);
            int64_t i_36766 = sext_i32_i64(i_36765);
            bool x_36767 = sle64((int64_t) 0, i_36766);
            bool y_36768 = slt64(i_36766, N_28247);
            bool bounds_check_36769 = x_36767 && y_36768;
            bool index_certs_36770;
            
            if (!bounds_check_36769) {
                {
                    if (atomic_cmpxchg_i32_global(global_failure, -1, 12) ==
                        -1) {
                        global_failure_args[0] = i_36766;
                        global_failure_args[1] = N_28247;
                        ;
                    }
                    return;
                }
            }
            
            float defunc_0_f_res_t_res_36771 = ((__global
                                                 float *) defunc_4_map_res_mem_43638)[gtid_36662 *
                                                                                      N_28247 +
                                                                                      i_36766];
            
            defunc_0_f_res_36764 = defunc_0_f_res_t_res_36771;
        } else {
            defunc_0_f_res_36764 = INFINITY;
        }
        ((__global float *) mem_43751)[gtid_36662 * iota32_arg_28643 +
                                       gtid_36663] = defunc_0_f_res_36764;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36746
}
__kernel void mainMagnitudezisegmap_36722(__global int *global_failure,
                                          int64_t m_28248, __global
                                          unsigned char *defunc_4_map_res_mem_43637,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43705,
                                          __global unsigned char *mem_43747)
{
    #define segmap_group_sizze_36731 (mainMagnitudezisegmap_group_sizze_36724)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44992;
    int32_t local_tid_44993;
    int64_t group_sizze_44996;
    int32_t wave_sizze_44995;
    int32_t group_tid_44994;
    
    global_tid_44992 = get_global_id(0);
    local_tid_44993 = get_local_id(0);
    group_sizze_44996 = get_local_size(0);
    wave_sizze_44995 = LOCKSTEP_WIDTH;
    group_tid_44994 = get_group_id(0);
    
    int32_t phys_tid_36722;
    
    phys_tid_36722 = global_tid_44992;
    
    int64_t gtid_36721;
    
    gtid_36721 = sext_i32_i64(group_tid_44994) * segmap_group_sizze_36731 +
        sext_i32_i64(local_tid_44993);
    if (slt64(gtid_36721, m_28248)) {
        int32_t x_36734 = ((__global
                            int32_t *) defunc_4_map_res_mem_43637)[gtid_36721];
        int32_t x_36735 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_36721];
        int32_t y_36736 = sub32(x_36734, x_36735);
        
        ((__global int32_t *) mem_43747)[gtid_36721] = y_36736;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_36731
}
__kernel void mainMagnitudezisegmap_37220(__global int *global_failure,
                                          int64_t N_28247, int64_t m_28248,
                                          int32_t n_28251, __global
                                          unsigned char *defunc_4_map_res_mem_43639,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43705,
                                          __global unsigned char *mem_43799,
                                          __global unsigned char *mem_43806,
                                          __global unsigned char *mem_43808,
                                          __global unsigned char *mem_43810,
                                          __global unsigned char *mem_43813,
                                          __global unsigned char *mem_43815)
{
    #define segmap_group_sizze_37484 (mainMagnitudezisegmap_group_sizze_37222)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45202;
    int32_t local_tid_45203;
    int64_t group_sizze_45206;
    int32_t wave_sizze_45205;
    int32_t group_tid_45204;
    
    global_tid_45202 = get_global_id(0);
    local_tid_45203 = get_local_id(0);
    group_sizze_45206 = get_local_size(0);
    wave_sizze_45205 = LOCKSTEP_WIDTH;
    group_tid_45204 = get_group_id(0);
    
    int32_t phys_tid_37220;
    
    phys_tid_37220 = global_tid_45202;
    
    int64_t gtid_37219;
    
    gtid_37219 = sext_i32_i64(group_tid_45204) * segmap_group_sizze_37484 +
        sext_i32_i64(local_tid_45203);
    if (slt64(gtid_37219, m_28248)) {
        int32_t x_37488 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_37219];
        int32_t y_37490 = ((__global int32_t *) mem_43799)[gtid_37219];
        bool acc0_37492 = ((__global bool *) mem_43806)[gtid_37219];
        bool x_37497 = acc0_37492 && acc0_37492;
        int32_t defunc_1_op_res_f_res_37501;
        
        if (acc0_37492) {
            int32_t acc0_37493 = ((__global int32_t *) mem_43808)[gtid_37219];
            
            defunc_1_op_res_f_res_37501 = acc0_37493;
        } else {
            defunc_1_op_res_f_res_37501 = -1;
        }
        
        bool cond_37507 = y_37490 == 0;
        float defunc_0_f_res_37508;
        
        if (cond_37507) {
            defunc_0_f_res_37508 = 0.0F;
        } else {
            float acc0_37494 = ((__global float *) mem_43810)[gtid_37219];
            float i32_res_37509 = sitofp_i32_f32(y_37490);
            float defunc_0_f_res_f_res_37510 = acc0_37494 / i32_res_37509;
            
            defunc_0_f_res_37508 = defunc_0_f_res_f_res_37510;
        }
        
        bool cond_37511 = !x_37497;
        int32_t fst_breakzq_37512;
        
        if (cond_37511) {
            fst_breakzq_37512 = -1;
        } else {
            bool cond_37513 = slt32(defunc_1_op_res_f_res_37501, y_37490);
            int32_t adjustValInds_res_37514;
            
            if (cond_37513) {
                int32_t i_37515 = add32(x_37488, defunc_1_op_res_f_res_37501);
                int64_t i_37516 = sext_i32_i64(i_37515);
                int32_t x_37517 = ((__global
                                    int32_t *) defunc_4_map_res_mem_43639)[gtid_37219 *
                                                                           N_28247 +
                                                                           i_37516];
                int32_t adjustValInds_res_t_res_37518 = sub32(x_37517, n_28251);
                
                adjustValInds_res_37514 = adjustValInds_res_t_res_37518;
            } else {
                adjustValInds_res_37514 = -1;
            }
            fst_breakzq_37512 = adjustValInds_res_37514;
        }
        
        bool cond_37519 = sle32(x_37488, 5);
        bool cond_f_res_37520 = sle32(y_37490, 5);
        bool x_37521 = !cond_37519;
        bool y_37522 = cond_f_res_37520 && x_37521;
        bool cond_37523 = cond_37519 || y_37522;
        int32_t fst_breakzq_37524;
        
        if (cond_37523) {
            fst_breakzq_37524 = -2;
        } else {
            fst_breakzq_37524 = fst_breakzq_37512;
        }
        ((__global int32_t *) mem_43813)[gtid_37219] = fst_breakzq_37524;
        ((__global float *) mem_43815)[gtid_37219] = defunc_0_f_res_37508;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37484
}
__kernel void mainMagnitudezisegmap_37362(__global int *global_failure,
                                          int64_t m_28248,
                                          int64_t num_groups_37385, __global
                                          unsigned char *defunc_4_map_res_mem_43637,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43705,
                                          __global
                                          unsigned char *defunc_3_map_res_mem_43706,
                                          __global unsigned char *mem_43797,
                                          __global unsigned char *mem_43799)
{
    #define segmap_group_sizze_37384 (mainMagnitudezisegmap_group_sizze_37364)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45040;
    int32_t local_tid_45041;
    int64_t group_sizze_45044;
    int32_t wave_sizze_45043;
    int32_t group_tid_45042;
    
    global_tid_45040 = get_global_id(0);
    local_tid_45041 = get_local_id(0);
    group_sizze_45044 = get_local_size(0);
    wave_sizze_45043 = LOCKSTEP_WIDTH;
    group_tid_45042 = get_group_id(0);
    
    int32_t phys_tid_37362;
    
    phys_tid_37362 = global_tid_45040;
    
    int32_t phys_group_id_45045;
    
    phys_group_id_45045 = get_group_id(0);
    for (int32_t i_45046 = 0; i_45046 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248, segmap_group_sizze_37384)) -
                   phys_group_id_45045, sext_i64_i32(num_groups_37385));
         i_45046++) {
        int32_t virt_group_id_45047 = phys_group_id_45045 + i_45046 *
                sext_i64_i32(num_groups_37385);
        int64_t gtid_37361 = sext_i32_i64(virt_group_id_45047) *
                segmap_group_sizze_37384 + sext_i32_i64(local_tid_45041);
        
        if (slt64(gtid_37361, m_28248)) {
            int32_t x_37391 = ((__global
                                int32_t *) defunc_4_map_res_mem_43637)[gtid_37361];
            int32_t x_37392 = ((__global
                                int32_t *) defunc_3_map_res_mem_43705)[gtid_37361];
            float x_37393 = ((__global
                              float *) defunc_3_map_res_mem_43706)[gtid_37361];
            int32_t y_37394 = sub32(x_37391, x_37392);
            float i32_res_37395 = sitofp_i32_f32(x_37392);
            float sqrt_res_37396;
            
            sqrt_res_37396 = futrts_sqrt32(i32_res_37395);
            
            float y_37397 = x_37393 * sqrt_res_37396;
            
            ((__global float *) mem_43797)[gtid_37361] = y_37397;
            ((__global int32_t *) mem_43799)[gtid_37361] = y_37394;
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_37384
}
__kernel void mainMagnitudezisegmap_intragroup_34399(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43023_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43013_backing_aligned_1,
                                                     int32_t k2p2zq_28261,
                                                     int64_t i32_res_28263,
                                                     int32_t m_28394,
                                                     int64_t i32_res_28396,
                                                     int64_t i32_res_28411,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43009,
                                                     __global
                                                     unsigned char *mem_43033)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43023_backing_1 = (__local volatile
                                                           char *) mem_43023_backing_aligned_0;
    __local volatile char *restrict mem_43013_backing_0 = (__local volatile
                                                           char *) mem_43013_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44212;
    int32_t local_tid_44213;
    int64_t group_sizze_44216;
    int32_t wave_sizze_44215;
    int32_t group_tid_44214;
    
    global_tid_44212 = get_global_id(0);
    local_tid_44213 = get_local_id(0);
    group_sizze_44216 = get_local_size(0);
    wave_sizze_44215 = LOCKSTEP_WIDTH;
    group_tid_44214 = get_group_id(0);
    
    int32_t phys_tid_34399;
    
    phys_tid_34399 = group_tid_44214;
    
    int32_t ltid_pre_44217;
    
    ltid_pre_44217 = local_tid_44213;
    
    int64_t gtid_34354;
    
    gtid_34354 = sext_i32_i64(group_tid_44214);
    
    __local char *mem_43013;
    
    mem_43013 = (__local char *) mem_43013_backing_0;
    
    int64_t gtid_34357 = sext_i32_i64(ltid_pre_44217);
    int32_t phys_tid_34358 = local_tid_44213;
    int32_t index_primexp_40897 = sext_i64_i32(gtid_34357);
    int32_t defunc_0_f_res_34524 = sdiv32(index_primexp_40897, m_28394);
    int32_t defunc_0_f_res_34525 = smod32(index_primexp_40897, m_28394);
    bool cond_34526 = slt32(defunc_0_f_res_34525, k2p2zq_28261);
    float defunc_0_f_res_34527;
    
    if (cond_34526) {
        int64_t i_34528 = sext_i32_i64(defunc_0_f_res_34524);
        int64_t j_34529 = sext_i32_i64(defunc_0_f_res_34525);
        float defunc_0_f_res_t_res_34530 = ((__global
                                             float *) defunc_3_map_res_mem_43009)[gtid_34354 *
                                                                                  (i32_res_28263 *
                                                                                   i32_res_28263) +
                                                                                  i_34528 *
                                                                                  i32_res_28263 +
                                                                                  j_34529];
        
        defunc_0_f_res_34527 = defunc_0_f_res_t_res_34530;
    } else {
        int32_t y_34531 = add32(k2p2zq_28261, defunc_0_f_res_34524);
        bool cond_34532 = defunc_0_f_res_34525 == y_34531;
        float defunc_0_f_res_f_res_34533;
        
        if (cond_34532) {
            defunc_0_f_res_f_res_34533 = 1.0F;
        } else {
            defunc_0_f_res_f_res_34533 = 0.0F;
        }
        defunc_0_f_res_34527 = defunc_0_f_res_f_res_34533;
    }
    ((__local float *) mem_43013)[gtid_34357] = defunc_0_f_res_34527;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43023;
    
    mem_43023 = (__local char *) mem_43023_backing_1;
    for (int32_t i_34535 = 0; i_34535 < k2p2zq_28261; i_34535++) {
        int64_t i32_res_34537 = sext_i32_i64(i_34535);
        float v1_34538 = ((__local float *) mem_43013)[i32_res_34537];
        bool cond_34539 = v1_34538 == 0.0F;
        int64_t gtid_34370 = sext_i32_i64(ltid_pre_44217);
        int32_t phys_tid_34371 = local_tid_44213;
        int32_t defunc_0_f_res_34542 = sext_i64_i32(gtid_34370);
        int32_t defunc_0_f_res_34543 = sdiv32(defunc_0_f_res_34542, m_28394);
        int32_t defunc_0_f_res_34544 = smod32(defunc_0_f_res_34542, m_28394);
        float defunc_0_f_res_34545;
        
        if (cond_34539) {
            int32_t x_34546 = mul32(m_28394, defunc_0_f_res_34543);
            int32_t i32_arg_34547 = add32(defunc_0_f_res_34544, x_34546);
            int64_t i32_res_34548 = sext_i32_i64(i32_arg_34547);
            float defunc_0_f_res_t_res_34549 = ((__local
                                                 float *) mem_43013)[i32_res_34548];
            
            defunc_0_f_res_34545 = defunc_0_f_res_t_res_34549;
        } else {
            int64_t i32_res_34550 = sext_i32_i64(defunc_0_f_res_34544);
            float x_34551 = ((__local float *) mem_43013)[i32_res_34550];
            float x_34552 = x_34551 / v1_34538;
            int32_t y_34553 = sub32(k2p2zq_28261, 1);
            bool cond_34554 = slt32(defunc_0_f_res_34543, y_34553);
            float defunc_0_f_res_f_res_34555;
            
            if (cond_34554) {
                int32_t x_34556 = add32(1, defunc_0_f_res_34543);
                int32_t x_34557 = mul32(m_28394, x_34556);
                int32_t i32_arg_34558 = add32(defunc_0_f_res_34544, x_34557);
                int64_t i32_res_34559 = sext_i32_i64(i32_arg_34558);
                float x_34560 = ((__local float *) mem_43013)[i32_res_34559];
                int32_t i32_arg_34561 = add32(i_34535, x_34557);
                int64_t i32_res_34562 = sext_i32_i64(i32_arg_34561);
                float x_34563 = ((__local float *) mem_43013)[i32_res_34562];
                float y_34564 = x_34552 * x_34563;
                float defunc_0_f_res_f_res_t_res_34565 = x_34560 - y_34564;
                
                defunc_0_f_res_f_res_34555 = defunc_0_f_res_f_res_t_res_34565;
            } else {
                defunc_0_f_res_f_res_34555 = x_34552;
            }
            defunc_0_f_res_34545 = defunc_0_f_res_f_res_34555;
        }
        ((__local float *) mem_43023)[gtid_34370] = defunc_0_f_res_34545;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t write_i_34397 = sext_i32_i64(ltid_pre_44217);
        int32_t phys_tid_34398 = local_tid_44213;
        float write_value_34568 = ((__local float *) mem_43023)[write_i_34397];
        
        if (sle64((int64_t) 0, write_i_34397) && slt64(write_i_34397,
                                                       i32_res_28396)) {
            ((__local float *) mem_43013)[write_i_34397] = write_value_34568;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
    }
    for (int64_t i_44219 = 0; i_44219 < sdiv_up64(i32_res_28263 *
                                                  i32_res_28263 -
                                                  sext_i32_i64(local_tid_44213),
                                                  i32_res_28396); i_44219++) {
        ((__global float *) mem_43033)[gtid_34354 * (i32_res_28263 *
                                                     i32_res_28263) +
                                       squot64(i_44219 * i32_res_28396 +
                                               sext_i32_i64(local_tid_44213),
                                               i32_res_28263) * i32_res_28263 +
                                       (i_44219 * i32_res_28396 +
                                        sext_i32_i64(local_tid_44213) -
                                        squot64(i_44219 * i32_res_28396 +
                                                sext_i32_i64(local_tid_44213),
                                                i32_res_28263) *
                                        i32_res_28263)] = ((__local
                                                            float *) mem_43013)[i32_res_28263 +
                                                                                (squot64(i_44219 *
                                                                                         i32_res_28396 +
                                                                                         sext_i32_i64(local_tid_44213),
                                                                                         i32_res_28263) *
                                                                                 i32_res_28411 +
                                                                                 (i_44219 *
                                                                                  i32_res_28396 +
                                                                                  sext_i32_i64(local_tid_44213) -
                                                                                  squot64(i_44219 *
                                                                                          i32_res_28396 +
                                                                                          sext_i32_i64(local_tid_44213),
                                                                                          i32_res_28263) *
                                                                                  i32_res_28263))];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_34626(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43054_backing_aligned_0,
                                                     int64_t m_28248,
                                                     int32_t k2p2zq_28261,
                                                     int32_t m_28394,
                                                     int64_t i32_res_28396,
                                                     int32_t i_35021,
                                                     int64_t i32_res_35023,
                                                     int64_t ctx_param_ext_43040,
                                                     int64_t ctx_param_ext_43041,
                                                     int64_t ctx_param_ext_43043,
                                                     __global
                                                     unsigned char *mem_param_43045,
                                                     __global
                                                     unsigned char *mem_43050,
                                                     __global
                                                     unsigned char *mem_43058)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43054_backing_0 = (__local volatile
                                                           char *) mem_43054_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44246;
    int32_t local_tid_44247;
    int64_t group_sizze_44250;
    int32_t wave_sizze_44249;
    int32_t group_tid_44248;
    
    global_tid_44246 = get_global_id(0);
    local_tid_44247 = get_local_id(0);
    group_sizze_44250 = get_local_size(0);
    wave_sizze_44249 = LOCKSTEP_WIDTH;
    group_tid_44248 = get_group_id(0);
    
    int32_t phys_tid_34626;
    
    phys_tid_34626 = group_tid_44248;
    
    int32_t ltid_pre_44251;
    
    ltid_pre_44251 = local_tid_44247;
    
    int64_t gtid_34594;
    
    gtid_34594 = sext_i32_i64(group_tid_44248);
    
    float v1_35036 = ((__global float *) mem_param_43045)[ctx_param_ext_43040 +
                                                          (gtid_34594 *
                                                           ctx_param_ext_43041 +
                                                           i32_res_35023 *
                                                           ctx_param_ext_43043)];
    bool cond_35037 = v1_35036 == 0.0F;
    __local char *mem_43054;
    
    mem_43054 = (__local char *) mem_43054_backing_0;
    
    int64_t gtid_34597 = sext_i32_i64(ltid_pre_44251);
    int32_t phys_tid_34598 = local_tid_44247;
    int32_t defunc_0_f_res_35040 = sext_i64_i32(gtid_34597);
    int32_t defunc_0_f_res_35041 = sdiv32(defunc_0_f_res_35040, m_28394);
    int32_t defunc_0_f_res_35042 = smod32(defunc_0_f_res_35040, m_28394);
    float defunc_0_f_res_35043;
    
    if (cond_35037) {
        int32_t x_35044 = mul32(m_28394, defunc_0_f_res_35041);
        int32_t i32_arg_35045 = add32(defunc_0_f_res_35042, x_35044);
        int64_t i32_res_35046 = sext_i32_i64(i32_arg_35045);
        float defunc_0_f_res_t_res_35047 = ((__global
                                             float *) mem_param_43045)[ctx_param_ext_43040 +
                                                                       (gtid_34594 *
                                                                        ctx_param_ext_43041 +
                                                                        i32_res_35046 *
                                                                        ctx_param_ext_43043)];
        
        defunc_0_f_res_35043 = defunc_0_f_res_t_res_35047;
    } else {
        int64_t i32_res_35048 = sext_i32_i64(defunc_0_f_res_35042);
        float x_35049 = ((__global
                          float *) mem_param_43045)[ctx_param_ext_43040 +
                                                    (gtid_34594 *
                                                     ctx_param_ext_43041 +
                                                     i32_res_35048 *
                                                     ctx_param_ext_43043)];
        float x_35050 = x_35049 / v1_35036;
        int32_t y_35051 = sub32(k2p2zq_28261, 1);
        bool cond_35052 = slt32(defunc_0_f_res_35041, y_35051);
        float defunc_0_f_res_f_res_35053;
        
        if (cond_35052) {
            int32_t x_35054 = add32(1, defunc_0_f_res_35041);
            int32_t x_35055 = mul32(m_28394, x_35054);
            int32_t i32_arg_35056 = add32(defunc_0_f_res_35042, x_35055);
            int64_t i32_res_35057 = sext_i32_i64(i32_arg_35056);
            float x_35058 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_34594 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_35057 *
                                                         ctx_param_ext_43043)];
            int32_t i32_arg_35059 = add32(i_35021, x_35055);
            int64_t i32_res_35060 = sext_i32_i64(i32_arg_35059);
            float x_35061 = ((__global
                              float *) mem_param_43045)[ctx_param_ext_43040 +
                                                        (gtid_34594 *
                                                         ctx_param_ext_43041 +
                                                         i32_res_35060 *
                                                         ctx_param_ext_43043)];
            float y_35062 = x_35050 * x_35061;
            float defunc_0_f_res_f_res_t_res_35063 = x_35058 - y_35062;
            
            defunc_0_f_res_f_res_35053 = defunc_0_f_res_f_res_t_res_35063;
        } else {
            defunc_0_f_res_f_res_35053 = x_35050;
        }
        defunc_0_f_res_35043 = defunc_0_f_res_f_res_35053;
    }
    ((__local float *) mem_43054)[gtid_34597] = defunc_0_f_res_35043;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_34624 = sext_i32_i64(ltid_pre_44251);
    int32_t phys_tid_34625 = local_tid_44247;
    float write_value_35066 = ((__local float *) mem_43054)[write_i_34624];
    
    if (sle64((int64_t) 0, write_i_34624) && slt64(write_i_34624,
                                                   i32_res_28396)) {
        ((__global float *) mem_43050)[gtid_34594 + write_i_34624 * m_28248] =
            write_value_35066;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44247 == 0) {
        for (int64_t i_44252 = 0; i_44252 < i32_res_28396; i_44252++) {
            ((__global float *) mem_43058)[gtid_34594 * i32_res_28396 +
                                           i_44252] = ((__global
                                                        float *) mem_43050)[gtid_34594 +
                                                                            i_44252 *
                                                                            m_28248];
        }
    }
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35577(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43610_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43608_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *mem_43606_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_43604_backing_aligned_3,
                                                     int64_t N_28247,
                                                     int64_t i_28523, __global
                                                     unsigned char *images_mem_42841,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43600,
                                                     __global
                                                     unsigned char *mem_43613,
                                                     __global
                                                     unsigned char *mem_43616,
                                                     __global
                                                     unsigned char *mem_43619)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43610_backing_3 = (__local volatile
                                                           char *) mem_43610_backing_aligned_0;
    __local volatile char *restrict mem_43608_backing_2 = (__local volatile
                                                           char *) mem_43608_backing_aligned_1;
    __local volatile char *restrict mem_43606_backing_1 = (__local volatile
                                                           char *) mem_43606_backing_aligned_2;
    __local volatile char *restrict mem_43604_backing_0 = (__local volatile
                                                           char *) mem_43604_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44628;
    int32_t local_tid_44629;
    int64_t group_sizze_44632;
    int32_t wave_sizze_44631;
    int32_t group_tid_44630;
    
    global_tid_44628 = get_global_id(0);
    local_tid_44629 = get_local_id(0);
    group_sizze_44632 = get_local_size(0);
    wave_sizze_44631 = LOCKSTEP_WIDTH;
    group_tid_44630 = get_group_id(0);
    
    int32_t phys_tid_35577;
    
    phys_tid_35577 = group_tid_44630;
    
    int32_t ltid_pre_44633;
    
    ltid_pre_44633 = local_tid_44629;
    
    int64_t gtid_35570;
    
    gtid_35570 = sext_i32_i64(group_tid_44630);
    
    __local char *mem_43604;
    
    mem_43604 = (__local char *) mem_43604_backing_0;
    
    __local char *mem_43606;
    
    mem_43606 = (__local char *) mem_43606_backing_1;
    
    int64_t gtid_35573 = sext_i32_i64(ltid_pre_44633);
    int32_t phys_tid_35574 = local_tid_44629;
    float x_35666 = ((__global float *) images_mem_42841)[gtid_35570 * N_28247 +
                                                          gtid_35573];
    bool isnan_res_35668;
    
    isnan_res_35668 = futrts_isnan32(x_35666);
    
    bool cond_35669 = !isnan_res_35668;
    float defunc_0_f_res_35670;
    
    if (cond_35669) {
        float x_35667 = ((__global
                          float *) defunc_3_map_res_mem_43600)[gtid_35570 *
                                                               N_28247 +
                                                               gtid_35573];
        float defunc_0_f_res_t_res_35671 = x_35666 - x_35667;
        
        defunc_0_f_res_35670 = defunc_0_f_res_t_res_35671;
    } else {
        defunc_0_f_res_35670 = NAN;
    }
    
    bool isnan_res_35672;
    
    isnan_res_35672 = futrts_isnan32(defunc_0_f_res_35670);
    
    bool defunc_0_p_res_35673 = !isnan_res_35672;
    int64_t defunc_0_f_res_35674 = btoi_bool_i64(defunc_0_p_res_35673);
    
    ((__local int64_t *) mem_43604)[gtid_35573] = defunc_0_f_res_35674;
    ((__local float *) mem_43606)[gtid_35573] = defunc_0_f_res_35670;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_44634;
    
    dims_flat_44634 = N_28247;
    
    int64_t x_35663;
    int64_t x_35664;
    int64_t x_44636;
    int64_t x_44637;
    bool ltid_in_bounds_44639;
    
    ltid_in_bounds_44639 = slt64(sext_i32_i64(local_tid_44629), N_28247);
    
    int32_t skip_threads_44640;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_44639) {
            x_35664 = ((volatile __local
                        int64_t *) mem_43604)[sext_i32_i64(local_tid_44629)];
            if ((local_tid_44629 - squot32(local_tid_44629, 32) * 32) == 0) {
                x_35663 = x_35664;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_44640 = 1;
        while (slt32(skip_threads_44640, 32)) {
            if (sle32(skip_threads_44640, local_tid_44629 -
                      squot32(local_tid_44629, 32) * 32) &&
                ltid_in_bounds_44639) {
                // read operands
                {
                    x_35663 = ((volatile __local
                                int64_t *) mem_43604)[sext_i32_i64(local_tid_44629) -
                                                      sext_i32_i64(skip_threads_44640)];
                }
                // perform operation
                {
                    bool inactive_44641 =
                         slt64(srem64(sext_i32_i64(local_tid_44629), N_28247),
                               sext_i32_i64(local_tid_44629) -
                               sext_i32_i64(local_tid_44629 -
                               skip_threads_44640));
                    
                    if (inactive_44641) {
                        x_35663 = x_35664;
                    }
                    if (!inactive_44641) {
                        int64_t defunc_1_op_res_35665 = add64(x_35663, x_35664);
                        
                        x_35663 = defunc_1_op_res_35665;
                    }
                }
            }
            if (sle32(wave_sizze_44631, skip_threads_44640)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_44640, local_tid_44629 -
                      squot32(local_tid_44629, 32) * 32) &&
                ltid_in_bounds_44639) {
                // write result
                {
                    ((volatile __local
                      int64_t *) mem_43604)[sext_i32_i64(local_tid_44629)] =
                        x_35663;
                    x_35664 = x_35663;
                }
            }
            if (sle32(wave_sizze_44631, skip_threads_44640)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_44640 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_44629 - squot32(local_tid_44629, 32) * 32) == 31 &&
            ltid_in_bounds_44639) {
            ((volatile __local
              int64_t *) mem_43604)[sext_i32_i64(squot32(local_tid_44629,
                                                         32))] = x_35663;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_44642;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_44629, 32) == 0 && ltid_in_bounds_44639) {
                x_44637 = ((volatile __local
                            int64_t *) mem_43604)[sext_i32_i64(local_tid_44629)];
                if ((local_tid_44629 - squot32(local_tid_44629, 32) * 32) ==
                    0) {
                    x_44636 = x_44637;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_44642 = 1;
            while (slt32(skip_threads_44642, 32)) {
                if (sle32(skip_threads_44642, local_tid_44629 -
                          squot32(local_tid_44629, 32) * 32) &&
                    (squot32(local_tid_44629, 32) == 0 &&
                     ltid_in_bounds_44639)) {
                    // read operands
                    {
                        x_44636 = ((volatile __local
                                    int64_t *) mem_43604)[sext_i32_i64(local_tid_44629) -
                                                          sext_i32_i64(skip_threads_44642)];
                    }
                    // perform operation
                    {
                        bool inactive_44643 =
                             slt64(srem64(sext_i32_i64(local_tid_44629 * 32 +
                                          32 - 1), N_28247),
                                   sext_i32_i64(local_tid_44629 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_44629 -
                                                 skip_threads_44642) * 32 + 32 -
                                   1));
                        
                        if (inactive_44643) {
                            x_44636 = x_44637;
                        }
                        if (!inactive_44643) {
                            int64_t defunc_1_op_res_44638 = add64(x_44636,
                                                                  x_44637);
                            
                            x_44636 = defunc_1_op_res_44638;
                        }
                    }
                }
                if (sle32(wave_sizze_44631, skip_threads_44642)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_44642, local_tid_44629 -
                          squot32(local_tid_44629, 32) * 32) &&
                    (squot32(local_tid_44629, 32) == 0 &&
                     ltid_in_bounds_44639)) {
                    // write result
                    {
                        ((volatile __local
                          int64_t *) mem_43604)[sext_i32_i64(local_tid_44629)] =
                            x_44636;
                        x_44637 = x_44636;
                    }
                }
                if (sle32(wave_sizze_44631, skip_threads_44642)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_44642 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_44629, 32) == 0 || !ltid_in_bounds_44639)) {
            // read operands
            {
                x_35664 = x_35663;
                x_35663 = ((__local
                            int64_t *) mem_43604)[sext_i32_i64(squot32(local_tid_44629,
                                                                       32)) -
                                                  (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_44644 =
                     slt64(srem64(sext_i32_i64(local_tid_44629), N_28247),
                           sext_i32_i64(local_tid_44629) -
                           sext_i32_i64(squot32(local_tid_44629, 32) * 32 - 1));
                
                if (inactive_44644) {
                    x_35663 = x_35664;
                }
                if (!inactive_44644) {
                    int64_t defunc_1_op_res_35665 = add64(x_35663, x_35664);
                    
                    x_35663 = defunc_1_op_res_35665;
                }
            }
            // write final result
            {
                ((__local int64_t *) mem_43604)[sext_i32_i64(local_tid_44629)] =
                    x_35663;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_44629, 32) == 0) {
            ((__local int64_t *) mem_43604)[sext_i32_i64(local_tid_44629)] =
                x_35664;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t last_res_35675 = ((__local int64_t *) mem_43604)[i_28523];
    int32_t defunc_0_f_res_35676 = sext_i64_i32(last_res_35675);
    __local char *mem_43608;
    
    mem_43608 = (__local char *) mem_43608_backing_2;
    ((__local float *) mem_43608)[sext_i32_i64(local_tid_44629)] = NAN;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43610;
    
    mem_43610 = (__local char *) mem_43610_backing_3;
    ((__local int32_t *) mem_43610)[sext_i32_i64(local_tid_44629)] = 0;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t write_i_35575 = sext_i32_i64(ltid_pre_44633);
    int32_t phys_tid_35576 = local_tid_44629;
    float x_35681 = ((__local float *) mem_43606)[write_i_35575];
    int32_t index_primexp_40917 = sext_i64_i32(write_i_35575);
    bool isnan_res_35684;
    
    isnan_res_35684 = futrts_isnan32(x_35681);
    
    bool defunc_0_p_res_35685 = !isnan_res_35684;
    int64_t defunc_1_f_res_35686;
    
    if (defunc_0_p_res_35685) {
        int64_t x_35682 = ((__local int64_t *) mem_43604)[write_i_35575];
        int64_t defunc_1_f_res_t_res_35687 = sub64(x_35682, (int64_t) 1);
        
        defunc_1_f_res_35686 = defunc_1_f_res_t_res_35687;
    } else {
        defunc_1_f_res_35686 = (int64_t) -1;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_35686) && slt64(defunc_1_f_res_35686,
                                                          N_28247)) {
        ((__local int32_t *) mem_43610)[defunc_1_f_res_35686] =
            index_primexp_40917;
    }
    if (sle64((int64_t) 0, defunc_1_f_res_35686) && slt64(defunc_1_f_res_35686,
                                                          N_28247)) {
        ((__local float *) mem_43608)[defunc_1_f_res_35686] = x_35681;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    if (local_tid_44629 == 0) {
        ((__global int32_t *) mem_43613)[gtid_35570] = defunc_0_f_res_35676;
    }
    ((__global float *) mem_43616)[gtid_35570 * N_28247 +
                                   sext_i32_i64(local_tid_44629)] = ((__local
                                                                      float *) mem_43608)[sext_i32_i64(local_tid_44629)];
    barrier(CLK_LOCAL_MEM_FENCE);
    ((__global int32_t *) mem_43619)[gtid_35570 * N_28247 +
                                     sext_i32_i64(local_tid_44629)] = ((__local
                                                                        int32_t *) mem_43610)[sext_i32_i64(local_tid_44629)];
    barrier(CLK_LOCAL_MEM_FENCE);
    
  error_2:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_35917(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44753_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_44749_backing_aligned_1,
                                                     int64_t N_28247,
                                                     float hfrac_28253,
                                                     int64_t i32_res_28257,
                                                     int32_t k2p2_28259,
                                                     __global
                                                     unsigned char *images_mem_42841,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43638,
                                                     __global
                                                     unsigned char *mem_43685,
                                                     __global
                                                     unsigned char *mem_43687,
                                                     __global
                                                     unsigned char *mem_43689)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44753_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44753_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44749_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44749_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44743;
    int32_t local_tid_44744;
    int64_t group_sizze_44747;
    int32_t wave_sizze_44746;
    int32_t group_tid_44745;
    
    global_tid_44743 = get_global_id(0);
    local_tid_44744 = get_local_id(0);
    group_sizze_44747 = get_local_size(0);
    wave_sizze_44746 = LOCKSTEP_WIDTH;
    group_tid_44745 = get_group_id(0);
    
    int32_t phys_tid_35917;
    
    phys_tid_35917 = group_tid_44745;
    
    int32_t ltid_pre_44748;
    
    ltid_pre_44748 = local_tid_44744;
    
    int64_t gtid_35910;
    
    gtid_35910 = sext_i32_i64(group_tid_44745);
    
    int32_t defunc_0_f_res_35994;
    int64_t gtid_35913 = sext_i32_i64(ltid_pre_44748);
    int32_t phys_tid_35914 = local_tid_44744;
    __local char *red_arr_mem_44749;
    
    red_arr_mem_44749 = (__local char *) red_arr_mem_44749_backing_0;
    
    float x_35998;
    
    x_35998 = ((__global float *) images_mem_42841)[gtid_35910 * N_28247 +
                                                    gtid_35913];
    
    bool isnan_res_35999;
    
    isnan_res_35999 = futrts_isnan32(x_35998);
    
    bool cond_36000 = !isnan_res_35999;
    int32_t defunc_0_f_res_36001 = btoi_bool_i32(cond_36000);
    
    ((__local int32_t *) red_arr_mem_44749)[gtid_35913] = defunc_0_f_res_36001;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44751;
    int32_t skip_waves_44752;
    
    skip_waves_44752 = 1;
    
    int32_t x_35995;
    int32_t x_35996;
    
    offset_44751 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44744, sext_i64_i32(i32_res_28257))) {
            x_35995 = ((__local
                        int32_t *) red_arr_mem_44749)[sext_i32_i64(local_tid_44744 +
                                                      offset_44751)];
        }
    }
    offset_44751 = 1;
    while (slt32(offset_44751, wave_sizze_44746)) {
        if (slt32(local_tid_44744 + offset_44751,
                  sext_i64_i32(i32_res_28257)) && ((local_tid_44744 -
                                                    squot32(local_tid_44744,
                                                            wave_sizze_44746) *
                                                    wave_sizze_44746) & (2 *
                                                                         offset_44751 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_35996 = ((volatile __local
                            int32_t *) red_arr_mem_44749)[sext_i32_i64(local_tid_44744 +
                                                          offset_44751)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_35997 = add32(x_35995, x_35996);
                
                x_35995 = defunc_1_op_res_35997;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44749)[sext_i32_i64(local_tid_44744)] =
                    x_35995;
            }
        }
        offset_44751 *= 2;
    }
    while (slt32(skip_waves_44752, squot32(sext_i64_i32(i32_res_28257) +
                                           wave_sizze_44746 - 1,
                                           wave_sizze_44746))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44751 = skip_waves_44752 * wave_sizze_44746;
        if (slt32(local_tid_44744 + offset_44751,
                  sext_i64_i32(i32_res_28257)) && ((local_tid_44744 -
                                                    squot32(local_tid_44744,
                                                            wave_sizze_44746) *
                                                    wave_sizze_44746) == 0 &&
                                                   (squot32(local_tid_44744,
                                                            wave_sizze_44746) &
                                                    (2 * skip_waves_44752 -
                                                     1)) == 0)) {
            // read array element
            {
                x_35996 = ((__local
                            int32_t *) red_arr_mem_44749)[sext_i32_i64(local_tid_44744 +
                                                          offset_44751)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_35997 = add32(x_35995, x_35996);
                
                x_35995 = defunc_1_op_res_35997;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44749)[sext_i32_i64(local_tid_44744)] =
                    x_35995;
            }
        }
        skip_waves_44752 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_35994 = ((__local int32_t *) red_arr_mem_44749)[(int64_t) 0];
    
    float defunc_0_f_res_36002;
    int64_t gtid_35915 = sext_i32_i64(ltid_pre_44748);
    int32_t phys_tid_35916 = local_tid_44744;
    __local char *red_arr_mem_44753;
    
    red_arr_mem_44753 = (__local char *) red_arr_mem_44753_backing_1;
    
    int32_t index_primexp_40925;
    
    index_primexp_40925 = sext_i64_i32(gtid_35915);
    
    bool cond_36007 = slt32(index_primexp_40925, defunc_0_f_res_35994);
    float defunc_0_f_res_36008;
    
    if (cond_36007) {
        int64_t i_36009 = sext_i32_i64(index_primexp_40925);
        float defunc_0_f_res_t_res_36010 = ((__global
                                             float *) defunc_4_map_res_mem_43638)[gtid_35910 *
                                                                                  N_28247 +
                                                                                  i_36009];
        
        defunc_0_f_res_36008 = defunc_0_f_res_t_res_36010;
    } else {
        defunc_0_f_res_36008 = 0.0F;
    }
    
    float defunc_0_f_res_36011 = defunc_0_f_res_36008 * defunc_0_f_res_36008;
    
    ((__local float *) red_arr_mem_44753)[gtid_35915] = defunc_0_f_res_36011;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44755;
    int32_t skip_waves_44756;
    
    skip_waves_44756 = 1;
    
    float x_36003;
    float x_36004;
    
    offset_44755 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44744, sext_i64_i32(i32_res_28257))) {
            x_36003 = ((__local
                        float *) red_arr_mem_44753)[sext_i32_i64(local_tid_44744 +
                                                    offset_44755)];
        }
    }
    offset_44755 = 1;
    while (slt32(offset_44755, wave_sizze_44746)) {
        if (slt32(local_tid_44744 + offset_44755,
                  sext_i64_i32(i32_res_28257)) && ((local_tid_44744 -
                                                    squot32(local_tid_44744,
                                                            wave_sizze_44746) *
                                                    wave_sizze_44746) & (2 *
                                                                         offset_44755 -
                                                                         1)) ==
            0) {
            // read array element
            {
                x_36004 = ((volatile __local
                            float *) red_arr_mem_44753)[sext_i32_i64(local_tid_44744 +
                                                        offset_44755)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_36005 = x_36003 + x_36004;
                
                x_36003 = defunc_1_op_res_36005;
            }
            // write result of operation
            {
                ((volatile __local
                  float *) red_arr_mem_44753)[sext_i32_i64(local_tid_44744)] =
                    x_36003;
            }
        }
        offset_44755 *= 2;
    }
    while (slt32(skip_waves_44756, squot32(sext_i64_i32(i32_res_28257) +
                                           wave_sizze_44746 - 1,
                                           wave_sizze_44746))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44755 = skip_waves_44756 * wave_sizze_44746;
        if (slt32(local_tid_44744 + offset_44755,
                  sext_i64_i32(i32_res_28257)) && ((local_tid_44744 -
                                                    squot32(local_tid_44744,
                                                            wave_sizze_44746) *
                                                    wave_sizze_44746) == 0 &&
                                                   (squot32(local_tid_44744,
                                                            wave_sizze_44746) &
                                                    (2 * skip_waves_44756 -
                                                     1)) == 0)) {
            // read array element
            {
                x_36004 = ((__local
                            float *) red_arr_mem_44753)[sext_i32_i64(local_tid_44744 +
                                                        offset_44755)];
            }
            // apply reduction operation
            {
                float defunc_1_op_res_36005 = x_36003 + x_36004;
                
                x_36003 = defunc_1_op_res_36005;
            }
            // write result of operation
            {
                ((__local
                  float *) red_arr_mem_44753)[sext_i32_i64(local_tid_44744)] =
                    x_36003;
            }
        }
        skip_waves_44756 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    defunc_0_f_res_36002 = ((__local float *) red_arr_mem_44753)[(int64_t) 0];
    
    int32_t r32_arg_36012 = sub32(defunc_0_f_res_35994, k2p2_28259);
    float i32_res_36013 = sitofp_i32_f32(r32_arg_36012);
    float sqrt_arg_36014 = defunc_0_f_res_36002 / i32_res_36013;
    float sqrt_res_36015;
    
    sqrt_res_36015 = futrts_sqrt32(sqrt_arg_36014);
    
    float i32_res_36016 = sitofp_i32_f32(defunc_0_f_res_35994);
    float t32_arg_36017 = hfrac_28253 * i32_res_36016;
    int32_t f32_res_36018 = fptosi_f32_i32(t32_arg_36017);
    
    if (local_tid_44744 == 0) {
        ((__global int32_t *) mem_43685)[gtid_35910] = f32_res_36018;
    }
    if (local_tid_44744 == 0) {
        ((__global int32_t *) mem_43687)[gtid_35910] = defunc_0_f_res_35994;
    }
    if (local_tid_44744 == 0) {
        ((__global float *) mem_43689)[gtid_35910] = sqrt_res_36015;
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_36895(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45036_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45034_backing_aligned_1,
                                                     __local volatile
                                                     int64_t *red_arr_mem_45032_backing_aligned_2,
                                                     __local volatile
                                                     int64_t *mem_43789_backing_aligned_3,
                                                     int64_t N_28247,
                                                     int32_t n_28251,
                                                     int64_t iota32_arg_28643,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43637,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43638,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43639,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43704,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43705,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43706,
                                                     __global
                                                     unsigned char *defunc_0_f_res_mem_43739,
                                                     __global
                                                     unsigned char *mem_43744,
                                                     __global
                                                     unsigned char *mem_43792,
                                                     __global
                                                     unsigned char *mem_43794)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45036_backing_3 =
                          (__local volatile
                           char *) red_arr_mem_45036_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45034_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45034_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45032_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45032_backing_aligned_2;
    __local volatile char *restrict mem_43789_backing_0 = (__local volatile
                                                           char *) mem_43789_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45015;
    int32_t local_tid_45016;
    int64_t group_sizze_45019;
    int32_t wave_sizze_45018;
    int32_t group_tid_45017;
    
    global_tid_45015 = get_global_id(0);
    local_tid_45016 = get_local_id(0);
    group_sizze_45019 = get_local_size(0);
    wave_sizze_45018 = LOCKSTEP_WIDTH;
    group_tid_45017 = get_group_id(0);
    
    int32_t phys_tid_36895;
    
    phys_tid_36895 = group_tid_45017;
    
    int32_t ltid_pre_45020;
    
    ltid_pre_45020 = local_tid_45016;
    
    int64_t gtid_36888;
    
    gtid_36888 = sext_i32_i64(group_tid_45017);
    
    int32_t x_37114;
    
    x_37114 = ((__global int32_t *) defunc_4_map_res_mem_43637)[gtid_36888];
    
    int32_t x_37115 = ((__global
                        int32_t *) defunc_3_map_res_mem_43705)[gtid_36888];
    float x_37116 = ((__global float *) defunc_3_map_res_mem_43706)[gtid_36888];
    int32_t x_37117 = ((__global
                        int32_t *) defunc_3_map_res_mem_43704)[gtid_36888];
    float x_37118 = ((__global float *) defunc_0_f_res_mem_43739)[gtid_36888];
    int32_t y_37121 = sub32(x_37114, x_37115);
    float i32_res_37122 = sitofp_i32_f32(x_37115);
    float sqrt_res_37123;
    
    sqrt_res_37123 = futrts_sqrt32(i32_res_37122);
    
    float y_37124 = x_37116 * sqrt_res_37123;
    __local char *mem_43789;
    
    mem_43789 = (__local char *) mem_43789_backing_0;
    
    int64_t gtid_36891 = sext_i32_i64(ltid_pre_45020);
    int32_t phys_tid_36892 = local_tid_45016;
    int32_t index_primexp_40943 = sext_i64_i32(gtid_36891);
    bool cond_37137 = sle32(y_37121, index_primexp_40943);
    float defunc_0_f_res_37138;
    
    if (cond_37137) {
        defunc_0_f_res_37138 = 0.0F;
    } else {
        bool cond_37139 = index_primexp_40943 == 0;
        float defunc_0_f_res_f_res_37140;
        
        if (cond_37139) {
            defunc_0_f_res_f_res_37140 = x_37118;
        } else {
            int32_t i_37141 = add32(x_37115, index_primexp_40943);
            int64_t i_37142 = sext_i32_i64(i_37141);
            float x_37143 = ((__global
                              float *) defunc_4_map_res_mem_43638)[gtid_36888 *
                                                                   N_28247 +
                                                                   i_37142];
            int32_t x_37144 = sub32(x_37115, x_37117);
            int32_t i_37145 = add32(x_37144, index_primexp_40943);
            int64_t i_37146 = sext_i32_i64(i_37145);
            float y_37147 = ((__global
                              float *) defunc_4_map_res_mem_43638)[gtid_36888 *
                                                                   N_28247 +
                                                                   i_37146];
            float defunc_0_f_res_f_res_f_res_37148 = x_37143 - y_37147;
            
            defunc_0_f_res_f_res_37140 = defunc_0_f_res_f_res_f_res_37148;
        }
        defunc_0_f_res_37138 = defunc_0_f_res_f_res_37140;
    }
    ((__local float *) mem_43789)[gtid_36891] = defunc_0_f_res_37138;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t dims_flat_45021;
    
    dims_flat_45021 = iota32_arg_28643;
    
    float x_37133;
    float x_37134;
    float x_45023;
    float x_45024;
    bool ltid_in_bounds_45026;
    
    ltid_in_bounds_45026 = slt64(sext_i32_i64(local_tid_45016),
                                 iota32_arg_28643);
    
    int32_t skip_threads_45027;
    
    // read input for in-block scan
    {
        if (ltid_in_bounds_45026) {
            x_37134 = ((volatile __local
                        float *) mem_43789)[sext_i32_i64(local_tid_45016)];
            if ((local_tid_45016 - squot32(local_tid_45016, 32) * 32) == 0) {
                x_37133 = x_37134;
            }
        }
    }
    // in-block scan (hopefully no barriers needed)
    {
        skip_threads_45027 = 1;
        while (slt32(skip_threads_45027, 32)) {
            if (sle32(skip_threads_45027, local_tid_45016 -
                      squot32(local_tid_45016, 32) * 32) &&
                ltid_in_bounds_45026) {
                // read operands
                {
                    x_37133 = ((volatile __local
                                float *) mem_43789)[sext_i32_i64(local_tid_45016) -
                                                    sext_i32_i64(skip_threads_45027)];
                }
                // perform operation
                {
                    bool inactive_45028 =
                         slt64(srem64(sext_i32_i64(local_tid_45016),
                                      iota32_arg_28643),
                               sext_i32_i64(local_tid_45016) -
                               sext_i32_i64(local_tid_45016 -
                               skip_threads_45027));
                    
                    if (inactive_45028) {
                        x_37133 = x_37134;
                    }
                    if (!inactive_45028) {
                        float defunc_1_op_res_37135 = x_37133 + x_37134;
                        
                        x_37133 = defunc_1_op_res_37135;
                    }
                }
            }
            if (sle32(wave_sizze_45018, skip_threads_45027)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            if (sle32(skip_threads_45027, local_tid_45016 -
                      squot32(local_tid_45016, 32) * 32) &&
                ltid_in_bounds_45026) {
                // write result
                {
                    ((volatile __local
                      float *) mem_43789)[sext_i32_i64(local_tid_45016)] =
                        x_37133;
                    x_37134 = x_37133;
                }
            }
            if (sle32(wave_sizze_45018, skip_threads_45027)) {
                barrier(CLK_LOCAL_MEM_FENCE);
            }
            skip_threads_45027 *= 2;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // last thread of block 'i' writes its result to offset 'i'
    {
        if ((local_tid_45016 - squot32(local_tid_45016, 32) * 32) == 31 &&
            ltid_in_bounds_45026) {
            ((volatile __local
              float *) mem_43789)[sext_i32_i64(squot32(local_tid_45016, 32))] =
                x_37133;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
    {
        int32_t skip_threads_45029;
        
        // read input for in-block scan
        {
            if (squot32(local_tid_45016, 32) == 0 && ltid_in_bounds_45026) {
                x_45024 = ((volatile __local
                            float *) mem_43789)[sext_i32_i64(local_tid_45016)];
                if ((local_tid_45016 - squot32(local_tid_45016, 32) * 32) ==
                    0) {
                    x_45023 = x_45024;
                }
            }
        }
        // in-block scan (hopefully no barriers needed)
        {
            skip_threads_45029 = 1;
            while (slt32(skip_threads_45029, 32)) {
                if (sle32(skip_threads_45029, local_tid_45016 -
                          squot32(local_tid_45016, 32) * 32) &&
                    (squot32(local_tid_45016, 32) == 0 &&
                     ltid_in_bounds_45026)) {
                    // read operands
                    {
                        x_45023 = ((volatile __local
                                    float *) mem_43789)[sext_i32_i64(local_tid_45016) -
                                                        sext_i32_i64(skip_threads_45029)];
                    }
                    // perform operation
                    {
                        bool inactive_45030 =
                             slt64(srem64(sext_i32_i64(local_tid_45016 * 32 +
                                          32 - 1), iota32_arg_28643),
                                   sext_i32_i64(local_tid_45016 * 32 + 32 - 1) -
                                   sext_i32_i64((local_tid_45016 -
                                                 skip_threads_45029) * 32 + 32 -
                                   1));
                        
                        if (inactive_45030) {
                            x_45023 = x_45024;
                        }
                        if (!inactive_45030) {
                            float defunc_1_op_res_45025 = x_45023 + x_45024;
                            
                            x_45023 = defunc_1_op_res_45025;
                        }
                    }
                }
                if (sle32(wave_sizze_45018, skip_threads_45029)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                if (sle32(skip_threads_45029, local_tid_45016 -
                          squot32(local_tid_45016, 32) * 32) &&
                    (squot32(local_tid_45016, 32) == 0 &&
                     ltid_in_bounds_45026)) {
                    // write result
                    {
                        ((volatile __local
                          float *) mem_43789)[sext_i32_i64(local_tid_45016)] =
                            x_45023;
                        x_45024 = x_45023;
                    }
                }
                if (sle32(wave_sizze_45018, skip_threads_45029)) {
                    barrier(CLK_LOCAL_MEM_FENCE);
                }
                skip_threads_45029 *= 2;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // carry-in for every block except the first
    {
        if (!(squot32(local_tid_45016, 32) == 0 || !ltid_in_bounds_45026)) {
            // read operands
            {
                x_37134 = x_37133;
                x_37133 = ((__local
                            float *) mem_43789)[sext_i32_i64(squot32(local_tid_45016,
                                                                     32)) -
                                                (int64_t) 1];
            }
            // perform operation
            {
                bool inactive_45031 =
                     slt64(srem64(sext_i32_i64(local_tid_45016),
                                  iota32_arg_28643),
                           sext_i32_i64(local_tid_45016) -
                           sext_i32_i64(squot32(local_tid_45016, 32) * 32 - 1));
                
                if (inactive_45031) {
                    x_37133 = x_37134;
                }
                if (!inactive_45031) {
                    float defunc_1_op_res_37135 = x_37133 + x_37134;
                    
                    x_37133 = defunc_1_op_res_37135;
                }
            }
            // write final result
            {
                ((__local float *) mem_43789)[sext_i32_i64(local_tid_45016)] =
                    x_37133;
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // restore correct values for first block
    {
        if (squot32(local_tid_45016, 32) == 0) {
            ((__local float *) mem_43789)[sext_i32_i64(local_tid_45016)] =
                x_37134;
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    bool acc0_37154;
    int32_t acc0_37155;
    float acc0_37156;
    int64_t gtid_36893 = sext_i32_i64(ltid_pre_45020);
    int32_t phys_tid_36894 = local_tid_45016;
    __local char *red_arr_mem_45032;
    
    red_arr_mem_45032 = (__local char *) red_arr_mem_45032_backing_1;
    
    __local char *red_arr_mem_45034;
    
    red_arr_mem_45034 = (__local char *) red_arr_mem_45034_backing_2;
    
    __local char *red_arr_mem_45036;
    
    red_arr_mem_45036 = (__local char *) red_arr_mem_45036_backing_3;
    
    float x_37171;
    
    x_37171 = ((__local float *) mem_43789)[gtid_36893];
    
    float x_37172 = ((__global float *) mem_43744)[gtid_36893];
    int32_t index_primexp_40946 = sext_i64_i32(gtid_36893);
    float defunc_0_f_res_37175 = x_37171 / y_37124;
    bool cond_37176 = slt32(index_primexp_40946, y_37121);
    bool isnan_res_37177;
    
    isnan_res_37177 = futrts_isnan32(defunc_0_f_res_37175);
    
    bool cond_t_res_37178 = !isnan_res_37177;
    bool x_37179 = cond_37176 && cond_t_res_37178;
    float abs_res_37180 = (float) fabs(defunc_0_f_res_37175);
    bool defunc_2_f_res_t_res_37181 = x_37172 < abs_res_37180;
    bool x_37182 = x_37179 && defunc_2_f_res_t_res_37181;
    float defunc_1_f_res_37183;
    
    if (cond_37176) {
        defunc_1_f_res_37183 = defunc_0_f_res_37175;
    } else {
        defunc_1_f_res_37183 = 0.0F;
    }
    ((__local bool *) red_arr_mem_45032)[gtid_36893] = x_37182;
    ((__local int32_t *) red_arr_mem_45034)[gtid_36893] = index_primexp_40946;
    ((__local float *) red_arr_mem_45036)[gtid_36893] = defunc_1_f_res_37183;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_45038;
    int32_t skip_waves_45039;
    
    skip_waves_45039 = 1;
    
    bool x_37157;
    int32_t x_37158;
    float x_37159;
    bool x_37160;
    int32_t x_37161;
    float x_37162;
    
    offset_45038 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_45016, sext_i64_i32(iota32_arg_28643))) {
            x_37157 = ((__local
                        bool *) red_arr_mem_45032)[sext_i32_i64(local_tid_45016 +
                                                   offset_45038)];
            x_37158 = ((__local
                        int32_t *) red_arr_mem_45034)[sext_i32_i64(local_tid_45016 +
                                                      offset_45038)];
            x_37159 = ((__local
                        float *) red_arr_mem_45036)[sext_i32_i64(local_tid_45016 +
                                                    offset_45038)];
        }
    }
    offset_45038 = 1;
    while (slt32(offset_45038, wave_sizze_45018)) {
        if (slt32(local_tid_45016 + offset_45038,
                  sext_i64_i32(iota32_arg_28643)) && ((local_tid_45016 -
                                                       squot32(local_tid_45016,
                                                               wave_sizze_45018) *
                                                       wave_sizze_45018) & (2 *
                                                                            offset_45038 -
                                                                            1)) ==
            0) {
            // read array element
            {
                x_37160 = ((volatile __local
                            bool *) red_arr_mem_45032)[sext_i32_i64(local_tid_45016 +
                                                       offset_45038)];
                x_37161 = ((volatile __local
                            int32_t *) red_arr_mem_45034)[sext_i32_i64(local_tid_45016 +
                                                          offset_45038)];
                x_37162 = ((volatile __local
                            float *) red_arr_mem_45036)[sext_i32_i64(local_tid_45016 +
                                                        offset_45038)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_37163;
                int32_t defunc_1_op_res_37164;
                
                if (x_37157) {
                    defunc_1_op_res_37163 = x_37157;
                    defunc_1_op_res_37164 = x_37158;
                } else {
                    bool x_37165 = x_37160 && x_37160;
                    bool x_37166 = !x_37160;
                    bool y_37167 = x_37157 && x_37166;
                    bool defunc_1_op_res_f_res_37168 = x_37165 || y_37167;
                    int32_t defunc_1_op_res_f_res_37169;
                    
                    if (x_37160) {
                        defunc_1_op_res_f_res_37169 = x_37161;
                    } else {
                        defunc_1_op_res_f_res_37169 = x_37158;
                    }
                    defunc_1_op_res_37163 = defunc_1_op_res_f_res_37168;
                    defunc_1_op_res_37164 = defunc_1_op_res_f_res_37169;
                }
                
                float defunc_1_op_res_37170 = x_37159 + x_37162;
                
                x_37157 = defunc_1_op_res_37163;
                x_37158 = defunc_1_op_res_37164;
                x_37159 = defunc_1_op_res_37170;
            }
            // write result of operation
            {
                ((volatile __local
                  bool *) red_arr_mem_45032)[sext_i32_i64(local_tid_45016)] =
                    x_37157;
                ((volatile __local
                  int32_t *) red_arr_mem_45034)[sext_i32_i64(local_tid_45016)] =
                    x_37158;
                ((volatile __local
                  float *) red_arr_mem_45036)[sext_i32_i64(local_tid_45016)] =
                    x_37159;
            }
        }
        offset_45038 *= 2;
    }
    while (slt32(skip_waves_45039, squot32(sext_i64_i32(iota32_arg_28643) +
                                           wave_sizze_45018 - 1,
                                           wave_sizze_45018))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_45038 = skip_waves_45039 * wave_sizze_45018;
        if (slt32(local_tid_45016 + offset_45038,
                  sext_i64_i32(iota32_arg_28643)) && ((local_tid_45016 -
                                                       squot32(local_tid_45016,
                                                               wave_sizze_45018) *
                                                       wave_sizze_45018) == 0 &&
                                                      (squot32(local_tid_45016,
                                                               wave_sizze_45018) &
                                                       (2 * skip_waves_45039 -
                                                        1)) == 0)) {
            // read array element
            {
                x_37160 = ((__local
                            bool *) red_arr_mem_45032)[sext_i32_i64(local_tid_45016 +
                                                       offset_45038)];
                x_37161 = ((__local
                            int32_t *) red_arr_mem_45034)[sext_i32_i64(local_tid_45016 +
                                                          offset_45038)];
                x_37162 = ((__local
                            float *) red_arr_mem_45036)[sext_i32_i64(local_tid_45016 +
                                                        offset_45038)];
            }
            // apply reduction operation
            {
                bool defunc_1_op_res_37163;
                int32_t defunc_1_op_res_37164;
                
                if (x_37157) {
                    defunc_1_op_res_37163 = x_37157;
                    defunc_1_op_res_37164 = x_37158;
                } else {
                    bool x_37165 = x_37160 && x_37160;
                    bool x_37166 = !x_37160;
                    bool y_37167 = x_37157 && x_37166;
                    bool defunc_1_op_res_f_res_37168 = x_37165 || y_37167;
                    int32_t defunc_1_op_res_f_res_37169;
                    
                    if (x_37160) {
                        defunc_1_op_res_f_res_37169 = x_37161;
                    } else {
                        defunc_1_op_res_f_res_37169 = x_37158;
                    }
                    defunc_1_op_res_37163 = defunc_1_op_res_f_res_37168;
                    defunc_1_op_res_37164 = defunc_1_op_res_f_res_37169;
                }
                
                float defunc_1_op_res_37170 = x_37159 + x_37162;
                
                x_37157 = defunc_1_op_res_37163;
                x_37158 = defunc_1_op_res_37164;
                x_37159 = defunc_1_op_res_37170;
            }
            // write result of operation
            {
                ((__local
                  bool *) red_arr_mem_45032)[sext_i32_i64(local_tid_45016)] =
                    x_37157;
                ((__local
                  int32_t *) red_arr_mem_45034)[sext_i32_i64(local_tid_45016)] =
                    x_37158;
                ((__local
                  float *) red_arr_mem_45036)[sext_i32_i64(local_tid_45016)] =
                    x_37159;
            }
        }
        skip_waves_45039 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    acc0_37154 = ((__local bool *) red_arr_mem_45032)[(int64_t) 0];
    acc0_37155 = ((__local int32_t *) red_arr_mem_45034)[(int64_t) 0];
    acc0_37156 = ((__local float *) red_arr_mem_45036)[(int64_t) 0];
    
    bool x_37186 = acc0_37154 && acc0_37154;
    int32_t defunc_1_op_res_f_res_37190;
    
    if (acc0_37154) {
        defunc_1_op_res_f_res_37190 = acc0_37155;
    } else {
        defunc_1_op_res_f_res_37190 = -1;
    }
    
    bool cond_37196 = y_37121 == 0;
    float defunc_0_f_res_37197;
    
    if (cond_37196) {
        defunc_0_f_res_37197 = 0.0F;
    } else {
        float i32_res_37198 = sitofp_i32_f32(y_37121);
        float defunc_0_f_res_f_res_37199 = acc0_37156 / i32_res_37198;
        
        defunc_0_f_res_37197 = defunc_0_f_res_f_res_37199;
    }
    
    bool cond_37200 = !x_37186;
    int32_t fst_breakzq_37201;
    
    if (cond_37200) {
        fst_breakzq_37201 = -1;
    } else {
        bool cond_37202 = slt32(defunc_1_op_res_f_res_37190, y_37121);
        int32_t adjustValInds_res_37203;
        
        if (cond_37202) {
            int32_t i_37204 = add32(x_37115, defunc_1_op_res_f_res_37190);
            int64_t i_37205 = sext_i32_i64(i_37204);
            int32_t x_37206 = ((__global
                                int32_t *) defunc_4_map_res_mem_43639)[gtid_36888 *
                                                                       N_28247 +
                                                                       i_37205];
            int32_t adjustValInds_res_t_res_37207 = sub32(x_37206, n_28251);
            
            adjustValInds_res_37203 = adjustValInds_res_t_res_37207;
        } else {
            adjustValInds_res_37203 = -1;
        }
        fst_breakzq_37201 = adjustValInds_res_37203;
    }
    
    bool cond_37208 = sle32(x_37115, 5);
    bool cond_f_res_37209 = sle32(y_37121, 5);
    bool x_37210 = !cond_37208;
    bool y_37211 = cond_f_res_37209 && x_37210;
    bool cond_37212 = cond_37208 || y_37211;
    int32_t fst_breakzq_37213;
    
    if (cond_37212) {
        fst_breakzq_37213 = -2;
    } else {
        fst_breakzq_37213 = fst_breakzq_37201;
    }
    if (local_tid_45016 == 0) {
        ((__global int32_t *) mem_43792)[gtid_36888] = fst_breakzq_37213;
    }
    if (local_tid_45016 == 0) {
        ((__global float *) mem_43794)[gtid_36888] = defunc_0_f_res_37197;
    }
    
  error_3:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_41060(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_42940_backing_aligned_0,
                                                     int64_t m_28248,
                                                     int32_t n_28251,
                                                     int64_t i32_res_28263,
                                                     int64_t Ty_41048,
                                                     int64_t Tx_41049,
                                                     int64_t gridDim_x_41050,
                                                     int64_t gridDim_y_41051,
                                                     int64_t group_sizze_tile3d_41055,
                                                     int64_t count_shmem_41056,
                                                     __global
                                                     unsigned char *mem_42853,
                                                     __global
                                                     unsigned char *mem_42857,
                                                     __global
                                                     unsigned char *mem_42928,
                                                     __global
                                                     unsigned char *mem_42988)
{
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_42940_backing_0 = (__local volatile
                                                           char *) mem_42940_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44113;
    int32_t local_tid_44114;
    int64_t group_sizze_44117;
    int32_t wave_sizze_44116;
    int32_t group_tid_44115;
    
    global_tid_44113 = get_global_id(0);
    local_tid_44114 = get_local_id(0);
    group_sizze_44117 = get_local_size(0);
    wave_sizze_44116 = LOCKSTEP_WIDTH;
    group_tid_44115 = get_group_id(0);
    
    int32_t gid_flat_41060;
    
    gid_flat_41060 = group_tid_44115;
    
    int32_t ltid_pre_44118;
    
    ltid_pre_44118 = squot32(local_tid_44114, sext_i64_i32(Ty_41048) *
                             sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44119;
    
    ltid_pre_44119 = squot32(local_tid_44114 - squot32(local_tid_44114,
                                                       sext_i64_i32(Ty_41048) *
                                                       sext_i64_i32(Tx_41049)) *
                             (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)),
                             sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44120;
    
    ltid_pre_44120 = local_tid_44114 - squot32(local_tid_44114,
                                               sext_i64_i32(Ty_41048) *
                                               sext_i64_i32(Tx_41049)) *
        (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)) -
        squot32(local_tid_44114 - squot32(local_tid_44114,
                                          sext_i64_i32(Ty_41048) *
                                          sext_i64_i32(Tx_41049)) *
                (sext_i64_i32(Ty_41048) * sext_i64_i32(Tx_41049)),
                sext_i64_i32(Tx_41049)) * sext_i64_i32(Tx_41049);
    
    int32_t ltid_pre_44121;
    
    ltid_pre_44121 = squot32(local_tid_44114, sext_i64_i32(Tx_41049));
    
    int32_t ltid_pre_44122;
    
    ltid_pre_44122 = local_tid_44114 - squot32(local_tid_44114,
                                               sext_i64_i32(Tx_41049)) *
        sext_i64_i32(Tx_41049);
    
    int32_t ltid_pre_44123;
    
    ltid_pre_44123 = local_tid_44114;
    
    int64_t gid_zz_41059;
    
    gid_zz_41059 = squot64(sext_i32_i64(group_tid_44115), gridDim_y_41051 *
                           gridDim_x_41050);
    
    int64_t gid_y_41058;
    
    gid_y_41058 = squot64(sext_i32_i64(group_tid_44115) -
                          squot64(sext_i32_i64(group_tid_44115),
                                  gridDim_y_41051 * gridDim_x_41050) *
                          (gridDim_y_41051 * gridDim_x_41050), gridDim_x_41050);
    
    int64_t gid_x_41057;
    
    gid_x_41057 = sext_i32_i64(group_tid_44115) -
        squot64(sext_i32_i64(group_tid_44115), gridDim_y_41051 *
                gridDim_x_41050) * (gridDim_y_41051 * gridDim_x_41050) -
        squot64(sext_i32_i64(group_tid_44115) -
                squot64(sext_i32_i64(group_tid_44115), gridDim_y_41051 *
                        gridDim_x_41050) * (gridDim_y_41051 * gridDim_x_41050),
                gridDim_x_41050) * gridDim_x_41050;
    
    int64_t ii_41061;
    
    ii_41061 = (int64_t) 30 * gid_zz_41059;
    
    int64_t jj1_41062 = Ty_41048 * gid_y_41058;
    int64_t jj2_41063 = Tx_41049 * gid_x_41057;
    float mem_42938[30];
    int64_t ltid_y_41066 = sext_i32_i64(ltid_pre_44121);
    int64_t ltid_x_41064 = sext_i32_i64(ltid_pre_44122);
    int32_t ltid_flat_41065 = local_tid_44114;
    float mem_42932[30];
    
    for (int32_t i_42757 = 0; i_42757 < 30; i_42757++) {
        int64_t i_41074 = sext_i32_i64(i_42757);
        
        mem_42932[i_41074] = 0.0F;
    }
    for (int64_t i_44125 = 0; i_44125 < (int64_t) 30; i_44125++) {
        mem_42938[i_44125] = mem_42932[i_44125];
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_42940;
    
    mem_42940 = (__local char *) mem_42940_backing_0;
    
    float loop_mem_42970[30];
    float mem_param_42941[30];
    
    for (int32_t i_1 = 0; i_1 < 30; i_1++)
        mem_param_42941[i_1] = mem_42938[i_1];
    for (int32_t i_42759 = 0; i_42759 < n_28251; i_42759++) {
        int64_t i_41079 = sext_i32_i64(i_42759);
        
        for (int64_t i_41082 = 0; i_41082 < count_shmem_41056; i_41082++) {
            int64_t offs_41095 = group_sizze_tile3d_41055 * i_41082;
            int64_t ltid_41085 = sext_i32_i64(ltid_pre_44123);
            int32_t ltid_flat_41084 = local_tid_44114;
            int64_t loc_ind_41096 = ltid_41085 + offs_41095;
            int64_t gtid_41097 = ii_41061 + loc_ind_41096;
            bool cond_41098 = slt64(gtid_41097, m_28248);
            float y_elem_41099;
            
            if (cond_41098) {
                float Y_elem_41101 = ((__global float *) mem_42928)[i_41079 *
                                                                    m_28248 +
                                                                    gtid_41097];
                
                y_elem_41099 = Y_elem_41101;
            } else {
                y_elem_41099 = 0.0F;
            }
            
            bool cond_41103 = slt64(loc_ind_41096, (int64_t) 30);
            int64_t y_loc_ind_41104;
            
            if (cond_41103) {
                y_loc_ind_41104 = loc_ind_41096;
            } else {
                y_loc_ind_41104 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, y_loc_ind_41104) && slt64(y_loc_ind_41104,
                                                             (int64_t) 30)) {
                ((__local float *) mem_42940)[y_loc_ind_41104] = y_elem_41099;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
        
        float mem_42969[30];
        int64_t ltid_y_41110 = sext_i32_i64(ltid_pre_44121);
        int64_t ltid_x_41108 = sext_i32_i64(ltid_pre_44122);
        int32_t ltid_flat_41109 = local_tid_44114;
        int64_t gtid_41137 = jj1_41062 + ltid_y_41110;
        int64_t gtid_41138 = jj2_41063 + ltid_x_41108;
        bool binop_x_41140 = slt64(gtid_41137, i32_res_28263);
        bool binop_y_41141 = slt64(gtid_41138, i32_res_28263);
        bool cond_41142 = binop_x_41140 && binop_y_41141;
        float mem_43846[30];
        
        if (cond_41142) {
            float x_41145 = ((__global float *) mem_42853)[i_41079 *
                                                           i32_res_28263 +
                                                           gtid_41137];
            float x_41147 = ((__global float *) mem_42857)[i_41079 *
                                                           i32_res_28263 +
                                                           gtid_41138];
            
            for (int32_t i_42758 = 0; i_42758 < 30; i_42758++) {
                int64_t i_41149 = sext_i32_i64(i_42758);
                int64_t gtid_41151 = ii_41061 + i_41149;
                bool cond_41152 = slt64(gtid_41151, m_28248);
                
                if (cond_41152) {
                    float inp_reg_var2zz_41154 = ((__local
                                                   float *) mem_42940)[i_41149];
                    float res_reg_var2zz_41155 = mem_param_42941[i_41149];
                    float x_41159 = x_41145 * x_41147;
                    bool isnan_res_41160;
                    
                    isnan_res_41160 = futrts_isnan32(inp_reg_var2zz_41154);
                    
                    float y_41161;
                    
                    if (isnan_res_41160) {
                        y_41161 = 0.0F;
                    } else {
                        y_41161 = 1.0F;
                    }
                    
                    float defunc_2_f_res_41162 = x_41159 * y_41161;
                    float defunc_1_op_res_41166 = res_reg_var2zz_41155 +
                          defunc_2_f_res_41162;
                    
                    mem_param_42941[i_41149] = defunc_1_op_res_41166;
                }
            }
            for (int64_t i_44131 = 0; i_44131 < (int64_t) 30; i_44131++) {
                mem_43846[i_44131] = mem_param_42941[i_44131];
            }
        } else {
            for (int64_t i_44132 = 0; i_44132 < (int64_t) 30; i_44132++) {
                mem_43846[i_44132] = mem_param_42941[i_44132];
            }
        }
        for (int64_t i_44133 = 0; i_44133 < (int64_t) 30; i_44133++) {
            mem_42969[i_44133] = mem_43846[i_44133];
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44126[30];
        
        for (int32_t i_2 = 0; i_2 < 30; i_2++)
            mem_param_tmp_44126[i_2] = mem_42969[i_2];
        for (int32_t i_3 = 0; i_3 < 30; i_3++)
            mem_param_42941[i_3] = mem_param_tmp_44126[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 30; i_4++)
        loop_mem_42970[i_4] = mem_param_42941[i_4];
    
    float mem_42984[30 * 1 * 1];
    int64_t ltid_zz_41175 = sext_i32_i64(ltid_pre_44118);
    int64_t ltid_y_41174 = sext_i32_i64(ltid_pre_44119);
    int64_t ltid_x_41172 = sext_i32_i64(ltid_pre_44120);
    int32_t ltid_flat_41173 = local_tid_44114;
    float mem_42978[30 * 1 * 1];
    
    for (int32_t i_42761 = 0; i_42761 < 30; i_42761++) {
        int64_t i_41184 = sext_i32_i64(i_42761);
        
        for (int64_t i_44135 = 0; i_44135 < (int64_t) 1; i_44135++) {
            mem_42978[i_41184 + i_44135] = loop_mem_42970[i_41184 + i_44135];
        }
    }
    for (int64_t i_44136 = 0; i_44136 < (int64_t) 30; i_44136++) {
        for (int64_t i_44137 = 0; i_44137 < (int64_t) 1; i_44137++) {
            for (int64_t i_44138 = 0; i_44138 < (int64_t) 1; i_44138++) {
                mem_42984[i_44136 + i_44137 + i_44138] = mem_42978[i_44136 +
                                                                   i_44137 +
                                                                   i_44138];
            }
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t reg_tile_i_44139 = squot64(sext_i32_i64(local_tid_44114), Ty_41048 *
                                       Tx_41049);
    int64_t reg_tile_i_44140 = squot64(sext_i32_i64(local_tid_44114) -
                                       squot64(sext_i32_i64(local_tid_44114),
                                               Ty_41048 * Tx_41049) *
                                       (Ty_41048 * Tx_41049), Tx_41049);
    int64_t reg_tile_i_44141 = sext_i32_i64(local_tid_44114) -
            squot64(sext_i32_i64(local_tid_44114), Ty_41048 * Tx_41049) *
            (Ty_41048 * Tx_41049) - squot64(sext_i32_i64(local_tid_44114) -
                                            squot64(sext_i32_i64(local_tid_44114),
                                                    Ty_41048 * Tx_41049) *
                                            (Ty_41048 * Tx_41049), Tx_41049) *
            Tx_41049;
    int64_t tile_dim_start_44142 = (int64_t) 30 * (gid_zz_41059 +
                                                   reg_tile_i_44139);
    int64_t tile_dim_start_44143 = Ty_41048 * gid_y_41058 + reg_tile_i_44140;
    int64_t tile_dim_start_44144 = Tx_41049 * gid_x_41057 + reg_tile_i_44141;
    
    for (int64_t nest_i_44145 = 0; nest_i_44145 < (int64_t) 30;
         nest_i_44145++) {
        for (int64_t nest_i_44146 = 0; nest_i_44146 < (int64_t) 1;
             nest_i_44146++) {
            for (int64_t nest_i_44147 = 0; nest_i_44147 < (int64_t) 1;
                 nest_i_44147++) {
                if ((slt64(tile_dim_start_44142 + nest_i_44145, m_28248) &&
                     slt64(tile_dim_start_44143 + nest_i_44146,
                           i32_res_28263)) && slt64(tile_dim_start_44144 +
                                                    nest_i_44147,
                                                    i32_res_28263)) {
                    ((__global float *) mem_42988)[(tile_dim_start_44142 +
                                                    nest_i_44145) *
                                                   (i32_res_28263 *
                                                    i32_res_28263) +
                                                   (tile_dim_start_44143 +
                                                    nest_i_44146) *
                                                   i32_res_28263 +
                                                   (tile_dim_start_44144 +
                                                    nest_i_44147)] =
                        mem_42984[nest_i_44145 + nest_i_44146 + nest_i_44147];
                }
            }
        }
    }
    
  error_4:
    return;
}
__kernel void mainMagnitudezisegmap_intragroup_41213(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43128_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43126_backing_aligned_1,
                                                     int64_t N_28247,
                                                     int64_t m_28248,
                                                     int64_t i32_res_28257,
                                                     int64_t i32_res_28263,
                                                     int64_t gridDim_x_41207,
                                                     int64_t full_tiles_41238,
                                                     int64_t kk_41445, __global
                                                     unsigned char *images_mem_42841,
                                                     __global
                                                     unsigned char *mem_42853,
                                                     __global
                                                     unsigned char *mem_43300)
{
    #define Ty_41194 (mainMagnitudeziTy_41191)
    #define Ry_41195 (mainMagnitudeziRy_41193)
    #define Tx_41196 (mainMagnitudeziTx_41190)
    #define Rx_41197 (mainMagnitudeziRx_41192)
    #define Tk_41198 (mainMagnitudeziTk_41189)
    #define tk_div_tx_41199 (sdiv_up64(mainMagnitudeziTk_41189, mainMagnitudeziTx_41190))
    #define tk_div_ty_41200 (sdiv_up64(mainMagnitudeziTk_41189, mainMagnitudeziTy_41191))
    #define TxRx_41201 (mainMagnitudeziTx_41190 * mainMagnitudeziRx_41192)
    #define TyRy_41202 (mainMagnitudeziTy_41191 * mainMagnitudeziRy_41193)
    #define a_loc_szz_41204 (mainMagnitudeziTk_41189 * (mainMagnitudeziTy_41191 * mainMagnitudeziRy_41193))
    #define b_loc_szz_41206 (mainMagnitudeziRx_41192 * (mainMagnitudeziTx_41190 * mainMagnitudeziTk_41189))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43128_backing_1 = (__local volatile
                                                           char *) mem_43128_backing_aligned_0;
    __local volatile char *restrict mem_43126_backing_0 = (__local volatile
                                                           char *) mem_43126_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44288;
    int32_t local_tid_44289;
    int64_t group_sizze_44292;
    int32_t wave_sizze_44291;
    int32_t group_tid_44290;
    
    global_tid_44288 = get_global_id(0);
    local_tid_44289 = get_local_id(0);
    group_sizze_44292 = get_local_size(0);
    wave_sizze_44291 = LOCKSTEP_WIDTH;
    group_tid_44290 = get_group_id(0);
    
    int32_t gid_flat_41213;
    
    gid_flat_41213 = group_tid_44290;
    
    int32_t ltid_pre_44293;
    
    ltid_pre_44293 = squot32(local_tid_44289, sext_i64_i32(Tx_41196));
    
    int32_t ltid_pre_44294;
    
    ltid_pre_44294 = local_tid_44289 - squot32(local_tid_44289,
                                               sext_i64_i32(Tx_41196)) *
        sext_i64_i32(Tx_41196);
    
    int64_t gid_y_41212;
    
    gid_y_41212 = squot64(sext_i32_i64(group_tid_44290), gridDim_x_41207);
    
    int64_t gid_x_41211;
    
    gid_x_41211 = sext_i32_i64(group_tid_44290) -
        squot64(sext_i32_i64(group_tid_44290), gridDim_x_41207) *
        gridDim_x_41207;
    
    int64_t iii_41214;
    
    iii_41214 = TyRy_41202 * gid_y_41212;
    
    int64_t jjj_41215 = TxRx_41201 * gid_x_41211;
    float mem_43124[Ry_41195 * Rx_41197];
    int64_t ltid_y_41218 = sext_i32_i64(ltid_pre_44293);
    int64_t ltid_x_41216 = sext_i32_i64(ltid_pre_44294);
    int32_t ltid_flat_41217 = local_tid_44289;
    float mem_43115[Ry_41195 * Rx_41197];
    
    for (int64_t i_41229 = 0; i_41229 < Ry_41195; i_41229++) {
        for (int64_t i_41232 = 0; i_41232 < Rx_41197; i_41232++) {
            mem_43115[i_41229 * Rx_41197 + i_41232] = 0.0F;
        }
    }
    for (int64_t i_44297 = 0; i_44297 < Ry_41195; i_44297++) {
        for (int64_t i_44298 = 0; i_44298 < Rx_41197; i_44298++) {
            mem_43124[i_44297 * Rx_41197 + i_44298] = mem_43115[i_44297 *
                                                                Rx_41197 +
                                                                i_44298];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43126;
    
    mem_43126 = (__local char *) mem_43126_backing_0;
    
    __local char *mem_43128;
    
    mem_43128 = (__local char *) mem_43128_backing_1;
    
    float mem_43199[Ry_41195];
    float mem_43203[Rx_41197];
    float loop_mem_43215[Ry_41195 * Rx_41197];
    float mem_param_43129[Ry_41195 * Rx_41197];
    
    for (int32_t i_2 = 0; i_2 < Ry_41195 * Rx_41197; i_2++)
        mem_param_43129[i_2] = mem_43124[i_2];
    for (int64_t i_41239 = 0; i_41239 < full_tiles_41238; i_41239++) {
        int64_t kk_41243 = Tk_41198 * i_41239;
        
        for (int64_t i_41244 = 0; i_41244 < Ry_41195; i_41244++) {
            int64_t binop_y_41267 = Ty_41194 * i_41244;
            
            for (int64_t i_41246 = 0; i_41246 < tk_div_tx_41199; i_41246++) {
                int64_t binop_y_41265 = Tx_41196 * i_41246;
                int64_t ltid_x_41248 = sext_i32_i64(ltid_pre_44293);
                int64_t ltid_y_41249 = sext_i32_i64(ltid_pre_44294);
                int32_t ltid_flat_41250 = local_tid_44289;
                int64_t k_41266 = ltid_y_41249 + binop_y_41265;
                int64_t i_41268 = ltid_x_41248 + binop_y_41267;
                int64_t gtid_41269 = iii_41214 + i_41268;
                int64_t A_col_idx_41270 = kk_41243 + k_41266;
                bool cond_41271 = slt64(gtid_41269, m_28248);
                float A_elem_41272;
                
                if (cond_41271) {
                    float A_elem_41274 = ((__global
                                           float *) images_mem_42841)[gtid_41269 *
                                                                      N_28247 +
                                                                      A_col_idx_41270];
                    
                    A_elem_41272 = A_elem_41274;
                } else {
                    A_elem_41272 = 0.0F;
                }
                
                bool cond_41276 = slt64(k_41266, Tk_41198);
                int64_t a_loc_ind_41277;
                
                if (cond_41276) {
                    int64_t binop_y_41278 = Tk_41198 * i_41268;
                    int64_t loc_fi_41279 = k_41266 + binop_y_41278;
                    
                    a_loc_ind_41277 = loc_fi_41279;
                } else {
                    a_loc_ind_41277 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_41277) &&
                    slt64(a_loc_ind_41277, a_loc_szz_41204)) {
                    ((__local float *) mem_43126)[a_loc_ind_41277] =
                        A_elem_41272;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_41284 = 0; i_41284 < tk_div_ty_41200; i_41284++) {
            int64_t binop_y_41305 = Ty_41194 * i_41284;
            
            for (int64_t i_41286 = 0; i_41286 < Rx_41197; i_41286++) {
                int64_t binop_y_41307 = Tx_41196 * i_41286;
                int64_t ltid_x_41288 = sext_i32_i64(ltid_pre_44293);
                int64_t ltid_y_41289 = sext_i32_i64(ltid_pre_44294);
                int32_t ltid_flat_41290 = local_tid_44289;
                int64_t k_41306 = ltid_x_41288 + binop_y_41305;
                int64_t j_41308 = ltid_y_41289 + binop_y_41307;
                int64_t gtid_41309 = jjj_41215 + j_41308;
                int64_t B_row_idx_41310 = kk_41243 + k_41306;
                bool cond_41311 = slt64(gtid_41309, i32_res_28263);
                float B_elem_41312;
                
                if (cond_41311) {
                    float B_elem_41314 = ((__global
                                           float *) mem_42853)[B_row_idx_41310 *
                                                               i32_res_28263 +
                                                               gtid_41309];
                    
                    B_elem_41312 = B_elem_41314;
                } else {
                    B_elem_41312 = 0.0F;
                }
                
                bool cond_41316 = slt64(k_41306, Tk_41198);
                int64_t b_loc_ind_41317;
                
                if (cond_41316) {
                    int64_t binop_y_41318 = TxRx_41201 * k_41306;
                    int64_t loc_fi_41319 = j_41308 + binop_y_41318;
                    
                    b_loc_ind_41317 = loc_fi_41319;
                } else {
                    b_loc_ind_41317 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_41317) &&
                    slt64(b_loc_ind_41317, b_loc_szz_41206)) {
                    ((__local float *) mem_43128)[b_loc_ind_41317] =
                        B_elem_41312;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43214[Ry_41195 * Rx_41197];
        float mem_param_43186[Ry_41195 * Rx_41197];
        
        for (int32_t i_3 = 0; i_3 < Ry_41195 * Rx_41197; i_3++)
            mem_param_43186[i_3] = mem_param_43129[i_3];
        for (int64_t i_41324 = 0; i_41324 < Tk_41198; i_41324++) {
            int64_t binop_y_41363 = TxRx_41201 * i_41324;
            int64_t ltid_y_41328 = sext_i32_i64(ltid_pre_44293);
            int64_t ltid_x_41326 = sext_i32_i64(ltid_pre_44294);
            int32_t ltid_flat_41327 = local_tid_44289;
            float mem_43189[Ry_41195];
            float mem_43191[Rx_41197];
            int64_t binop_x_41354 = Ry_41195 * ltid_y_41328;
            
            for (int64_t i_41352 = 0; i_41352 < Ry_41195; i_41352++) {
                int64_t binop_x_41355 = i_41352 + binop_x_41354;
                int64_t binop_y_41356 = Tk_41198 * binop_x_41355;
                int64_t a_loc_ind_41357 = i_41324 + binop_y_41356;
                
                for (int64_t i_44310 = 0; i_44310 < (int64_t) 1; i_44310++) {
                    mem_43189[i_41352 + i_44310] = ((__local
                                                     float *) mem_43126)[a_loc_ind_41357 +
                                                                         i_44310];
                }
            }
            
            int64_t binop_y_41365 = Rx_41197 * ltid_x_41326;
            
            for (int64_t i_41361 = 0; i_41361 < Rx_41197; i_41361++) {
                int64_t binop_x_41364 = i_41361 + binop_y_41363;
                int64_t b_loc_ind_41366 = binop_x_41364 + binop_y_41365;
                
                for (int64_t i_44312 = 0; i_44312 < (int64_t) 1; i_44312++) {
                    mem_43191[i_41361 + i_44312] = ((__local
                                                     float *) mem_43128)[b_loc_ind_41366 +
                                                                         i_44312];
                }
            }
            for (int64_t i_44313 = 0; i_44313 < Ry_41195; i_44313++) {
                mem_43199[i_44313] = mem_43189[i_44313];
            }
            for (int64_t i_44314 = 0; i_44314 < Rx_41197; i_44314++) {
                mem_43203[i_44314] = mem_43191[i_44314];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43213[Ry_41195 * Rx_41197];
            int64_t ltid_y_41373 = sext_i32_i64(ltid_pre_44293);
            int64_t ltid_x_41371 = sext_i32_i64(ltid_pre_44294);
            int32_t ltid_flat_41372 = local_tid_44289;
            int64_t binop_y_41416 = Ry_41195 * ltid_y_41373;
            int64_t binop_y_41420 = Rx_41197 * ltid_x_41371;
            
            for (int64_t i_41410 = 0; i_41410 < Ry_41195; i_41410++) {
                int64_t binop_x_41415 = iii_41214 + i_41410;
                int64_t cmpop_x_41417 = binop_x_41415 + binop_y_41416;
                bool binop_x_41418 = slt64(cmpop_x_41417, m_28248);
                
                for (int64_t i_41413 = 0; i_41413 < Rx_41197; i_41413++) {
                    int64_t binop_x_41419 = jjj_41215 + i_41413;
                    int64_t cmpop_x_41421 = binop_x_41419 + binop_y_41420;
                    bool binop_y_41422 = slt64(cmpop_x_41421, i32_res_28263);
                    bool cond_41423 = binop_x_41418 && binop_y_41422;
                    
                    if (cond_41423) {
                        float a_41425 = mem_43199[i_41410];
                        float c_41427 = mem_param_43186[i_41410 * Rx_41197 +
                                                        i_41413];
                        bool isnan_res_41430;
                        
                        isnan_res_41430 = futrts_isnan32(a_41425);
                        
                        float defunc_1_f_res_41431;
                        
                        if (isnan_res_41430) {
                            defunc_1_f_res_41431 = 0.0F;
                        } else {
                            float b_41426 = mem_43203[i_41413];
                            float defunc_1_f_res_f_res_41432 = a_41425 *
                                  b_41426;
                            
                            defunc_1_f_res_41431 = defunc_1_f_res_f_res_41432;
                        }
                        
                        float defunc_1_op_res_41436 = c_41427 +
                              defunc_1_f_res_41431;
                        
                        mem_param_43186[i_41410 * Rx_41197 + i_41413] =
                            defunc_1_op_res_41436;
                    }
                }
            }
            for (int64_t i_44317 = 0; i_44317 < Ry_41195; i_44317++) {
                for (int64_t i_44318 = 0; i_44318 < Rx_41197; i_44318++) {
                    mem_43213[i_44317 * Rx_41197 + i_44318] =
                        mem_param_43186[i_44317 * Rx_41197 + i_44318];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44307[Ry_41195 * Rx_41197];
            
            for (int32_t i_4 = 0; i_4 < Ry_41195 * Rx_41197; i_4++)
                mem_param_tmp_44307[i_4] = mem_43213[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41195 * Rx_41197; i_5++)
                mem_param_43186[i_5] = mem_param_tmp_44307[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41195 * Rx_41197; i_6++)
            loop_mem_43214[i_6] = mem_param_43186[i_6];
        
        float mem_param_tmp_44299[Ry_41195 * Rx_41197];
        
        for (int32_t i_7 = 0; i_7 < Ry_41195 * Rx_41197; i_7++)
            mem_param_tmp_44299[i_7] = loop_mem_43214[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41195 * Rx_41197; i_8++)
            mem_param_43129[i_8] = mem_param_tmp_44299[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41195 * Rx_41197; i_9++)
        loop_mem_43215[i_9] = mem_param_43129[i_9];
    for (int64_t i_41446 = 0; i_41446 < Ry_41195; i_41446++) {
        int64_t binop_y_41471 = Ty_41194 * i_41446;
        
        for (int64_t i_41448 = 0; i_41448 < tk_div_tx_41199; i_41448++) {
            int64_t binop_y_41469 = Tx_41196 * i_41448;
            int64_t ltid_x_41450 = sext_i32_i64(ltid_pre_44293);
            int64_t ltid_y_41451 = sext_i32_i64(ltid_pre_44294);
            int32_t ltid_flat_41452 = local_tid_44289;
            int64_t k_41470 = ltid_y_41451 + binop_y_41469;
            int64_t i_41472 = ltid_x_41450 + binop_y_41471;
            int64_t gtid_41473 = iii_41214 + i_41472;
            int64_t A_col_idx_41474 = kk_41445 + k_41470;
            bool binop_x_41475 = slt64(gtid_41473, m_28248);
            bool binop_y_41476 = slt64(A_col_idx_41474, i32_res_28257);
            bool cond_41477 = binop_x_41475 && binop_y_41476;
            float A_elem_41478;
            
            if (cond_41477) {
                float A_elem_41480 = ((__global
                                       float *) images_mem_42841)[gtid_41473 *
                                                                  N_28247 +
                                                                  A_col_idx_41474];
                
                A_elem_41478 = A_elem_41480;
            } else {
                A_elem_41478 = 0.0F;
            }
            
            bool cond_41482 = slt64(k_41470, Tk_41198);
            int64_t a_loc_ind_41483;
            
            if (cond_41482) {
                int64_t binop_y_41484 = Tk_41198 * i_41472;
                int64_t loc_fi_41485 = k_41470 + binop_y_41484;
                
                a_loc_ind_41483 = loc_fi_41485;
            } else {
                a_loc_ind_41483 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_41483) && slt64(a_loc_ind_41483,
                                                             a_loc_szz_41204)) {
                ((__local float *) mem_43126)[a_loc_ind_41483] = A_elem_41478;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_41490 = 0; i_41490 < tk_div_ty_41200; i_41490++) {
        int64_t binop_y_41513 = Ty_41194 * i_41490;
        
        for (int64_t i_41492 = 0; i_41492 < Rx_41197; i_41492++) {
            int64_t binop_y_41515 = Tx_41196 * i_41492;
            int64_t ltid_x_41494 = sext_i32_i64(ltid_pre_44293);
            int64_t ltid_y_41495 = sext_i32_i64(ltid_pre_44294);
            int32_t ltid_flat_41496 = local_tid_44289;
            int64_t k_41514 = ltid_x_41494 + binop_y_41513;
            int64_t j_41516 = ltid_y_41495 + binop_y_41515;
            int64_t gtid_41517 = jjj_41215 + j_41516;
            int64_t B_row_idx_41518 = kk_41445 + k_41514;
            bool binop_x_41519 = slt64(gtid_41517, i32_res_28263);
            bool binop_y_41520 = slt64(B_row_idx_41518, i32_res_28257);
            bool cond_41521 = binop_x_41519 && binop_y_41520;
            float B_elem_41522;
            
            if (cond_41521) {
                float B_elem_41524 = ((__global
                                       float *) mem_42853)[B_row_idx_41518 *
                                                           i32_res_28263 +
                                                           gtid_41517];
                
                B_elem_41522 = B_elem_41524;
            } else {
                B_elem_41522 = 0.0F;
            }
            
            bool cond_41526 = slt64(k_41514, Tk_41198);
            int64_t b_loc_ind_41527;
            
            if (cond_41526) {
                int64_t binop_y_41528 = TxRx_41201 * k_41514;
                int64_t loc_fi_41529 = j_41516 + binop_y_41528;
                
                b_loc_ind_41527 = loc_fi_41529;
            } else {
                b_loc_ind_41527 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_41527) && slt64(b_loc_ind_41527,
                                                             b_loc_szz_41206)) {
                ((__local float *) mem_43128)[b_loc_ind_41527] = B_elem_41522;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43281[Ry_41195];
    float mem_43285[Rx_41197];
    float mem_43295[Ry_41195 * Rx_41197];
    float loop_mem_43297[Ry_41195 * Rx_41197];
    float mem_param_43268[Ry_41195 * Rx_41197];
    
    for (int32_t i_10 = 0; i_10 < Ry_41195 * Rx_41197; i_10++)
        mem_param_43268[i_10] = loop_mem_43215[i_10];
    for (int64_t i_41534 = 0; i_41534 < Tk_41198; i_41534++) {
        int64_t cmpop_x_41536 = kk_41445 + i_41534;
        bool cond_41537 = slt64(cmpop_x_41536, i32_res_28257);
        float mem_43864[Ry_41195 * Rx_41197];
        
        if (cond_41537) {
            int64_t binop_y_41575 = TxRx_41201 * i_41534;
            int64_t bytes_43270 = (int64_t) 4 * Ry_41195;
            int64_t bytes_43272 = (int64_t) 4 * Rx_41197;
            int64_t ltid_y_41540 = sext_i32_i64(ltid_pre_44293);
            int64_t ltid_x_41538 = sext_i32_i64(ltid_pre_44294);
            int32_t ltid_flat_41539 = local_tid_44289;
            float mem_43271[Ry_41195];
            float mem_43273[Rx_41197];
            int64_t binop_x_41566 = Ry_41195 * ltid_y_41540;
            
            for (int64_t i_41564 = 0; i_41564 < Ry_41195; i_41564++) {
                int64_t binop_x_41567 = i_41564 + binop_x_41566;
                int64_t binop_y_41568 = Tk_41198 * binop_x_41567;
                int64_t a_loc_ind_41569 = i_41534 + binop_y_41568;
                
                for (int64_t i_44326 = 0; i_44326 < (int64_t) 1; i_44326++) {
                    mem_43271[i_41564 + i_44326] = ((__local
                                                     float *) mem_43126)[a_loc_ind_41569 +
                                                                         i_44326];
                }
            }
            
            int64_t binop_y_41577 = Rx_41197 * ltid_x_41538;
            
            for (int64_t i_41573 = 0; i_41573 < Rx_41197; i_41573++) {
                int64_t binop_x_41576 = i_41573 + binop_y_41575;
                int64_t b_loc_ind_41578 = binop_x_41576 + binop_y_41577;
                
                for (int64_t i_44328 = 0; i_44328 < (int64_t) 1; i_44328++) {
                    mem_43273[i_41573 + i_44328] = ((__local
                                                     float *) mem_43128)[b_loc_ind_41578 +
                                                                         i_44328];
                }
            }
            for (int64_t i_44329 = 0; i_44329 < Ry_41195; i_44329++) {
                mem_43281[i_44329] = mem_43271[i_44329];
            }
            for (int64_t i_44330 = 0; i_44330 < Rx_41197; i_44330++) {
                mem_43285[i_44330] = mem_43273[i_44330];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_41585 = sext_i32_i64(ltid_pre_44293);
            int64_t ltid_x_41583 = sext_i32_i64(ltid_pre_44294);
            int32_t ltid_flat_41584 = local_tid_44289;
            int64_t binop_y_41628 = Ry_41195 * ltid_y_41585;
            int64_t binop_y_41632 = Rx_41197 * ltid_x_41583;
            
            for (int64_t i_41622 = 0; i_41622 < Ry_41195; i_41622++) {
                int64_t binop_x_41627 = iii_41214 + i_41622;
                int64_t cmpop_x_41629 = binop_x_41627 + binop_y_41628;
                bool binop_x_41630 = slt64(cmpop_x_41629, m_28248);
                
                for (int64_t i_41625 = 0; i_41625 < Rx_41197; i_41625++) {
                    int64_t binop_x_41631 = jjj_41215 + i_41625;
                    int64_t cmpop_x_41633 = binop_x_41631 + binop_y_41632;
                    bool binop_y_41634 = slt64(cmpop_x_41633, i32_res_28263);
                    bool cond_41635 = binop_x_41630 && binop_y_41634;
                    
                    if (cond_41635) {
                        float a_41637 = mem_43281[i_41622];
                        float c_41639 = mem_param_43268[i_41622 * Rx_41197 +
                                                        i_41625];
                        bool isnan_res_41642;
                        
                        isnan_res_41642 = futrts_isnan32(a_41637);
                        
                        float defunc_1_f_res_41643;
                        
                        if (isnan_res_41642) {
                            defunc_1_f_res_41643 = 0.0F;
                        } else {
                            float b_41638 = mem_43285[i_41625];
                            float defunc_1_f_res_f_res_41644 = a_41637 *
                                  b_41638;
                            
                            defunc_1_f_res_41643 = defunc_1_f_res_f_res_41644;
                        }
                        
                        float defunc_1_op_res_41648 = c_41639 +
                              defunc_1_f_res_41643;
                        
                        mem_param_43268[i_41622 * Rx_41197 + i_41625] =
                            defunc_1_op_res_41648;
                    }
                }
            }
            for (int64_t i_44333 = 0; i_44333 < Ry_41195; i_44333++) {
                for (int64_t i_44334 = 0; i_44334 < Rx_41197; i_44334++) {
                    mem_43295[i_44333 * Rx_41197 + i_44334] =
                        mem_param_43268[i_44333 * Rx_41197 + i_44334];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44335 = 0; i_44335 < Ry_41195; i_44335++) {
                for (int64_t i_44336 = 0; i_44336 < Rx_41197; i_44336++) {
                    mem_43864[i_44335 * Rx_41197 + i_44336] =
                        mem_43295[i_44335 * Rx_41197 + i_44336];
                }
            }
        } else {
            for (int64_t i_44337 = 0; i_44337 < Ry_41195; i_44337++) {
                for (int64_t i_44338 = 0; i_44338 < Rx_41197; i_44338++) {
                    mem_43864[i_44337 * Rx_41197 + i_44338] =
                        mem_param_43268[i_44337 * Rx_41197 + i_44338];
                }
            }
        }
        
        float mem_param_tmp_44323[Ry_41195 * Rx_41197];
        
        for (int32_t i_11 = 0; i_11 < Ry_41195 * Rx_41197; i_11++)
            mem_param_tmp_44323[i_11] = mem_43864[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41195 * Rx_41197; i_12++)
            mem_param_43268[i_12] = mem_param_tmp_44323[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41195 * Rx_41197; i_13++)
        loop_mem_43297[i_13] = mem_param_43268[i_13];
    
    int64_t reg_tile_i_44339 = squot64(sext_i32_i64(local_tid_44289), Tx_41196);
    int64_t reg_tile_i_44340 = sext_i32_i64(local_tid_44289) -
            squot64(sext_i32_i64(local_tid_44289), Tx_41196) * Tx_41196;
    int64_t tile_dim_start_44341 = Ry_41195 * (Ty_41194 * gid_y_41212 +
                                               reg_tile_i_44339);
    int64_t tile_dim_start_44342 = Rx_41197 * (Tx_41196 * gid_x_41211 +
                                               reg_tile_i_44340);
    
    for (int64_t nest_i_44343 = 0; nest_i_44343 < Ry_41195; nest_i_44343++) {
        for (int64_t nest_i_44344 = 0; nest_i_44344 < Rx_41197;
             nest_i_44344++) {
            if (slt64(tile_dim_start_44341 + nest_i_44343, m_28248) &&
                slt64(tile_dim_start_44342 + nest_i_44344, i32_res_28263)) {
                ((__global float *) mem_43300)[(tile_dim_start_44341 +
                                                nest_i_44343) * i32_res_28263 +
                                               (tile_dim_start_44342 +
                                                nest_i_44344)] =
                    loop_mem_43297[nest_i_44343 * Rx_41197 + nest_i_44344];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41194
    #undef Ry_41195
    #undef Tx_41196
    #undef Rx_41197
    #undef Tk_41198
    #undef tk_div_tx_41199
    #undef tk_div_ty_41200
    #undef TxRx_41201
    #undef TyRy_41202
    #undef a_loc_szz_41204
    #undef b_loc_szz_41206
}
__kernel void mainMagnitudezisegmap_intragroup_41662(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43358_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43349_backing_aligned_1,
                                                     int64_t m_28248,
                                                     int64_t i32_res_28263,
                                                     int64_t num_groups_y_41660,
                                                     int64_t num_whole_tiles_41678,
                                                     int64_t residual_input_41805,
                                                     unsigned char cond_41806,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43310,
                                                     __global
                                                     unsigned char *mem_43339,
                                                     __global
                                                     unsigned char *mem_43366)
{
    #define tile_sizze_41657 (mainMagnitudezitile_sizze_41656)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43358_backing_5 = (__local volatile
                                                           char *) mem_43358_backing_aligned_0;
    __local volatile char *restrict mem_43349_backing_0 = (__local volatile
                                                           char *) mem_43349_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44420;
    int32_t local_tid_44421;
    int64_t group_sizze_44424;
    int32_t wave_sizze_44423;
    int32_t group_tid_44422;
    
    global_tid_44420 = get_global_id(0);
    local_tid_44421 = get_local_id(0);
    group_sizze_44424 = get_local_size(0);
    wave_sizze_44423 = LOCKSTEP_WIDTH;
    group_tid_44422 = get_group_id(0);
    
    int32_t gid_flat_41662;
    
    gid_flat_41662 = group_tid_44422;
    
    int32_t ltid_pre_44425;
    
    ltid_pre_44425 = squot32(local_tid_44421, sext_i64_i32(tile_sizze_41657));
    
    int32_t ltid_pre_44426;
    
    ltid_pre_44426 = local_tid_44421 - squot32(local_tid_44421,
                                               sext_i64_i32(tile_sizze_41657)) *
        sext_i64_i32(tile_sizze_41657);
    
    int64_t gid_x_41654;
    
    gid_x_41654 = squot64(sext_i32_i64(group_tid_44422), num_groups_y_41660);
    
    int64_t gid_y_41655;
    
    gid_y_41655 = sext_i32_i64(group_tid_44422) -
        squot64(sext_i32_i64(group_tid_44422), num_groups_y_41660) *
        num_groups_y_41660;
    
    float mem_43344[1];
    int64_t ltid_y_41681 = sext_i32_i64(ltid_pre_44425);
    int64_t ltid_x_41679 = sext_i32_i64(ltid_pre_44426);
    int32_t ltid_flat_41680 = local_tid_44421;
    
    if (slt64(ltid_y_41681, tile_sizze_41657) && slt64(ltid_x_41679,
                                                       tile_sizze_41657)) {
        mem_43344[(int64_t) 0] = 0.0F;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int64_t binop_x_41764 = gid_x_41654 * tile_sizze_41657;
    int64_t binop_x_41779 = gid_y_41655 * tile_sizze_41657;
    __local char *mem_43349;
    
    mem_43349 = (__local char *) mem_43349_backing_0;
    
    float accs_mem_43354[1];
    float mem_param_43345[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43345[i_1] = mem_43344[i_1];
    for (int64_t tile_id_41690 = 0; tile_id_41690 < num_whole_tiles_41678;
         tile_id_41690++) {
        int64_t binop_x_41762 = tile_sizze_41657 * tile_id_41690;
        int64_t ltid_y_41693 = sext_i32_i64(ltid_pre_44425);
        int64_t ltid_x_41691 = sext_i32_i64(ltid_pre_44426);
        int32_t ltid_flat_41692 = local_tid_44421;
        int64_t j_41763 = ltid_x_41691 + binop_x_41762;
        int64_t gtid_41765 = ltid_y_41693 + binop_x_41764;
        bool binop_x_41770 = slt64(j_41763, i32_res_28263);
        bool binop_y_41771 = slt64(gtid_41765, m_28248);
        bool cond_41772 = binop_x_41770 && binop_y_41771;
        float pre_41773;
        
        if (cond_41772) {
            float x_41774 = ((__global
                              float *) defunc_3_map_res_mem_43310)[gtid_41765 *
                                                                   i32_res_28263 +
                                                                   j_41763];
            
            pre_41773 = x_41774;
        } else {
            pre_41773 = 0.0F;
        }
        ((__local float *) mem_43349)[ltid_y_41693 * tile_sizze_41657 +
                                      ltid_x_41691] = pre_41773;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43353[1];
        int64_t ltid_y_41725 = sext_i32_i64(ltid_pre_44425);
        int64_t ltid_x_41723 = sext_i32_i64(ltid_pre_44426);
        int32_t ltid_flat_41724 = local_tid_44421;
        int64_t gtid_41778 = ltid_y_41725 + binop_x_41764;
        int64_t gtid_41780 = ltid_x_41723 + binop_x_41779;
        float acc_41783 = mem_param_43345[(int64_t) 0];
        bool binop_x_41787 = slt64(gtid_41778, m_28248);
        bool binop_y_41788 = slt64(gtid_41780, i32_res_28263);
        bool cond_41789 = binop_x_41787 && binop_y_41788;
        float acc_41790;
        
        if (cond_41789) {
            float x_41791;
            float redout_42802 = acc_41783;
            
            for (int64_t i_42803 = 0; i_42803 < tile_sizze_41657; i_42803++) {
                float x_41795 = ((__local float *) mem_43349)[ltid_y_41725 *
                                                              tile_sizze_41657 +
                                                              i_42803];
                int64_t slice_42831 = binop_x_41762 + i_42803;
                float x_41796 = ((__global float *) mem_43339)[slice_42831 *
                                                               (i32_res_28263 *
                                                                m_28248) +
                                                               gtid_41778 *
                                                               i32_res_28263 +
                                                               gtid_41780];
                float defunc_1_f_res_41797 = x_41795 * x_41796;
                float defunc_1_op_res_41794 = defunc_1_f_res_41797 +
                      redout_42802;
                float redout_tmp_44429 = defunc_1_op_res_41794;
                
                redout_42802 = redout_tmp_44429;
            }
            x_41791 = redout_42802;
            acc_41790 = x_41791;
        } else {
            acc_41790 = acc_41783;
        }
        mem_43353[(int64_t) 0] = acc_41790;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44427[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44427[i_2] = mem_43353[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43345[i_3] = mem_param_tmp_44427[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43354[i_4] = mem_param_43345[i_4];
    
    __local char *mem_43358;
    
    mem_43358 = (__local char *) mem_43358_backing_5;
    
    float mem_43362[1];
    float mem_43878[1];
    
    if (cond_41806) {
        mem_43878[(int64_t) 0] = accs_mem_43354[(int64_t) 0];
    } else {
        int64_t binop_x_41879 = tile_sizze_41657 * num_whole_tiles_41678;
        int64_t ltid_y_41809 = sext_i32_i64(ltid_pre_44425);
        int64_t ltid_x_41807 = sext_i32_i64(ltid_pre_44426);
        int32_t ltid_flat_41808 = local_tid_44421;
        int64_t j_41880 = ltid_x_41807 + binop_x_41879;
        int64_t gtid_41882 = binop_x_41764 + ltid_y_41809;
        bool binop_x_41887 = slt64(j_41880, i32_res_28263);
        bool binop_y_41888 = slt64(gtid_41882, m_28248);
        bool cond_41889 = binop_x_41887 && binop_y_41888;
        float pre_41890;
        
        if (cond_41889) {
            float x_41891 = ((__global
                              float *) defunc_3_map_res_mem_43310)[gtid_41882 *
                                                                   i32_res_28263 +
                                                                   j_41880];
            
            pre_41890 = x_41891;
        } else {
            pre_41890 = 0.0F;
        }
        ((__local float *) mem_43358)[ltid_y_41809 * tile_sizze_41657 +
                                      ltid_x_41807] = pre_41890;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_y_41842 = sext_i32_i64(ltid_pre_44425);
        int64_t ltid_x_41840 = sext_i32_i64(ltid_pre_44426);
        int32_t ltid_flat_41841 = local_tid_44421;
        int64_t gtid_41896 = binop_x_41764 + ltid_y_41842;
        int64_t gtid_41898 = binop_x_41779 + ltid_x_41840;
        float acc_41901 = accs_mem_43354[(int64_t) 0];
        bool binop_x_41905 = slt64(gtid_41896, m_28248);
        bool binop_y_41906 = slt64(gtid_41898, i32_res_28263);
        bool cond_41907 = binop_x_41905 && binop_y_41906;
        float acc_41908;
        
        if (cond_41907) {
            float x_41909;
            float redout_42804 = acc_41901;
            
            for (int64_t i_42805 = 0; i_42805 < residual_input_41805;
                 i_42805++) {
                float x_41913 = ((__local float *) mem_43358)[ltid_y_41842 *
                                                              tile_sizze_41657 +
                                                              i_42805];
                int64_t slice_42832 = binop_x_41879 + i_42805;
                float x_41914 = ((__global float *) mem_43339)[slice_42832 *
                                                               (i32_res_28263 *
                                                                m_28248) +
                                                               gtid_41896 *
                                                               i32_res_28263 +
                                                               gtid_41898];
                float defunc_1_f_res_41915 = x_41913 * x_41914;
                float defunc_1_op_res_41912 = defunc_1_f_res_41915 +
                      redout_42804;
                float redout_tmp_44430 = defunc_1_op_res_41912;
                
                redout_42804 = redout_tmp_44430;
            }
            x_41909 = redout_42804;
            acc_41908 = x_41909;
        } else {
            acc_41908 = acc_41901;
        }
        mem_43362[(int64_t) 0] = acc_41908;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43878[(int64_t) 0] = mem_43362[(int64_t) 0];
    }
    
    int64_t thread_out_index_44431 = gid_x_41654 * tile_sizze_41657 +
            sext_i32_i64(ltid_pre_44425);
    int64_t thread_out_index_44432 = gid_y_41655 * tile_sizze_41657 +
            sext_i32_i64(ltid_pre_44426);
    
    if (slt64(thread_out_index_44431, m_28248) && slt64(thread_out_index_44432,
                                                        i32_res_28263)) {
        ((__global float *) mem_43366)[thread_out_index_44431 * i32_res_28263 +
                                       thread_out_index_44432] =
            mem_43878[(int64_t) 0];
    }
    
  error_5:
    return;
    #undef tile_sizze_41657
}
__kernel void mainMagnitudezisegmap_intragroup_41954(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43418_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43416_backing_aligned_1,
                                                     int64_t N_28247,
                                                     int64_t m_28248,
                                                     int64_t i32_res_28263,
                                                     int64_t gridDim_x_41948,
                                                     int64_t full_tiles_41979,
                                                     int64_t kk_42182, __global
                                                     unsigned char *defunc_4_map_res_mem_43376,
                                                     __global
                                                     unsigned char *mem_43400,
                                                     __global
                                                     unsigned char *mem_43590)
{
    #define Ty_41935 (mainMagnitudeziTy_41932)
    #define Ry_41936 (mainMagnitudeziRy_41934)
    #define Tx_41937 (mainMagnitudeziTx_41931)
    #define Rx_41938 (mainMagnitudeziRx_41933)
    #define Tk_41939 (mainMagnitudeziTk_41930)
    #define tk_div_tx_41940 (sdiv_up64(mainMagnitudeziTk_41930, mainMagnitudeziTx_41931))
    #define tk_div_ty_41941 (sdiv_up64(mainMagnitudeziTk_41930, mainMagnitudeziTy_41932))
    #define TxRx_41942 (mainMagnitudeziTx_41931 * mainMagnitudeziRx_41933)
    #define TyRy_41943 (mainMagnitudeziTy_41932 * mainMagnitudeziRy_41934)
    #define a_loc_szz_41945 (mainMagnitudeziTk_41930 * (mainMagnitudeziTy_41932 * mainMagnitudeziRy_41934))
    #define b_loc_szz_41947 (mainMagnitudeziRx_41933 * (mainMagnitudeziTx_41931 * mainMagnitudeziTk_41930))
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43418_backing_1 = (__local volatile
                                                           char *) mem_43418_backing_aligned_0;
    __local volatile char *restrict mem_43416_backing_0 = (__local volatile
                                                           char *) mem_43416_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44508;
    int32_t local_tid_44509;
    int64_t group_sizze_44512;
    int32_t wave_sizze_44511;
    int32_t group_tid_44510;
    
    global_tid_44508 = get_global_id(0);
    local_tid_44509 = get_local_id(0);
    group_sizze_44512 = get_local_size(0);
    wave_sizze_44511 = LOCKSTEP_WIDTH;
    group_tid_44510 = get_group_id(0);
    
    int32_t gid_flat_41954;
    
    gid_flat_41954 = group_tid_44510;
    
    int32_t ltid_pre_44513;
    
    ltid_pre_44513 = squot32(local_tid_44509, sext_i64_i32(Tx_41937));
    
    int32_t ltid_pre_44514;
    
    ltid_pre_44514 = local_tid_44509 - squot32(local_tid_44509,
                                               sext_i64_i32(Tx_41937)) *
        sext_i64_i32(Tx_41937);
    
    int64_t gid_y_41953;
    
    gid_y_41953 = squot64(sext_i32_i64(group_tid_44510), gridDim_x_41948);
    
    int64_t gid_x_41952;
    
    gid_x_41952 = sext_i32_i64(group_tid_44510) -
        squot64(sext_i32_i64(group_tid_44510), gridDim_x_41948) *
        gridDim_x_41948;
    
    int64_t iii_41955;
    
    iii_41955 = TyRy_41943 * gid_y_41953;
    
    int64_t jjj_41956 = TxRx_41942 * gid_x_41952;
    float mem_43414[Ry_41936 * Rx_41938];
    int64_t ltid_y_41959 = sext_i32_i64(ltid_pre_44513);
    int64_t ltid_x_41957 = sext_i32_i64(ltid_pre_44514);
    int32_t ltid_flat_41958 = local_tid_44509;
    float mem_43405[Ry_41936 * Rx_41938];
    
    for (int64_t i_41970 = 0; i_41970 < Ry_41936; i_41970++) {
        for (int64_t i_41973 = 0; i_41973 < Rx_41938; i_41973++) {
            mem_43405[i_41970 * Rx_41938 + i_41973] = 0.0F;
        }
    }
    for (int64_t i_44517 = 0; i_44517 < Ry_41936; i_44517++) {
        for (int64_t i_44518 = 0; i_44518 < Rx_41938; i_44518++) {
            mem_43414[i_44517 * Rx_41938 + i_44518] = mem_43405[i_44517 *
                                                                Rx_41938 +
                                                                i_44518];
        }
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43416;
    
    mem_43416 = (__local char *) mem_43416_backing_0;
    
    __local char *mem_43418;
    
    mem_43418 = (__local char *) mem_43418_backing_1;
    
    float mem_43489[Ry_41936];
    float mem_43493[Rx_41938];
    float loop_mem_43505[Ry_41936 * Rx_41938];
    float mem_param_43419[Ry_41936 * Rx_41938];
    
    for (int32_t i_2 = 0; i_2 < Ry_41936 * Rx_41938; i_2++)
        mem_param_43419[i_2] = mem_43414[i_2];
    for (int64_t i_41980 = 0; i_41980 < full_tiles_41979; i_41980++) {
        int64_t kk_41984 = Tk_41939 * i_41980;
        
        for (int64_t i_41985 = 0; i_41985 < Ry_41936; i_41985++) {
            int64_t binop_y_42008 = Ty_41935 * i_41985;
            
            for (int64_t i_41987 = 0; i_41987 < tk_div_tx_41940; i_41987++) {
                int64_t binop_y_42006 = Tx_41937 * i_41987;
                int64_t ltid_x_41989 = sext_i32_i64(ltid_pre_44513);
                int64_t ltid_y_41990 = sext_i32_i64(ltid_pre_44514);
                int32_t ltid_flat_41991 = local_tid_44509;
                int64_t k_42007 = ltid_y_41990 + binop_y_42006;
                int64_t i_42009 = ltid_x_41989 + binop_y_42008;
                int64_t gtid_42010 = iii_41955 + i_42009;
                int64_t A_col_idx_42011 = kk_41984 + k_42007;
                bool cond_42012 = slt64(gtid_42010, m_28248);
                float A_elem_42013;
                
                if (cond_42012) {
                    float A_elem_42015 = ((__global
                                           float *) defunc_4_map_res_mem_43376)[gtid_42010 *
                                                                                i32_res_28263 +
                                                                                A_col_idx_42011];
                    
                    A_elem_42013 = A_elem_42015;
                } else {
                    A_elem_42013 = 0.0F;
                }
                
                bool cond_42017 = slt64(k_42007, Tk_41939);
                int64_t a_loc_ind_42018;
                
                if (cond_42017) {
                    int64_t binop_y_42019 = Tk_41939 * i_42009;
                    int64_t loc_fi_42020 = k_42007 + binop_y_42019;
                    
                    a_loc_ind_42018 = loc_fi_42020;
                } else {
                    a_loc_ind_42018 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, a_loc_ind_42018) &&
                    slt64(a_loc_ind_42018, a_loc_szz_41945)) {
                    ((__local float *) mem_43416)[a_loc_ind_42018] =
                        A_elem_42013;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        for (int64_t i_42025 = 0; i_42025 < tk_div_ty_41941; i_42025++) {
            int64_t binop_y_42046 = Ty_41935 * i_42025;
            
            for (int64_t i_42027 = 0; i_42027 < Rx_41938; i_42027++) {
                int64_t binop_y_42048 = Tx_41937 * i_42027;
                int64_t ltid_x_42029 = sext_i32_i64(ltid_pre_44513);
                int64_t ltid_y_42030 = sext_i32_i64(ltid_pre_44514);
                int32_t ltid_flat_42031 = local_tid_44509;
                int64_t k_42047 = ltid_x_42029 + binop_y_42046;
                int64_t j_42049 = ltid_y_42030 + binop_y_42048;
                int64_t gtid_42050 = jjj_41956 + j_42049;
                int64_t B_row_idx_42051 = kk_41984 + k_42047;
                bool cond_42052 = slt64(gtid_42050, N_28247);
                float B_elem_42053;
                
                if (cond_42052) {
                    float B_elem_42055 = ((__global
                                           float *) mem_43400)[B_row_idx_42051 *
                                                               N_28247 +
                                                               gtid_42050];
                    
                    B_elem_42053 = B_elem_42055;
                } else {
                    B_elem_42053 = 0.0F;
                }
                
                bool cond_42057 = slt64(k_42047, Tk_41939);
                int64_t b_loc_ind_42058;
                
                if (cond_42057) {
                    int64_t binop_y_42059 = TxRx_41942 * k_42047;
                    int64_t loc_fi_42060 = j_42049 + binop_y_42059;
                    
                    b_loc_ind_42058 = loc_fi_42060;
                } else {
                    b_loc_ind_42058 = (int64_t) -1;
                }
                if (sle64((int64_t) 0, b_loc_ind_42058) &&
                    slt64(b_loc_ind_42058, b_loc_szz_41947)) {
                    ((__local float *) mem_43418)[b_loc_ind_42058] =
                        B_elem_42053;
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        
        float loop_mem_43504[Ry_41936 * Rx_41938];
        float mem_param_43476[Ry_41936 * Rx_41938];
        
        for (int32_t i_3 = 0; i_3 < Ry_41936 * Rx_41938; i_3++)
            mem_param_43476[i_3] = mem_param_43419[i_3];
        for (int64_t i_42065 = 0; i_42065 < Tk_41939; i_42065++) {
            int64_t binop_y_42104 = TxRx_41942 * i_42065;
            int64_t ltid_y_42069 = sext_i32_i64(ltid_pre_44513);
            int64_t ltid_x_42067 = sext_i32_i64(ltid_pre_44514);
            int32_t ltid_flat_42068 = local_tid_44509;
            float mem_43479[Ry_41936];
            float mem_43481[Rx_41938];
            int64_t binop_x_42095 = Ry_41936 * ltid_y_42069;
            
            for (int64_t i_42093 = 0; i_42093 < Ry_41936; i_42093++) {
                int64_t binop_x_42096 = i_42093 + binop_x_42095;
                int64_t binop_y_42097 = Tk_41939 * binop_x_42096;
                int64_t a_loc_ind_42098 = i_42065 + binop_y_42097;
                
                for (int64_t i_44530 = 0; i_44530 < (int64_t) 1; i_44530++) {
                    mem_43479[i_42093 + i_44530] = ((__local
                                                     float *) mem_43416)[a_loc_ind_42098 +
                                                                         i_44530];
                }
            }
            
            int64_t binop_y_42106 = Rx_41938 * ltid_x_42067;
            
            for (int64_t i_42102 = 0; i_42102 < Rx_41938; i_42102++) {
                int64_t binop_x_42105 = i_42102 + binop_y_42104;
                int64_t b_loc_ind_42107 = binop_x_42105 + binop_y_42106;
                
                for (int64_t i_44532 = 0; i_44532 < (int64_t) 1; i_44532++) {
                    mem_43481[i_42102 + i_44532] = ((__local
                                                     float *) mem_43418)[b_loc_ind_42107 +
                                                                         i_44532];
                }
            }
            for (int64_t i_44533 = 0; i_44533 < Ry_41936; i_44533++) {
                mem_43489[i_44533] = mem_43479[i_44533];
            }
            for (int64_t i_44534 = 0; i_44534 < Rx_41938; i_44534++) {
                mem_43493[i_44534] = mem_43481[i_44534];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_43503[Ry_41936 * Rx_41938];
            int64_t ltid_y_42114 = sext_i32_i64(ltid_pre_44513);
            int64_t ltid_x_42112 = sext_i32_i64(ltid_pre_44514);
            int32_t ltid_flat_42113 = local_tid_44509;
            int64_t binop_y_42155 = Ry_41936 * ltid_y_42114;
            int64_t binop_y_42159 = Rx_41938 * ltid_x_42112;
            
            for (int64_t i_42149 = 0; i_42149 < Ry_41936; i_42149++) {
                int64_t binop_x_42154 = iii_41955 + i_42149;
                int64_t cmpop_x_42156 = binop_x_42154 + binop_y_42155;
                bool binop_x_42157 = slt64(cmpop_x_42156, m_28248);
                
                for (int64_t i_42152 = 0; i_42152 < Rx_41938; i_42152++) {
                    int64_t binop_x_42158 = jjj_41956 + i_42152;
                    int64_t cmpop_x_42160 = binop_x_42158 + binop_y_42159;
                    bool binop_y_42161 = slt64(cmpop_x_42160, N_28247);
                    bool cond_42162 = binop_x_42157 && binop_y_42161;
                    
                    if (cond_42162) {
                        float a_42164 = mem_43489[i_42149];
                        float b_42165 = mem_43493[i_42152];
                        float c_42166 = mem_param_43476[i_42149 * Rx_41938 +
                                                        i_42152];
                        float defunc_1_f_res_42169 = a_42164 * b_42165;
                        float defunc_1_op_res_42173 = c_42166 +
                              defunc_1_f_res_42169;
                        
                        mem_param_43476[i_42149 * Rx_41938 + i_42152] =
                            defunc_1_op_res_42173;
                    }
                }
            }
            for (int64_t i_44537 = 0; i_44537 < Ry_41936; i_44537++) {
                for (int64_t i_44538 = 0; i_44538 < Rx_41938; i_44538++) {
                    mem_43503[i_44537 * Rx_41938 + i_44538] =
                        mem_param_43476[i_44537 * Rx_41938 + i_44538];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            float mem_param_tmp_44527[Ry_41936 * Rx_41938];
            
            for (int32_t i_4 = 0; i_4 < Ry_41936 * Rx_41938; i_4++)
                mem_param_tmp_44527[i_4] = mem_43503[i_4];
            for (int32_t i_5 = 0; i_5 < Ry_41936 * Rx_41938; i_5++)
                mem_param_43476[i_5] = mem_param_tmp_44527[i_5];
        }
        for (int32_t i_6 = 0; i_6 < Ry_41936 * Rx_41938; i_6++)
            loop_mem_43504[i_6] = mem_param_43476[i_6];
        
        float mem_param_tmp_44519[Ry_41936 * Rx_41938];
        
        for (int32_t i_7 = 0; i_7 < Ry_41936 * Rx_41938; i_7++)
            mem_param_tmp_44519[i_7] = loop_mem_43504[i_7];
        for (int32_t i_8 = 0; i_8 < Ry_41936 * Rx_41938; i_8++)
            mem_param_43419[i_8] = mem_param_tmp_44519[i_8];
    }
    for (int32_t i_9 = 0; i_9 < Ry_41936 * Rx_41938; i_9++)
        loop_mem_43505[i_9] = mem_param_43419[i_9];
    for (int64_t i_42183 = 0; i_42183 < Ry_41936; i_42183++) {
        int64_t binop_y_42208 = Ty_41935 * i_42183;
        
        for (int64_t i_42185 = 0; i_42185 < tk_div_tx_41940; i_42185++) {
            int64_t binop_y_42206 = Tx_41937 * i_42185;
            int64_t ltid_x_42187 = sext_i32_i64(ltid_pre_44513);
            int64_t ltid_y_42188 = sext_i32_i64(ltid_pre_44514);
            int32_t ltid_flat_42189 = local_tid_44509;
            int64_t k_42207 = ltid_y_42188 + binop_y_42206;
            int64_t i_42209 = ltid_x_42187 + binop_y_42208;
            int64_t gtid_42210 = iii_41955 + i_42209;
            int64_t A_col_idx_42211 = kk_42182 + k_42207;
            bool binop_x_42212 = slt64(gtid_42210, m_28248);
            bool binop_y_42213 = slt64(A_col_idx_42211, i32_res_28263);
            bool cond_42214 = binop_x_42212 && binop_y_42213;
            float A_elem_42215;
            
            if (cond_42214) {
                float A_elem_42217 = ((__global
                                       float *) defunc_4_map_res_mem_43376)[gtid_42210 *
                                                                            i32_res_28263 +
                                                                            A_col_idx_42211];
                
                A_elem_42215 = A_elem_42217;
            } else {
                A_elem_42215 = 0.0F;
            }
            
            bool cond_42219 = slt64(k_42207, Tk_41939);
            int64_t a_loc_ind_42220;
            
            if (cond_42219) {
                int64_t binop_y_42221 = Tk_41939 * i_42209;
                int64_t loc_fi_42222 = k_42207 + binop_y_42221;
                
                a_loc_ind_42220 = loc_fi_42222;
            } else {
                a_loc_ind_42220 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, a_loc_ind_42220) && slt64(a_loc_ind_42220,
                                                             a_loc_szz_41945)) {
                ((__local float *) mem_43416)[a_loc_ind_42220] = A_elem_42215;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    for (int64_t i_42227 = 0; i_42227 < tk_div_ty_41941; i_42227++) {
        int64_t binop_y_42250 = Ty_41935 * i_42227;
        
        for (int64_t i_42229 = 0; i_42229 < Rx_41938; i_42229++) {
            int64_t binop_y_42252 = Tx_41937 * i_42229;
            int64_t ltid_x_42231 = sext_i32_i64(ltid_pre_44513);
            int64_t ltid_y_42232 = sext_i32_i64(ltid_pre_44514);
            int32_t ltid_flat_42233 = local_tid_44509;
            int64_t k_42251 = ltid_x_42231 + binop_y_42250;
            int64_t j_42253 = ltid_y_42232 + binop_y_42252;
            int64_t gtid_42254 = jjj_41956 + j_42253;
            int64_t B_row_idx_42255 = kk_42182 + k_42251;
            bool binop_x_42256 = slt64(gtid_42254, N_28247);
            bool binop_y_42257 = slt64(B_row_idx_42255, i32_res_28263);
            bool cond_42258 = binop_x_42256 && binop_y_42257;
            float B_elem_42259;
            
            if (cond_42258) {
                float B_elem_42261 = ((__global
                                       float *) mem_43400)[B_row_idx_42255 *
                                                           N_28247 +
                                                           gtid_42254];
                
                B_elem_42259 = B_elem_42261;
            } else {
                B_elem_42259 = 0.0F;
            }
            
            bool cond_42263 = slt64(k_42251, Tk_41939);
            int64_t b_loc_ind_42264;
            
            if (cond_42263) {
                int64_t binop_y_42265 = TxRx_41942 * k_42251;
                int64_t loc_fi_42266 = j_42253 + binop_y_42265;
                
                b_loc_ind_42264 = loc_fi_42266;
            } else {
                b_loc_ind_42264 = (int64_t) -1;
            }
            if (sle64((int64_t) 0, b_loc_ind_42264) && slt64(b_loc_ind_42264,
                                                             b_loc_szz_41947)) {
                ((__local float *) mem_43418)[b_loc_ind_42264] = B_elem_42259;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
        }
    }
    
    float mem_43571[Ry_41936];
    float mem_43575[Rx_41938];
    float mem_43585[Ry_41936 * Rx_41938];
    float loop_mem_43587[Ry_41936 * Rx_41938];
    float mem_param_43558[Ry_41936 * Rx_41938];
    
    for (int32_t i_10 = 0; i_10 < Ry_41936 * Rx_41938; i_10++)
        mem_param_43558[i_10] = loop_mem_43505[i_10];
    for (int64_t i_42271 = 0; i_42271 < Tk_41939; i_42271++) {
        int64_t cmpop_x_42273 = kk_42182 + i_42271;
        bool cond_42274 = slt64(cmpop_x_42273, i32_res_28263);
        float mem_43894[Ry_41936 * Rx_41938];
        
        if (cond_42274) {
            int64_t binop_y_42312 = TxRx_41942 * i_42271;
            int64_t bytes_43560 = (int64_t) 4 * Ry_41936;
            int64_t bytes_43562 = (int64_t) 4 * Rx_41938;
            int64_t ltid_y_42277 = sext_i32_i64(ltid_pre_44513);
            int64_t ltid_x_42275 = sext_i32_i64(ltid_pre_44514);
            int32_t ltid_flat_42276 = local_tid_44509;
            float mem_43561[Ry_41936];
            float mem_43563[Rx_41938];
            int64_t binop_x_42303 = Ry_41936 * ltid_y_42277;
            
            for (int64_t i_42301 = 0; i_42301 < Ry_41936; i_42301++) {
                int64_t binop_x_42304 = i_42301 + binop_x_42303;
                int64_t binop_y_42305 = Tk_41939 * binop_x_42304;
                int64_t a_loc_ind_42306 = i_42271 + binop_y_42305;
                
                for (int64_t i_44546 = 0; i_44546 < (int64_t) 1; i_44546++) {
                    mem_43561[i_42301 + i_44546] = ((__local
                                                     float *) mem_43416)[a_loc_ind_42306 +
                                                                         i_44546];
                }
            }
            
            int64_t binop_y_42314 = Rx_41938 * ltid_x_42275;
            
            for (int64_t i_42310 = 0; i_42310 < Rx_41938; i_42310++) {
                int64_t binop_x_42313 = i_42310 + binop_y_42312;
                int64_t b_loc_ind_42315 = binop_x_42313 + binop_y_42314;
                
                for (int64_t i_44548 = 0; i_44548 < (int64_t) 1; i_44548++) {
                    mem_43563[i_42310 + i_44548] = ((__local
                                                     float *) mem_43418)[b_loc_ind_42315 +
                                                                         i_44548];
                }
            }
            for (int64_t i_44549 = 0; i_44549 < Ry_41936; i_44549++) {
                mem_43571[i_44549] = mem_43561[i_44549];
            }
            for (int64_t i_44550 = 0; i_44550 < Rx_41938; i_44550++) {
                mem_43575[i_44550] = mem_43563[i_44550];
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int64_t ltid_y_42322 = sext_i32_i64(ltid_pre_44513);
            int64_t ltid_x_42320 = sext_i32_i64(ltid_pre_44514);
            int32_t ltid_flat_42321 = local_tid_44509;
            int64_t binop_y_42363 = Ry_41936 * ltid_y_42322;
            int64_t binop_y_42367 = Rx_41938 * ltid_x_42320;
            
            for (int64_t i_42357 = 0; i_42357 < Ry_41936; i_42357++) {
                int64_t binop_x_42362 = iii_41955 + i_42357;
                int64_t cmpop_x_42364 = binop_x_42362 + binop_y_42363;
                bool binop_x_42365 = slt64(cmpop_x_42364, m_28248);
                
                for (int64_t i_42360 = 0; i_42360 < Rx_41938; i_42360++) {
                    int64_t binop_x_42366 = jjj_41956 + i_42360;
                    int64_t cmpop_x_42368 = binop_x_42366 + binop_y_42367;
                    bool binop_y_42369 = slt64(cmpop_x_42368, N_28247);
                    bool cond_42370 = binop_x_42365 && binop_y_42369;
                    
                    if (cond_42370) {
                        float a_42372 = mem_43571[i_42357];
                        float b_42373 = mem_43575[i_42360];
                        float c_42374 = mem_param_43558[i_42357 * Rx_41938 +
                                                        i_42360];
                        float defunc_1_f_res_42377 = a_42372 * b_42373;
                        float defunc_1_op_res_42381 = c_42374 +
                              defunc_1_f_res_42377;
                        
                        mem_param_43558[i_42357 * Rx_41938 + i_42360] =
                            defunc_1_op_res_42381;
                    }
                }
            }
            for (int64_t i_44553 = 0; i_44553 < Ry_41936; i_44553++) {
                for (int64_t i_44554 = 0; i_44554 < Rx_41938; i_44554++) {
                    mem_43585[i_44553 * Rx_41938 + i_44554] =
                        mem_param_43558[i_44553 * Rx_41938 + i_44554];
                }
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            for (int64_t i_44555 = 0; i_44555 < Ry_41936; i_44555++) {
                for (int64_t i_44556 = 0; i_44556 < Rx_41938; i_44556++) {
                    mem_43894[i_44555 * Rx_41938 + i_44556] =
                        mem_43585[i_44555 * Rx_41938 + i_44556];
                }
            }
        } else {
            for (int64_t i_44557 = 0; i_44557 < Ry_41936; i_44557++) {
                for (int64_t i_44558 = 0; i_44558 < Rx_41938; i_44558++) {
                    mem_43894[i_44557 * Rx_41938 + i_44558] =
                        mem_param_43558[i_44557 * Rx_41938 + i_44558];
                }
            }
        }
        
        float mem_param_tmp_44543[Ry_41936 * Rx_41938];
        
        for (int32_t i_11 = 0; i_11 < Ry_41936 * Rx_41938; i_11++)
            mem_param_tmp_44543[i_11] = mem_43894[i_11];
        for (int32_t i_12 = 0; i_12 < Ry_41936 * Rx_41938; i_12++)
            mem_param_43558[i_12] = mem_param_tmp_44543[i_12];
    }
    for (int32_t i_13 = 0; i_13 < Ry_41936 * Rx_41938; i_13++)
        loop_mem_43587[i_13] = mem_param_43558[i_13];
    
    int64_t reg_tile_i_44559 = squot64(sext_i32_i64(local_tid_44509), Tx_41937);
    int64_t reg_tile_i_44560 = sext_i32_i64(local_tid_44509) -
            squot64(sext_i32_i64(local_tid_44509), Tx_41937) * Tx_41937;
    int64_t tile_dim_start_44561 = Ry_41936 * (Ty_41935 * gid_y_41953 +
                                               reg_tile_i_44559);
    int64_t tile_dim_start_44562 = Rx_41938 * (Tx_41937 * gid_x_41952 +
                                               reg_tile_i_44560);
    
    for (int64_t nest_i_44563 = 0; nest_i_44563 < Ry_41936; nest_i_44563++) {
        for (int64_t nest_i_44564 = 0; nest_i_44564 < Rx_41938;
             nest_i_44564++) {
            if (slt64(tile_dim_start_44561 + nest_i_44563, m_28248) &&
                slt64(tile_dim_start_44562 + nest_i_44564, N_28247)) {
                ((__global float *) mem_43590)[(tile_dim_start_44561 +
                                                nest_i_44563) * N_28247 +
                                               (tile_dim_start_44562 +
                                                nest_i_44564)] =
                    loop_mem_43587[nest_i_44563 * Rx_41938 + nest_i_44564];
            }
        }
    }
    
  error_9:
    return;
    #undef Ty_41935
    #undef Ry_41936
    #undef Tx_41937
    #undef Rx_41938
    #undef Tk_41939
    #undef tk_div_tx_41940
    #undef tk_div_ty_41941
    #undef TxRx_41942
    #undef TyRy_41943
    #undef a_loc_szz_41945
    #undef b_loc_szz_41947
}
__kernel void mainMagnitudezisegmap_intragroup_42388(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43663_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43656_backing_aligned_1,
                                                     int64_t m_28248,
                                                     int32_t n_28251,
                                                     float hfrac_28253,
                                                     int64_t i32_res_28257,
                                                     int32_t k2p2_28259,
                                                     int64_t num_whole_tiles_42410,
                                                     int64_t residual_input_42499,
                                                     unsigned char cond_42500,
                                                     __global
                                                     unsigned char *mem_43642,
                                                     __global
                                                     unsigned char *mem_43645,
                                                     __global
                                                     unsigned char *mem_43676,
                                                     __global
                                                     unsigned char *mem_43678,
                                                     __global
                                                     unsigned char *mem_43680)
{
    #define segmap_group_sizze_35952 (mainMagnitudezisegmap_group_sizze_35921)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43663_backing_5 = (__local volatile
                                                           char *) mem_43663_backing_aligned_0;
    __local volatile char *restrict mem_43656_backing_0 = (__local volatile
                                                           char *) mem_43656_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44732;
    int32_t local_tid_44733;
    int64_t group_sizze_44736;
    int32_t wave_sizze_44735;
    int32_t group_tid_44734;
    
    global_tid_44732 = get_global_id(0);
    local_tid_44733 = get_local_id(0);
    group_sizze_44736 = get_local_size(0);
    wave_sizze_44735 = LOCKSTEP_WIDTH;
    group_tid_44734 = get_group_id(0);
    
    int32_t gid_flat_42388;
    
    gid_flat_42388 = group_tid_44734;
    
    int32_t ltid_pre_44737;
    
    ltid_pre_44737 = local_tid_44733;
    
    int64_t gid_42387;
    
    gid_42387 = sext_i32_i64(group_tid_44734);
    
    int64_t binop_x_42395;
    
    binop_x_42395 = segmap_group_sizze_35952 * gid_42387;
    
    int32_t mem_43649[1];
    int64_t ltid_42389 = sext_i32_i64(ltid_pre_44737);
    int32_t ltid_flat_42390 = local_tid_44733;
    int64_t gtid_42396 = ltid_42389 + binop_x_42395;
    bool cond_42397 = slt64(gtid_42396, m_28248);
    int32_t pre_42398;
    
    if (cond_42397) {
        int32_t defunc_0_f_res_42400;
        int32_t redout_42812 = 0;
        
        for (int32_t i_42834 = 0; i_42834 < n_28251; i_42834++) {
            int64_t i_42813 = sext_i32_i64(i_42834);
            float x_42404 = ((__global float *) mem_43642)[i_42813 * m_28248 +
                                                           gtid_42396];
            bool isnan_res_42405;
            
            isnan_res_42405 = futrts_isnan32(x_42404);
            
            bool cond_42406 = !isnan_res_42405;
            int32_t defunc_0_f_res_42407 = btoi_bool_i32(cond_42406);
            int32_t defunc_1_op_res_42403 = add32(defunc_0_f_res_42407,
                                                  redout_42812);
            int32_t redout_tmp_44738 = defunc_1_op_res_42403;
            
            redout_42812 = redout_tmp_44738;
        }
        defunc_0_f_res_42400 = redout_42812;
        pre_42398 = defunc_0_f_res_42400;
    } else {
        pre_42398 = 0;
    }
    mem_43649[(int64_t) 0] = pre_42398;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43652[1];
    int64_t ltid_42411 = sext_i32_i64(ltid_pre_44737);
    int32_t ltid_flat_42412 = local_tid_44733;
    
    mem_43652[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43656;
    
    mem_43656 = (__local char *) mem_43656_backing_0;
    
    float accs_mem_43660[1];
    float mem_param_43653[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43653[i_1] = mem_43652[i_1];
    for (int64_t tile_id_42418 = 0; tile_id_42418 < num_whole_tiles_42410;
         tile_id_42418++) {
        int64_t binop_x_42463 = segmap_group_sizze_35952 * tile_id_42418;
        int64_t ltid_42419 = sext_i32_i64(ltid_pre_44737);
        int32_t ltid_flat_42420 = local_tid_44733;
        int64_t j_42464 = ltid_42419 + binop_x_42463;
        bool cond_42468 = slt64(j_42464, i32_res_28257);
        int32_t pre_42469;
        
        if (cond_42468) {
            int32_t index_primexp_42770 = sext_i64_i32(j_42464);
            
            pre_42469 = index_primexp_42770;
        } else {
            pre_42469 = 0;
        }
        ((__local int32_t *) mem_43656)[ltid_42419] = pre_42469;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43659[1];
        int64_t ltid_42438 = sext_i32_i64(ltid_pre_44737);
        int32_t ltid_flat_42439 = local_tid_44733;
        int64_t gtid_42474 = binop_x_42395 + ltid_42438;
        float acc_42476 = mem_param_43653[(int64_t) 0];
        bool cond_42477 = slt64(gtid_42474, m_28248);
        float acc_42478;
        
        if (cond_42477) {
            int32_t defunc_0_f_res_42475 = mem_43649[(int64_t) 0];
            float x_42479;
            float redout_42814 = acc_42476;
            
            for (int64_t i_42815 = 0; i_42815 < segmap_group_sizze_35952;
                 i_42815++) {
                int32_t x_42483 = ((__local int32_t *) mem_43656)[i_42815];
                bool cond_42484 = slt32(x_42483, defunc_0_f_res_42475);
                float defunc_0_f_res_42485;
                
                if (cond_42484) {
                    int64_t i_42486 = sext_i32_i64(x_42483);
                    float defunc_0_f_res_t_res_42487 = ((__global
                                                         float *) mem_43645)[i_42486 *
                                                                             m_28248 +
                                                                             gtid_42474];
                    
                    defunc_0_f_res_42485 = defunc_0_f_res_t_res_42487;
                } else {
                    defunc_0_f_res_42485 = 0.0F;
                }
                
                float defunc_0_f_res_42488 = defunc_0_f_res_42485 *
                      defunc_0_f_res_42485;
                float defunc_1_op_res_42482 = defunc_0_f_res_42488 +
                      redout_42814;
                float redout_tmp_44741 = defunc_1_op_res_42482;
                
                redout_42814 = redout_tmp_44741;
            }
            x_42479 = redout_42814;
            acc_42478 = x_42479;
        } else {
            acc_42478 = acc_42476;
        }
        mem_43659[(int64_t) 0] = acc_42478;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44739[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44739[i_2] = mem_43659[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43653[i_3] = mem_param_tmp_44739[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43660[i_4] = mem_param_43653[i_4];
    
    __local char *mem_43663;
    
    mem_43663 = (__local char *) mem_43663_backing_5;
    
    float mem_43666[1];
    float mem_43907[1];
    
    if (cond_42500) {
        mem_43907[(int64_t) 0] = accs_mem_43660[(int64_t) 0];
    } else {
        int64_t binop_x_42510 = segmap_group_sizze_35952 *
                num_whole_tiles_42410;
        int64_t ltid_42501 = sext_i32_i64(ltid_pre_44737);
        int32_t ltid_flat_42502 = local_tid_44733;
        int64_t j_42511 = ltid_42501 + binop_x_42510;
        bool cond_42515 = slt64(j_42511, i32_res_28257);
        int32_t pre_42516;
        
        if (cond_42515) {
            int32_t index_primexp_42771 = sext_i64_i32(j_42511);
            
            pre_42516 = index_primexp_42771;
        } else {
            pre_42516 = 0;
        }
        ((__local int32_t *) mem_43663)[ltid_42501] = pre_42516;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42521 = sext_i32_i64(ltid_pre_44737);
        int32_t ltid_flat_42522 = local_tid_44733;
        int64_t gtid_42529 = binop_x_42395 + ltid_42521;
        float acc_42531 = accs_mem_43660[(int64_t) 0];
        bool cond_42532 = slt64(gtid_42529, m_28248);
        float acc_42533;
        
        if (cond_42532) {
            int32_t defunc_0_f_res_42530 = mem_43649[(int64_t) 0];
            float x_42534;
            float redout_42816 = acc_42531;
            
            for (int64_t i_42817 = 0; i_42817 < residual_input_42499;
                 i_42817++) {
                int32_t x_42538 = ((__local int32_t *) mem_43663)[i_42817];
                bool cond_42539 = slt32(x_42538, defunc_0_f_res_42530);
                float defunc_0_f_res_42540;
                
                if (cond_42539) {
                    int64_t i_42541 = sext_i32_i64(x_42538);
                    float defunc_0_f_res_t_res_42542 = ((__global
                                                         float *) mem_43645)[i_42541 *
                                                                             m_28248 +
                                                                             gtid_42529];
                    
                    defunc_0_f_res_42540 = defunc_0_f_res_t_res_42542;
                } else {
                    defunc_0_f_res_42540 = 0.0F;
                }
                
                float defunc_0_f_res_42543 = defunc_0_f_res_42540 *
                      defunc_0_f_res_42540;
                float defunc_1_op_res_42537 = defunc_0_f_res_42543 +
                      redout_42816;
                float redout_tmp_44742 = defunc_1_op_res_42537;
                
                redout_42816 = redout_tmp_44742;
            }
            x_42534 = redout_42816;
            acc_42533 = x_42534;
        } else {
            acc_42533 = acc_42531;
        }
        mem_43666[(int64_t) 0] = acc_42533;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43907[(int64_t) 0] = mem_43666[(int64_t) 0];
    }
    
    int32_t mem_43670[1];
    int32_t mem_43672[1];
    float mem_43674[1];
    int64_t ltid_42546 = sext_i32_i64(ltid_pre_44737);
    int32_t ltid_flat_42547 = local_tid_44733;
    int64_t gtid_42557 = binop_x_42395 + ltid_42546;
    bool cond_42559 = slt64(gtid_42557, m_28248);
    int32_t postlude_42560;
    int32_t postlude_42561;
    float postlude_42562;
    
    if (cond_42559) {
        float defunc_0_f_res_42558 = mem_43907[(int64_t) 0];
        int32_t defunc_0_f_res_42563 = mem_43649[(int64_t) 0];
        int32_t r32_arg_42564 = sub32(defunc_0_f_res_42563, k2p2_28259);
        float i32_res_42565 = sitofp_i32_f32(r32_arg_42564);
        float sqrt_arg_42566 = defunc_0_f_res_42558 / i32_res_42565;
        float sqrt_res_42567;
        
        sqrt_res_42567 = futrts_sqrt32(sqrt_arg_42566);
        
        float i32_res_42568 = sitofp_i32_f32(defunc_0_f_res_42563);
        float t32_arg_42569 = hfrac_28253 * i32_res_42568;
        int32_t f32_res_42570 = fptosi_f32_i32(t32_arg_42569);
        
        postlude_42560 = f32_res_42570;
        postlude_42561 = defunc_0_f_res_42563;
        postlude_42562 = sqrt_res_42567;
    } else {
        postlude_42560 = 0;
        postlude_42561 = 0;
        postlude_42562 = 0.0F;
    }
    mem_43670[(int64_t) 0] = postlude_42560;
    mem_43672[(int64_t) 0] = postlude_42561;
    mem_43674[(int64_t) 0] = postlude_42562;
    barrier(CLK_LOCAL_MEM_FENCE);
    if (slt64(sext_i32_i64(local_tid_44733) + segmap_group_sizze_35952 *
              sext_i32_i64(group_tid_44734), m_28248)) {
        ((__global int32_t *) mem_43676)[sext_i32_i64(local_tid_44733) +
                                         segmap_group_sizze_35952 *
                                         sext_i32_i64(group_tid_44734)] =
            mem_43670[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44733) + segmap_group_sizze_35952 *
              sext_i32_i64(group_tid_44734), m_28248)) {
        ((__global int32_t *) mem_43678)[sext_i32_i64(local_tid_44733) +
                                         segmap_group_sizze_35952 *
                                         sext_i32_i64(group_tid_44734)] =
            mem_43672[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44733) + segmap_group_sizze_35952 *
              sext_i32_i64(group_tid_44734), m_28248)) {
        ((__global float *) mem_43680)[sext_i32_i64(local_tid_44733) +
                                       segmap_group_sizze_35952 *
                                       sext_i32_i64(group_tid_44734)] =
            mem_43674[(int64_t) 0];
    }
    
  error_7:
    return;
    #undef segmap_group_sizze_35952
}
__kernel void mainMagnitudezisegmap_intragroup_42578(__global
                                                     int *global_failure,
                                                     __local volatile
                                                     int64_t *mem_43729_backing_aligned_0,
                                                     __local volatile
                                                     int64_t *mem_43722_backing_aligned_1,
                                                     int64_t N_28247,
                                                     int64_t m_28248,
                                                     int64_t i32_res_28618,
                                                     int64_t num_whole_tiles_42598,
                                                     int64_t residual_input_42697,
                                                     unsigned char cond_42698,
                                                     __global
                                                     unsigned char *defunc_4_map_res_mem_43638,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43704,
                                                     __global
                                                     unsigned char *defunc_3_map_res_mem_43705,
                                                     __global
                                                     unsigned char *mem_43735)
{
    #define segmap_group_sizze_36189 (mainMagnitudezisegmap_group_sizze_36170)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict mem_43729_backing_5 = (__local volatile
                                                           char *) mem_43729_backing_aligned_0;
    __local volatile char *restrict mem_43722_backing_0 = (__local volatile
                                                           char *) mem_43722_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44916;
    int32_t local_tid_44917;
    int64_t group_sizze_44920;
    int32_t wave_sizze_44919;
    int32_t group_tid_44918;
    
    global_tid_44916 = get_global_id(0);
    local_tid_44917 = get_local_id(0);
    group_sizze_44920 = get_local_size(0);
    wave_sizze_44919 = LOCKSTEP_WIDTH;
    group_tid_44918 = get_group_id(0);
    
    int32_t gid_flat_42578;
    
    gid_flat_42578 = group_tid_44918;
    
    int32_t ltid_pre_44921;
    
    ltid_pre_44921 = local_tid_44917;
    
    int64_t gid_42577;
    
    gid_42577 = sext_i32_i64(group_tid_44918);
    
    int64_t binop_x_42587;
    
    binop_x_42587 = segmap_group_sizze_36189 * gid_42577;
    
    int32_t mem_43713[1];
    int32_t mem_43715[1];
    int64_t ltid_42579 = sext_i32_i64(ltid_pre_44921);
    int32_t ltid_flat_42580 = local_tid_44917;
    int64_t gtid_42588 = ltid_42579 + binop_x_42587;
    bool cond_42589 = slt64(gtid_42588, m_28248);
    int32_t pre_42590;
    int32_t pre_42591;
    
    if (cond_42589) {
        int32_t x_42592 = ((__global
                            int32_t *) defunc_3_map_res_mem_43705)[gtid_42588];
        int32_t x_42593 = ((__global
                            int32_t *) defunc_3_map_res_mem_43704)[gtid_42588];
        
        pre_42590 = x_42592;
        pre_42591 = x_42593;
    } else {
        pre_42590 = 0;
        pre_42591 = 0;
    }
    mem_43713[(int64_t) 0] = pre_42590;
    mem_43715[(int64_t) 0] = pre_42591;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    float mem_43718[1];
    int64_t ltid_42599 = sext_i32_i64(ltid_pre_44921);
    int32_t ltid_flat_42600 = local_tid_44917;
    
    mem_43718[(int64_t) 0] = 0.0F;
    barrier(CLK_LOCAL_MEM_FENCE);
    
    __local char *mem_43722;
    
    mem_43722 = (__local char *) mem_43722_backing_0;
    
    float accs_mem_43726[1];
    float mem_param_43719[1];
    
    for (int32_t i_1 = 0; i_1 < 1; i_1++)
        mem_param_43719[i_1] = mem_43718[i_1];
    for (int64_t tile_id_42606 = 0; tile_id_42606 < num_whole_tiles_42598;
         tile_id_42606++) {
        int64_t binop_x_42655 = segmap_group_sizze_36189 * tile_id_42606;
        int64_t ltid_42607 = sext_i32_i64(ltid_pre_44921);
        int32_t ltid_flat_42608 = local_tid_44917;
        int64_t j_42656 = ltid_42607 + binop_x_42655;
        bool cond_42661 = slt64(j_42656, i32_res_28618);
        int32_t pre_42662;
        
        if (cond_42661) {
            int32_t index_primexp_42772 = sext_i64_i32(j_42656);
            int32_t tile_elem_42663 = index_primexp_42772;
            
            pre_42662 = tile_elem_42663;
        } else {
            pre_42662 = 0;
        }
        ((__local int32_t *) mem_43722)[ltid_42607] = pre_42662;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_43725[1];
        int64_t ltid_42627 = sext_i32_i64(ltid_pre_44921);
        int32_t ltid_flat_42628 = local_tid_44917;
        int64_t gtid_42667 = binop_x_42587 + ltid_42627;
        float acc_42670 = mem_param_43719[(int64_t) 0];
        bool cond_42671 = slt64(gtid_42667, m_28248);
        float acc_42672;
        
        if (cond_42671) {
            int32_t x_42668 = mem_43713[(int64_t) 0];
            int32_t x_42669 = mem_43715[(int64_t) 0];
            float x_42673;
            float redout_42818 = acc_42670;
            
            for (int64_t i_42819 = 0; i_42819 < segmap_group_sizze_36189;
                 i_42819++) {
                int32_t x_42677 = ((__local int32_t *) mem_43722)[i_42819];
                bool cond_42678 = slt32(x_42677, x_42669);
                float defunc_0_f_res_42679;
                
                if (cond_42678) {
                    int32_t x_42680 = add32(x_42668, x_42677);
                    int32_t x_42681 = sub32(x_42680, x_42669);
                    int32_t i_42682 = add32(1, x_42681);
                    int64_t i_42683 = sext_i32_i64(i_42682);
                    float defunc_0_f_res_t_res_42684 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_42667 *
                                                                                              N_28247 +
                                                                                              i_42683];
                    
                    defunc_0_f_res_42679 = defunc_0_f_res_t_res_42684;
                } else {
                    defunc_0_f_res_42679 = 0.0F;
                }
                
                float defunc_1_op_res_42676 = defunc_0_f_res_42679 +
                      redout_42818;
                float redout_tmp_44924 = defunc_1_op_res_42676;
                
                redout_42818 = redout_tmp_44924;
            }
            x_42673 = redout_42818;
            acc_42672 = x_42673;
        } else {
            acc_42672 = acc_42670;
        }
        mem_43725[(int64_t) 0] = acc_42672;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        float mem_param_tmp_44922[1];
        
        for (int32_t i_2 = 0; i_2 < 1; i_2++)
            mem_param_tmp_44922[i_2] = mem_43725[i_2];
        for (int32_t i_3 = 0; i_3 < 1; i_3++)
            mem_param_43719[i_3] = mem_param_tmp_44922[i_3];
    }
    for (int32_t i_4 = 0; i_4 < 1; i_4++)
        accs_mem_43726[i_4] = mem_param_43719[i_4];
    
    __local char *mem_43729;
    
    mem_43729 = (__local char *) mem_43729_backing_5;
    
    float mem_43732[1];
    float mem_43916[1];
    
    if (cond_42698) {
        mem_43916[(int64_t) 0] = accs_mem_43726[(int64_t) 0];
    } else {
        int64_t binop_x_42708 = segmap_group_sizze_36189 *
                num_whole_tiles_42598;
        int64_t ltid_42699 = sext_i32_i64(ltid_pre_44921);
        int32_t ltid_flat_42700 = local_tid_44917;
        int64_t j_42709 = ltid_42699 + binop_x_42708;
        bool cond_42714 = slt64(j_42709, i32_res_28618);
        int32_t pre_42715;
        
        if (cond_42714) {
            int32_t index_primexp_42773 = sext_i64_i32(j_42709);
            int32_t tile_elem_42716 = index_primexp_42773;
            
            pre_42715 = tile_elem_42716;
        } else {
            pre_42715 = 0;
        }
        ((__local int32_t *) mem_43729)[ltid_42699] = pre_42715;
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int64_t ltid_42720 = sext_i32_i64(ltid_pre_44921);
        int32_t ltid_flat_42721 = local_tid_44917;
        int64_t gtid_42728 = binop_x_42587 + ltid_42720;
        float acc_42731 = accs_mem_43726[(int64_t) 0];
        bool cond_42732 = slt64(gtid_42728, m_28248);
        float acc_42733;
        
        if (cond_42732) {
            int32_t x_42729 = mem_43713[(int64_t) 0];
            int32_t x_42730 = mem_43715[(int64_t) 0];
            float x_42734;
            float redout_42820 = acc_42731;
            
            for (int64_t i_42821 = 0; i_42821 < residual_input_42697;
                 i_42821++) {
                int32_t x_42738 = ((__local int32_t *) mem_43729)[i_42821];
                bool cond_42739 = slt32(x_42738, x_42730);
                float defunc_0_f_res_42740;
                
                if (cond_42739) {
                    int32_t x_42741 = add32(x_42729, x_42738);
                    int32_t x_42742 = sub32(x_42741, x_42730);
                    int32_t i_42743 = add32(1, x_42742);
                    int64_t i_42744 = sext_i32_i64(i_42743);
                    float defunc_0_f_res_t_res_42745 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_42728 *
                                                                                              N_28247 +
                                                                                              i_42744];
                    
                    defunc_0_f_res_42740 = defunc_0_f_res_t_res_42745;
                } else {
                    defunc_0_f_res_42740 = 0.0F;
                }
                
                float defunc_1_op_res_42737 = defunc_0_f_res_42740 +
                      redout_42820;
                float redout_tmp_44925 = defunc_1_op_res_42737;
                
                redout_42820 = redout_tmp_44925;
            }
            x_42734 = redout_42820;
            acc_42733 = x_42734;
        } else {
            acc_42733 = acc_42731;
        }
        mem_43732[(int64_t) 0] = acc_42733;
        barrier(CLK_LOCAL_MEM_FENCE);
        mem_43916[(int64_t) 0] = mem_43732[(int64_t) 0];
    }
    if (slt64(sext_i32_i64(local_tid_44917) + segmap_group_sizze_36189 *
              sext_i32_i64(group_tid_44918), m_28248)) {
        ((__global float *) mem_43735)[sext_i32_i64(local_tid_44917) +
                                       segmap_group_sizze_36189 *
                                       sext_i32_i64(group_tid_44918)] =
            mem_43916[(int64_t) 0];
    }
    
  error_6:
    return;
    #undef segmap_group_sizze_36189
}
__kernel void mainMagnitudezisegred_large_34164(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44185_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44183_backing_aligned_1,
                                                int64_t N_28247,
                                                int64_t i32_res_28257,
                                                int64_t i32_res_28263,
                                                int64_t num_groups_34303,
                                                int64_t groups_per_segment_44169,
                                                int64_t elements_per_thread_44170,
                                                int64_t virt_num_groups_44171,
                                                int64_t threads_per_segment_44173,
                                                __global
                                                unsigned char *images_mem_42841,
                                                __global
                                                unsigned char *binop_p_mem_42850,
                                                __global
                                                unsigned char *mem_42991,
                                                __global
                                                unsigned char *mem_42996,
                                                __global
                                                unsigned char *group_res_arr_mem_44174,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44176)
{
    #define segred_group_sizze_34302 (mainMagnitudezisegred_group_sizze_34158)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44185_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44185_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44183_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44183_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44178;
    int32_t local_tid_44179;
    int64_t group_sizze_44182;
    int32_t wave_sizze_44181;
    int32_t group_tid_44180;
    
    global_tid_44178 = get_global_id(0);
    local_tid_44179 = get_local_id(0);
    group_sizze_44182 = get_local_size(0);
    wave_sizze_44181 = LOCKSTEP_WIDTH;
    group_tid_44180 = get_group_id(0);
    
    int32_t phys_tid_34164;
    
    phys_tid_34164 = global_tid_44178;
    
    __local char *red_arr_mem_44183;
    
    red_arr_mem_44183 = (__local char *) red_arr_mem_44183_backing_0;
    
    __local char *sync_arr_mem_44185;
    
    sync_arr_mem_44185 = (__local char *) sync_arr_mem_44185_backing_1;
    
    int32_t phys_group_id_44187;
    
    phys_group_id_44187 = get_group_id(0);
    for (int32_t i_44188 = 0; i_44188 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44171) - phys_group_id_44187,
                   sext_i64_i32(num_groups_34303)); i_44188++) {
        int32_t virt_group_id_44189 = phys_group_id_44187 + i_44188 *
                sext_i64_i32(num_groups_34303);
        int32_t flat_segment_id_44190 = squot32(virt_group_id_44189,
                                                sext_i64_i32(groups_per_segment_44169));
        int64_t global_tid_44191 = srem64(sext_i32_i64(virt_group_id_44189) *
                                          segred_group_sizze_34302 +
                                          sext_i32_i64(local_tid_44179),
                                          segred_group_sizze_34302 *
                                          groups_per_segment_44169);
        int64_t gtid_34151 = squot64(sext_i32_i64(flat_segment_id_44190),
                                     i32_res_28263 * i32_res_28263);
        int64_t gtid_34152 = squot64(sext_i32_i64(flat_segment_id_44190) -
                                     squot64(sext_i32_i64(flat_segment_id_44190),
                                             i32_res_28263 * i32_res_28263) *
                                     (i32_res_28263 * i32_res_28263),
                                     i32_res_28263);
        int64_t gtid_34153 = sext_i32_i64(flat_segment_id_44190) -
                squot64(sext_i32_i64(flat_segment_id_44190), i32_res_28263 *
                        i32_res_28263) * (i32_res_28263 * i32_res_28263) -
                squot64(sext_i32_i64(flat_segment_id_44190) -
                        squot64(sext_i32_i64(flat_segment_id_44190),
                                i32_res_28263 * i32_res_28263) *
                        (i32_res_28263 * i32_res_28263), i32_res_28263) *
                i32_res_28263;
        int64_t gtid_34163;
        float x_acc_44192;
        int64_t chunk_sizze_44193;
        
        chunk_sizze_44193 = smin64(elements_per_thread_44170,
                                   sdiv_up64(i32_res_28257 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44191)),
                                             threads_per_segment_44173));
        
        float x_34306;
        float x_34307;
        
        // neutral-initialise the accumulators
        {
            x_acc_44192 = 0.0F;
        }
        for (int64_t i_44197 = 0; i_44197 < chunk_sizze_44193; i_44197++) {
            gtid_34163 = sext_i32_i64(sext_i64_i32(global_tid_44191)) +
                threads_per_segment_44173 * i_44197;
            // apply map function
            {
                float x_34312 = ((__global
                                  float *) images_mem_42841)[gtid_34151 *
                                                             N_28247 +
                                                             gtid_34163];
                float x_34313 = ((__global
                                  float *) binop_p_mem_42850)[gtid_34152 *
                                                              N_28247 +
                                                              gtid_34163];
                float x_34314 = ((__global float *) mem_42991)[gtid_34153 *
                                                               N_28247 +
                                                               gtid_34163];
                float x_34315 = x_34313 * x_34314;
                bool isnan_res_34316;
                
                isnan_res_34316 = futrts_isnan32(x_34312);
                
                float y_34317;
                
                if (isnan_res_34316) {
                    y_34317 = 0.0F;
                } else {
                    y_34317 = 1.0F;
                }
                
                float defunc_2_f_res_34318 = x_34315 * y_34317;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_34306 = x_acc_44192;
                }
                // load new values
                {
                    x_34307 = defunc_2_f_res_34318;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_34308 = x_34306 + x_34307;
                    
                    // store in accumulator
                    {
                        x_acc_44192 = defunc_1_op_res_34308;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_34306 = x_acc_44192;
            ((__local
              float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179)] =
                x_34306;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44198;
        int32_t skip_waves_44199;
        
        skip_waves_44199 = 1;
        
        float x_44194;
        float x_44195;
        
        offset_44198 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44179,
                      sext_i64_i32(segred_group_sizze_34302))) {
                x_44194 = ((__local
                            float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179 +
                                                        offset_44198)];
            }
        }
        offset_44198 = 1;
        while (slt32(offset_44198, wave_sizze_44181)) {
            if (slt32(local_tid_44179 + offset_44198,
                      sext_i64_i32(segred_group_sizze_34302)) &&
                ((local_tid_44179 - squot32(local_tid_44179, wave_sizze_44181) *
                  wave_sizze_44181) & (2 * offset_44198 - 1)) == 0) {
                // read array element
                {
                    x_44195 = ((volatile __local
                                float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179 +
                                                            offset_44198)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44196 = x_44194 + x_44195;
                    
                    x_44194 = defunc_1_op_res_44196;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179)] =
                        x_44194;
                }
            }
            offset_44198 *= 2;
        }
        while (slt32(skip_waves_44199,
                     squot32(sext_i64_i32(segred_group_sizze_34302) +
                             wave_sizze_44181 - 1, wave_sizze_44181))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44198 = skip_waves_44199 * wave_sizze_44181;
            if (slt32(local_tid_44179 + offset_44198,
                      sext_i64_i32(segred_group_sizze_34302)) &&
                ((local_tid_44179 - squot32(local_tid_44179, wave_sizze_44181) *
                  wave_sizze_44181) == 0 && (squot32(local_tid_44179,
                                                     wave_sizze_44181) & (2 *
                                                                          skip_waves_44199 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44195 = ((__local
                                float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179 +
                                                            offset_44198)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44196 = x_44194 + x_44195;
                    
                    x_44194 = defunc_1_op_res_44196;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179)] =
                        x_44194;
                }
            }
            skip_waves_44199 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44179) == (int64_t) 0) {
                x_acc_44192 = x_44194;
            }
        }
        if (groups_per_segment_44169 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44179 == 0) {
                    ((__global float *) mem_42996)[gtid_34151 * (i32_res_28263 *
                                                                 i32_res_28263) +
                                                   gtid_34152 * i32_res_28263 +
                                                   gtid_34153] = x_acc_44192;
                }
            }
        } else {
            int32_t old_counter_44200;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44179 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44174)[sext_i32_i64(virt_group_id_44189) *
                                                        segred_group_sizze_34302] =
                        x_acc_44192;
                    mem_fence_global();
                    old_counter_44200 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44176)[sext_i32_i64(srem32(flat_segment_id_44190,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44185)[(int64_t) 0] =
                        old_counter_44200 == groups_per_segment_44169 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44201;
            
            is_last_group_44201 = ((__local
                                    bool *) sync_arr_mem_44185)[(int64_t) 0];
            if (is_last_group_44201) {
                if (local_tid_44179 == 0) {
                    old_counter_44200 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44176)[sext_i32_i64(srem32(flat_segment_id_44190,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44169));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44202 =
                            sdiv_up64(groups_per_segment_44169,
                                      segred_group_sizze_34302);
                    
                    x_34306 = 0.0F;
                    for (int64_t i_44203 = 0; i_44203 < read_per_thread_44202;
                         i_44203++) {
                        int64_t group_res_id_44204 =
                                sext_i32_i64(local_tid_44179) *
                                read_per_thread_44202 + i_44203;
                        int64_t index_of_group_res_44205 =
                                sext_i32_i64(flat_segment_id_44190) *
                                groups_per_segment_44169 + group_res_id_44204;
                        
                        if (slt64(group_res_id_44204,
                                  groups_per_segment_44169)) {
                            x_34307 = ((__global
                                        float *) group_res_arr_mem_44174)[index_of_group_res_44205 *
                                                                          segred_group_sizze_34302];
                            
                            float defunc_1_op_res_34308;
                            
                            defunc_1_op_res_34308 = x_34306 + x_34307;
                            x_34306 = defunc_1_op_res_34308;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179)] =
                    x_34306;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44206;
                    int32_t skip_waves_44207;
                    
                    skip_waves_44207 = 1;
                    
                    float x_44194;
                    float x_44195;
                    
                    offset_44206 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44179,
                                  sext_i64_i32(segred_group_sizze_34302))) {
                            x_44194 = ((__local
                                        float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179 +
                                                                    offset_44206)];
                        }
                    }
                    offset_44206 = 1;
                    while (slt32(offset_44206, wave_sizze_44181)) {
                        if (slt32(local_tid_44179 + offset_44206,
                                  sext_i64_i32(segred_group_sizze_34302)) &&
                            ((local_tid_44179 - squot32(local_tid_44179,
                                                        wave_sizze_44181) *
                              wave_sizze_44181) & (2 * offset_44206 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44195 = ((volatile __local
                                            float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179 +
                                                                        offset_44206)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44196 = x_44194 + x_44195;
                                
                                x_44194 = defunc_1_op_res_44196;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179)] =
                                    x_44194;
                            }
                        }
                        offset_44206 *= 2;
                    }
                    while (slt32(skip_waves_44207,
                                 squot32(sext_i64_i32(segred_group_sizze_34302) +
                                         wave_sizze_44181 - 1,
                                         wave_sizze_44181))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44206 = skip_waves_44207 * wave_sizze_44181;
                        if (slt32(local_tid_44179 + offset_44206,
                                  sext_i64_i32(segred_group_sizze_34302)) &&
                            ((local_tid_44179 - squot32(local_tid_44179,
                                                        wave_sizze_44181) *
                              wave_sizze_44181) == 0 &&
                             (squot32(local_tid_44179, wave_sizze_44181) & (2 *
                                                                            skip_waves_44207 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44195 = ((__local
                                            float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179 +
                                                                        offset_44206)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44196 = x_44194 + x_44195;
                                
                                x_44194 = defunc_1_op_res_44196;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44183)[sext_i32_i64(local_tid_44179)] =
                                    x_44194;
                            }
                        }
                        skip_waves_44207 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44179 == 0) {
                            ((__global float *) mem_42996)[gtid_34151 *
                                                           (i32_res_28263 *
                                                            i32_res_28263) +
                                                           gtid_34152 *
                                                           i32_res_28263 +
                                                           gtid_34153] =
                                x_44194;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34302
}
__kernel void mainMagnitudezisegred_large_35211(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44382_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44380_backing_aligned_1,
                                                int64_t N_28247,
                                                int64_t i32_res_28257,
                                                int64_t i32_res_28263,
                                                int64_t num_groups_35264,
                                                int64_t groups_per_segment_44366,
                                                int64_t elements_per_thread_44367,
                                                int64_t virt_num_groups_44368,
                                                int64_t threads_per_segment_44370,
                                                __global
                                                unsigned char *images_mem_42841,
                                                __global
                                                unsigned char *binop_p_mem_42850,
                                                __global
                                                unsigned char *mem_43304,
                                                __global
                                                unsigned char *group_res_arr_mem_44371,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44373)
{
    #define segred_group_sizze_35263 (mainMagnitudezisegred_group_sizze_35205)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44382_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44382_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44380_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44380_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44375;
    int32_t local_tid_44376;
    int64_t group_sizze_44379;
    int32_t wave_sizze_44378;
    int32_t group_tid_44377;
    
    global_tid_44375 = get_global_id(0);
    local_tid_44376 = get_local_id(0);
    group_sizze_44379 = get_local_size(0);
    wave_sizze_44378 = LOCKSTEP_WIDTH;
    group_tid_44377 = get_group_id(0);
    
    int32_t phys_tid_35211;
    
    phys_tid_35211 = global_tid_44375;
    
    __local char *red_arr_mem_44380;
    
    red_arr_mem_44380 = (__local char *) red_arr_mem_44380_backing_0;
    
    __local char *sync_arr_mem_44382;
    
    sync_arr_mem_44382 = (__local char *) sync_arr_mem_44382_backing_1;
    
    int32_t phys_group_id_44384;
    
    phys_group_id_44384 = get_group_id(0);
    for (int32_t i_44385 = 0; i_44385 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44368) - phys_group_id_44384,
                   sext_i64_i32(num_groups_35264)); i_44385++) {
        int32_t virt_group_id_44386 = phys_group_id_44384 + i_44385 *
                sext_i64_i32(num_groups_35264);
        int32_t flat_segment_id_44387 = squot32(virt_group_id_44386,
                                                sext_i64_i32(groups_per_segment_44366));
        int64_t global_tid_44388 = srem64(sext_i32_i64(virt_group_id_44386) *
                                          segred_group_sizze_35263 +
                                          sext_i32_i64(local_tid_44376),
                                          segred_group_sizze_35263 *
                                          groups_per_segment_44366);
        int64_t gtid_35200 = squot64(sext_i32_i64(flat_segment_id_44387),
                                     i32_res_28263);
        int64_t gtid_35201 = sext_i32_i64(flat_segment_id_44387) -
                squot64(sext_i32_i64(flat_segment_id_44387), i32_res_28263) *
                i32_res_28263;
        int64_t gtid_35210;
        float x_acc_44389;
        int64_t chunk_sizze_44390;
        
        chunk_sizze_44390 = smin64(elements_per_thread_44367,
                                   sdiv_up64(i32_res_28257 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44388)),
                                             threads_per_segment_44370));
        
        float x_35267;
        float x_35268;
        
        // neutral-initialise the accumulators
        {
            x_acc_44389 = 0.0F;
        }
        for (int64_t i_44394 = 0; i_44394 < chunk_sizze_44390; i_44394++) {
            gtid_35210 = sext_i32_i64(sext_i64_i32(global_tid_44388)) +
                threads_per_segment_44370 * i_44394;
            // apply map function
            {
                float x_35273 = ((__global
                                  float *) images_mem_42841)[gtid_35200 *
                                                             N_28247 +
                                                             gtid_35210];
                bool isnan_res_35274;
                
                isnan_res_35274 = futrts_isnan32(x_35273);
                
                float defunc_1_f_res_35275;
                
                if (isnan_res_35274) {
                    defunc_1_f_res_35275 = 0.0F;
                } else {
                    float x_35272 = ((__global
                                      float *) binop_p_mem_42850)[gtid_35201 *
                                                                  N_28247 +
                                                                  gtid_35210];
                    float defunc_1_f_res_f_res_35276 = x_35272 * x_35273;
                    
                    defunc_1_f_res_35275 = defunc_1_f_res_f_res_35276;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_35267 = x_acc_44389;
                }
                // load new values
                {
                    x_35268 = defunc_1_f_res_35275;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35269 = x_35267 + x_35268;
                    
                    // store in accumulator
                    {
                        x_acc_44389 = defunc_1_op_res_35269;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35267 = x_acc_44389;
            ((__local
              float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376)] =
                x_35267;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44395;
        int32_t skip_waves_44396;
        
        skip_waves_44396 = 1;
        
        float x_44391;
        float x_44392;
        
        offset_44395 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44376,
                      sext_i64_i32(segred_group_sizze_35263))) {
                x_44391 = ((__local
                            float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376 +
                                                        offset_44395)];
            }
        }
        offset_44395 = 1;
        while (slt32(offset_44395, wave_sizze_44378)) {
            if (slt32(local_tid_44376 + offset_44395,
                      sext_i64_i32(segred_group_sizze_35263)) &&
                ((local_tid_44376 - squot32(local_tid_44376, wave_sizze_44378) *
                  wave_sizze_44378) & (2 * offset_44395 - 1)) == 0) {
                // read array element
                {
                    x_44392 = ((volatile __local
                                float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376 +
                                                            offset_44395)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44393 = x_44391 + x_44392;
                    
                    x_44391 = defunc_1_op_res_44393;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376)] =
                        x_44391;
                }
            }
            offset_44395 *= 2;
        }
        while (slt32(skip_waves_44396,
                     squot32(sext_i64_i32(segred_group_sizze_35263) +
                             wave_sizze_44378 - 1, wave_sizze_44378))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44395 = skip_waves_44396 * wave_sizze_44378;
            if (slt32(local_tid_44376 + offset_44395,
                      sext_i64_i32(segred_group_sizze_35263)) &&
                ((local_tid_44376 - squot32(local_tid_44376, wave_sizze_44378) *
                  wave_sizze_44378) == 0 && (squot32(local_tid_44376,
                                                     wave_sizze_44378) & (2 *
                                                                          skip_waves_44396 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44392 = ((__local
                                float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376 +
                                                            offset_44395)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44393 = x_44391 + x_44392;
                    
                    x_44391 = defunc_1_op_res_44393;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376)] =
                        x_44391;
                }
            }
            skip_waves_44396 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44376) == (int64_t) 0) {
                x_acc_44389 = x_44391;
            }
        }
        if (groups_per_segment_44366 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44376 == 0) {
                    ((__global float *) mem_43304)[gtid_35200 * i32_res_28263 +
                                                   gtid_35201] = x_acc_44389;
                }
            }
        } else {
            int32_t old_counter_44397;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44376 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44371)[sext_i32_i64(virt_group_id_44386) *
                                                        segred_group_sizze_35263] =
                        x_acc_44389;
                    mem_fence_global();
                    old_counter_44397 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44373)[sext_i32_i64(srem32(flat_segment_id_44387,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44382)[(int64_t) 0] =
                        old_counter_44397 == groups_per_segment_44366 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44398;
            
            is_last_group_44398 = ((__local
                                    bool *) sync_arr_mem_44382)[(int64_t) 0];
            if (is_last_group_44398) {
                if (local_tid_44376 == 0) {
                    old_counter_44397 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44373)[sext_i32_i64(srem32(flat_segment_id_44387,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44366));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44399 =
                            sdiv_up64(groups_per_segment_44366,
                                      segred_group_sizze_35263);
                    
                    x_35267 = 0.0F;
                    for (int64_t i_44400 = 0; i_44400 < read_per_thread_44399;
                         i_44400++) {
                        int64_t group_res_id_44401 =
                                sext_i32_i64(local_tid_44376) *
                                read_per_thread_44399 + i_44400;
                        int64_t index_of_group_res_44402 =
                                sext_i32_i64(flat_segment_id_44387) *
                                groups_per_segment_44366 + group_res_id_44401;
                        
                        if (slt64(group_res_id_44401,
                                  groups_per_segment_44366)) {
                            x_35268 = ((__global
                                        float *) group_res_arr_mem_44371)[index_of_group_res_44402 *
                                                                          segred_group_sizze_35263];
                            
                            float defunc_1_op_res_35269;
                            
                            defunc_1_op_res_35269 = x_35267 + x_35268;
                            x_35267 = defunc_1_op_res_35269;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376)] =
                    x_35267;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44403;
                    int32_t skip_waves_44404;
                    
                    skip_waves_44404 = 1;
                    
                    float x_44391;
                    float x_44392;
                    
                    offset_44403 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44376,
                                  sext_i64_i32(segred_group_sizze_35263))) {
                            x_44391 = ((__local
                                        float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376 +
                                                                    offset_44403)];
                        }
                    }
                    offset_44403 = 1;
                    while (slt32(offset_44403, wave_sizze_44378)) {
                        if (slt32(local_tid_44376 + offset_44403,
                                  sext_i64_i32(segred_group_sizze_35263)) &&
                            ((local_tid_44376 - squot32(local_tid_44376,
                                                        wave_sizze_44378) *
                              wave_sizze_44378) & (2 * offset_44403 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44392 = ((volatile __local
                                            float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376 +
                                                                        offset_44403)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44393 = x_44391 + x_44392;
                                
                                x_44391 = defunc_1_op_res_44393;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376)] =
                                    x_44391;
                            }
                        }
                        offset_44403 *= 2;
                    }
                    while (slt32(skip_waves_44404,
                                 squot32(sext_i64_i32(segred_group_sizze_35263) +
                                         wave_sizze_44378 - 1,
                                         wave_sizze_44378))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44403 = skip_waves_44404 * wave_sizze_44378;
                        if (slt32(local_tid_44376 + offset_44403,
                                  sext_i64_i32(segred_group_sizze_35263)) &&
                            ((local_tid_44376 - squot32(local_tid_44376,
                                                        wave_sizze_44378) *
                              wave_sizze_44378) == 0 &&
                             (squot32(local_tid_44376, wave_sizze_44378) & (2 *
                                                                            skip_waves_44404 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44392 = ((__local
                                            float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376 +
                                                                        offset_44403)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44393 = x_44391 + x_44392;
                                
                                x_44391 = defunc_1_op_res_44393;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44380)[sext_i32_i64(local_tid_44376)] =
                                    x_44391;
                            }
                        }
                        skip_waves_44404 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44376 == 0) {
                            ((__global float *) mem_43304)[gtid_35200 *
                                                           i32_res_28263 +
                                                           gtid_35201] =
                                x_44391;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35263
}
__kernel void mainMagnitudezisegred_large_35348(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44470_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44468_backing_aligned_1,
                                                int64_t i32_res_28263,
                                                int64_t num_groups_35397,
                                                int64_t groups_per_segment_44454,
                                                int64_t elements_per_thread_44455,
                                                int64_t virt_num_groups_44456,
                                                int64_t threads_per_segment_44458,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43089,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43310,
                                                __global
                                                unsigned char *mem_43370,
                                                __global
                                                unsigned char *group_res_arr_mem_44459,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44461)
{
    #define segred_group_sizze_35396 (mainMagnitudezisegred_group_sizze_35342)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44470_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44470_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44468_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44468_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44463;
    int32_t local_tid_44464;
    int64_t group_sizze_44467;
    int32_t wave_sizze_44466;
    int32_t group_tid_44465;
    
    global_tid_44463 = get_global_id(0);
    local_tid_44464 = get_local_id(0);
    group_sizze_44467 = get_local_size(0);
    wave_sizze_44466 = LOCKSTEP_WIDTH;
    group_tid_44465 = get_group_id(0);
    
    int32_t phys_tid_35348;
    
    phys_tid_35348 = global_tid_44463;
    
    __local char *red_arr_mem_44468;
    
    red_arr_mem_44468 = (__local char *) red_arr_mem_44468_backing_0;
    
    __local char *sync_arr_mem_44470;
    
    sync_arr_mem_44470 = (__local char *) sync_arr_mem_44470_backing_1;
    
    int32_t phys_group_id_44472;
    
    phys_group_id_44472 = get_group_id(0);
    for (int32_t i_44473 = 0; i_44473 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44456) - phys_group_id_44472,
                   sext_i64_i32(num_groups_35397)); i_44473++) {
        int32_t virt_group_id_44474 = phys_group_id_44472 + i_44473 *
                sext_i64_i32(num_groups_35397);
        int32_t flat_segment_id_44475 = squot32(virt_group_id_44474,
                                                sext_i64_i32(groups_per_segment_44454));
        int64_t global_tid_44476 = srem64(sext_i32_i64(virt_group_id_44474) *
                                          segred_group_sizze_35396 +
                                          sext_i32_i64(local_tid_44464),
                                          segred_group_sizze_35396 *
                                          groups_per_segment_44454);
        int64_t gtid_35337 = squot64(sext_i32_i64(flat_segment_id_44475),
                                     i32_res_28263);
        int64_t gtid_35338 = sext_i32_i64(flat_segment_id_44475) -
                squot64(sext_i32_i64(flat_segment_id_44475), i32_res_28263) *
                i32_res_28263;
        int64_t gtid_35347;
        float x_acc_44477;
        int64_t chunk_sizze_44478;
        
        chunk_sizze_44478 = smin64(elements_per_thread_44455,
                                   sdiv_up64(i32_res_28263 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44476)),
                                             threads_per_segment_44458));
        
        float x_35400;
        float x_35401;
        
        // neutral-initialise the accumulators
        {
            x_acc_44477 = 0.0F;
        }
        for (int64_t i_44482 = 0; i_44482 < chunk_sizze_44478; i_44482++) {
            gtid_35347 = sext_i32_i64(sext_i64_i32(global_tid_44476)) +
                threads_per_segment_44458 * i_44482;
            // apply map function
            {
                float x_35406 = ((__global
                                  float *) defunc_3_map_res_mem_43310)[gtid_35337 *
                                                                       i32_res_28263 +
                                                                       gtid_35347];
                float x_35407 = ((__global
                                  float *) defunc_3_map_res_mem_43089)[gtid_35337 *
                                                                       (i32_res_28263 *
                                                                        i32_res_28263) +
                                                                       gtid_35338 *
                                                                       i32_res_28263 +
                                                                       gtid_35347];
                float defunc_1_f_res_35408 = x_35406 * x_35407;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35400 = x_acc_44477;
                }
                // load new values
                {
                    x_35401 = defunc_1_f_res_35408;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35402 = x_35400 + x_35401;
                    
                    // store in accumulator
                    {
                        x_acc_44477 = defunc_1_op_res_35402;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35400 = x_acc_44477;
            ((__local
              float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464)] =
                x_35400;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44483;
        int32_t skip_waves_44484;
        
        skip_waves_44484 = 1;
        
        float x_44479;
        float x_44480;
        
        offset_44483 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44464,
                      sext_i64_i32(segred_group_sizze_35396))) {
                x_44479 = ((__local
                            float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464 +
                                                        offset_44483)];
            }
        }
        offset_44483 = 1;
        while (slt32(offset_44483, wave_sizze_44466)) {
            if (slt32(local_tid_44464 + offset_44483,
                      sext_i64_i32(segred_group_sizze_35396)) &&
                ((local_tid_44464 - squot32(local_tid_44464, wave_sizze_44466) *
                  wave_sizze_44466) & (2 * offset_44483 - 1)) == 0) {
                // read array element
                {
                    x_44480 = ((volatile __local
                                float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464 +
                                                            offset_44483)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44481 = x_44479 + x_44480;
                    
                    x_44479 = defunc_1_op_res_44481;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464)] =
                        x_44479;
                }
            }
            offset_44483 *= 2;
        }
        while (slt32(skip_waves_44484,
                     squot32(sext_i64_i32(segred_group_sizze_35396) +
                             wave_sizze_44466 - 1, wave_sizze_44466))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44483 = skip_waves_44484 * wave_sizze_44466;
            if (slt32(local_tid_44464 + offset_44483,
                      sext_i64_i32(segred_group_sizze_35396)) &&
                ((local_tid_44464 - squot32(local_tid_44464, wave_sizze_44466) *
                  wave_sizze_44466) == 0 && (squot32(local_tid_44464,
                                                     wave_sizze_44466) & (2 *
                                                                          skip_waves_44484 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44480 = ((__local
                                float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464 +
                                                            offset_44483)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44481 = x_44479 + x_44480;
                    
                    x_44479 = defunc_1_op_res_44481;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464)] =
                        x_44479;
                }
            }
            skip_waves_44484 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44464) == (int64_t) 0) {
                x_acc_44477 = x_44479;
            }
        }
        if (groups_per_segment_44454 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44464 == 0) {
                    ((__global float *) mem_43370)[gtid_35337 * i32_res_28263 +
                                                   gtid_35338] = x_acc_44477;
                }
            }
        } else {
            int32_t old_counter_44485;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44464 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44459)[sext_i32_i64(virt_group_id_44474) *
                                                        segred_group_sizze_35396] =
                        x_acc_44477;
                    mem_fence_global();
                    old_counter_44485 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44461)[sext_i32_i64(srem32(flat_segment_id_44475,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44470)[(int64_t) 0] =
                        old_counter_44485 == groups_per_segment_44454 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44486;
            
            is_last_group_44486 = ((__local
                                    bool *) sync_arr_mem_44470)[(int64_t) 0];
            if (is_last_group_44486) {
                if (local_tid_44464 == 0) {
                    old_counter_44485 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44461)[sext_i32_i64(srem32(flat_segment_id_44475,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44454));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44487 =
                            sdiv_up64(groups_per_segment_44454,
                                      segred_group_sizze_35396);
                    
                    x_35400 = 0.0F;
                    for (int64_t i_44488 = 0; i_44488 < read_per_thread_44487;
                         i_44488++) {
                        int64_t group_res_id_44489 =
                                sext_i32_i64(local_tid_44464) *
                                read_per_thread_44487 + i_44488;
                        int64_t index_of_group_res_44490 =
                                sext_i32_i64(flat_segment_id_44475) *
                                groups_per_segment_44454 + group_res_id_44489;
                        
                        if (slt64(group_res_id_44489,
                                  groups_per_segment_44454)) {
                            x_35401 = ((__global
                                        float *) group_res_arr_mem_44459)[index_of_group_res_44490 *
                                                                          segred_group_sizze_35396];
                            
                            float defunc_1_op_res_35402;
                            
                            defunc_1_op_res_35402 = x_35400 + x_35401;
                            x_35400 = defunc_1_op_res_35402;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464)] =
                    x_35400;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44491;
                    int32_t skip_waves_44492;
                    
                    skip_waves_44492 = 1;
                    
                    float x_44479;
                    float x_44480;
                    
                    offset_44491 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44464,
                                  sext_i64_i32(segred_group_sizze_35396))) {
                            x_44479 = ((__local
                                        float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464 +
                                                                    offset_44491)];
                        }
                    }
                    offset_44491 = 1;
                    while (slt32(offset_44491, wave_sizze_44466)) {
                        if (slt32(local_tid_44464 + offset_44491,
                                  sext_i64_i32(segred_group_sizze_35396)) &&
                            ((local_tid_44464 - squot32(local_tid_44464,
                                                        wave_sizze_44466) *
                              wave_sizze_44466) & (2 * offset_44491 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44480 = ((volatile __local
                                            float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464 +
                                                                        offset_44491)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44481 = x_44479 + x_44480;
                                
                                x_44479 = defunc_1_op_res_44481;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464)] =
                                    x_44479;
                            }
                        }
                        offset_44491 *= 2;
                    }
                    while (slt32(skip_waves_44492,
                                 squot32(sext_i64_i32(segred_group_sizze_35396) +
                                         wave_sizze_44466 - 1,
                                         wave_sizze_44466))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44491 = skip_waves_44492 * wave_sizze_44466;
                        if (slt32(local_tid_44464 + offset_44491,
                                  sext_i64_i32(segred_group_sizze_35396)) &&
                            ((local_tid_44464 - squot32(local_tid_44464,
                                                        wave_sizze_44466) *
                              wave_sizze_44466) == 0 &&
                             (squot32(local_tid_44464, wave_sizze_44466) & (2 *
                                                                            skip_waves_44492 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44480 = ((__local
                                            float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464 +
                                                                        offset_44491)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44481 = x_44479 + x_44480;
                                
                                x_44479 = defunc_1_op_res_44481;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44468)[sext_i32_i64(local_tid_44464)] =
                                    x_44479;
                            }
                        }
                        skip_waves_44492 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44464 == 0) {
                            ((__global float *) mem_43370)[gtid_35337 *
                                                           i32_res_28263 +
                                                           gtid_35338] =
                                x_44479;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35396
}
__kernel void mainMagnitudezisegred_large_35478(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44602_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44600_backing_aligned_1,
                                                int64_t N_28247,
                                                int64_t i32_res_28263,
                                                int64_t num_groups_35525,
                                                int64_t groups_per_segment_44586,
                                                int64_t elements_per_thread_44587,
                                                int64_t virt_num_groups_44588,
                                                int64_t threads_per_segment_44590,
                                                __global
                                                unsigned char *mem_42857,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43376,
                                                __global
                                                unsigned char *mem_43594,
                                                __global
                                                unsigned char *group_res_arr_mem_44591,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44593)
{
    #define segred_group_sizze_35524 (mainMagnitudezisegred_group_sizze_35472)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44602_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44602_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44600_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44600_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44595;
    int32_t local_tid_44596;
    int64_t group_sizze_44599;
    int32_t wave_sizze_44598;
    int32_t group_tid_44597;
    
    global_tid_44595 = get_global_id(0);
    local_tid_44596 = get_local_id(0);
    group_sizze_44599 = get_local_size(0);
    wave_sizze_44598 = LOCKSTEP_WIDTH;
    group_tid_44597 = get_group_id(0);
    
    int32_t phys_tid_35478;
    
    phys_tid_35478 = global_tid_44595;
    
    __local char *red_arr_mem_44600;
    
    red_arr_mem_44600 = (__local char *) red_arr_mem_44600_backing_0;
    
    __local char *sync_arr_mem_44602;
    
    sync_arr_mem_44602 = (__local char *) sync_arr_mem_44602_backing_1;
    
    int32_t phys_group_id_44604;
    
    phys_group_id_44604 = get_group_id(0);
    for (int32_t i_44605 = 0; i_44605 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44588) - phys_group_id_44604,
                   sext_i64_i32(num_groups_35525)); i_44605++) {
        int32_t virt_group_id_44606 = phys_group_id_44604 + i_44605 *
                sext_i64_i32(num_groups_35525);
        int32_t flat_segment_id_44607 = squot32(virt_group_id_44606,
                                                sext_i64_i32(groups_per_segment_44586));
        int64_t global_tid_44608 = srem64(sext_i32_i64(virt_group_id_44606) *
                                          segred_group_sizze_35524 +
                                          sext_i32_i64(local_tid_44596),
                                          segred_group_sizze_35524 *
                                          groups_per_segment_44586);
        int64_t gtid_35467 = squot64(sext_i32_i64(flat_segment_id_44607),
                                     N_28247);
        int64_t gtid_35468 = sext_i32_i64(flat_segment_id_44607) -
                squot64(sext_i32_i64(flat_segment_id_44607), N_28247) * N_28247;
        int64_t gtid_35477;
        float x_acc_44609;
        int64_t chunk_sizze_44610;
        
        chunk_sizze_44610 = smin64(elements_per_thread_44587,
                                   sdiv_up64(i32_res_28263 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44608)),
                                             threads_per_segment_44590));
        
        float x_35528;
        float x_35529;
        
        // neutral-initialise the accumulators
        {
            x_acc_44609 = 0.0F;
        }
        for (int64_t i_44614 = 0; i_44614 < chunk_sizze_44610; i_44614++) {
            gtid_35477 = sext_i32_i64(sext_i64_i32(global_tid_44608)) +
                threads_per_segment_44590 * i_44614;
            // apply map function
            {
                float x_35533 = ((__global
                                  float *) defunc_4_map_res_mem_43376)[gtid_35467 *
                                                                       i32_res_28263 +
                                                                       gtid_35477];
                float x_35534 = ((__global float *) mem_42857)[gtid_35468 *
                                                               i32_res_28263 +
                                                               gtid_35477];
                float defunc_1_f_res_35535 = x_35533 * x_35534;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_35528 = x_acc_44609;
                }
                // load new values
                {
                    x_35529 = defunc_1_f_res_35535;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_35530 = x_35528 + x_35529;
                    
                    // store in accumulator
                    {
                        x_acc_44609 = defunc_1_op_res_35530;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_35528 = x_acc_44609;
            ((__local
              float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596)] =
                x_35528;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44615;
        int32_t skip_waves_44616;
        
        skip_waves_44616 = 1;
        
        float x_44611;
        float x_44612;
        
        offset_44615 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44596,
                      sext_i64_i32(segred_group_sizze_35524))) {
                x_44611 = ((__local
                            float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596 +
                                                        offset_44615)];
            }
        }
        offset_44615 = 1;
        while (slt32(offset_44615, wave_sizze_44598)) {
            if (slt32(local_tid_44596 + offset_44615,
                      sext_i64_i32(segred_group_sizze_35524)) &&
                ((local_tid_44596 - squot32(local_tid_44596, wave_sizze_44598) *
                  wave_sizze_44598) & (2 * offset_44615 - 1)) == 0) {
                // read array element
                {
                    x_44612 = ((volatile __local
                                float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596 +
                                                            offset_44615)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44613 = x_44611 + x_44612;
                    
                    x_44611 = defunc_1_op_res_44613;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596)] =
                        x_44611;
                }
            }
            offset_44615 *= 2;
        }
        while (slt32(skip_waves_44616,
                     squot32(sext_i64_i32(segred_group_sizze_35524) +
                             wave_sizze_44598 - 1, wave_sizze_44598))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44615 = skip_waves_44616 * wave_sizze_44598;
            if (slt32(local_tid_44596 + offset_44615,
                      sext_i64_i32(segred_group_sizze_35524)) &&
                ((local_tid_44596 - squot32(local_tid_44596, wave_sizze_44598) *
                  wave_sizze_44598) == 0 && (squot32(local_tid_44596,
                                                     wave_sizze_44598) & (2 *
                                                                          skip_waves_44616 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44612 = ((__local
                                float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596 +
                                                            offset_44615)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44613 = x_44611 + x_44612;
                    
                    x_44611 = defunc_1_op_res_44613;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596)] =
                        x_44611;
                }
            }
            skip_waves_44616 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44596) == (int64_t) 0) {
                x_acc_44609 = x_44611;
            }
        }
        if (groups_per_segment_44586 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44596 == 0) {
                    ((__global float *) mem_43594)[gtid_35467 * N_28247 +
                                                   gtid_35468] = x_acc_44609;
                }
            }
        } else {
            int32_t old_counter_44617;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44596 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44591)[sext_i32_i64(virt_group_id_44606) *
                                                        segred_group_sizze_35524] =
                        x_acc_44609;
                    mem_fence_global();
                    old_counter_44617 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44593)[sext_i32_i64(srem32(flat_segment_id_44607,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44602)[(int64_t) 0] =
                        old_counter_44617 == groups_per_segment_44586 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44618;
            
            is_last_group_44618 = ((__local
                                    bool *) sync_arr_mem_44602)[(int64_t) 0];
            if (is_last_group_44618) {
                if (local_tid_44596 == 0) {
                    old_counter_44617 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44593)[sext_i32_i64(srem32(flat_segment_id_44607,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44586));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44619 =
                            sdiv_up64(groups_per_segment_44586,
                                      segred_group_sizze_35524);
                    
                    x_35528 = 0.0F;
                    for (int64_t i_44620 = 0; i_44620 < read_per_thread_44619;
                         i_44620++) {
                        int64_t group_res_id_44621 =
                                sext_i32_i64(local_tid_44596) *
                                read_per_thread_44619 + i_44620;
                        int64_t index_of_group_res_44622 =
                                sext_i32_i64(flat_segment_id_44607) *
                                groups_per_segment_44586 + group_res_id_44621;
                        
                        if (slt64(group_res_id_44621,
                                  groups_per_segment_44586)) {
                            x_35529 = ((__global
                                        float *) group_res_arr_mem_44591)[index_of_group_res_44622 *
                                                                          segred_group_sizze_35524];
                            
                            float defunc_1_op_res_35530;
                            
                            defunc_1_op_res_35530 = x_35528 + x_35529;
                            x_35528 = defunc_1_op_res_35530;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596)] =
                    x_35528;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44623;
                    int32_t skip_waves_44624;
                    
                    skip_waves_44624 = 1;
                    
                    float x_44611;
                    float x_44612;
                    
                    offset_44623 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44596,
                                  sext_i64_i32(segred_group_sizze_35524))) {
                            x_44611 = ((__local
                                        float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596 +
                                                                    offset_44623)];
                        }
                    }
                    offset_44623 = 1;
                    while (slt32(offset_44623, wave_sizze_44598)) {
                        if (slt32(local_tid_44596 + offset_44623,
                                  sext_i64_i32(segred_group_sizze_35524)) &&
                            ((local_tid_44596 - squot32(local_tid_44596,
                                                        wave_sizze_44598) *
                              wave_sizze_44598) & (2 * offset_44623 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44612 = ((volatile __local
                                            float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596 +
                                                                        offset_44623)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44613 = x_44611 + x_44612;
                                
                                x_44611 = defunc_1_op_res_44613;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596)] =
                                    x_44611;
                            }
                        }
                        offset_44623 *= 2;
                    }
                    while (slt32(skip_waves_44624,
                                 squot32(sext_i64_i32(segred_group_sizze_35524) +
                                         wave_sizze_44598 - 1,
                                         wave_sizze_44598))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44623 = skip_waves_44624 * wave_sizze_44598;
                        if (slt32(local_tid_44596 + offset_44623,
                                  sext_i64_i32(segred_group_sizze_35524)) &&
                            ((local_tid_44596 - squot32(local_tid_44596,
                                                        wave_sizze_44598) *
                              wave_sizze_44598) == 0 &&
                             (squot32(local_tid_44596, wave_sizze_44598) & (2 *
                                                                            skip_waves_44624 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44612 = ((__local
                                            float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596 +
                                                                        offset_44623)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44613 = x_44611 + x_44612;
                                
                                x_44611 = defunc_1_op_res_44613;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44600)[sext_i32_i64(local_tid_44596)] =
                                    x_44611;
                            }
                        }
                        skip_waves_44624 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44596 == 0) {
                            ((__global float *) mem_43594)[gtid_35467 *
                                                           N_28247 +
                                                           gtid_35468] =
                                x_44611;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35524
}
__kernel void mainMagnitudezisegred_large_36044(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44854_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44852_backing_aligned_1,
                                                int64_t N_28247,
                                                int64_t i32_res_28257,
                                                int64_t num_groups_36091,
                                                int64_t groups_per_segment_44838,
                                                int64_t elements_per_thread_44839,
                                                int64_t virt_num_groups_44840,
                                                int64_t threads_per_segment_44842,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43638,
                                                __global
                                                unsigned char *mem_43692,
                                                __global
                                                unsigned char *mem_43695,
                                                __global
                                                unsigned char *group_res_arr_mem_44843,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44845)
{
    #define segred_group_sizze_36090 (mainMagnitudezisegred_group_sizze_36038)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44854_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44854_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44852_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44852_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44847;
    int32_t local_tid_44848;
    int64_t group_sizze_44851;
    int32_t wave_sizze_44850;
    int32_t group_tid_44849;
    
    global_tid_44847 = get_global_id(0);
    local_tid_44848 = get_local_id(0);
    group_sizze_44851 = get_local_size(0);
    wave_sizze_44850 = LOCKSTEP_WIDTH;
    group_tid_44849 = get_group_id(0);
    
    int32_t phys_tid_36044;
    
    phys_tid_36044 = global_tid_44847;
    
    __local char *red_arr_mem_44852;
    
    red_arr_mem_44852 = (__local char *) red_arr_mem_44852_backing_0;
    
    __local char *sync_arr_mem_44854;
    
    sync_arr_mem_44854 = (__local char *) sync_arr_mem_44854_backing_1;
    
    int32_t phys_group_id_44856;
    
    phys_group_id_44856 = get_group_id(0);
    for (int32_t i_44857 = 0; i_44857 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44840) - phys_group_id_44856,
                   sext_i64_i32(num_groups_36091)); i_44857++) {
        int32_t virt_group_id_44858 = phys_group_id_44856 + i_44857 *
                sext_i64_i32(num_groups_36091);
        int32_t flat_segment_id_44859 = squot32(virt_group_id_44858,
                                                sext_i64_i32(groups_per_segment_44838));
        int64_t global_tid_44860 = srem64(sext_i32_i64(virt_group_id_44858) *
                                          segred_group_sizze_36090 +
                                          sext_i32_i64(local_tid_44848),
                                          segred_group_sizze_36090 *
                                          groups_per_segment_44838);
        int64_t gtid_36035 = sext_i32_i64(flat_segment_id_44859);
        int64_t gtid_36043;
        float x_acc_44861;
        int64_t chunk_sizze_44862;
        
        chunk_sizze_44862 = smin64(elements_per_thread_44839,
                                   sdiv_up64(i32_res_28257 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44860)),
                                             threads_per_segment_44842));
        
        float x_36094;
        float x_36095;
        
        // neutral-initialise the accumulators
        {
            x_acc_44861 = 0.0F;
        }
        for (int64_t i_44866 = 0; i_44866 < chunk_sizze_44862; i_44866++) {
            gtid_36043 = sext_i32_i64(sext_i64_i32(global_tid_44860)) +
                threads_per_segment_44842 * i_44866;
            // apply map function
            {
                int32_t defunc_0_f_res_36098 = ((__global
                                                 int32_t *) mem_43692)[gtid_36035];
                int32_t index_primexp_40928 = sext_i64_i32(gtid_36043);
                bool cond_36100 = slt32(index_primexp_40928,
                                        defunc_0_f_res_36098);
                float defunc_0_f_res_36101;
                
                if (cond_36100) {
                    int64_t i_36102 = sext_i32_i64(index_primexp_40928);
                    float defunc_0_f_res_t_res_36103 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_36035 *
                                                                                              N_28247 +
                                                                                              i_36102];
                    
                    defunc_0_f_res_36101 = defunc_0_f_res_t_res_36103;
                } else {
                    defunc_0_f_res_36101 = 0.0F;
                }
                
                float defunc_0_f_res_36104 = defunc_0_f_res_36101 *
                      defunc_0_f_res_36101;
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_36094 = x_acc_44861;
                }
                // load new values
                {
                    x_36095 = defunc_0_f_res_36104;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36096 = x_36094 + x_36095;
                    
                    // store in accumulator
                    {
                        x_acc_44861 = defunc_1_op_res_36096;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36094 = x_acc_44861;
            ((__local
              float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                x_36094;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44867;
        int32_t skip_waves_44868;
        
        skip_waves_44868 = 1;
        
        float x_44863;
        float x_44864;
        
        offset_44867 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44848,
                      sext_i64_i32(segred_group_sizze_36090))) {
                x_44863 = ((__local
                            float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848 +
                                                        offset_44867)];
            }
        }
        offset_44867 = 1;
        while (slt32(offset_44867, wave_sizze_44850)) {
            if (slt32(local_tid_44848 + offset_44867,
                      sext_i64_i32(segred_group_sizze_36090)) &&
                ((local_tid_44848 - squot32(local_tid_44848, wave_sizze_44850) *
                  wave_sizze_44850) & (2 * offset_44867 - 1)) == 0) {
                // read array element
                {
                    x_44864 = ((volatile __local
                                float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848 +
                                                            offset_44867)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44865 = x_44863 + x_44864;
                    
                    x_44863 = defunc_1_op_res_44865;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                        x_44863;
                }
            }
            offset_44867 *= 2;
        }
        while (slt32(skip_waves_44868,
                     squot32(sext_i64_i32(segred_group_sizze_36090) +
                             wave_sizze_44850 - 1, wave_sizze_44850))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44867 = skip_waves_44868 * wave_sizze_44850;
            if (slt32(local_tid_44848 + offset_44867,
                      sext_i64_i32(segred_group_sizze_36090)) &&
                ((local_tid_44848 - squot32(local_tid_44848, wave_sizze_44850) *
                  wave_sizze_44850) == 0 && (squot32(local_tid_44848,
                                                     wave_sizze_44850) & (2 *
                                                                          skip_waves_44868 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44864 = ((__local
                                float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848 +
                                                            offset_44867)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44865 = x_44863 + x_44864;
                    
                    x_44863 = defunc_1_op_res_44865;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                        x_44863;
                }
            }
            skip_waves_44868 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44848) == (int64_t) 0) {
                x_acc_44861 = x_44863;
            }
        }
        if (groups_per_segment_44838 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44848 == 0) {
                    ((__global float *) mem_43695)[gtid_36035] = x_acc_44861;
                }
            }
        } else {
            int32_t old_counter_44869;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44848 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44843)[sext_i32_i64(virt_group_id_44858) *
                                                        segred_group_sizze_36090] =
                        x_acc_44861;
                    mem_fence_global();
                    old_counter_44869 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44845)[sext_i32_i64(srem32(flat_segment_id_44859,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44854)[(int64_t) 0] =
                        old_counter_44869 == groups_per_segment_44838 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44870;
            
            is_last_group_44870 = ((__local
                                    bool *) sync_arr_mem_44854)[(int64_t) 0];
            if (is_last_group_44870) {
                if (local_tid_44848 == 0) {
                    old_counter_44869 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44845)[sext_i32_i64(srem32(flat_segment_id_44859,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44838));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44871 =
                            sdiv_up64(groups_per_segment_44838,
                                      segred_group_sizze_36090);
                    
                    x_36094 = 0.0F;
                    for (int64_t i_44872 = 0; i_44872 < read_per_thread_44871;
                         i_44872++) {
                        int64_t group_res_id_44873 =
                                sext_i32_i64(local_tid_44848) *
                                read_per_thread_44871 + i_44872;
                        int64_t index_of_group_res_44874 =
                                sext_i32_i64(flat_segment_id_44859) *
                                groups_per_segment_44838 + group_res_id_44873;
                        
                        if (slt64(group_res_id_44873,
                                  groups_per_segment_44838)) {
                            x_36095 = ((__global
                                        float *) group_res_arr_mem_44843)[index_of_group_res_44874 *
                                                                          segred_group_sizze_36090];
                            
                            float defunc_1_op_res_36096;
                            
                            defunc_1_op_res_36096 = x_36094 + x_36095;
                            x_36094 = defunc_1_op_res_36096;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                    x_36094;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44875;
                    int32_t skip_waves_44876;
                    
                    skip_waves_44876 = 1;
                    
                    float x_44863;
                    float x_44864;
                    
                    offset_44875 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44848,
                                  sext_i64_i32(segred_group_sizze_36090))) {
                            x_44863 = ((__local
                                        float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848 +
                                                                    offset_44875)];
                        }
                    }
                    offset_44875 = 1;
                    while (slt32(offset_44875, wave_sizze_44850)) {
                        if (slt32(local_tid_44848 + offset_44875,
                                  sext_i64_i32(segred_group_sizze_36090)) &&
                            ((local_tid_44848 - squot32(local_tid_44848,
                                                        wave_sizze_44850) *
                              wave_sizze_44850) & (2 * offset_44875 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44864 = ((volatile __local
                                            float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848 +
                                                                        offset_44875)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44865 = x_44863 + x_44864;
                                
                                x_44863 = defunc_1_op_res_44865;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                                    x_44863;
                            }
                        }
                        offset_44875 *= 2;
                    }
                    while (slt32(skip_waves_44876,
                                 squot32(sext_i64_i32(segred_group_sizze_36090) +
                                         wave_sizze_44850 - 1,
                                         wave_sizze_44850))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44875 = skip_waves_44876 * wave_sizze_44850;
                        if (slt32(local_tid_44848 + offset_44875,
                                  sext_i64_i32(segred_group_sizze_36090)) &&
                            ((local_tid_44848 - squot32(local_tid_44848,
                                                        wave_sizze_44850) *
                              wave_sizze_44850) == 0 &&
                             (squot32(local_tid_44848, wave_sizze_44850) & (2 *
                                                                            skip_waves_44876 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44864 = ((__local
                                            float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848 +
                                                                        offset_44875)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44865 = x_44863 + x_44864;
                                
                                x_44863 = defunc_1_op_res_44865;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44852)[sext_i32_i64(local_tid_44848)] =
                                    x_44863;
                            }
                        }
                        skip_waves_44876 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44848 == 0) {
                            ((__global float *) mem_43695)[gtid_36035] =
                                x_44863;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36090
}
__kernel void mainMagnitudezisegred_large_36065(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44794_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44792_backing_aligned_1,
                                                int64_t N_28247,
                                                int64_t i32_res_28257,
                                                int64_t num_groups_36077,
                                                int64_t groups_per_segment_44778,
                                                int64_t elements_per_thread_44779,
                                                int64_t virt_num_groups_44780,
                                                int64_t threads_per_segment_44782,
                                                __global
                                                unsigned char *images_mem_42841,
                                                __global
                                                unsigned char *mem_43692,
                                                __global
                                                unsigned char *group_res_arr_mem_44783,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44785)
{
    #define segred_group_sizze_36076 (mainMagnitudezisegred_group_sizze_36059)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44794_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44794_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44792_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44792_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44787;
    int32_t local_tid_44788;
    int64_t group_sizze_44791;
    int32_t wave_sizze_44790;
    int32_t group_tid_44789;
    
    global_tid_44787 = get_global_id(0);
    local_tid_44788 = get_local_id(0);
    group_sizze_44791 = get_local_size(0);
    wave_sizze_44790 = LOCKSTEP_WIDTH;
    group_tid_44789 = get_group_id(0);
    
    int32_t phys_tid_36065;
    
    phys_tid_36065 = global_tid_44787;
    
    __local char *red_arr_mem_44792;
    
    red_arr_mem_44792 = (__local char *) red_arr_mem_44792_backing_0;
    
    __local char *sync_arr_mem_44794;
    
    sync_arr_mem_44794 = (__local char *) sync_arr_mem_44794_backing_1;
    
    int32_t phys_group_id_44796;
    
    phys_group_id_44796 = get_group_id(0);
    for (int32_t i_44797 = 0; i_44797 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44780) - phys_group_id_44796,
                   sext_i64_i32(num_groups_36077)); i_44797++) {
        int32_t virt_group_id_44798 = phys_group_id_44796 + i_44797 *
                sext_i64_i32(num_groups_36077);
        int32_t flat_segment_id_44799 = squot32(virt_group_id_44798,
                                                sext_i64_i32(groups_per_segment_44778));
        int64_t global_tid_44800 = srem64(sext_i32_i64(virt_group_id_44798) *
                                          segred_group_sizze_36076 +
                                          sext_i32_i64(local_tid_44788),
                                          segred_group_sizze_36076 *
                                          groups_per_segment_44778);
        int64_t gtid_36056 = sext_i32_i64(flat_segment_id_44799);
        int64_t gtid_36064;
        int32_t x_acc_44801;
        int64_t chunk_sizze_44802;
        
        chunk_sizze_44802 = smin64(elements_per_thread_44779,
                                   sdiv_up64(i32_res_28257 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44800)),
                                             threads_per_segment_44782));
        
        int32_t x_36080;
        int32_t x_36081;
        
        // neutral-initialise the accumulators
        {
            x_acc_44801 = 0;
        }
        for (int64_t i_44806 = 0; i_44806 < chunk_sizze_44802; i_44806++) {
            gtid_36064 = sext_i32_i64(sext_i64_i32(global_tid_44800)) +
                threads_per_segment_44782 * i_44806;
            // apply map function
            {
                float x_36084 = ((__global
                                  float *) images_mem_42841)[gtid_36056 *
                                                             N_28247 +
                                                             gtid_36064];
                bool isnan_res_36085;
                
                isnan_res_36085 = futrts_isnan32(x_36084);
                
                bool cond_36086 = !isnan_res_36085;
                int32_t defunc_0_f_res_36087 = btoi_bool_i32(cond_36086);
                
                // save map-out results
                { }
                // load accumulator
                {
                    x_36080 = x_acc_44801;
                }
                // load new values
                {
                    x_36081 = defunc_0_f_res_36087;
                }
                // apply reduction operator
                {
                    int32_t defunc_1_op_res_36082 = add32(x_36080, x_36081);
                    
                    // store in accumulator
                    {
                        x_acc_44801 = defunc_1_op_res_36082;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36080 = x_acc_44801;
            ((__local
              int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788)] =
                x_36080;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44807;
        int32_t skip_waves_44808;
        
        skip_waves_44808 = 1;
        
        int32_t x_44803;
        int32_t x_44804;
        
        offset_44807 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44788,
                      sext_i64_i32(segred_group_sizze_36076))) {
                x_44803 = ((__local
                            int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788 +
                                                          offset_44807)];
            }
        }
        offset_44807 = 1;
        while (slt32(offset_44807, wave_sizze_44790)) {
            if (slt32(local_tid_44788 + offset_44807,
                      sext_i64_i32(segred_group_sizze_36076)) &&
                ((local_tid_44788 - squot32(local_tid_44788, wave_sizze_44790) *
                  wave_sizze_44790) & (2 * offset_44807 - 1)) == 0) {
                // read array element
                {
                    x_44804 = ((volatile __local
                                int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788 +
                                                              offset_44807)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44805 = add32(x_44803, x_44804);
                    
                    x_44803 = defunc_1_op_res_44805;
                }
                // write result of operation
                {
                    ((volatile __local
                      int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788)] =
                        x_44803;
                }
            }
            offset_44807 *= 2;
        }
        while (slt32(skip_waves_44808,
                     squot32(sext_i64_i32(segred_group_sizze_36076) +
                             wave_sizze_44790 - 1, wave_sizze_44790))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44807 = skip_waves_44808 * wave_sizze_44790;
            if (slt32(local_tid_44788 + offset_44807,
                      sext_i64_i32(segred_group_sizze_36076)) &&
                ((local_tid_44788 - squot32(local_tid_44788, wave_sizze_44790) *
                  wave_sizze_44790) == 0 && (squot32(local_tid_44788,
                                                     wave_sizze_44790) & (2 *
                                                                          skip_waves_44808 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44804 = ((__local
                                int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788 +
                                                              offset_44807)];
                }
                // apply reduction operation
                {
                    int32_t defunc_1_op_res_44805 = add32(x_44803, x_44804);
                    
                    x_44803 = defunc_1_op_res_44805;
                }
                // write result of operation
                {
                    ((__local
                      int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788)] =
                        x_44803;
                }
            }
            skip_waves_44808 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44788) == (int64_t) 0) {
                x_acc_44801 = x_44803;
            }
        }
        if (groups_per_segment_44778 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44788 == 0) {
                    ((__global int32_t *) mem_43692)[gtid_36056] = x_acc_44801;
                }
            }
        } else {
            int32_t old_counter_44809;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44788 == 0) {
                    ((__global
                      int32_t *) group_res_arr_mem_44783)[sext_i32_i64(virt_group_id_44798) *
                                                          segred_group_sizze_36076] =
                        x_acc_44801;
                    mem_fence_global();
                    old_counter_44809 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44785)[sext_i32_i64(srem32(flat_segment_id_44799,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44794)[(int64_t) 0] =
                        old_counter_44809 == groups_per_segment_44778 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44810;
            
            is_last_group_44810 = ((__local
                                    bool *) sync_arr_mem_44794)[(int64_t) 0];
            if (is_last_group_44810) {
                if (local_tid_44788 == 0) {
                    old_counter_44809 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44785)[sext_i32_i64(srem32(flat_segment_id_44799,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44778));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44811 =
                            sdiv_up64(groups_per_segment_44778,
                                      segred_group_sizze_36076);
                    
                    x_36080 = 0;
                    for (int64_t i_44812 = 0; i_44812 < read_per_thread_44811;
                         i_44812++) {
                        int64_t group_res_id_44813 =
                                sext_i32_i64(local_tid_44788) *
                                read_per_thread_44811 + i_44812;
                        int64_t index_of_group_res_44814 =
                                sext_i32_i64(flat_segment_id_44799) *
                                groups_per_segment_44778 + group_res_id_44813;
                        
                        if (slt64(group_res_id_44813,
                                  groups_per_segment_44778)) {
                            x_36081 = ((__global
                                        int32_t *) group_res_arr_mem_44783)[index_of_group_res_44814 *
                                                                            segred_group_sizze_36076];
                            
                            int32_t defunc_1_op_res_36082;
                            
                            defunc_1_op_res_36082 = add32(x_36080, x_36081);
                            x_36080 = defunc_1_op_res_36082;
                        }
                    }
                }
                ((__local
                  int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788)] =
                    x_36080;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44815;
                    int32_t skip_waves_44816;
                    
                    skip_waves_44816 = 1;
                    
                    int32_t x_44803;
                    int32_t x_44804;
                    
                    offset_44815 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44788,
                                  sext_i64_i32(segred_group_sizze_36076))) {
                            x_44803 = ((__local
                                        int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788 +
                                                                      offset_44815)];
                        }
                    }
                    offset_44815 = 1;
                    while (slt32(offset_44815, wave_sizze_44790)) {
                        if (slt32(local_tid_44788 + offset_44815,
                                  sext_i64_i32(segred_group_sizze_36076)) &&
                            ((local_tid_44788 - squot32(local_tid_44788,
                                                        wave_sizze_44790) *
                              wave_sizze_44790) & (2 * offset_44815 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44804 = ((volatile __local
                                            int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788 +
                                                                          offset_44815)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44805 = add32(x_44803,
                                                                      x_44804);
                                
                                x_44803 = defunc_1_op_res_44805;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788)] =
                                    x_44803;
                            }
                        }
                        offset_44815 *= 2;
                    }
                    while (slt32(skip_waves_44816,
                                 squot32(sext_i64_i32(segred_group_sizze_36076) +
                                         wave_sizze_44790 - 1,
                                         wave_sizze_44790))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44815 = skip_waves_44816 * wave_sizze_44790;
                        if (slt32(local_tid_44788 + offset_44815,
                                  sext_i64_i32(segred_group_sizze_36076)) &&
                            ((local_tid_44788 - squot32(local_tid_44788,
                                                        wave_sizze_44790) *
                              wave_sizze_44790) == 0 &&
                             (squot32(local_tid_44788, wave_sizze_44790) & (2 *
                                                                            skip_waves_44816 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44804 = ((__local
                                            int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788 +
                                                                          offset_44815)];
                            }
                            // apply reduction operation
                            {
                                int32_t defunc_1_op_res_44805 = add32(x_44803,
                                                                      x_44804);
                                
                                x_44803 = defunc_1_op_res_44805;
                            }
                            // write result of operation
                            {
                                ((__local
                                  int32_t *) red_arr_mem_44792)[sext_i32_i64(local_tid_44788)] =
                                    x_44803;
                            }
                        }
                        skip_waves_44816 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44788 == 0) {
                            ((__global int32_t *) mem_43692)[gtid_36056] =
                                x_44803;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36076
}
__kernel void mainMagnitudezisegred_large_36216(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_44963_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_44961_backing_aligned_1,
                                                int64_t N_28247,
                                                int64_t i32_res_28618,
                                                int64_t num_groups_36234,
                                                int64_t groups_per_segment_44947,
                                                int64_t elements_per_thread_44948,
                                                int64_t virt_num_groups_44949,
                                                int64_t threads_per_segment_44951,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43638,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43704,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43705,
                                                __global
                                                unsigned char *mem_43738,
                                                __global
                                                unsigned char *group_res_arr_mem_44952,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_44954)
{
    #define segred_group_sizze_36233 (mainMagnitudezisegred_group_sizze_36210)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_44963_backing_1 =
                          (__local volatile
                           char *) sync_arr_mem_44963_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_44961_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44961_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44956;
    int32_t local_tid_44957;
    int64_t group_sizze_44960;
    int32_t wave_sizze_44959;
    int32_t group_tid_44958;
    
    global_tid_44956 = get_global_id(0);
    local_tid_44957 = get_local_id(0);
    group_sizze_44960 = get_local_size(0);
    wave_sizze_44959 = LOCKSTEP_WIDTH;
    group_tid_44958 = get_group_id(0);
    
    int32_t phys_tid_36216;
    
    phys_tid_36216 = global_tid_44956;
    
    __local char *red_arr_mem_44961;
    
    red_arr_mem_44961 = (__local char *) red_arr_mem_44961_backing_0;
    
    __local char *sync_arr_mem_44963;
    
    sync_arr_mem_44963 = (__local char *) sync_arr_mem_44963_backing_1;
    
    int32_t phys_group_id_44965;
    
    phys_group_id_44965 = get_group_id(0);
    for (int32_t i_44966 = 0; i_44966 <
         sdiv_up32(sext_i64_i32(virt_num_groups_44949) - phys_group_id_44965,
                   sext_i64_i32(num_groups_36234)); i_44966++) {
        int32_t virt_group_id_44967 = phys_group_id_44965 + i_44966 *
                sext_i64_i32(num_groups_36234);
        int32_t flat_segment_id_44968 = squot32(virt_group_id_44967,
                                                sext_i64_i32(groups_per_segment_44947));
        int64_t global_tid_44969 = srem64(sext_i32_i64(virt_group_id_44967) *
                                          segred_group_sizze_36233 +
                                          sext_i32_i64(local_tid_44957),
                                          segred_group_sizze_36233 *
                                          groups_per_segment_44947);
        int64_t gtid_36207 = sext_i32_i64(flat_segment_id_44968);
        int64_t gtid_36215;
        float x_acc_44970;
        int64_t chunk_sizze_44971;
        
        chunk_sizze_44971 = smin64(elements_per_thread_44948,
                                   sdiv_up64(i32_res_28618 -
                                             sext_i32_i64(sext_i64_i32(global_tid_44969)),
                                             threads_per_segment_44951));
        
        float x_36237;
        float x_36238;
        
        // neutral-initialise the accumulators
        {
            x_acc_44970 = 0.0F;
        }
        for (int64_t i_44975 = 0; i_44975 < chunk_sizze_44971; i_44975++) {
            gtid_36215 = sext_i32_i64(sext_i64_i32(global_tid_44969)) +
                threads_per_segment_44951 * i_44975;
            // apply map function
            {
                int32_t x_36242 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43704)[gtid_36207];
                int32_t index_primexp_40933 = sext_i64_i32(gtid_36215);
                bool cond_36244 = slt32(index_primexp_40933, x_36242);
                float defunc_0_f_res_36245;
                
                if (cond_36244) {
                    int32_t x_36241 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_36207];
                    int32_t x_36246 = add32(x_36241, index_primexp_40933);
                    int32_t x_36247 = sub32(x_36246, x_36242);
                    int32_t i_36248 = add32(1, x_36247);
                    int64_t i_36249 = sext_i32_i64(i_36248);
                    float defunc_0_f_res_t_res_36250 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_36207 *
                                                                                              N_28247 +
                                                                                              i_36249];
                    
                    defunc_0_f_res_36245 = defunc_0_f_res_t_res_36250;
                } else {
                    defunc_0_f_res_36245 = 0.0F;
                }
                // save map-out results
                { }
                // load accumulator
                {
                    x_36237 = x_acc_44970;
                }
                // load new values
                {
                    x_36238 = defunc_0_f_res_36245;
                }
                // apply reduction operator
                {
                    float defunc_1_op_res_36239 = x_36237 + x_36238;
                    
                    // store in accumulator
                    {
                        x_acc_44970 = defunc_1_op_res_36239;
                    }
                }
            }
        }
        // to reduce current chunk, first store our result in memory
        {
            x_36237 = x_acc_44970;
            ((__local
              float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                x_36237;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        
        int32_t offset_44976;
        int32_t skip_waves_44977;
        
        skip_waves_44977 = 1;
        
        float x_44972;
        float x_44973;
        
        offset_44976 = 0;
        // participating threads read initial accumulator
        {
            if (slt32(local_tid_44957,
                      sext_i64_i32(segred_group_sizze_36233))) {
                x_44972 = ((__local
                            float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                        offset_44976)];
            }
        }
        offset_44976 = 1;
        while (slt32(offset_44976, wave_sizze_44959)) {
            if (slt32(local_tid_44957 + offset_44976,
                      sext_i64_i32(segred_group_sizze_36233)) &&
                ((local_tid_44957 - squot32(local_tid_44957, wave_sizze_44959) *
                  wave_sizze_44959) & (2 * offset_44976 - 1)) == 0) {
                // read array element
                {
                    x_44973 = ((volatile __local
                                float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                            offset_44976)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44974 = x_44972 + x_44973;
                    
                    x_44972 = defunc_1_op_res_44974;
                }
                // write result of operation
                {
                    ((volatile __local
                      float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                        x_44972;
                }
            }
            offset_44976 *= 2;
        }
        while (slt32(skip_waves_44977,
                     squot32(sext_i64_i32(segred_group_sizze_36233) +
                             wave_sizze_44959 - 1, wave_sizze_44959))) {
            barrier(CLK_LOCAL_MEM_FENCE);
            offset_44976 = skip_waves_44977 * wave_sizze_44959;
            if (slt32(local_tid_44957 + offset_44976,
                      sext_i64_i32(segred_group_sizze_36233)) &&
                ((local_tid_44957 - squot32(local_tid_44957, wave_sizze_44959) *
                  wave_sizze_44959) == 0 && (squot32(local_tid_44957,
                                                     wave_sizze_44959) & (2 *
                                                                          skip_waves_44977 -
                                                                          1)) ==
                 0)) {
                // read array element
                {
                    x_44973 = ((__local
                                float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                            offset_44976)];
                }
                // apply reduction operation
                {
                    float defunc_1_op_res_44974 = x_44972 + x_44973;
                    
                    x_44972 = defunc_1_op_res_44974;
                }
                // write result of operation
                {
                    ((__local
                      float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                        x_44972;
                }
            }
            skip_waves_44977 *= 2;
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // first thread saves the result in accumulator
        {
            if (sext_i32_i64(local_tid_44957) == (int64_t) 0) {
                x_acc_44970 = x_44972;
            }
        }
        if (groups_per_segment_44947 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_44957 == 0) {
                    ((__global float *) mem_43738)[gtid_36207] = x_acc_44970;
                }
            }
        } else {
            int32_t old_counter_44978;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_44957 == 0) {
                    ((__global
                      float *) group_res_arr_mem_44952)[sext_i32_i64(virt_group_id_44967) *
                                                        segred_group_sizze_36233] =
                        x_acc_44970;
                    mem_fence_global();
                    old_counter_44978 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44954)[sext_i32_i64(srem32(flat_segment_id_44968,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_44963)[(int64_t) 0] =
                        old_counter_44978 == groups_per_segment_44947 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_44979;
            
            is_last_group_44979 = ((__local
                                    bool *) sync_arr_mem_44963)[(int64_t) 0];
            if (is_last_group_44979) {
                if (local_tid_44957 == 0) {
                    old_counter_44978 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_44954)[sext_i32_i64(srem32(flat_segment_id_44968,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_44947));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_44980 =
                            sdiv_up64(groups_per_segment_44947,
                                      segred_group_sizze_36233);
                    
                    x_36237 = 0.0F;
                    for (int64_t i_44981 = 0; i_44981 < read_per_thread_44980;
                         i_44981++) {
                        int64_t group_res_id_44982 =
                                sext_i32_i64(local_tid_44957) *
                                read_per_thread_44980 + i_44981;
                        int64_t index_of_group_res_44983 =
                                sext_i32_i64(flat_segment_id_44968) *
                                groups_per_segment_44947 + group_res_id_44982;
                        
                        if (slt64(group_res_id_44982,
                                  groups_per_segment_44947)) {
                            x_36238 = ((__global
                                        float *) group_res_arr_mem_44952)[index_of_group_res_44983 *
                                                                          segred_group_sizze_36233];
                            
                            float defunc_1_op_res_36239;
                            
                            defunc_1_op_res_36239 = x_36237 + x_36238;
                            x_36237 = defunc_1_op_res_36239;
                        }
                    }
                }
                ((__local
                  float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                    x_36237;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_44984;
                    int32_t skip_waves_44985;
                    
                    skip_waves_44985 = 1;
                    
                    float x_44972;
                    float x_44973;
                    
                    offset_44984 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_44957,
                                  sext_i64_i32(segred_group_sizze_36233))) {
                            x_44972 = ((__local
                                        float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                                    offset_44984)];
                        }
                    }
                    offset_44984 = 1;
                    while (slt32(offset_44984, wave_sizze_44959)) {
                        if (slt32(local_tid_44957 + offset_44984,
                                  sext_i64_i32(segred_group_sizze_36233)) &&
                            ((local_tid_44957 - squot32(local_tid_44957,
                                                        wave_sizze_44959) *
                              wave_sizze_44959) & (2 * offset_44984 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_44973 = ((volatile __local
                                            float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                                        offset_44984)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44974 = x_44972 + x_44973;
                                
                                x_44972 = defunc_1_op_res_44974;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                                    x_44972;
                            }
                        }
                        offset_44984 *= 2;
                    }
                    while (slt32(skip_waves_44985,
                                 squot32(sext_i64_i32(segred_group_sizze_36233) +
                                         wave_sizze_44959 - 1,
                                         wave_sizze_44959))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_44984 = skip_waves_44985 * wave_sizze_44959;
                        if (slt32(local_tid_44957 + offset_44984,
                                  sext_i64_i32(segred_group_sizze_36233)) &&
                            ((local_tid_44957 - squot32(local_tid_44957,
                                                        wave_sizze_44959) *
                              wave_sizze_44959) == 0 &&
                             (squot32(local_tid_44957, wave_sizze_44959) & (2 *
                                                                            skip_waves_44985 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_44973 = ((__local
                                            float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957 +
                                                                        offset_44984)];
                            }
                            // apply reduction operation
                            {
                                float defunc_1_op_res_44974 = x_44972 + x_44973;
                                
                                x_44972 = defunc_1_op_res_44974;
                            }
                            // write result of operation
                            {
                                ((__local
                                  float *) red_arr_mem_44961)[sext_i32_i64(local_tid_44957)] =
                                    x_44972;
                            }
                        }
                        skip_waves_44985 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_44957 == 0) {
                            ((__global float *) mem_43738)[gtid_36207] =
                                x_44972;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36233
}
__kernel void mainMagnitudezisegred_large_37275(__global int *global_failure,
                                                __local volatile
                                                int64_t *sync_arr_mem_45164_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45162_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_45160_backing_aligned_2,
                                                __local volatile
                                                int64_t *red_arr_mem_45158_backing_aligned_3,
                                                int64_t iota32_arg_28643,
                                                int64_t num_groups_37446,
                                                int64_t groups_per_segment_45140,
                                                int64_t elements_per_thread_45141,
                                                int64_t virt_num_groups_45142,
                                                __global
                                                unsigned char *mem_43744,
                                                __global
                                                unsigned char *mem_43797,
                                                __global
                                                unsigned char *mem_43799,
                                                __global
                                                unsigned char *mem_43803,
                                                __global
                                                unsigned char *mem_43806,
                                                __global
                                                unsigned char *mem_43808,
                                                __global
                                                unsigned char *mem_43810,
                                                __global
                                                unsigned char *group_res_arr_mem_45145,
                                                __global
                                                unsigned char *group_res_arr_mem_45147,
                                                __global
                                                unsigned char *group_res_arr_mem_45149,
                                                __global
                                                unsigned char *mainMagnitudezicounter_mem_45151)
{
    #define segred_group_sizze_37445 (mainMagnitudezisegred_group_sizze_37269)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict sync_arr_mem_45164_backing_3 =
                          (__local volatile
                           char *) sync_arr_mem_45164_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45162_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45162_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45160_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45160_backing_aligned_2;
    __local volatile char *restrict red_arr_mem_45158_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45158_backing_aligned_3;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45153;
    int32_t local_tid_45154;
    int64_t group_sizze_45157;
    int32_t wave_sizze_45156;
    int32_t group_tid_45155;
    
    global_tid_45153 = get_global_id(0);
    local_tid_45154 = get_local_id(0);
    group_sizze_45157 = get_local_size(0);
    wave_sizze_45156 = LOCKSTEP_WIDTH;
    group_tid_45155 = get_group_id(0);
    
    int32_t phys_tid_37275;
    
    phys_tid_37275 = global_tid_45153;
    
    __local char *red_arr_mem_45158;
    
    red_arr_mem_45158 = (__local char *) red_arr_mem_45158_backing_0;
    
    __local char *red_arr_mem_45160;
    
    red_arr_mem_45160 = (__local char *) red_arr_mem_45160_backing_1;
    
    __local char *red_arr_mem_45162;
    
    red_arr_mem_45162 = (__local char *) red_arr_mem_45162_backing_2;
    
    __local char *sync_arr_mem_45164;
    
    sync_arr_mem_45164 = (__local char *) sync_arr_mem_45164_backing_3;
    
    int32_t phys_group_id_45166;
    
    phys_group_id_45166 = get_group_id(0);
    for (int32_t i_45167 = 0; i_45167 <
         sdiv_up32(sext_i64_i32(virt_num_groups_45142) - phys_group_id_45166,
                   sext_i64_i32(num_groups_37446)); i_45167++) {
        int32_t virt_group_id_45168 = phys_group_id_45166 + i_45167 *
                sext_i64_i32(num_groups_37446);
        int32_t flat_segment_id_45169 = squot32(virt_group_id_45168,
                                                sext_i64_i32(groups_per_segment_45140));
        int64_t global_tid_45170 = srem64(sext_i32_i64(virt_group_id_45168) *
                                          segred_group_sizze_37445 +
                                          sext_i32_i64(local_tid_45154),
                                          segred_group_sizze_37445 *
                                          groups_per_segment_45140);
        int64_t gtid_37266 = sext_i32_i64(flat_segment_id_45169);
        int64_t gtid_37274;
        bool x_acc_45171;
        int32_t x_acc_45172;
        float x_acc_45173;
        int64_t chunk_sizze_45174;
        int64_t starting_point_45175;
        
        starting_point_45175 = sext_i32_i64(sext_i64_i32(global_tid_45170)) *
            elements_per_thread_45141;
        
        int64_t remaining_elements_45176;
        
        remaining_elements_45176 = iota32_arg_28643 - starting_point_45175;
        if (sle64(remaining_elements_45176, (int64_t) 0) ||
            sle64(iota32_arg_28643, starting_point_45175)) {
            chunk_sizze_45174 = (int64_t) 0;
        } else {
            if (slt64(iota32_arg_28643,
                      (sext_i32_i64(sext_i64_i32(global_tid_45170)) +
                       (int64_t) 1) * elements_per_thread_45141)) {
                chunk_sizze_45174 = iota32_arg_28643 -
                    sext_i32_i64(sext_i64_i32(global_tid_45170)) *
                    elements_per_thread_45141;
            } else {
                chunk_sizze_45174 = elements_per_thread_45141;
            }
        }
        
        bool x_37451;
        int32_t x_37452;
        float x_37453;
        bool x_37454;
        int32_t x_37455;
        float x_37456;
        
        // neutral-initialise the accumulators
        {
            x_acc_45171 = 0;
            x_acc_45172 = -1;
            x_acc_45173 = 0.0F;
        }
        for (int64_t i_45191 = 0; i_45191 < elements_per_thread_45141;
             i_45191++) {
            gtid_37274 = sext_i32_i64(local_tid_45154) +
                (sext_i32_i64(squot32(sext_i64_i32(global_tid_45170),
                                      sext_i64_i32(segred_group_sizze_37445))) *
                 elements_per_thread_45141 + i_45191) *
                segred_group_sizze_37445;
            if (slt64(gtid_37274, iota32_arg_28643)) {
                // apply map function
                {
                    int32_t y_37465 = ((__global
                                        int32_t *) mem_43799)[gtid_37266];
                    float y_37466 = ((__global float *) mem_43797)[gtid_37266];
                    float x_37470 = ((__global float *) mem_43803)[gtid_37266 *
                                                                   iota32_arg_28643 +
                                                                   gtid_37274];
                    float x_37471 = ((__global float *) mem_43744)[gtid_37274];
                    int32_t index_primexp_40952 = sext_i64_i32(gtid_37274);
                    float defunc_0_f_res_37474 = x_37470 / y_37466;
                    bool cond_37475 = slt32(index_primexp_40952, y_37465);
                    bool isnan_res_37476;
                    
                    isnan_res_37476 = futrts_isnan32(defunc_0_f_res_37474);
                    
                    bool cond_t_res_37477 = !isnan_res_37476;
                    bool x_37478 = cond_37475 && cond_t_res_37477;
                    float abs_res_37479 = (float) fabs(defunc_0_f_res_37474);
                    bool defunc_2_f_res_t_res_37480 = x_37471 < abs_res_37479;
                    bool x_37481 = x_37478 && defunc_2_f_res_t_res_37480;
                    float defunc_1_f_res_37482;
                    
                    if (cond_37475) {
                        defunc_1_f_res_37482 = defunc_0_f_res_37474;
                    } else {
                        defunc_1_f_res_37482 = 0.0F;
                    }
                    // save map-out results
                    { }
                    // load accumulator
                    {
                        x_37451 = x_acc_45171;
                        x_37452 = x_acc_45172;
                        x_37453 = x_acc_45173;
                    }
                    // load new values
                    {
                        x_37454 = x_37481;
                        x_37455 = index_primexp_40952;
                        x_37456 = defunc_1_f_res_37482;
                    }
                    // apply reduction operator
                    {
                        bool defunc_1_op_res_37457;
                        int32_t defunc_1_op_res_37458;
                        
                        if (x_37451) {
                            defunc_1_op_res_37457 = x_37451;
                            defunc_1_op_res_37458 = x_37452;
                        } else {
                            bool x_37459 = x_37454 && x_37454;
                            bool x_37460 = !x_37454;
                            bool y_37461 = x_37451 && x_37460;
                            bool defunc_1_op_res_f_res_37462 = x_37459 ||
                                 y_37461;
                            int32_t defunc_1_op_res_f_res_37463;
                            
                            if (x_37454) {
                                defunc_1_op_res_f_res_37463 = x_37455;
                            } else {
                                defunc_1_op_res_f_res_37463 = x_37452;
                            }
                            defunc_1_op_res_37457 = defunc_1_op_res_f_res_37462;
                            defunc_1_op_res_37458 = defunc_1_op_res_f_res_37463;
                        }
                        
                        float defunc_1_op_res_37464 = x_37453 + x_37456;
                        
                        // store in accumulator
                        {
                            x_acc_45171 = defunc_1_op_res_37457;
                            x_acc_45172 = defunc_1_op_res_37458;
                            x_acc_45173 = defunc_1_op_res_37464;
                        }
                    }
                }
            }
            // to reduce current chunk, first store our result in memory
            {
                x_37451 = x_acc_45171;
                x_37452 = x_acc_45172;
                x_37453 = x_acc_45173;
                ((__local
                  bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                    x_37451;
                ((__local
                  int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154)] =
                    x_37452;
                ((__local
                  float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154)] =
                    x_37453;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            
            int32_t offset_45192;
            int32_t skip_waves_45193;
            
            skip_waves_45193 = 1;
            
            bool x_45177;
            int32_t x_45178;
            float x_45179;
            bool x_45180;
            int32_t x_45181;
            float x_45182;
            
            offset_45192 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_45154,
                          sext_i64_i32(segred_group_sizze_37445))) {
                    x_45177 = ((__local
                                bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                           offset_45192)];
                    x_45178 = ((__local
                                int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154 +
                                                              offset_45192)];
                    x_45179 = ((__local
                                float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154 +
                                                            offset_45192)];
                }
            }
            offset_45192 = 1;
            while (slt32(offset_45192, wave_sizze_45156)) {
                if (slt32(local_tid_45154 + offset_45192,
                          sext_i64_i32(segred_group_sizze_37445)) &&
                    ((local_tid_45154 - squot32(local_tid_45154,
                                                wave_sizze_45156) *
                      wave_sizze_45156) & (2 * offset_45192 - 1)) == 0) {
                    // read array element
                    {
                        x_45180 = ((volatile __local
                                    bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                               offset_45192)];
                        x_45181 = ((volatile __local
                                    int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154 +
                                                                  offset_45192)];
                        x_45182 = ((volatile __local
                                    float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154 +
                                                                offset_45192)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45183;
                        int32_t defunc_1_op_res_45184;
                        
                        if (x_45177) {
                            defunc_1_op_res_45183 = x_45177;
                            defunc_1_op_res_45184 = x_45178;
                        } else {
                            bool x_45185 = x_45180 && x_45180;
                            bool x_45186 = !x_45180;
                            bool y_45187 = x_45177 && x_45186;
                            bool defunc_1_op_res_f_res_45188 = x_45185 ||
                                 y_45187;
                            int32_t defunc_1_op_res_f_res_45189;
                            
                            if (x_45180) {
                                defunc_1_op_res_f_res_45189 = x_45181;
                            } else {
                                defunc_1_op_res_f_res_45189 = x_45178;
                            }
                            defunc_1_op_res_45183 = defunc_1_op_res_f_res_45188;
                            defunc_1_op_res_45184 = defunc_1_op_res_f_res_45189;
                        }
                        
                        float defunc_1_op_res_45190 = x_45179 + x_45182;
                        
                        x_45177 = defunc_1_op_res_45183;
                        x_45178 = defunc_1_op_res_45184;
                        x_45179 = defunc_1_op_res_45190;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                            x_45177;
                        ((volatile __local
                          int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154)] =
                            x_45178;
                        ((volatile __local
                          float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154)] =
                            x_45179;
                    }
                }
                offset_45192 *= 2;
            }
            while (slt32(skip_waves_45193,
                         squot32(sext_i64_i32(segred_group_sizze_37445) +
                                 wave_sizze_45156 - 1, wave_sizze_45156))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_45192 = skip_waves_45193 * wave_sizze_45156;
                if (slt32(local_tid_45154 + offset_45192,
                          sext_i64_i32(segred_group_sizze_37445)) &&
                    ((local_tid_45154 - squot32(local_tid_45154,
                                                wave_sizze_45156) *
                      wave_sizze_45156) == 0 && (squot32(local_tid_45154,
                                                         wave_sizze_45156) &
                                                 (2 * skip_waves_45193 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_45180 = ((__local
                                    bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                               offset_45192)];
                        x_45181 = ((__local
                                    int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154 +
                                                                  offset_45192)];
                        x_45182 = ((__local
                                    float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154 +
                                                                offset_45192)];
                    }
                    // apply reduction operation
                    {
                        bool defunc_1_op_res_45183;
                        int32_t defunc_1_op_res_45184;
                        
                        if (x_45177) {
                            defunc_1_op_res_45183 = x_45177;
                            defunc_1_op_res_45184 = x_45178;
                        } else {
                            bool x_45185 = x_45180 && x_45180;
                            bool x_45186 = !x_45180;
                            bool y_45187 = x_45177 && x_45186;
                            bool defunc_1_op_res_f_res_45188 = x_45185 ||
                                 y_45187;
                            int32_t defunc_1_op_res_f_res_45189;
                            
                            if (x_45180) {
                                defunc_1_op_res_f_res_45189 = x_45181;
                            } else {
                                defunc_1_op_res_f_res_45189 = x_45178;
                            }
                            defunc_1_op_res_45183 = defunc_1_op_res_f_res_45188;
                            defunc_1_op_res_45184 = defunc_1_op_res_f_res_45189;
                        }
                        
                        float defunc_1_op_res_45190 = x_45179 + x_45182;
                        
                        x_45177 = defunc_1_op_res_45183;
                        x_45178 = defunc_1_op_res_45184;
                        x_45179 = defunc_1_op_res_45190;
                    }
                    // write result of operation
                    {
                        ((__local
                          bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                            x_45177;
                        ((__local
                          int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154)] =
                            x_45178;
                        ((__local
                          float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154)] =
                            x_45179;
                    }
                }
                skip_waves_45193 *= 2;
            }
            barrier(CLK_LOCAL_MEM_FENCE);
            // first thread saves the result in accumulator
            {
                if (sext_i32_i64(local_tid_45154) == (int64_t) 0) {
                    x_acc_45171 = x_45177;
                    x_acc_45172 = x_45178;
                    x_acc_45173 = x_45179;
                }
            }
            // first thread keeps accumulator; others reset to neutral element
            {
                if (!(sext_i32_i64(local_tid_45154) == (int64_t) 0)) {
                    x_acc_45171 = 0;
                    x_acc_45172 = -1;
                    x_acc_45173 = 0.0F;
                }
            }
        }
        x_37451 = x_acc_45171;
        x_37452 = x_acc_45172;
        x_37453 = x_acc_45173;
        if (groups_per_segment_45140 == (int64_t) 1) {
            // first thread in group saves final result to memory
            {
                if (local_tid_45154 == 0) {
                    ((__global bool *) mem_43806)[gtid_37266] = x_acc_45171;
                    ((__global int32_t *) mem_43808)[gtid_37266] = x_acc_45172;
                    ((__global float *) mem_43810)[gtid_37266] = x_acc_45173;
                }
            }
        } else {
            int32_t old_counter_45194;
            
            // first thread in group saves group result to global memory
            {
                if (local_tid_45154 == 0) {
                    ((__global
                      bool *) group_res_arr_mem_45145)[sext_i32_i64(virt_group_id_45168) *
                                                       segred_group_sizze_37445] =
                        x_acc_45171;
                    ((__global
                      int32_t *) group_res_arr_mem_45147)[sext_i32_i64(virt_group_id_45168) *
                                                          segred_group_sizze_37445] =
                        x_acc_45172;
                    ((__global
                      float *) group_res_arr_mem_45149)[sext_i32_i64(virt_group_id_45168) *
                                                        segred_group_sizze_37445] =
                        x_acc_45173;
                    mem_fence_global();
                    old_counter_45194 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45151)[sext_i32_i64(srem32(flat_segment_id_45169,
                                                                                                              10240))],
                                              (int) 1);
                    ((__local bool *) sync_arr_mem_45164)[(int64_t) 0] =
                        old_counter_45194 == groups_per_segment_45140 -
                        (int64_t) 1;
                }
            }
            barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
            
            bool is_last_group_45195;
            
            is_last_group_45195 = ((__local
                                    bool *) sync_arr_mem_45164)[(int64_t) 0];
            if (is_last_group_45195) {
                if (local_tid_45154 == 0) {
                    old_counter_45194 =
                        atomic_add_i32_global(&((volatile __global
                                                 int *) mainMagnitudezicounter_mem_45151)[sext_i32_i64(srem32(flat_segment_id_45169,
                                                                                                              10240))],
                                              (int) ((int64_t) 0 -
                                                     groups_per_segment_45140));
                }
                // read in the per-group-results
                {
                    int64_t read_per_thread_45196 =
                            sdiv_up64(groups_per_segment_45140,
                                      segred_group_sizze_37445);
                    
                    x_37451 = 0;
                    x_37452 = -1;
                    x_37453 = 0.0F;
                    for (int64_t i_45197 = 0; i_45197 < read_per_thread_45196;
                         i_45197++) {
                        int64_t group_res_id_45198 =
                                sext_i32_i64(local_tid_45154) *
                                read_per_thread_45196 + i_45197;
                        int64_t index_of_group_res_45199 =
                                sext_i32_i64(flat_segment_id_45169) *
                                groups_per_segment_45140 + group_res_id_45198;
                        
                        if (slt64(group_res_id_45198,
                                  groups_per_segment_45140)) {
                            x_37454 = ((__global
                                        bool *) group_res_arr_mem_45145)[index_of_group_res_45199 *
                                                                         segred_group_sizze_37445];
                            x_37455 = ((__global
                                        int32_t *) group_res_arr_mem_45147)[index_of_group_res_45199 *
                                                                            segred_group_sizze_37445];
                            x_37456 = ((__global
                                        float *) group_res_arr_mem_45149)[index_of_group_res_45199 *
                                                                          segred_group_sizze_37445];
                            
                            bool defunc_1_op_res_37457;
                            int32_t defunc_1_op_res_37458;
                            
                            if (x_37451) {
                                defunc_1_op_res_37457 = x_37451;
                                defunc_1_op_res_37458 = x_37452;
                            } else {
                                bool x_37459 = x_37454 && x_37454;
                                bool x_37460 = !x_37454;
                                bool y_37461 = x_37451 && x_37460;
                                bool defunc_1_op_res_f_res_37462 = x_37459 ||
                                     y_37461;
                                int32_t defunc_1_op_res_f_res_37463;
                                
                                if (x_37454) {
                                    defunc_1_op_res_f_res_37463 = x_37455;
                                } else {
                                    defunc_1_op_res_f_res_37463 = x_37452;
                                }
                                defunc_1_op_res_37457 =
                                    defunc_1_op_res_f_res_37462;
                                defunc_1_op_res_37458 =
                                    defunc_1_op_res_f_res_37463;
                            }
                            
                            float defunc_1_op_res_37464 = x_37453 + x_37456;
                            
                            x_37451 = defunc_1_op_res_37457;
                            x_37452 = defunc_1_op_res_37458;
                            x_37453 = defunc_1_op_res_37464;
                        }
                    }
                }
                ((__local
                  bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                    x_37451;
                ((__local
                  int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154)] =
                    x_37452;
                ((__local
                  float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154)] =
                    x_37453;
                barrier(CLK_LOCAL_MEM_FENCE);
                // reduce the per-group results
                {
                    int32_t offset_45200;
                    int32_t skip_waves_45201;
                    
                    skip_waves_45201 = 1;
                    
                    bool x_45177;
                    int32_t x_45178;
                    float x_45179;
                    bool x_45180;
                    int32_t x_45181;
                    float x_45182;
                    
                    offset_45200 = 0;
                    // participating threads read initial accumulator
                    {
                        if (slt32(local_tid_45154,
                                  sext_i64_i32(segred_group_sizze_37445))) {
                            x_45177 = ((__local
                                        bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                                   offset_45200)];
                            x_45178 = ((__local
                                        int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154 +
                                                                      offset_45200)];
                            x_45179 = ((__local
                                        float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154 +
                                                                    offset_45200)];
                        }
                    }
                    offset_45200 = 1;
                    while (slt32(offset_45200, wave_sizze_45156)) {
                        if (slt32(local_tid_45154 + offset_45200,
                                  sext_i64_i32(segred_group_sizze_37445)) &&
                            ((local_tid_45154 - squot32(local_tid_45154,
                                                        wave_sizze_45156) *
                              wave_sizze_45156) & (2 * offset_45200 - 1)) ==
                            0) {
                            // read array element
                            {
                                x_45180 = ((volatile __local
                                            bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                                       offset_45200)];
                                x_45181 = ((volatile __local
                                            int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154 +
                                                                          offset_45200)];
                                x_45182 = ((volatile __local
                                            float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154 +
                                                                        offset_45200)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45183;
                                int32_t defunc_1_op_res_45184;
                                
                                if (x_45177) {
                                    defunc_1_op_res_45183 = x_45177;
                                    defunc_1_op_res_45184 = x_45178;
                                } else {
                                    bool x_45185 = x_45180 && x_45180;
                                    bool x_45186 = !x_45180;
                                    bool y_45187 = x_45177 && x_45186;
                                    bool defunc_1_op_res_f_res_45188 =
                                         x_45185 || y_45187;
                                    int32_t defunc_1_op_res_f_res_45189;
                                    
                                    if (x_45180) {
                                        defunc_1_op_res_f_res_45189 = x_45181;
                                    } else {
                                        defunc_1_op_res_f_res_45189 = x_45178;
                                    }
                                    defunc_1_op_res_45183 =
                                        defunc_1_op_res_f_res_45188;
                                    defunc_1_op_res_45184 =
                                        defunc_1_op_res_f_res_45189;
                                }
                                
                                float defunc_1_op_res_45190 = x_45179 + x_45182;
                                
                                x_45177 = defunc_1_op_res_45183;
                                x_45178 = defunc_1_op_res_45184;
                                x_45179 = defunc_1_op_res_45190;
                            }
                            // write result of operation
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                                    x_45177;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154)] =
                                    x_45178;
                                ((volatile __local
                                  float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154)] =
                                    x_45179;
                            }
                        }
                        offset_45200 *= 2;
                    }
                    while (slt32(skip_waves_45201,
                                 squot32(sext_i64_i32(segred_group_sizze_37445) +
                                         wave_sizze_45156 - 1,
                                         wave_sizze_45156))) {
                        barrier(CLK_LOCAL_MEM_FENCE);
                        offset_45200 = skip_waves_45201 * wave_sizze_45156;
                        if (slt32(local_tid_45154 + offset_45200,
                                  sext_i64_i32(segred_group_sizze_37445)) &&
                            ((local_tid_45154 - squot32(local_tid_45154,
                                                        wave_sizze_45156) *
                              wave_sizze_45156) == 0 &&
                             (squot32(local_tid_45154, wave_sizze_45156) & (2 *
                                                                            skip_waves_45201 -
                                                                            1)) ==
                             0)) {
                            // read array element
                            {
                                x_45180 = ((__local
                                            bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154 +
                                                                       offset_45200)];
                                x_45181 = ((__local
                                            int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154 +
                                                                          offset_45200)];
                                x_45182 = ((__local
                                            float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154 +
                                                                        offset_45200)];
                            }
                            // apply reduction operation
                            {
                                bool defunc_1_op_res_45183;
                                int32_t defunc_1_op_res_45184;
                                
                                if (x_45177) {
                                    defunc_1_op_res_45183 = x_45177;
                                    defunc_1_op_res_45184 = x_45178;
                                } else {
                                    bool x_45185 = x_45180 && x_45180;
                                    bool x_45186 = !x_45180;
                                    bool y_45187 = x_45177 && x_45186;
                                    bool defunc_1_op_res_f_res_45188 =
                                         x_45185 || y_45187;
                                    int32_t defunc_1_op_res_f_res_45189;
                                    
                                    if (x_45180) {
                                        defunc_1_op_res_f_res_45189 = x_45181;
                                    } else {
                                        defunc_1_op_res_f_res_45189 = x_45178;
                                    }
                                    defunc_1_op_res_45183 =
                                        defunc_1_op_res_f_res_45188;
                                    defunc_1_op_res_45184 =
                                        defunc_1_op_res_f_res_45189;
                                }
                                
                                float defunc_1_op_res_45190 = x_45179 + x_45182;
                                
                                x_45177 = defunc_1_op_res_45183;
                                x_45178 = defunc_1_op_res_45184;
                                x_45179 = defunc_1_op_res_45190;
                            }
                            // write result of operation
                            {
                                ((__local
                                  bool *) red_arr_mem_45158)[sext_i32_i64(local_tid_45154)] =
                                    x_45177;
                                ((__local
                                  int32_t *) red_arr_mem_45160)[sext_i32_i64(local_tid_45154)] =
                                    x_45178;
                                ((__local
                                  float *) red_arr_mem_45162)[sext_i32_i64(local_tid_45154)] =
                                    x_45179;
                            }
                        }
                        skip_waves_45201 *= 2;
                    }
                    // and back to memory with the final result
                    {
                        if (local_tid_45154 == 0) {
                            ((__global bool *) mem_43806)[gtid_37266] = x_45177;
                            ((__global int32_t *) mem_43808)[gtid_37266] =
                                x_45178;
                            ((__global float *) mem_43810)[gtid_37266] =
                                x_45179;
                        }
                    }
                }
            }
        }
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37445
}
__kernel void mainMagnitudezisegred_nonseg_36134(__global int *global_failure,
                                                 __local volatile
                                                 int64_t *red_arr_mem_44897_backing_aligned_0,
                                                 __local volatile
                                                 int64_t *sync_arr_mem_44895_backing_aligned_1,
                                                 int64_t m_28248,
                                                 int64_t num_groups_36129,
                                                 int64_t num_threads_44889,
                                                 __global
                                                 unsigned char *defunc_3_map_res_mem_43704,
                                                 __global
                                                 unsigned char *mem_43709,
                                                 __global
                                                 unsigned char *mainMagnitudezicounter_mem_44885,
                                                 __global
                                                 unsigned char *group_res_arr_mem_44887)
{
    #define segred_group_sizze_36127 (mainMagnitudezisegred_group_sizze_36126)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44897_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_44897_backing_aligned_0;
    __local volatile char *restrict sync_arr_mem_44895_backing_0 =
                          (__local volatile
                           char *) sync_arr_mem_44895_backing_aligned_1;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44890;
    int32_t local_tid_44891;
    int64_t group_sizze_44894;
    int32_t wave_sizze_44893;
    int32_t group_tid_44892;
    
    global_tid_44890 = get_global_id(0);
    local_tid_44891 = get_local_id(0);
    group_sizze_44894 = get_local_size(0);
    wave_sizze_44893 = LOCKSTEP_WIDTH;
    group_tid_44892 = get_group_id(0);
    
    int32_t phys_tid_36134;
    
    phys_tid_36134 = global_tid_44890;
    
    __local char *sync_arr_mem_44895;
    
    sync_arr_mem_44895 = (__local char *) sync_arr_mem_44895_backing_0;
    
    __local char *red_arr_mem_44897;
    
    red_arr_mem_44897 = (__local char *) red_arr_mem_44897_backing_1;
    
    int64_t dummy_36132;
    
    dummy_36132 = (int64_t) 0;
    
    int64_t gtid_36133;
    
    gtid_36133 = (int64_t) 0;
    
    int32_t x_acc_44899;
    int64_t chunk_sizze_44900;
    
    chunk_sizze_44900 = smin64(sdiv_up64(m_28248,
                                         sext_i32_i64(sext_i64_i32(segred_group_sizze_36127 *
                                         num_groups_36129))),
                               sdiv_up64(m_28248 - sext_i32_i64(phys_tid_36134),
                                         num_threads_44889));
    
    int32_t x_28614;
    int32_t x_28615;
    
    // neutral-initialise the accumulators
    {
        x_acc_44899 = 0;
    }
    for (int64_t i_44904 = 0; i_44904 < chunk_sizze_44900; i_44904++) {
        gtid_36133 = sext_i32_i64(phys_tid_36134) + num_threads_44889 * i_44904;
        // apply map function
        {
            int32_t x_28617 = ((__global
                                int32_t *) defunc_3_map_res_mem_43704)[gtid_36133];
            
            // save map-out results
            { }
            // load accumulator
            {
                x_28614 = x_acc_44899;
            }
            // load new values
            {
                x_28615 = x_28617;
            }
            // apply reduction operator
            {
                int32_t defunc_1_op_res_28616 = smax32(x_28614, x_28615);
                
                // store in accumulator
                {
                    x_acc_44899 = defunc_1_op_res_28616;
                }
            }
        }
    }
    // to reduce current chunk, first store our result in memory
    {
        x_28614 = x_acc_44899;
        ((__local int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891)] =
            x_28614;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    
    int32_t offset_44905;
    int32_t skip_waves_44906;
    
    skip_waves_44906 = 1;
    
    int32_t x_44901;
    int32_t x_44902;
    
    offset_44905 = 0;
    // participating threads read initial accumulator
    {
        if (slt32(local_tid_44891, sext_i64_i32(segred_group_sizze_36127))) {
            x_44901 = ((__local
                        int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891 +
                                                      offset_44905)];
        }
    }
    offset_44905 = 1;
    while (slt32(offset_44905, wave_sizze_44893)) {
        if (slt32(local_tid_44891 + offset_44905,
                  sext_i64_i32(segred_group_sizze_36127)) && ((local_tid_44891 -
                                                               squot32(local_tid_44891,
                                                                       wave_sizze_44893) *
                                                               wave_sizze_44893) &
                                                              (2 *
                                                               offset_44905 -
                                                               1)) == 0) {
            // read array element
            {
                x_44902 = ((volatile __local
                            int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891 +
                                                          offset_44905)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44903 = smax32(x_44901, x_44902);
                
                x_44901 = defunc_1_op_res_44903;
            }
            // write result of operation
            {
                ((volatile __local
                  int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891)] =
                    x_44901;
            }
        }
        offset_44905 *= 2;
    }
    while (slt32(skip_waves_44906,
                 squot32(sext_i64_i32(segred_group_sizze_36127) +
                         wave_sizze_44893 - 1, wave_sizze_44893))) {
        barrier(CLK_LOCAL_MEM_FENCE);
        offset_44905 = skip_waves_44906 * wave_sizze_44893;
        if (slt32(local_tid_44891 + offset_44905,
                  sext_i64_i32(segred_group_sizze_36127)) && ((local_tid_44891 -
                                                               squot32(local_tid_44891,
                                                                       wave_sizze_44893) *
                                                               wave_sizze_44893) ==
                                                              0 &&
                                                              (squot32(local_tid_44891,
                                                                       wave_sizze_44893) &
                                                               (2 *
                                                                skip_waves_44906 -
                                                                1)) == 0)) {
            // read array element
            {
                x_44902 = ((__local
                            int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891 +
                                                          offset_44905)];
            }
            // apply reduction operation
            {
                int32_t defunc_1_op_res_44903 = smax32(x_44901, x_44902);
                
                x_44901 = defunc_1_op_res_44903;
            }
            // write result of operation
            {
                ((__local
                  int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891)] =
                    x_44901;
            }
        }
        skip_waves_44906 *= 2;
    }
    barrier(CLK_LOCAL_MEM_FENCE);
    // first thread saves the result in accumulator
    {
        if (sext_i32_i64(local_tid_44891) == (int64_t) 0) {
            x_acc_44899 = x_44901;
        }
    }
    
    int32_t old_counter_44907;
    
    // first thread in group saves group result to global memory
    {
        if (local_tid_44891 == 0) {
            ((__global
              int32_t *) group_res_arr_mem_44887)[sext_i32_i64(group_tid_44892) *
                                                  segred_group_sizze_36127] =
                x_acc_44899;
            mem_fence_global();
            old_counter_44907 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_44885)[(int64_t) 0],
                                                      (int) 1);
            ((__local bool *) sync_arr_mem_44895)[(int64_t) 0] =
                old_counter_44907 == num_groups_36129 - (int64_t) 1;
        }
    }
    barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    
    bool is_last_group_44908;
    
    is_last_group_44908 = ((__local bool *) sync_arr_mem_44895)[(int64_t) 0];
    if (is_last_group_44908) {
        if (local_tid_44891 == 0) {
            old_counter_44907 = atomic_add_i32_global(&((volatile __global
                                                         int *) mainMagnitudezicounter_mem_44885)[(int64_t) 0],
                                                      (int) ((int64_t) 0 -
                                                             num_groups_36129));
        }
        // read in the per-group-results
        {
            int64_t read_per_thread_44909 = sdiv_up64(num_groups_36129,
                                                      segred_group_sizze_36127);
            
            x_28614 = 0;
            for (int64_t i_44910 = 0; i_44910 < read_per_thread_44909;
                 i_44910++) {
                int64_t group_res_id_44911 = sext_i32_i64(local_tid_44891) *
                        read_per_thread_44909 + i_44910;
                int64_t index_of_group_res_44912 = group_res_id_44911;
                
                if (slt64(group_res_id_44911, num_groups_36129)) {
                    x_28615 = ((__global
                                int32_t *) group_res_arr_mem_44887)[index_of_group_res_44912 *
                                                                    segred_group_sizze_36127];
                    
                    int32_t defunc_1_op_res_28616;
                    
                    defunc_1_op_res_28616 = smax32(x_28614, x_28615);
                    x_28614 = defunc_1_op_res_28616;
                }
            }
        }
        ((__local int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891)] =
            x_28614;
        barrier(CLK_LOCAL_MEM_FENCE);
        // reduce the per-group results
        {
            int32_t offset_44913;
            int32_t skip_waves_44914;
            
            skip_waves_44914 = 1;
            
            int32_t x_44901;
            int32_t x_44902;
            
            offset_44913 = 0;
            // participating threads read initial accumulator
            {
                if (slt32(local_tid_44891,
                          sext_i64_i32(segred_group_sizze_36127))) {
                    x_44901 = ((__local
                                int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891 +
                                                              offset_44913)];
                }
            }
            offset_44913 = 1;
            while (slt32(offset_44913, wave_sizze_44893)) {
                if (slt32(local_tid_44891 + offset_44913,
                          sext_i64_i32(segred_group_sizze_36127)) &&
                    ((local_tid_44891 - squot32(local_tid_44891,
                                                wave_sizze_44893) *
                      wave_sizze_44893) & (2 * offset_44913 - 1)) == 0) {
                    // read array element
                    {
                        x_44902 = ((volatile __local
                                    int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891 +
                                                                  offset_44913)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44903 = smax32(x_44901,
                                                               x_44902);
                        
                        x_44901 = defunc_1_op_res_44903;
                    }
                    // write result of operation
                    {
                        ((volatile __local
                          int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891)] =
                            x_44901;
                    }
                }
                offset_44913 *= 2;
            }
            while (slt32(skip_waves_44914,
                         squot32(sext_i64_i32(segred_group_sizze_36127) +
                                 wave_sizze_44893 - 1, wave_sizze_44893))) {
                barrier(CLK_LOCAL_MEM_FENCE);
                offset_44913 = skip_waves_44914 * wave_sizze_44893;
                if (slt32(local_tid_44891 + offset_44913,
                          sext_i64_i32(segred_group_sizze_36127)) &&
                    ((local_tid_44891 - squot32(local_tid_44891,
                                                wave_sizze_44893) *
                      wave_sizze_44893) == 0 && (squot32(local_tid_44891,
                                                         wave_sizze_44893) &
                                                 (2 * skip_waves_44914 - 1)) ==
                     0)) {
                    // read array element
                    {
                        x_44902 = ((__local
                                    int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891 +
                                                                  offset_44913)];
                    }
                    // apply reduction operation
                    {
                        int32_t defunc_1_op_res_44903 = smax32(x_44901,
                                                               x_44902);
                        
                        x_44901 = defunc_1_op_res_44903;
                    }
                    // write result of operation
                    {
                        ((__local
                          int32_t *) red_arr_mem_44897)[sext_i32_i64(local_tid_44891)] =
                            x_44901;
                    }
                }
                skip_waves_44914 *= 2;
            }
            // and back to memory with the final result
            {
                if (local_tid_44891 == 0) {
                    ((__global int32_t *) mem_43709)[(int64_t) 0] = x_44901;
                }
            }
        }
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36127
}
__kernel void mainMagnitudezisegred_small_34164(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44155_backing_aligned_0,
                                                int64_t N_28247,
                                                int64_t m_28248,
                                                int64_t i32_res_28257,
                                                int64_t i32_res_28263,
                                                int64_t num_groups_34303,
                                                int64_t segment_sizze_nonzzero_44148,
                                                __global
                                                unsigned char *images_mem_42841,
                                                __global
                                                unsigned char *binop_p_mem_42850,
                                                __global
                                                unsigned char *mem_42991,
                                                __global
                                                unsigned char *mem_42996)
{
    #define segred_group_sizze_34302 (mainMagnitudezisegred_group_sizze_34158)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44155_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44155_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44150;
    int32_t local_tid_44151;
    int64_t group_sizze_44154;
    int32_t wave_sizze_44153;
    int32_t group_tid_44152;
    
    global_tid_44150 = get_global_id(0);
    local_tid_44151 = get_local_id(0);
    group_sizze_44154 = get_local_size(0);
    wave_sizze_44153 = LOCKSTEP_WIDTH;
    group_tid_44152 = get_group_id(0);
    
    int32_t phys_tid_34164;
    
    phys_tid_34164 = global_tid_44150;
    
    __local char *red_arr_mem_44155;
    
    red_arr_mem_44155 = (__local char *) red_arr_mem_44155_backing_0;
    
    int32_t phys_group_id_44157;
    
    phys_group_id_44157 = get_group_id(0);
    for (int32_t i_44158 = 0; i_44158 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248 * i32_res_28263 *
                                          i32_res_28263,
                                          squot64(segred_group_sizze_34302,
                                                  segment_sizze_nonzzero_44148))) -
                   phys_group_id_44157, sext_i64_i32(num_groups_34303));
         i_44158++) {
        int32_t virt_group_id_44159 = phys_group_id_44157 + i_44158 *
                sext_i64_i32(num_groups_34303);
        int64_t gtid_34151 = squot64(squot64(sext_i32_i64(local_tid_44151),
                                             segment_sizze_nonzzero_44148) +
                                     sext_i32_i64(virt_group_id_44159) *
                                     squot64(segred_group_sizze_34302,
                                             segment_sizze_nonzzero_44148),
                                     i32_res_28263 * i32_res_28263);
        int64_t gtid_34152 = squot64(squot64(sext_i32_i64(local_tid_44151),
                                             segment_sizze_nonzzero_44148) +
                                     sext_i32_i64(virt_group_id_44159) *
                                     squot64(segred_group_sizze_34302,
                                             segment_sizze_nonzzero_44148) -
                                     squot64(squot64(sext_i32_i64(local_tid_44151),
                                                     segment_sizze_nonzzero_44148) +
                                             sext_i32_i64(virt_group_id_44159) *
                                             squot64(segred_group_sizze_34302,
                                                     segment_sizze_nonzzero_44148),
                                             i32_res_28263 * i32_res_28263) *
                                     (i32_res_28263 * i32_res_28263),
                                     i32_res_28263);
        int64_t gtid_34153 = squot64(sext_i32_i64(local_tid_44151),
                                     segment_sizze_nonzzero_44148) +
                sext_i32_i64(virt_group_id_44159) *
                squot64(segred_group_sizze_34302,
                        segment_sizze_nonzzero_44148) -
                squot64(squot64(sext_i32_i64(local_tid_44151),
                                segment_sizze_nonzzero_44148) +
                        sext_i32_i64(virt_group_id_44159) *
                        squot64(segred_group_sizze_34302,
                                segment_sizze_nonzzero_44148), i32_res_28263 *
                        i32_res_28263) * (i32_res_28263 * i32_res_28263) -
                squot64(squot64(sext_i32_i64(local_tid_44151),
                                segment_sizze_nonzzero_44148) +
                        sext_i32_i64(virt_group_id_44159) *
                        squot64(segred_group_sizze_34302,
                                segment_sizze_nonzzero_44148) -
                        squot64(squot64(sext_i32_i64(local_tid_44151),
                                        segment_sizze_nonzzero_44148) +
                                sext_i32_i64(virt_group_id_44159) *
                                squot64(segred_group_sizze_34302,
                                        segment_sizze_nonzzero_44148),
                                i32_res_28263 * i32_res_28263) *
                        (i32_res_28263 * i32_res_28263), i32_res_28263) *
                i32_res_28263;
        int64_t gtid_34163 = srem64(sext_i32_i64(local_tid_44151),
                                    i32_res_28257);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28257) && (((slt64(gtid_34151,
                                                              m_28248) &&
                                                        slt64(gtid_34152,
                                                              i32_res_28263)) &&
                                                       slt64(gtid_34153,
                                                             i32_res_28263)) &&
                                                      slt64(sext_i32_i64(local_tid_44151),
                                                            i32_res_28257 *
                                                            squot64(segred_group_sizze_34302,
                                                                    segment_sizze_nonzzero_44148)))) {
                float x_34312 = ((__global
                                  float *) images_mem_42841)[gtid_34151 *
                                                             N_28247 +
                                                             gtid_34163];
                float x_34313 = ((__global
                                  float *) binop_p_mem_42850)[gtid_34152 *
                                                              N_28247 +
                                                              gtid_34163];
                float x_34314 = ((__global float *) mem_42991)[gtid_34153 *
                                                               N_28247 +
                                                               gtid_34163];
                float x_34315 = x_34313 * x_34314;
                bool isnan_res_34316;
                
                isnan_res_34316 = futrts_isnan32(x_34312);
                
                float y_34317;
                
                if (isnan_res_34316) {
                    y_34317 = 0.0F;
                } else {
                    y_34317 = 1.0F;
                }
                
                float defunc_2_f_res_34318 = x_34315 * y_34317;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151)] =
                        defunc_2_f_res_34318;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28257)) {
            // perform segmented scan to imitate reduction
            {
                float x_34306;
                float x_34307;
                float x_44160;
                float x_44161;
                bool ltid_in_bounds_44163;
                
                ltid_in_bounds_44163 = slt64(sext_i32_i64(local_tid_44151),
                                             i32_res_28257 *
                                             squot64(segred_group_sizze_34302,
                                                     segment_sizze_nonzzero_44148));
                
                int32_t skip_threads_44164;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44163) {
                        x_34307 = ((volatile __local
                                    float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151)];
                        if ((local_tid_44151 - squot32(local_tid_44151, 32) *
                             32) == 0) {
                            x_34306 = x_34307;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44164 = 1;
                    while (slt32(skip_threads_44164, 32)) {
                        if (sle32(skip_threads_44164, local_tid_44151 -
                                  squot32(local_tid_44151, 32) * 32) &&
                            ltid_in_bounds_44163) {
                            // read operands
                            {
                                x_34306 = ((volatile __local
                                            float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151) -
                                                                        sext_i32_i64(skip_threads_44164)];
                            }
                            // perform operation
                            {
                                bool inactive_44165 =
                                     slt64(srem64(sext_i32_i64(local_tid_44151),
                                                  i32_res_28257),
                                           sext_i32_i64(local_tid_44151) -
                                           sext_i32_i64(local_tid_44151 -
                                           skip_threads_44164));
                                
                                if (inactive_44165) {
                                    x_34306 = x_34307;
                                }
                                if (!inactive_44165) {
                                    float defunc_1_op_res_34308 = x_34306 +
                                          x_34307;
                                    
                                    x_34306 = defunc_1_op_res_34308;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44153, skip_threads_44164)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44164, local_tid_44151 -
                                  squot32(local_tid_44151, 32) * 32) &&
                            ltid_in_bounds_44163) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151)] =
                                    x_34306;
                                x_34307 = x_34306;
                            }
                        }
                        if (sle32(wave_sizze_44153, skip_threads_44164)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44164 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44151 - squot32(local_tid_44151, 32) * 32) ==
                        31 && ltid_in_bounds_44163) {
                        ((volatile __local
                          float *) red_arr_mem_44155)[sext_i32_i64(squot32(local_tid_44151,
                                                                           32))] =
                            x_34306;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44166;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44151, 32) == 0 &&
                            ltid_in_bounds_44163) {
                            x_44161 = ((volatile __local
                                        float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151)];
                            if ((local_tid_44151 - squot32(local_tid_44151,
                                                           32) * 32) == 0) {
                                x_44160 = x_44161;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44166 = 1;
                        while (slt32(skip_threads_44166, 32)) {
                            if (sle32(skip_threads_44166, local_tid_44151 -
                                      squot32(local_tid_44151, 32) * 32) &&
                                (squot32(local_tid_44151, 32) == 0 &&
                                 ltid_in_bounds_44163)) {
                                // read operands
                                {
                                    x_44160 = ((volatile __local
                                                float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151) -
                                                                            sext_i32_i64(skip_threads_44166)];
                                }
                                // perform operation
                                {
                                    bool inactive_44167 =
                                         slt64(srem64(sext_i32_i64(local_tid_44151 *
                                                      32 + 32 - 1),
                                                      i32_res_28257),
                                               sext_i32_i64(local_tid_44151 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44151 -
                                                             skip_threads_44166) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44167) {
                                        x_44160 = x_44161;
                                    }
                                    if (!inactive_44167) {
                                        float defunc_1_op_res_44162 = x_44160 +
                                              x_44161;
                                        
                                        x_44160 = defunc_1_op_res_44162;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44153, skip_threads_44166)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44166, local_tid_44151 -
                                      squot32(local_tid_44151, 32) * 32) &&
                                (squot32(local_tid_44151, 32) == 0 &&
                                 ltid_in_bounds_44163)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151)] =
                                        x_44160;
                                    x_44161 = x_44160;
                                }
                            }
                            if (sle32(wave_sizze_44153, skip_threads_44166)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44166 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44151, 32) == 0 ||
                          !ltid_in_bounds_44163)) {
                        // read operands
                        {
                            x_34307 = x_34306;
                            x_34306 = ((__local
                                        float *) red_arr_mem_44155)[sext_i32_i64(squot32(local_tid_44151,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44168 =
                                 slt64(srem64(sext_i32_i64(local_tid_44151),
                                              i32_res_28257),
                                       sext_i32_i64(local_tid_44151) -
                                       sext_i32_i64(squot32(local_tid_44151,
                                                            32) * 32 - 1));
                            
                            if (inactive_44168) {
                                x_34306 = x_34307;
                            }
                            if (!inactive_44168) {
                                float defunc_1_op_res_34308 = x_34306 + x_34307;
                                
                                x_34306 = defunc_1_op_res_34308;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151)] =
                                x_34306;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44151, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44155)[sext_i32_i64(local_tid_44151)] =
                            x_34307;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44159) *
                      squot64(segred_group_sizze_34302,
                              segment_sizze_nonzzero_44148) +
                      sext_i32_i64(local_tid_44151), m_28248 * i32_res_28263 *
                      i32_res_28263) && slt64(sext_i32_i64(local_tid_44151),
                                              squot64(segred_group_sizze_34302,
                                                      segment_sizze_nonzzero_44148))) {
                ((__global
                  float *) mem_42996)[squot64(sext_i32_i64(virt_group_id_44159) *
                                              squot64(segred_group_sizze_34302,
                                                      segment_sizze_nonzzero_44148) +
                                              sext_i32_i64(local_tid_44151),
                                              i32_res_28263 * i32_res_28263) *
                                      (i32_res_28263 * i32_res_28263) +
                                      squot64(sext_i32_i64(virt_group_id_44159) *
                                              squot64(segred_group_sizze_34302,
                                                      segment_sizze_nonzzero_44148) +
                                              sext_i32_i64(local_tid_44151) -
                                              squot64(sext_i32_i64(virt_group_id_44159) *
                                                      squot64(segred_group_sizze_34302,
                                                              segment_sizze_nonzzero_44148) +
                                                      sext_i32_i64(local_tid_44151),
                                                      i32_res_28263 *
                                                      i32_res_28263) *
                                              (i32_res_28263 * i32_res_28263),
                                              i32_res_28263) * i32_res_28263 +
                                      (sext_i32_i64(virt_group_id_44159) *
                                       squot64(segred_group_sizze_34302,
                                               segment_sizze_nonzzero_44148) +
                                       sext_i32_i64(local_tid_44151) -
                                       squot64(sext_i32_i64(virt_group_id_44159) *
                                               squot64(segred_group_sizze_34302,
                                                       segment_sizze_nonzzero_44148) +
                                               sext_i32_i64(local_tid_44151),
                                               i32_res_28263 * i32_res_28263) *
                                       (i32_res_28263 * i32_res_28263) -
                                       squot64(sext_i32_i64(virt_group_id_44159) *
                                               squot64(segred_group_sizze_34302,
                                                       segment_sizze_nonzzero_44148) +
                                               sext_i32_i64(local_tid_44151) -
                                               squot64(sext_i32_i64(virt_group_id_44159) *
                                                       squot64(segred_group_sizze_34302,
                                                               segment_sizze_nonzzero_44148) +
                                                       sext_i32_i64(local_tid_44151),
                                                       i32_res_28263 *
                                                       i32_res_28263) *
                                               (i32_res_28263 * i32_res_28263),
                                               i32_res_28263) *
                                       i32_res_28263)] = ((__local
                                                           float *) red_arr_mem_44155)[(sext_i32_i64(local_tid_44151) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44148 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_34302
}
__kernel void mainMagnitudezisegred_small_35211(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44352_backing_aligned_0,
                                                int64_t N_28247,
                                                int64_t m_28248,
                                                int64_t i32_res_28257,
                                                int64_t i32_res_28263,
                                                int64_t num_groups_35264,
                                                int64_t segment_sizze_nonzzero_44345,
                                                __global
                                                unsigned char *images_mem_42841,
                                                __global
                                                unsigned char *binop_p_mem_42850,
                                                __global
                                                unsigned char *mem_43304)
{
    #define segred_group_sizze_35263 (mainMagnitudezisegred_group_sizze_35205)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44352_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44352_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44347;
    int32_t local_tid_44348;
    int64_t group_sizze_44351;
    int32_t wave_sizze_44350;
    int32_t group_tid_44349;
    
    global_tid_44347 = get_global_id(0);
    local_tid_44348 = get_local_id(0);
    group_sizze_44351 = get_local_size(0);
    wave_sizze_44350 = LOCKSTEP_WIDTH;
    group_tid_44349 = get_group_id(0);
    
    int32_t phys_tid_35211;
    
    phys_tid_35211 = global_tid_44347;
    
    __local char *red_arr_mem_44352;
    
    red_arr_mem_44352 = (__local char *) red_arr_mem_44352_backing_0;
    
    int32_t phys_group_id_44354;
    
    phys_group_id_44354 = get_group_id(0);
    for (int32_t i_44355 = 0; i_44355 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248 * i32_res_28263,
                                          squot64(segred_group_sizze_35263,
                                                  segment_sizze_nonzzero_44345))) -
                   phys_group_id_44354, sext_i64_i32(num_groups_35264));
         i_44355++) {
        int32_t virt_group_id_44356 = phys_group_id_44354 + i_44355 *
                sext_i64_i32(num_groups_35264);
        int64_t gtid_35200 = squot64(squot64(sext_i32_i64(local_tid_44348),
                                             segment_sizze_nonzzero_44345) +
                                     sext_i32_i64(virt_group_id_44356) *
                                     squot64(segred_group_sizze_35263,
                                             segment_sizze_nonzzero_44345),
                                     i32_res_28263);
        int64_t gtid_35201 = squot64(sext_i32_i64(local_tid_44348),
                                     segment_sizze_nonzzero_44345) +
                sext_i32_i64(virt_group_id_44356) *
                squot64(segred_group_sizze_35263,
                        segment_sizze_nonzzero_44345) -
                squot64(squot64(sext_i32_i64(local_tid_44348),
                                segment_sizze_nonzzero_44345) +
                        sext_i32_i64(virt_group_id_44356) *
                        squot64(segred_group_sizze_35263,
                                segment_sizze_nonzzero_44345), i32_res_28263) *
                i32_res_28263;
        int64_t gtid_35210 = srem64(sext_i32_i64(local_tid_44348),
                                    i32_res_28257);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28257) && ((slt64(gtid_35200,
                                                             m_28248) &&
                                                       slt64(gtid_35201,
                                                             i32_res_28263)) &&
                                                      slt64(sext_i32_i64(local_tid_44348),
                                                            i32_res_28257 *
                                                            squot64(segred_group_sizze_35263,
                                                                    segment_sizze_nonzzero_44345)))) {
                float x_35273 = ((__global
                                  float *) images_mem_42841)[gtid_35200 *
                                                             N_28247 +
                                                             gtid_35210];
                bool isnan_res_35274;
                
                isnan_res_35274 = futrts_isnan32(x_35273);
                
                float defunc_1_f_res_35275;
                
                if (isnan_res_35274) {
                    defunc_1_f_res_35275 = 0.0F;
                } else {
                    float x_35272 = ((__global
                                      float *) binop_p_mem_42850)[gtid_35201 *
                                                                  N_28247 +
                                                                  gtid_35210];
                    float defunc_1_f_res_f_res_35276 = x_35272 * x_35273;
                    
                    defunc_1_f_res_35275 = defunc_1_f_res_f_res_35276;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348)] =
                        defunc_1_f_res_35275;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28257)) {
            // perform segmented scan to imitate reduction
            {
                float x_35267;
                float x_35268;
                float x_44357;
                float x_44358;
                bool ltid_in_bounds_44360;
                
                ltid_in_bounds_44360 = slt64(sext_i32_i64(local_tid_44348),
                                             i32_res_28257 *
                                             squot64(segred_group_sizze_35263,
                                                     segment_sizze_nonzzero_44345));
                
                int32_t skip_threads_44361;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44360) {
                        x_35268 = ((volatile __local
                                    float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348)];
                        if ((local_tid_44348 - squot32(local_tid_44348, 32) *
                             32) == 0) {
                            x_35267 = x_35268;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44361 = 1;
                    while (slt32(skip_threads_44361, 32)) {
                        if (sle32(skip_threads_44361, local_tid_44348 -
                                  squot32(local_tid_44348, 32) * 32) &&
                            ltid_in_bounds_44360) {
                            // read operands
                            {
                                x_35267 = ((volatile __local
                                            float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348) -
                                                                        sext_i32_i64(skip_threads_44361)];
                            }
                            // perform operation
                            {
                                bool inactive_44362 =
                                     slt64(srem64(sext_i32_i64(local_tid_44348),
                                                  i32_res_28257),
                                           sext_i32_i64(local_tid_44348) -
                                           sext_i32_i64(local_tid_44348 -
                                           skip_threads_44361));
                                
                                if (inactive_44362) {
                                    x_35267 = x_35268;
                                }
                                if (!inactive_44362) {
                                    float defunc_1_op_res_35269 = x_35267 +
                                          x_35268;
                                    
                                    x_35267 = defunc_1_op_res_35269;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44350, skip_threads_44361)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44361, local_tid_44348 -
                                  squot32(local_tid_44348, 32) * 32) &&
                            ltid_in_bounds_44360) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348)] =
                                    x_35267;
                                x_35268 = x_35267;
                            }
                        }
                        if (sle32(wave_sizze_44350, skip_threads_44361)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44361 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44348 - squot32(local_tid_44348, 32) * 32) ==
                        31 && ltid_in_bounds_44360) {
                        ((volatile __local
                          float *) red_arr_mem_44352)[sext_i32_i64(squot32(local_tid_44348,
                                                                           32))] =
                            x_35267;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44363;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44348, 32) == 0 &&
                            ltid_in_bounds_44360) {
                            x_44358 = ((volatile __local
                                        float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348)];
                            if ((local_tid_44348 - squot32(local_tid_44348,
                                                           32) * 32) == 0) {
                                x_44357 = x_44358;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44363 = 1;
                        while (slt32(skip_threads_44363, 32)) {
                            if (sle32(skip_threads_44363, local_tid_44348 -
                                      squot32(local_tid_44348, 32) * 32) &&
                                (squot32(local_tid_44348, 32) == 0 &&
                                 ltid_in_bounds_44360)) {
                                // read operands
                                {
                                    x_44357 = ((volatile __local
                                                float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348) -
                                                                            sext_i32_i64(skip_threads_44363)];
                                }
                                // perform operation
                                {
                                    bool inactive_44364 =
                                         slt64(srem64(sext_i32_i64(local_tid_44348 *
                                                      32 + 32 - 1),
                                                      i32_res_28257),
                                               sext_i32_i64(local_tid_44348 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44348 -
                                                             skip_threads_44363) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44364) {
                                        x_44357 = x_44358;
                                    }
                                    if (!inactive_44364) {
                                        float defunc_1_op_res_44359 = x_44357 +
                                              x_44358;
                                        
                                        x_44357 = defunc_1_op_res_44359;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44350, skip_threads_44363)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44363, local_tid_44348 -
                                      squot32(local_tid_44348, 32) * 32) &&
                                (squot32(local_tid_44348, 32) == 0 &&
                                 ltid_in_bounds_44360)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348)] =
                                        x_44357;
                                    x_44358 = x_44357;
                                }
                            }
                            if (sle32(wave_sizze_44350, skip_threads_44363)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44363 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44348, 32) == 0 ||
                          !ltid_in_bounds_44360)) {
                        // read operands
                        {
                            x_35268 = x_35267;
                            x_35267 = ((__local
                                        float *) red_arr_mem_44352)[sext_i32_i64(squot32(local_tid_44348,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44365 =
                                 slt64(srem64(sext_i32_i64(local_tid_44348),
                                              i32_res_28257),
                                       sext_i32_i64(local_tid_44348) -
                                       sext_i32_i64(squot32(local_tid_44348,
                                                            32) * 32 - 1));
                            
                            if (inactive_44365) {
                                x_35267 = x_35268;
                            }
                            if (!inactive_44365) {
                                float defunc_1_op_res_35269 = x_35267 + x_35268;
                                
                                x_35267 = defunc_1_op_res_35269;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348)] =
                                x_35267;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44348, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44352)[sext_i32_i64(local_tid_44348)] =
                            x_35268;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44356) *
                      squot64(segred_group_sizze_35263,
                              segment_sizze_nonzzero_44345) +
                      sext_i32_i64(local_tid_44348), m_28248 * i32_res_28263) &&
                slt64(sext_i32_i64(local_tid_44348),
                      squot64(segred_group_sizze_35263,
                              segment_sizze_nonzzero_44345))) {
                ((__global
                  float *) mem_43304)[squot64(sext_i32_i64(virt_group_id_44356) *
                                              squot64(segred_group_sizze_35263,
                                                      segment_sizze_nonzzero_44345) +
                                              sext_i32_i64(local_tid_44348),
                                              i32_res_28263) * i32_res_28263 +
                                      (sext_i32_i64(virt_group_id_44356) *
                                       squot64(segred_group_sizze_35263,
                                               segment_sizze_nonzzero_44345) +
                                       sext_i32_i64(local_tid_44348) -
                                       squot64(sext_i32_i64(virt_group_id_44356) *
                                               squot64(segred_group_sizze_35263,
                                                       segment_sizze_nonzzero_44345) +
                                               sext_i32_i64(local_tid_44348),
                                               i32_res_28263) *
                                       i32_res_28263)] = ((__local
                                                           float *) red_arr_mem_44352)[(sext_i32_i64(local_tid_44348) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44345 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35263
}
__kernel void mainMagnitudezisegred_small_35348(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44440_backing_aligned_0,
                                                int64_t m_28248,
                                                int64_t i32_res_28263,
                                                int64_t num_groups_35397,
                                                int64_t segment_sizze_nonzzero_44433,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43089,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43310,
                                                __global
                                                unsigned char *mem_43370)
{
    #define segred_group_sizze_35396 (mainMagnitudezisegred_group_sizze_35342)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44440_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44440_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44435;
    int32_t local_tid_44436;
    int64_t group_sizze_44439;
    int32_t wave_sizze_44438;
    int32_t group_tid_44437;
    
    global_tid_44435 = get_global_id(0);
    local_tid_44436 = get_local_id(0);
    group_sizze_44439 = get_local_size(0);
    wave_sizze_44438 = LOCKSTEP_WIDTH;
    group_tid_44437 = get_group_id(0);
    
    int32_t phys_tid_35348;
    
    phys_tid_35348 = global_tid_44435;
    
    __local char *red_arr_mem_44440;
    
    red_arr_mem_44440 = (__local char *) red_arr_mem_44440_backing_0;
    
    int32_t phys_group_id_44442;
    
    phys_group_id_44442 = get_group_id(0);
    for (int32_t i_44443 = 0; i_44443 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248 * i32_res_28263,
                                          squot64(segred_group_sizze_35396,
                                                  segment_sizze_nonzzero_44433))) -
                   phys_group_id_44442, sext_i64_i32(num_groups_35397));
         i_44443++) {
        int32_t virt_group_id_44444 = phys_group_id_44442 + i_44443 *
                sext_i64_i32(num_groups_35397);
        int64_t gtid_35337 = squot64(squot64(sext_i32_i64(local_tid_44436),
                                             segment_sizze_nonzzero_44433) +
                                     sext_i32_i64(virt_group_id_44444) *
                                     squot64(segred_group_sizze_35396,
                                             segment_sizze_nonzzero_44433),
                                     i32_res_28263);
        int64_t gtid_35338 = squot64(sext_i32_i64(local_tid_44436),
                                     segment_sizze_nonzzero_44433) +
                sext_i32_i64(virt_group_id_44444) *
                squot64(segred_group_sizze_35396,
                        segment_sizze_nonzzero_44433) -
                squot64(squot64(sext_i32_i64(local_tid_44436),
                                segment_sizze_nonzzero_44433) +
                        sext_i32_i64(virt_group_id_44444) *
                        squot64(segred_group_sizze_35396,
                                segment_sizze_nonzzero_44433), i32_res_28263) *
                i32_res_28263;
        int64_t gtid_35347 = srem64(sext_i32_i64(local_tid_44436),
                                    i32_res_28263);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28263) && ((slt64(gtid_35337,
                                                             m_28248) &&
                                                       slt64(gtid_35338,
                                                             i32_res_28263)) &&
                                                      slt64(sext_i32_i64(local_tid_44436),
                                                            i32_res_28263 *
                                                            squot64(segred_group_sizze_35396,
                                                                    segment_sizze_nonzzero_44433)))) {
                float x_35406 = ((__global
                                  float *) defunc_3_map_res_mem_43310)[gtid_35337 *
                                                                       i32_res_28263 +
                                                                       gtid_35347];
                float x_35407 = ((__global
                                  float *) defunc_3_map_res_mem_43089)[gtid_35337 *
                                                                       (i32_res_28263 *
                                                                        i32_res_28263) +
                                                                       gtid_35338 *
                                                                       i32_res_28263 +
                                                                       gtid_35347];
                float defunc_1_f_res_35408 = x_35406 * x_35407;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                        defunc_1_f_res_35408;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28263)) {
            // perform segmented scan to imitate reduction
            {
                float x_35400;
                float x_35401;
                float x_44445;
                float x_44446;
                bool ltid_in_bounds_44448;
                
                ltid_in_bounds_44448 = slt64(sext_i32_i64(local_tid_44436),
                                             i32_res_28263 *
                                             squot64(segred_group_sizze_35396,
                                                     segment_sizze_nonzzero_44433));
                
                int32_t skip_threads_44449;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44448) {
                        x_35401 = ((volatile __local
                                    float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436)];
                        if ((local_tid_44436 - squot32(local_tid_44436, 32) *
                             32) == 0) {
                            x_35400 = x_35401;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44449 = 1;
                    while (slt32(skip_threads_44449, 32)) {
                        if (sle32(skip_threads_44449, local_tid_44436 -
                                  squot32(local_tid_44436, 32) * 32) &&
                            ltid_in_bounds_44448) {
                            // read operands
                            {
                                x_35400 = ((volatile __local
                                            float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436) -
                                                                        sext_i32_i64(skip_threads_44449)];
                            }
                            // perform operation
                            {
                                bool inactive_44450 =
                                     slt64(srem64(sext_i32_i64(local_tid_44436),
                                                  i32_res_28263),
                                           sext_i32_i64(local_tid_44436) -
                                           sext_i32_i64(local_tid_44436 -
                                           skip_threads_44449));
                                
                                if (inactive_44450) {
                                    x_35400 = x_35401;
                                }
                                if (!inactive_44450) {
                                    float defunc_1_op_res_35402 = x_35400 +
                                          x_35401;
                                    
                                    x_35400 = defunc_1_op_res_35402;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44438, skip_threads_44449)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44449, local_tid_44436 -
                                  squot32(local_tid_44436, 32) * 32) &&
                            ltid_in_bounds_44448) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                                    x_35400;
                                x_35401 = x_35400;
                            }
                        }
                        if (sle32(wave_sizze_44438, skip_threads_44449)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44449 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44436 - squot32(local_tid_44436, 32) * 32) ==
                        31 && ltid_in_bounds_44448) {
                        ((volatile __local
                          float *) red_arr_mem_44440)[sext_i32_i64(squot32(local_tid_44436,
                                                                           32))] =
                            x_35400;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44451;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44436, 32) == 0 &&
                            ltid_in_bounds_44448) {
                            x_44446 = ((volatile __local
                                        float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436)];
                            if ((local_tid_44436 - squot32(local_tid_44436,
                                                           32) * 32) == 0) {
                                x_44445 = x_44446;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44451 = 1;
                        while (slt32(skip_threads_44451, 32)) {
                            if (sle32(skip_threads_44451, local_tid_44436 -
                                      squot32(local_tid_44436, 32) * 32) &&
                                (squot32(local_tid_44436, 32) == 0 &&
                                 ltid_in_bounds_44448)) {
                                // read operands
                                {
                                    x_44445 = ((volatile __local
                                                float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436) -
                                                                            sext_i32_i64(skip_threads_44451)];
                                }
                                // perform operation
                                {
                                    bool inactive_44452 =
                                         slt64(srem64(sext_i32_i64(local_tid_44436 *
                                                      32 + 32 - 1),
                                                      i32_res_28263),
                                               sext_i32_i64(local_tid_44436 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44436 -
                                                             skip_threads_44451) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44452) {
                                        x_44445 = x_44446;
                                    }
                                    if (!inactive_44452) {
                                        float defunc_1_op_res_44447 = x_44445 +
                                              x_44446;
                                        
                                        x_44445 = defunc_1_op_res_44447;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44438, skip_threads_44451)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44451, local_tid_44436 -
                                      squot32(local_tid_44436, 32) * 32) &&
                                (squot32(local_tid_44436, 32) == 0 &&
                                 ltid_in_bounds_44448)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                                        x_44445;
                                    x_44446 = x_44445;
                                }
                            }
                            if (sle32(wave_sizze_44438, skip_threads_44451)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44451 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44436, 32) == 0 ||
                          !ltid_in_bounds_44448)) {
                        // read operands
                        {
                            x_35401 = x_35400;
                            x_35400 = ((__local
                                        float *) red_arr_mem_44440)[sext_i32_i64(squot32(local_tid_44436,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44453 =
                                 slt64(srem64(sext_i32_i64(local_tid_44436),
                                              i32_res_28263),
                                       sext_i32_i64(local_tid_44436) -
                                       sext_i32_i64(squot32(local_tid_44436,
                                                            32) * 32 - 1));
                            
                            if (inactive_44453) {
                                x_35400 = x_35401;
                            }
                            if (!inactive_44453) {
                                float defunc_1_op_res_35402 = x_35400 + x_35401;
                                
                                x_35400 = defunc_1_op_res_35402;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                                x_35400;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44436, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44440)[sext_i32_i64(local_tid_44436)] =
                            x_35401;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44444) *
                      squot64(segred_group_sizze_35396,
                              segment_sizze_nonzzero_44433) +
                      sext_i32_i64(local_tid_44436), m_28248 * i32_res_28263) &&
                slt64(sext_i32_i64(local_tid_44436),
                      squot64(segred_group_sizze_35396,
                              segment_sizze_nonzzero_44433))) {
                ((__global
                  float *) mem_43370)[squot64(sext_i32_i64(virt_group_id_44444) *
                                              squot64(segred_group_sizze_35396,
                                                      segment_sizze_nonzzero_44433) +
                                              sext_i32_i64(local_tid_44436),
                                              i32_res_28263) * i32_res_28263 +
                                      (sext_i32_i64(virt_group_id_44444) *
                                       squot64(segred_group_sizze_35396,
                                               segment_sizze_nonzzero_44433) +
                                       sext_i32_i64(local_tid_44436) -
                                       squot64(sext_i32_i64(virt_group_id_44444) *
                                               squot64(segred_group_sizze_35396,
                                                       segment_sizze_nonzzero_44433) +
                                               sext_i32_i64(local_tid_44436),
                                               i32_res_28263) *
                                       i32_res_28263)] = ((__local
                                                           float *) red_arr_mem_44440)[(sext_i32_i64(local_tid_44436) +
                                                                                        (int64_t) 1) *
                                                                                       segment_sizze_nonzzero_44433 -
                                                                                       (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35396
}
__kernel void mainMagnitudezisegred_small_35478(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44572_backing_aligned_0,
                                                int64_t N_28247,
                                                int64_t m_28248,
                                                int64_t i32_res_28263,
                                                int64_t num_groups_35525,
                                                int64_t segment_sizze_nonzzero_44565,
                                                __global
                                                unsigned char *mem_42857,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43376,
                                                __global
                                                unsigned char *mem_43594)
{
    #define segred_group_sizze_35524 (mainMagnitudezisegred_group_sizze_35472)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44572_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44572_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44567;
    int32_t local_tid_44568;
    int64_t group_sizze_44571;
    int32_t wave_sizze_44570;
    int32_t group_tid_44569;
    
    global_tid_44567 = get_global_id(0);
    local_tid_44568 = get_local_id(0);
    group_sizze_44571 = get_local_size(0);
    wave_sizze_44570 = LOCKSTEP_WIDTH;
    group_tid_44569 = get_group_id(0);
    
    int32_t phys_tid_35478;
    
    phys_tid_35478 = global_tid_44567;
    
    __local char *red_arr_mem_44572;
    
    red_arr_mem_44572 = (__local char *) red_arr_mem_44572_backing_0;
    
    int32_t phys_group_id_44574;
    
    phys_group_id_44574 = get_group_id(0);
    for (int32_t i_44575 = 0; i_44575 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248 * N_28247,
                                          squot64(segred_group_sizze_35524,
                                                  segment_sizze_nonzzero_44565))) -
                   phys_group_id_44574, sext_i64_i32(num_groups_35525));
         i_44575++) {
        int32_t virt_group_id_44576 = phys_group_id_44574 + i_44575 *
                sext_i64_i32(num_groups_35525);
        int64_t gtid_35467 = squot64(squot64(sext_i32_i64(local_tid_44568),
                                             segment_sizze_nonzzero_44565) +
                                     sext_i32_i64(virt_group_id_44576) *
                                     squot64(segred_group_sizze_35524,
                                             segment_sizze_nonzzero_44565),
                                     N_28247);
        int64_t gtid_35468 = squot64(sext_i32_i64(local_tid_44568),
                                     segment_sizze_nonzzero_44565) +
                sext_i32_i64(virt_group_id_44576) *
                squot64(segred_group_sizze_35524,
                        segment_sizze_nonzzero_44565) -
                squot64(squot64(sext_i32_i64(local_tid_44568),
                                segment_sizze_nonzzero_44565) +
                        sext_i32_i64(virt_group_id_44576) *
                        squot64(segred_group_sizze_35524,
                                segment_sizze_nonzzero_44565), N_28247) *
                N_28247;
        int64_t gtid_35477 = srem64(sext_i32_i64(local_tid_44568),
                                    i32_res_28263);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28263) && ((slt64(gtid_35467,
                                                             m_28248) &&
                                                       slt64(gtid_35468,
                                                             N_28247)) &&
                                                      slt64(sext_i32_i64(local_tid_44568),
                                                            i32_res_28263 *
                                                            squot64(segred_group_sizze_35524,
                                                                    segment_sizze_nonzzero_44565)))) {
                float x_35533 = ((__global
                                  float *) defunc_4_map_res_mem_43376)[gtid_35467 *
                                                                       i32_res_28263 +
                                                                       gtid_35477];
                float x_35534 = ((__global float *) mem_42857)[gtid_35468 *
                                                               i32_res_28263 +
                                                               gtid_35477];
                float defunc_1_f_res_35535 = x_35533 * x_35534;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568)] =
                        defunc_1_f_res_35535;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28263)) {
            // perform segmented scan to imitate reduction
            {
                float x_35528;
                float x_35529;
                float x_44577;
                float x_44578;
                bool ltid_in_bounds_44580;
                
                ltid_in_bounds_44580 = slt64(sext_i32_i64(local_tid_44568),
                                             i32_res_28263 *
                                             squot64(segred_group_sizze_35524,
                                                     segment_sizze_nonzzero_44565));
                
                int32_t skip_threads_44581;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44580) {
                        x_35529 = ((volatile __local
                                    float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568)];
                        if ((local_tid_44568 - squot32(local_tid_44568, 32) *
                             32) == 0) {
                            x_35528 = x_35529;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44581 = 1;
                    while (slt32(skip_threads_44581, 32)) {
                        if (sle32(skip_threads_44581, local_tid_44568 -
                                  squot32(local_tid_44568, 32) * 32) &&
                            ltid_in_bounds_44580) {
                            // read operands
                            {
                                x_35528 = ((volatile __local
                                            float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568) -
                                                                        sext_i32_i64(skip_threads_44581)];
                            }
                            // perform operation
                            {
                                bool inactive_44582 =
                                     slt64(srem64(sext_i32_i64(local_tid_44568),
                                                  i32_res_28263),
                                           sext_i32_i64(local_tid_44568) -
                                           sext_i32_i64(local_tid_44568 -
                                           skip_threads_44581));
                                
                                if (inactive_44582) {
                                    x_35528 = x_35529;
                                }
                                if (!inactive_44582) {
                                    float defunc_1_op_res_35530 = x_35528 +
                                          x_35529;
                                    
                                    x_35528 = defunc_1_op_res_35530;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44570, skip_threads_44581)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44581, local_tid_44568 -
                                  squot32(local_tid_44568, 32) * 32) &&
                            ltid_in_bounds_44580) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568)] =
                                    x_35528;
                                x_35529 = x_35528;
                            }
                        }
                        if (sle32(wave_sizze_44570, skip_threads_44581)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44581 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44568 - squot32(local_tid_44568, 32) * 32) ==
                        31 && ltid_in_bounds_44580) {
                        ((volatile __local
                          float *) red_arr_mem_44572)[sext_i32_i64(squot32(local_tid_44568,
                                                                           32))] =
                            x_35528;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44583;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44568, 32) == 0 &&
                            ltid_in_bounds_44580) {
                            x_44578 = ((volatile __local
                                        float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568)];
                            if ((local_tid_44568 - squot32(local_tid_44568,
                                                           32) * 32) == 0) {
                                x_44577 = x_44578;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44583 = 1;
                        while (slt32(skip_threads_44583, 32)) {
                            if (sle32(skip_threads_44583, local_tid_44568 -
                                      squot32(local_tid_44568, 32) * 32) &&
                                (squot32(local_tid_44568, 32) == 0 &&
                                 ltid_in_bounds_44580)) {
                                // read operands
                                {
                                    x_44577 = ((volatile __local
                                                float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568) -
                                                                            sext_i32_i64(skip_threads_44583)];
                                }
                                // perform operation
                                {
                                    bool inactive_44584 =
                                         slt64(srem64(sext_i32_i64(local_tid_44568 *
                                                      32 + 32 - 1),
                                                      i32_res_28263),
                                               sext_i32_i64(local_tid_44568 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44568 -
                                                             skip_threads_44583) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44584) {
                                        x_44577 = x_44578;
                                    }
                                    if (!inactive_44584) {
                                        float defunc_1_op_res_44579 = x_44577 +
                                              x_44578;
                                        
                                        x_44577 = defunc_1_op_res_44579;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44570, skip_threads_44583)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44583, local_tid_44568 -
                                      squot32(local_tid_44568, 32) * 32) &&
                                (squot32(local_tid_44568, 32) == 0 &&
                                 ltid_in_bounds_44580)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568)] =
                                        x_44577;
                                    x_44578 = x_44577;
                                }
                            }
                            if (sle32(wave_sizze_44570, skip_threads_44583)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44583 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44568, 32) == 0 ||
                          !ltid_in_bounds_44580)) {
                        // read operands
                        {
                            x_35529 = x_35528;
                            x_35528 = ((__local
                                        float *) red_arr_mem_44572)[sext_i32_i64(squot32(local_tid_44568,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44585 =
                                 slt64(srem64(sext_i32_i64(local_tid_44568),
                                              i32_res_28263),
                                       sext_i32_i64(local_tid_44568) -
                                       sext_i32_i64(squot32(local_tid_44568,
                                                            32) * 32 - 1));
                            
                            if (inactive_44585) {
                                x_35528 = x_35529;
                            }
                            if (!inactive_44585) {
                                float defunc_1_op_res_35530 = x_35528 + x_35529;
                                
                                x_35528 = defunc_1_op_res_35530;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568)] =
                                x_35528;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44568, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44572)[sext_i32_i64(local_tid_44568)] =
                            x_35529;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44576) *
                      squot64(segred_group_sizze_35524,
                              segment_sizze_nonzzero_44565) +
                      sext_i32_i64(local_tid_44568), m_28248 * N_28247) &&
                slt64(sext_i32_i64(local_tid_44568),
                      squot64(segred_group_sizze_35524,
                              segment_sizze_nonzzero_44565))) {
                ((__global
                  float *) mem_43594)[squot64(sext_i32_i64(virt_group_id_44576) *
                                              squot64(segred_group_sizze_35524,
                                                      segment_sizze_nonzzero_44565) +
                                              sext_i32_i64(local_tid_44568),
                                              N_28247) * N_28247 +
                                      (sext_i32_i64(virt_group_id_44576) *
                                       squot64(segred_group_sizze_35524,
                                               segment_sizze_nonzzero_44565) +
                                       sext_i32_i64(local_tid_44568) -
                                       squot64(sext_i32_i64(virt_group_id_44576) *
                                               squot64(segred_group_sizze_35524,
                                                       segment_sizze_nonzzero_44565) +
                                               sext_i32_i64(local_tid_44568),
                                               N_28247) * N_28247)] = ((__local
                                                                        float *) red_arr_mem_44572)[(sext_i32_i64(local_tid_44568) +
                                                                                                     (int64_t) 1) *
                                                                                                    segment_sizze_nonzzero_44565 -
                                                                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_35524
}
__kernel void mainMagnitudezisegred_small_36044(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44824_backing_aligned_0,
                                                int64_t N_28247,
                                                int64_t m_28248,
                                                int64_t i32_res_28257,
                                                int64_t num_groups_36091,
                                                int64_t segment_sizze_nonzzero_44817,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43638,
                                                __global
                                                unsigned char *mem_43692,
                                                __global
                                                unsigned char *mem_43695)
{
    #define segred_group_sizze_36090 (mainMagnitudezisegred_group_sizze_36038)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44824_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44824_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44819;
    int32_t local_tid_44820;
    int64_t group_sizze_44823;
    int32_t wave_sizze_44822;
    int32_t group_tid_44821;
    
    global_tid_44819 = get_global_id(0);
    local_tid_44820 = get_local_id(0);
    group_sizze_44823 = get_local_size(0);
    wave_sizze_44822 = LOCKSTEP_WIDTH;
    group_tid_44821 = get_group_id(0);
    
    int32_t phys_tid_36044;
    
    phys_tid_36044 = global_tid_44819;
    
    __local char *red_arr_mem_44824;
    
    red_arr_mem_44824 = (__local char *) red_arr_mem_44824_backing_0;
    
    int32_t phys_group_id_44826;
    
    phys_group_id_44826 = get_group_id(0);
    for (int32_t i_44827 = 0; i_44827 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248,
                                          squot64(segred_group_sizze_36090,
                                                  segment_sizze_nonzzero_44817))) -
                   phys_group_id_44826, sext_i64_i32(num_groups_36091));
         i_44827++) {
        int32_t virt_group_id_44828 = phys_group_id_44826 + i_44827 *
                sext_i64_i32(num_groups_36091);
        int64_t gtid_36035 = squot64(sext_i32_i64(local_tid_44820),
                                     segment_sizze_nonzzero_44817) +
                sext_i32_i64(virt_group_id_44828) *
                squot64(segred_group_sizze_36090, segment_sizze_nonzzero_44817);
        int64_t gtid_36043 = srem64(sext_i32_i64(local_tid_44820),
                                    i32_res_28257);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28257) && (slt64(gtid_36035,
                                                            m_28248) &&
                                                      slt64(sext_i32_i64(local_tid_44820),
                                                            i32_res_28257 *
                                                            squot64(segred_group_sizze_36090,
                                                                    segment_sizze_nonzzero_44817)))) {
                int32_t defunc_0_f_res_36098 = ((__global
                                                 int32_t *) mem_43692)[gtid_36035];
                int32_t index_primexp_40928 = sext_i64_i32(gtid_36043);
                bool cond_36100 = slt32(index_primexp_40928,
                                        defunc_0_f_res_36098);
                float defunc_0_f_res_36101;
                
                if (cond_36100) {
                    int64_t i_36102 = sext_i32_i64(index_primexp_40928);
                    float defunc_0_f_res_t_res_36103 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_36035 *
                                                                                              N_28247 +
                                                                                              i_36102];
                    
                    defunc_0_f_res_36101 = defunc_0_f_res_t_res_36103;
                } else {
                    defunc_0_f_res_36101 = 0.0F;
                }
                
                float defunc_0_f_res_36104 = defunc_0_f_res_36101 *
                      defunc_0_f_res_36101;
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820)] =
                        defunc_0_f_res_36104;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28257)) {
            // perform segmented scan to imitate reduction
            {
                float x_36094;
                float x_36095;
                float x_44829;
                float x_44830;
                bool ltid_in_bounds_44832;
                
                ltid_in_bounds_44832 = slt64(sext_i32_i64(local_tid_44820),
                                             i32_res_28257 *
                                             squot64(segred_group_sizze_36090,
                                                     segment_sizze_nonzzero_44817));
                
                int32_t skip_threads_44833;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44832) {
                        x_36095 = ((volatile __local
                                    float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820)];
                        if ((local_tid_44820 - squot32(local_tid_44820, 32) *
                             32) == 0) {
                            x_36094 = x_36095;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44833 = 1;
                    while (slt32(skip_threads_44833, 32)) {
                        if (sle32(skip_threads_44833, local_tid_44820 -
                                  squot32(local_tid_44820, 32) * 32) &&
                            ltid_in_bounds_44832) {
                            // read operands
                            {
                                x_36094 = ((volatile __local
                                            float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820) -
                                                                        sext_i32_i64(skip_threads_44833)];
                            }
                            // perform operation
                            {
                                bool inactive_44834 =
                                     slt64(srem64(sext_i32_i64(local_tid_44820),
                                                  i32_res_28257),
                                           sext_i32_i64(local_tid_44820) -
                                           sext_i32_i64(local_tid_44820 -
                                           skip_threads_44833));
                                
                                if (inactive_44834) {
                                    x_36094 = x_36095;
                                }
                                if (!inactive_44834) {
                                    float defunc_1_op_res_36096 = x_36094 +
                                          x_36095;
                                    
                                    x_36094 = defunc_1_op_res_36096;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44822, skip_threads_44833)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44833, local_tid_44820 -
                                  squot32(local_tid_44820, 32) * 32) &&
                            ltid_in_bounds_44832) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820)] =
                                    x_36094;
                                x_36095 = x_36094;
                            }
                        }
                        if (sle32(wave_sizze_44822, skip_threads_44833)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44833 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44820 - squot32(local_tid_44820, 32) * 32) ==
                        31 && ltid_in_bounds_44832) {
                        ((volatile __local
                          float *) red_arr_mem_44824)[sext_i32_i64(squot32(local_tid_44820,
                                                                           32))] =
                            x_36094;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44835;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44820, 32) == 0 &&
                            ltid_in_bounds_44832) {
                            x_44830 = ((volatile __local
                                        float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820)];
                            if ((local_tid_44820 - squot32(local_tid_44820,
                                                           32) * 32) == 0) {
                                x_44829 = x_44830;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44835 = 1;
                        while (slt32(skip_threads_44835, 32)) {
                            if (sle32(skip_threads_44835, local_tid_44820 -
                                      squot32(local_tid_44820, 32) * 32) &&
                                (squot32(local_tid_44820, 32) == 0 &&
                                 ltid_in_bounds_44832)) {
                                // read operands
                                {
                                    x_44829 = ((volatile __local
                                                float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820) -
                                                                            sext_i32_i64(skip_threads_44835)];
                                }
                                // perform operation
                                {
                                    bool inactive_44836 =
                                         slt64(srem64(sext_i32_i64(local_tid_44820 *
                                                      32 + 32 - 1),
                                                      i32_res_28257),
                                               sext_i32_i64(local_tid_44820 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44820 -
                                                             skip_threads_44835) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44836) {
                                        x_44829 = x_44830;
                                    }
                                    if (!inactive_44836) {
                                        float defunc_1_op_res_44831 = x_44829 +
                                              x_44830;
                                        
                                        x_44829 = defunc_1_op_res_44831;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44822, skip_threads_44835)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44835, local_tid_44820 -
                                      squot32(local_tid_44820, 32) * 32) &&
                                (squot32(local_tid_44820, 32) == 0 &&
                                 ltid_in_bounds_44832)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820)] =
                                        x_44829;
                                    x_44830 = x_44829;
                                }
                            }
                            if (sle32(wave_sizze_44822, skip_threads_44835)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44835 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44820, 32) == 0 ||
                          !ltid_in_bounds_44832)) {
                        // read operands
                        {
                            x_36095 = x_36094;
                            x_36094 = ((__local
                                        float *) red_arr_mem_44824)[sext_i32_i64(squot32(local_tid_44820,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44837 =
                                 slt64(srem64(sext_i32_i64(local_tid_44820),
                                              i32_res_28257),
                                       sext_i32_i64(local_tid_44820) -
                                       sext_i32_i64(squot32(local_tid_44820,
                                                            32) * 32 - 1));
                            
                            if (inactive_44837) {
                                x_36094 = x_36095;
                            }
                            if (!inactive_44837) {
                                float defunc_1_op_res_36096 = x_36094 + x_36095;
                                
                                x_36094 = defunc_1_op_res_36096;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820)] =
                                x_36094;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44820, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44824)[sext_i32_i64(local_tid_44820)] =
                            x_36095;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44828) *
                      squot64(segred_group_sizze_36090,
                              segment_sizze_nonzzero_44817) +
                      sext_i32_i64(local_tid_44820), m_28248) &&
                slt64(sext_i32_i64(local_tid_44820),
                      squot64(segred_group_sizze_36090,
                              segment_sizze_nonzzero_44817))) {
                ((__global
                  float *) mem_43695)[sext_i32_i64(virt_group_id_44828) *
                                      squot64(segred_group_sizze_36090,
                                              segment_sizze_nonzzero_44817) +
                                      sext_i32_i64(local_tid_44820)] = ((__local
                                                                         float *) red_arr_mem_44824)[(sext_i32_i64(local_tid_44820) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44817 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36090
}
__kernel void mainMagnitudezisegred_small_36065(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44764_backing_aligned_0,
                                                int64_t N_28247,
                                                int64_t m_28248,
                                                int64_t i32_res_28257,
                                                int64_t num_groups_36077,
                                                int64_t segment_sizze_nonzzero_44757,
                                                __global
                                                unsigned char *images_mem_42841,
                                                __global
                                                unsigned char *mem_43692)
{
    #define segred_group_sizze_36076 (mainMagnitudezisegred_group_sizze_36059)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44764_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44764_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44759;
    int32_t local_tid_44760;
    int64_t group_sizze_44763;
    int32_t wave_sizze_44762;
    int32_t group_tid_44761;
    
    global_tid_44759 = get_global_id(0);
    local_tid_44760 = get_local_id(0);
    group_sizze_44763 = get_local_size(0);
    wave_sizze_44762 = LOCKSTEP_WIDTH;
    group_tid_44761 = get_group_id(0);
    
    int32_t phys_tid_36065;
    
    phys_tid_36065 = global_tid_44759;
    
    __local char *red_arr_mem_44764;
    
    red_arr_mem_44764 = (__local char *) red_arr_mem_44764_backing_0;
    
    int32_t phys_group_id_44766;
    
    phys_group_id_44766 = get_group_id(0);
    for (int32_t i_44767 = 0; i_44767 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248,
                                          squot64(segred_group_sizze_36076,
                                                  segment_sizze_nonzzero_44757))) -
                   phys_group_id_44766, sext_i64_i32(num_groups_36077));
         i_44767++) {
        int32_t virt_group_id_44768 = phys_group_id_44766 + i_44767 *
                sext_i64_i32(num_groups_36077);
        int64_t gtid_36056 = squot64(sext_i32_i64(local_tid_44760),
                                     segment_sizze_nonzzero_44757) +
                sext_i32_i64(virt_group_id_44768) *
                squot64(segred_group_sizze_36076, segment_sizze_nonzzero_44757);
        int64_t gtid_36064 = srem64(sext_i32_i64(local_tid_44760),
                                    i32_res_28257);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28257) && (slt64(gtid_36056,
                                                            m_28248) &&
                                                      slt64(sext_i32_i64(local_tid_44760),
                                                            i32_res_28257 *
                                                            squot64(segred_group_sizze_36076,
                                                                    segment_sizze_nonzzero_44757)))) {
                float x_36084 = ((__global
                                  float *) images_mem_42841)[gtid_36056 *
                                                             N_28247 +
                                                             gtid_36064];
                bool isnan_res_36085;
                
                isnan_res_36085 = futrts_isnan32(x_36084);
                
                bool cond_36086 = !isnan_res_36085;
                int32_t defunc_0_f_res_36087 = btoi_bool_i32(cond_36086);
                
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760)] =
                        defunc_0_f_res_36087;
                }
            } else {
                ((__local
                  int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760)] =
                    0;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28257)) {
            // perform segmented scan to imitate reduction
            {
                int32_t x_36080;
                int32_t x_36081;
                int32_t x_44769;
                int32_t x_44770;
                bool ltid_in_bounds_44772;
                
                ltid_in_bounds_44772 = slt64(sext_i32_i64(local_tid_44760),
                                             i32_res_28257 *
                                             squot64(segred_group_sizze_36076,
                                                     segment_sizze_nonzzero_44757));
                
                int32_t skip_threads_44773;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44772) {
                        x_36081 = ((volatile __local
                                    int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760)];
                        if ((local_tid_44760 - squot32(local_tid_44760, 32) *
                             32) == 0) {
                            x_36080 = x_36081;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44773 = 1;
                    while (slt32(skip_threads_44773, 32)) {
                        if (sle32(skip_threads_44773, local_tid_44760 -
                                  squot32(local_tid_44760, 32) * 32) &&
                            ltid_in_bounds_44772) {
                            // read operands
                            {
                                x_36080 = ((volatile __local
                                            int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760) -
                                                                          sext_i32_i64(skip_threads_44773)];
                            }
                            // perform operation
                            {
                                bool inactive_44774 =
                                     slt64(srem64(sext_i32_i64(local_tid_44760),
                                                  i32_res_28257),
                                           sext_i32_i64(local_tid_44760) -
                                           sext_i32_i64(local_tid_44760 -
                                           skip_threads_44773));
                                
                                if (inactive_44774) {
                                    x_36080 = x_36081;
                                }
                                if (!inactive_44774) {
                                    int32_t defunc_1_op_res_36082 =
                                            add32(x_36080, x_36081);
                                    
                                    x_36080 = defunc_1_op_res_36082;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44762, skip_threads_44773)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44773, local_tid_44760 -
                                  squot32(local_tid_44760, 32) * 32) &&
                            ltid_in_bounds_44772) {
                            // write result
                            {
                                ((volatile __local
                                  int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760)] =
                                    x_36080;
                                x_36081 = x_36080;
                            }
                        }
                        if (sle32(wave_sizze_44762, skip_threads_44773)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44773 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44760 - squot32(local_tid_44760, 32) * 32) ==
                        31 && ltid_in_bounds_44772) {
                        ((volatile __local
                          int32_t *) red_arr_mem_44764)[sext_i32_i64(squot32(local_tid_44760,
                                                                             32))] =
                            x_36080;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44775;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44760, 32) == 0 &&
                            ltid_in_bounds_44772) {
                            x_44770 = ((volatile __local
                                        int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760)];
                            if ((local_tid_44760 - squot32(local_tid_44760,
                                                           32) * 32) == 0) {
                                x_44769 = x_44770;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44775 = 1;
                        while (slt32(skip_threads_44775, 32)) {
                            if (sle32(skip_threads_44775, local_tid_44760 -
                                      squot32(local_tid_44760, 32) * 32) &&
                                (squot32(local_tid_44760, 32) == 0 &&
                                 ltid_in_bounds_44772)) {
                                // read operands
                                {
                                    x_44769 = ((volatile __local
                                                int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760) -
                                                                              sext_i32_i64(skip_threads_44775)];
                                }
                                // perform operation
                                {
                                    bool inactive_44776 =
                                         slt64(srem64(sext_i32_i64(local_tid_44760 *
                                                      32 + 32 - 1),
                                                      i32_res_28257),
                                               sext_i32_i64(local_tid_44760 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44760 -
                                                             skip_threads_44775) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44776) {
                                        x_44769 = x_44770;
                                    }
                                    if (!inactive_44776) {
                                        int32_t defunc_1_op_res_44771 =
                                                add32(x_44769, x_44770);
                                        
                                        x_44769 = defunc_1_op_res_44771;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44762, skip_threads_44775)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44775, local_tid_44760 -
                                      squot32(local_tid_44760, 32) * 32) &&
                                (squot32(local_tid_44760, 32) == 0 &&
                                 ltid_in_bounds_44772)) {
                                // write result
                                {
                                    ((volatile __local
                                      int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760)] =
                                        x_44769;
                                    x_44770 = x_44769;
                                }
                            }
                            if (sle32(wave_sizze_44762, skip_threads_44775)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44775 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44760, 32) == 0 ||
                          !ltid_in_bounds_44772)) {
                        // read operands
                        {
                            x_36081 = x_36080;
                            x_36080 = ((__local
                                        int32_t *) red_arr_mem_44764)[sext_i32_i64(squot32(local_tid_44760,
                                                                                           32)) -
                                                                      (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44777 =
                                 slt64(srem64(sext_i32_i64(local_tid_44760),
                                              i32_res_28257),
                                       sext_i32_i64(local_tid_44760) -
                                       sext_i32_i64(squot32(local_tid_44760,
                                                            32) * 32 - 1));
                            
                            if (inactive_44777) {
                                x_36080 = x_36081;
                            }
                            if (!inactive_44777) {
                                int32_t defunc_1_op_res_36082 = add32(x_36080,
                                                                      x_36081);
                                
                                x_36080 = defunc_1_op_res_36082;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760)] =
                                x_36080;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44760, 32) == 0) {
                        ((__local
                          int32_t *) red_arr_mem_44764)[sext_i32_i64(local_tid_44760)] =
                            x_36081;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44768) *
                      squot64(segred_group_sizze_36076,
                              segment_sizze_nonzzero_44757) +
                      sext_i32_i64(local_tid_44760), m_28248) &&
                slt64(sext_i32_i64(local_tid_44760),
                      squot64(segred_group_sizze_36076,
                              segment_sizze_nonzzero_44757))) {
                ((__global
                  int32_t *) mem_43692)[sext_i32_i64(virt_group_id_44768) *
                                        squot64(segred_group_sizze_36076,
                                                segment_sizze_nonzzero_44757) +
                                        sext_i32_i64(local_tid_44760)] =
                    ((__local
                      int32_t *) red_arr_mem_44764)[(sext_i32_i64(local_tid_44760) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_44757 -
                                                    (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36076
}
__kernel void mainMagnitudezisegred_small_36216(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_44933_backing_aligned_0,
                                                int64_t N_28247,
                                                int64_t m_28248,
                                                int64_t i32_res_28618,
                                                int64_t num_groups_36234,
                                                int64_t segment_sizze_nonzzero_44926,
                                                __global
                                                unsigned char *defunc_4_map_res_mem_43638,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43704,
                                                __global
                                                unsigned char *defunc_3_map_res_mem_43705,
                                                __global
                                                unsigned char *mem_43738)
{
    #define segred_group_sizze_36233 (mainMagnitudezisegred_group_sizze_36210)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_44933_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_44933_backing_aligned_0;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44928;
    int32_t local_tid_44929;
    int64_t group_sizze_44932;
    int32_t wave_sizze_44931;
    int32_t group_tid_44930;
    
    global_tid_44928 = get_global_id(0);
    local_tid_44929 = get_local_id(0);
    group_sizze_44932 = get_local_size(0);
    wave_sizze_44931 = LOCKSTEP_WIDTH;
    group_tid_44930 = get_group_id(0);
    
    int32_t phys_tid_36216;
    
    phys_tid_36216 = global_tid_44928;
    
    __local char *red_arr_mem_44933;
    
    red_arr_mem_44933 = (__local char *) red_arr_mem_44933_backing_0;
    
    int32_t phys_group_id_44935;
    
    phys_group_id_44935 = get_group_id(0);
    for (int32_t i_44936 = 0; i_44936 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248,
                                          squot64(segred_group_sizze_36233,
                                                  segment_sizze_nonzzero_44926))) -
                   phys_group_id_44935, sext_i64_i32(num_groups_36234));
         i_44936++) {
        int32_t virt_group_id_44937 = phys_group_id_44935 + i_44936 *
                sext_i64_i32(num_groups_36234);
        int64_t gtid_36207 = squot64(sext_i32_i64(local_tid_44929),
                                     segment_sizze_nonzzero_44926) +
                sext_i32_i64(virt_group_id_44937) *
                squot64(segred_group_sizze_36233, segment_sizze_nonzzero_44926);
        int64_t gtid_36215 = srem64(sext_i32_i64(local_tid_44929),
                                    i32_res_28618);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, i32_res_28618) && (slt64(gtid_36207,
                                                            m_28248) &&
                                                      slt64(sext_i32_i64(local_tid_44929),
                                                            i32_res_28618 *
                                                            squot64(segred_group_sizze_36233,
                                                                    segment_sizze_nonzzero_44926)))) {
                int32_t x_36242 = ((__global
                                    int32_t *) defunc_3_map_res_mem_43704)[gtid_36207];
                int32_t index_primexp_40933 = sext_i64_i32(gtid_36215);
                bool cond_36244 = slt32(index_primexp_40933, x_36242);
                float defunc_0_f_res_36245;
                
                if (cond_36244) {
                    int32_t x_36241 = ((__global
                                        int32_t *) defunc_3_map_res_mem_43705)[gtid_36207];
                    int32_t x_36246 = add32(x_36241, index_primexp_40933);
                    int32_t x_36247 = sub32(x_36246, x_36242);
                    int32_t i_36248 = add32(1, x_36247);
                    int64_t i_36249 = sext_i32_i64(i_36248);
                    float defunc_0_f_res_t_res_36250 = ((__global
                                                         float *) defunc_4_map_res_mem_43638)[gtid_36207 *
                                                                                              N_28247 +
                                                                                              i_36249];
                    
                    defunc_0_f_res_36245 = defunc_0_f_res_t_res_36250;
                } else {
                    defunc_0_f_res_36245 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929)] =
                        defunc_0_f_res_36245;
                }
            } else {
                ((__local
                  float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, i32_res_28618)) {
            // perform segmented scan to imitate reduction
            {
                float x_36237;
                float x_36238;
                float x_44938;
                float x_44939;
                bool ltid_in_bounds_44941;
                
                ltid_in_bounds_44941 = slt64(sext_i32_i64(local_tid_44929),
                                             i32_res_28618 *
                                             squot64(segred_group_sizze_36233,
                                                     segment_sizze_nonzzero_44926));
                
                int32_t skip_threads_44942;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_44941) {
                        x_36238 = ((volatile __local
                                    float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929)];
                        if ((local_tid_44929 - squot32(local_tid_44929, 32) *
                             32) == 0) {
                            x_36237 = x_36238;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_44942 = 1;
                    while (slt32(skip_threads_44942, 32)) {
                        if (sle32(skip_threads_44942, local_tid_44929 -
                                  squot32(local_tid_44929, 32) * 32) &&
                            ltid_in_bounds_44941) {
                            // read operands
                            {
                                x_36237 = ((volatile __local
                                            float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929) -
                                                                        sext_i32_i64(skip_threads_44942)];
                            }
                            // perform operation
                            {
                                bool inactive_44943 =
                                     slt64(srem64(sext_i32_i64(local_tid_44929),
                                                  i32_res_28618),
                                           sext_i32_i64(local_tid_44929) -
                                           sext_i32_i64(local_tid_44929 -
                                           skip_threads_44942));
                                
                                if (inactive_44943) {
                                    x_36237 = x_36238;
                                }
                                if (!inactive_44943) {
                                    float defunc_1_op_res_36239 = x_36237 +
                                          x_36238;
                                    
                                    x_36237 = defunc_1_op_res_36239;
                                }
                            }
                        }
                        if (sle32(wave_sizze_44931, skip_threads_44942)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_44942, local_tid_44929 -
                                  squot32(local_tid_44929, 32) * 32) &&
                            ltid_in_bounds_44941) {
                            // write result
                            {
                                ((volatile __local
                                  float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929)] =
                                    x_36237;
                                x_36238 = x_36237;
                            }
                        }
                        if (sle32(wave_sizze_44931, skip_threads_44942)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_44942 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_44929 - squot32(local_tid_44929, 32) * 32) ==
                        31 && ltid_in_bounds_44941) {
                        ((volatile __local
                          float *) red_arr_mem_44933)[sext_i32_i64(squot32(local_tid_44929,
                                                                           32))] =
                            x_36237;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_44944;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_44929, 32) == 0 &&
                            ltid_in_bounds_44941) {
                            x_44939 = ((volatile __local
                                        float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929)];
                            if ((local_tid_44929 - squot32(local_tid_44929,
                                                           32) * 32) == 0) {
                                x_44938 = x_44939;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_44944 = 1;
                        while (slt32(skip_threads_44944, 32)) {
                            if (sle32(skip_threads_44944, local_tid_44929 -
                                      squot32(local_tid_44929, 32) * 32) &&
                                (squot32(local_tid_44929, 32) == 0 &&
                                 ltid_in_bounds_44941)) {
                                // read operands
                                {
                                    x_44938 = ((volatile __local
                                                float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929) -
                                                                            sext_i32_i64(skip_threads_44944)];
                                }
                                // perform operation
                                {
                                    bool inactive_44945 =
                                         slt64(srem64(sext_i32_i64(local_tid_44929 *
                                                      32 + 32 - 1),
                                                      i32_res_28618),
                                               sext_i32_i64(local_tid_44929 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_44929 -
                                                             skip_threads_44944) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_44945) {
                                        x_44938 = x_44939;
                                    }
                                    if (!inactive_44945) {
                                        float defunc_1_op_res_44940 = x_44938 +
                                              x_44939;
                                        
                                        x_44938 = defunc_1_op_res_44940;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_44931, skip_threads_44944)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_44944, local_tid_44929 -
                                      squot32(local_tid_44929, 32) * 32) &&
                                (squot32(local_tid_44929, 32) == 0 &&
                                 ltid_in_bounds_44941)) {
                                // write result
                                {
                                    ((volatile __local
                                      float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929)] =
                                        x_44938;
                                    x_44939 = x_44938;
                                }
                            }
                            if (sle32(wave_sizze_44931, skip_threads_44944)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_44944 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_44929, 32) == 0 ||
                          !ltid_in_bounds_44941)) {
                        // read operands
                        {
                            x_36238 = x_36237;
                            x_36237 = ((__local
                                        float *) red_arr_mem_44933)[sext_i32_i64(squot32(local_tid_44929,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_44946 =
                                 slt64(srem64(sext_i32_i64(local_tid_44929),
                                              i32_res_28618),
                                       sext_i32_i64(local_tid_44929) -
                                       sext_i32_i64(squot32(local_tid_44929,
                                                            32) * 32 - 1));
                            
                            if (inactive_44946) {
                                x_36237 = x_36238;
                            }
                            if (!inactive_44946) {
                                float defunc_1_op_res_36239 = x_36237 + x_36238;
                                
                                x_36237 = defunc_1_op_res_36239;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929)] =
                                x_36237;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_44929, 32) == 0) {
                        ((__local
                          float *) red_arr_mem_44933)[sext_i32_i64(local_tid_44929)] =
                            x_36238;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_44937) *
                      squot64(segred_group_sizze_36233,
                              segment_sizze_nonzzero_44926) +
                      sext_i32_i64(local_tid_44929), m_28248) &&
                slt64(sext_i32_i64(local_tid_44929),
                      squot64(segred_group_sizze_36233,
                              segment_sizze_nonzzero_44926))) {
                ((__global
                  float *) mem_43738)[sext_i32_i64(virt_group_id_44937) *
                                      squot64(segred_group_sizze_36233,
                                              segment_sizze_nonzzero_44926) +
                                      sext_i32_i64(local_tid_44929)] = ((__local
                                                                         float *) red_arr_mem_44933)[(sext_i32_i64(local_tid_44929) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_44926 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_36233
}
__kernel void mainMagnitudezisegred_small_37275(__global int *global_failure,
                                                __local volatile
                                                int64_t *red_arr_mem_45115_backing_aligned_0,
                                                __local volatile
                                                int64_t *red_arr_mem_45113_backing_aligned_1,
                                                __local volatile
                                                int64_t *red_arr_mem_45111_backing_aligned_2,
                                                int64_t m_28248,
                                                int64_t iota32_arg_28643,
                                                int64_t num_groups_37446,
                                                int64_t segment_sizze_nonzzero_45104,
                                                __global
                                                unsigned char *mem_43744,
                                                __global
                                                unsigned char *mem_43797,
                                                __global
                                                unsigned char *mem_43799,
                                                __global
                                                unsigned char *mem_43803,
                                                __global
                                                unsigned char *mem_43806,
                                                __global
                                                unsigned char *mem_43808,
                                                __global
                                                unsigned char *mem_43810)
{
    #define segred_group_sizze_37445 (mainMagnitudezisegred_group_sizze_37269)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    __local volatile char *restrict red_arr_mem_45115_backing_2 =
                          (__local volatile
                           char *) red_arr_mem_45115_backing_aligned_0;
    __local volatile char *restrict red_arr_mem_45113_backing_1 =
                          (__local volatile
                           char *) red_arr_mem_45113_backing_aligned_1;
    __local volatile char *restrict red_arr_mem_45111_backing_0 =
                          (__local volatile
                           char *) red_arr_mem_45111_backing_aligned_2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_45106;
    int32_t local_tid_45107;
    int64_t group_sizze_45110;
    int32_t wave_sizze_45109;
    int32_t group_tid_45108;
    
    global_tid_45106 = get_global_id(0);
    local_tid_45107 = get_local_id(0);
    group_sizze_45110 = get_local_size(0);
    wave_sizze_45109 = LOCKSTEP_WIDTH;
    group_tid_45108 = get_group_id(0);
    
    int32_t phys_tid_37275;
    
    phys_tid_37275 = global_tid_45106;
    
    __local char *red_arr_mem_45111;
    
    red_arr_mem_45111 = (__local char *) red_arr_mem_45111_backing_0;
    
    __local char *red_arr_mem_45113;
    
    red_arr_mem_45113 = (__local char *) red_arr_mem_45113_backing_1;
    
    __local char *red_arr_mem_45115;
    
    red_arr_mem_45115 = (__local char *) red_arr_mem_45115_backing_2;
    
    int32_t phys_group_id_45117;
    
    phys_group_id_45117 = get_group_id(0);
    for (int32_t i_45118 = 0; i_45118 <
         sdiv_up32(sext_i64_i32(sdiv_up64(m_28248,
                                          squot64(segred_group_sizze_37445,
                                                  segment_sizze_nonzzero_45104))) -
                   phys_group_id_45117, sext_i64_i32(num_groups_37446));
         i_45118++) {
        int32_t virt_group_id_45119 = phys_group_id_45117 + i_45118 *
                sext_i64_i32(num_groups_37446);
        int64_t gtid_37266 = squot64(sext_i32_i64(local_tid_45107),
                                     segment_sizze_nonzzero_45104) +
                sext_i32_i64(virt_group_id_45119) *
                squot64(segred_group_sizze_37445, segment_sizze_nonzzero_45104);
        int64_t gtid_37274 = srem64(sext_i32_i64(local_tid_45107),
                                    iota32_arg_28643);
        
        // apply map function if in bounds
        {
            if (slt64((int64_t) 0, iota32_arg_28643) && (slt64(gtid_37266,
                                                               m_28248) &&
                                                         slt64(sext_i32_i64(local_tid_45107),
                                                               iota32_arg_28643 *
                                                               squot64(segred_group_sizze_37445,
                                                                       segment_sizze_nonzzero_45104)))) {
                int32_t y_37465 = ((__global int32_t *) mem_43799)[gtid_37266];
                float y_37466 = ((__global float *) mem_43797)[gtid_37266];
                float x_37470 = ((__global float *) mem_43803)[gtid_37266 *
                                                               iota32_arg_28643 +
                                                               gtid_37274];
                float x_37471 = ((__global float *) mem_43744)[gtid_37274];
                int32_t index_primexp_40952 = sext_i64_i32(gtid_37274);
                float defunc_0_f_res_37474 = x_37470 / y_37466;
                bool cond_37475 = slt32(index_primexp_40952, y_37465);
                bool isnan_res_37476;
                
                isnan_res_37476 = futrts_isnan32(defunc_0_f_res_37474);
                
                bool cond_t_res_37477 = !isnan_res_37476;
                bool x_37478 = cond_37475 && cond_t_res_37477;
                float abs_res_37479 = (float) fabs(defunc_0_f_res_37474);
                bool defunc_2_f_res_t_res_37480 = x_37471 < abs_res_37479;
                bool x_37481 = x_37478 && defunc_2_f_res_t_res_37480;
                float defunc_1_f_res_37482;
                
                if (cond_37475) {
                    defunc_1_f_res_37482 = defunc_0_f_res_37474;
                } else {
                    defunc_1_f_res_37482 = 0.0F;
                }
                // save map-out results
                { }
                // save results to be reduced
                {
                    ((__local
                      bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107)] =
                        x_37481;
                    ((__local
                      int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107)] =
                        index_primexp_40952;
                    ((__local
                      float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107)] =
                        defunc_1_f_res_37482;
                }
            } else {
                ((__local
                  bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107)] = 0;
                ((__local
                  int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107)] =
                    -1;
                ((__local
                  float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107)] =
                    0.0F;
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        if (slt64((int64_t) 0, iota32_arg_28643)) {
            // perform segmented scan to imitate reduction
            {
                bool x_37451;
                int32_t x_37452;
                float x_37453;
                bool x_37454;
                int32_t x_37455;
                float x_37456;
                bool x_45120;
                int32_t x_45121;
                float x_45122;
                bool x_45123;
                int32_t x_45124;
                float x_45125;
                bool ltid_in_bounds_45134;
                
                ltid_in_bounds_45134 = slt64(sext_i32_i64(local_tid_45107),
                                             iota32_arg_28643 *
                                             squot64(segred_group_sizze_37445,
                                                     segment_sizze_nonzzero_45104));
                
                int32_t skip_threads_45135;
                
                // read input for in-block scan
                {
                    if (ltid_in_bounds_45134) {
                        x_37454 = ((volatile __local
                                    bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107)];
                        x_37455 = ((volatile __local
                                    int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107)];
                        x_37456 = ((volatile __local
                                    float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107)];
                        if ((local_tid_45107 - squot32(local_tid_45107, 32) *
                             32) == 0) {
                            x_37451 = x_37454;
                            x_37452 = x_37455;
                            x_37453 = x_37456;
                        }
                    }
                }
                // in-block scan (hopefully no barriers needed)
                {
                    skip_threads_45135 = 1;
                    while (slt32(skip_threads_45135, 32)) {
                        if (sle32(skip_threads_45135, local_tid_45107 -
                                  squot32(local_tid_45107, 32) * 32) &&
                            ltid_in_bounds_45134) {
                            // read operands
                            {
                                x_37451 = ((volatile __local
                                            bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107) -
                                                                       sext_i32_i64(skip_threads_45135)];
                                x_37452 = ((volatile __local
                                            int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107) -
                                                                          sext_i32_i64(skip_threads_45135)];
                                x_37453 = ((volatile __local
                                            float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107) -
                                                                        sext_i32_i64(skip_threads_45135)];
                            }
                            // perform operation
                            {
                                bool inactive_45136 =
                                     slt64(srem64(sext_i32_i64(local_tid_45107),
                                                  iota32_arg_28643),
                                           sext_i32_i64(local_tid_45107) -
                                           sext_i32_i64(local_tid_45107 -
                                           skip_threads_45135));
                                
                                if (inactive_45136) {
                                    x_37451 = x_37454;
                                    x_37452 = x_37455;
                                    x_37453 = x_37456;
                                }
                                if (!inactive_45136) {
                                    bool defunc_1_op_res_37457;
                                    int32_t defunc_1_op_res_37458;
                                    
                                    if (x_37451) {
                                        defunc_1_op_res_37457 = x_37451;
                                        defunc_1_op_res_37458 = x_37452;
                                    } else {
                                        bool x_37459 = x_37454 && x_37454;
                                        bool x_37460 = !x_37454;
                                        bool y_37461 = x_37451 && x_37460;
                                        bool defunc_1_op_res_f_res_37462 =
                                             x_37459 || y_37461;
                                        int32_t defunc_1_op_res_f_res_37463;
                                        
                                        if (x_37454) {
                                            defunc_1_op_res_f_res_37463 =
                                                x_37455;
                                        } else {
                                            defunc_1_op_res_f_res_37463 =
                                                x_37452;
                                        }
                                        defunc_1_op_res_37457 =
                                            defunc_1_op_res_f_res_37462;
                                        defunc_1_op_res_37458 =
                                            defunc_1_op_res_f_res_37463;
                                    }
                                    
                                    float defunc_1_op_res_37464 = x_37453 +
                                          x_37456;
                                    
                                    x_37451 = defunc_1_op_res_37457;
                                    x_37452 = defunc_1_op_res_37458;
                                    x_37453 = defunc_1_op_res_37464;
                                }
                            }
                        }
                        if (sle32(wave_sizze_45109, skip_threads_45135)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        if (sle32(skip_threads_45135, local_tid_45107 -
                                  squot32(local_tid_45107, 32) * 32) &&
                            ltid_in_bounds_45134) {
                            // write result
                            {
                                ((volatile __local
                                  bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107)] =
                                    x_37451;
                                x_37454 = x_37451;
                                ((volatile __local
                                  int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107)] =
                                    x_37452;
                                x_37455 = x_37452;
                                ((volatile __local
                                  float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107)] =
                                    x_37453;
                                x_37456 = x_37453;
                            }
                        }
                        if (sle32(wave_sizze_45109, skip_threads_45135)) {
                            barrier(CLK_LOCAL_MEM_FENCE);
                        }
                        skip_threads_45135 *= 2;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // last thread of block 'i' writes its result to offset 'i'
                {
                    if ((local_tid_45107 - squot32(local_tid_45107, 32) * 32) ==
                        31 && ltid_in_bounds_45134) {
                        ((volatile __local
                          bool *) red_arr_mem_45111)[sext_i32_i64(squot32(local_tid_45107,
                                                                          32))] =
                            x_37451;
                        ((volatile __local
                          int32_t *) red_arr_mem_45113)[sext_i32_i64(squot32(local_tid_45107,
                                                                             32))] =
                            x_37452;
                        ((volatile __local
                          float *) red_arr_mem_45115)[sext_i32_i64(squot32(local_tid_45107,
                                                                           32))] =
                            x_37453;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // scan the first block, after which offset 'i' contains carry-in for block 'i+1'
                {
                    int32_t skip_threads_45137;
                    
                    // read input for in-block scan
                    {
                        if (squot32(local_tid_45107, 32) == 0 &&
                            ltid_in_bounds_45134) {
                            x_45123 = ((volatile __local
                                        bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107)];
                            x_45124 = ((volatile __local
                                        int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107)];
                            x_45125 = ((volatile __local
                                        float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107)];
                            if ((local_tid_45107 - squot32(local_tid_45107,
                                                           32) * 32) == 0) {
                                x_45120 = x_45123;
                                x_45121 = x_45124;
                                x_45122 = x_45125;
                            }
                        }
                    }
                    // in-block scan (hopefully no barriers needed)
                    {
                        skip_threads_45137 = 1;
                        while (slt32(skip_threads_45137, 32)) {
                            if (sle32(skip_threads_45137, local_tid_45107 -
                                      squot32(local_tid_45107, 32) * 32) &&
                                (squot32(local_tid_45107, 32) == 0 &&
                                 ltid_in_bounds_45134)) {
                                // read operands
                                {
                                    x_45120 = ((volatile __local
                                                bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107) -
                                                                           sext_i32_i64(skip_threads_45137)];
                                    x_45121 = ((volatile __local
                                                int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107) -
                                                                              sext_i32_i64(skip_threads_45137)];
                                    x_45122 = ((volatile __local
                                                float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107) -
                                                                            sext_i32_i64(skip_threads_45137)];
                                }
                                // perform operation
                                {
                                    bool inactive_45138 =
                                         slt64(srem64(sext_i32_i64(local_tid_45107 *
                                                      32 + 32 - 1),
                                                      iota32_arg_28643),
                                               sext_i32_i64(local_tid_45107 *
                                               32 + 32 - 1) -
                                               sext_i32_i64((local_tid_45107 -
                                                             skip_threads_45137) *
                                               32 + 32 - 1));
                                    
                                    if (inactive_45138) {
                                        x_45120 = x_45123;
                                        x_45121 = x_45124;
                                        x_45122 = x_45125;
                                    }
                                    if (!inactive_45138) {
                                        bool defunc_1_op_res_45126;
                                        int32_t defunc_1_op_res_45127;
                                        
                                        if (x_45120) {
                                            defunc_1_op_res_45126 = x_45120;
                                            defunc_1_op_res_45127 = x_45121;
                                        } else {
                                            bool x_45128 = x_45123 && x_45123;
                                            bool x_45129 = !x_45123;
                                            bool y_45130 = x_45120 && x_45129;
                                            bool defunc_1_op_res_f_res_45131 =
                                                 x_45128 || y_45130;
                                            int32_t defunc_1_op_res_f_res_45132;
                                            
                                            if (x_45123) {
                                                defunc_1_op_res_f_res_45132 =
                                                    x_45124;
                                            } else {
                                                defunc_1_op_res_f_res_45132 =
                                                    x_45121;
                                            }
                                            defunc_1_op_res_45126 =
                                                defunc_1_op_res_f_res_45131;
                                            defunc_1_op_res_45127 =
                                                defunc_1_op_res_f_res_45132;
                                        }
                                        
                                        float defunc_1_op_res_45133 = x_45122 +
                                              x_45125;
                                        
                                        x_45120 = defunc_1_op_res_45126;
                                        x_45121 = defunc_1_op_res_45127;
                                        x_45122 = defunc_1_op_res_45133;
                                    }
                                }
                            }
                            if (sle32(wave_sizze_45109, skip_threads_45137)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            if (sle32(skip_threads_45137, local_tid_45107 -
                                      squot32(local_tid_45107, 32) * 32) &&
                                (squot32(local_tid_45107, 32) == 0 &&
                                 ltid_in_bounds_45134)) {
                                // write result
                                {
                                    ((volatile __local
                                      bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107)] =
                                        x_45120;
                                    x_45123 = x_45120;
                                    ((volatile __local
                                      int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107)] =
                                        x_45121;
                                    x_45124 = x_45121;
                                    ((volatile __local
                                      float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107)] =
                                        x_45122;
                                    x_45125 = x_45122;
                                }
                            }
                            if (sle32(wave_sizze_45109, skip_threads_45137)) {
                                barrier(CLK_LOCAL_MEM_FENCE);
                            }
                            skip_threads_45137 *= 2;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // carry-in for every block except the first
                {
                    if (!(squot32(local_tid_45107, 32) == 0 ||
                          !ltid_in_bounds_45134)) {
                        // read operands
                        {
                            x_37454 = x_37451;
                            x_37455 = x_37452;
                            x_37456 = x_37453;
                            x_37451 = ((__local
                                        bool *) red_arr_mem_45111)[sext_i32_i64(squot32(local_tid_45107,
                                                                                        32)) -
                                                                   (int64_t) 1];
                            x_37452 = ((__local
                                        int32_t *) red_arr_mem_45113)[sext_i32_i64(squot32(local_tid_45107,
                                                                                           32)) -
                                                                      (int64_t) 1];
                            x_37453 = ((__local
                                        float *) red_arr_mem_45115)[sext_i32_i64(squot32(local_tid_45107,
                                                                                         32)) -
                                                                    (int64_t) 1];
                        }
                        // perform operation
                        {
                            bool inactive_45139 =
                                 slt64(srem64(sext_i32_i64(local_tid_45107),
                                              iota32_arg_28643),
                                       sext_i32_i64(local_tid_45107) -
                                       sext_i32_i64(squot32(local_tid_45107,
                                                            32) * 32 - 1));
                            
                            if (inactive_45139) {
                                x_37451 = x_37454;
                                x_37452 = x_37455;
                                x_37453 = x_37456;
                            }
                            if (!inactive_45139) {
                                bool defunc_1_op_res_37457;
                                int32_t defunc_1_op_res_37458;
                                
                                if (x_37451) {
                                    defunc_1_op_res_37457 = x_37451;
                                    defunc_1_op_res_37458 = x_37452;
                                } else {
                                    bool x_37459 = x_37454 && x_37454;
                                    bool x_37460 = !x_37454;
                                    bool y_37461 = x_37451 && x_37460;
                                    bool defunc_1_op_res_f_res_37462 =
                                         x_37459 || y_37461;
                                    int32_t defunc_1_op_res_f_res_37463;
                                    
                                    if (x_37454) {
                                        defunc_1_op_res_f_res_37463 = x_37455;
                                    } else {
                                        defunc_1_op_res_f_res_37463 = x_37452;
                                    }
                                    defunc_1_op_res_37457 =
                                        defunc_1_op_res_f_res_37462;
                                    defunc_1_op_res_37458 =
                                        defunc_1_op_res_f_res_37463;
                                }
                                
                                float defunc_1_op_res_37464 = x_37453 + x_37456;
                                
                                x_37451 = defunc_1_op_res_37457;
                                x_37452 = defunc_1_op_res_37458;
                                x_37453 = defunc_1_op_res_37464;
                            }
                        }
                        // write final result
                        {
                            ((__local
                              bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107)] =
                                x_37451;
                            ((__local
                              int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107)] =
                                x_37452;
                            ((__local
                              float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107)] =
                                x_37453;
                        }
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
                // restore correct values for first block
                {
                    if (squot32(local_tid_45107, 32) == 0) {
                        ((__local
                          bool *) red_arr_mem_45111)[sext_i32_i64(local_tid_45107)] =
                            x_37454;
                        ((__local
                          int32_t *) red_arr_mem_45113)[sext_i32_i64(local_tid_45107)] =
                            x_37455;
                        ((__local
                          float *) red_arr_mem_45115)[sext_i32_i64(local_tid_45107)] =
                            x_37456;
                    }
                }
                barrier(CLK_LOCAL_MEM_FENCE);
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        // save final values of segments
        {
            if (slt64(sext_i32_i64(virt_group_id_45119) *
                      squot64(segred_group_sizze_37445,
                              segment_sizze_nonzzero_45104) +
                      sext_i32_i64(local_tid_45107), m_28248) &&
                slt64(sext_i32_i64(local_tid_45107),
                      squot64(segred_group_sizze_37445,
                              segment_sizze_nonzzero_45104))) {
                ((__global
                  bool *) mem_43806)[sext_i32_i64(virt_group_id_45119) *
                                     squot64(segred_group_sizze_37445,
                                             segment_sizze_nonzzero_45104) +
                                     sext_i32_i64(local_tid_45107)] = ((__local
                                                                        bool *) red_arr_mem_45111)[(sext_i32_i64(local_tid_45107) +
                                                                                                    (int64_t) 1) *
                                                                                                   segment_sizze_nonzzero_45104 -
                                                                                                   (int64_t) 1];
                ((__global
                  int32_t *) mem_43808)[sext_i32_i64(virt_group_id_45119) *
                                        squot64(segred_group_sizze_37445,
                                                segment_sizze_nonzzero_45104) +
                                        sext_i32_i64(local_tid_45107)] =
                    ((__local
                      int32_t *) red_arr_mem_45113)[(sext_i32_i64(local_tid_45107) +
                                                     (int64_t) 1) *
                                                    segment_sizze_nonzzero_45104 -
                                                    (int64_t) 1];
                ((__global
                  float *) mem_43810)[sext_i32_i64(virt_group_id_45119) *
                                      squot64(segred_group_sizze_37445,
                                              segment_sizze_nonzzero_45104) +
                                      sext_i32_i64(local_tid_45107)] = ((__local
                                                                         float *) red_arr_mem_45115)[(sext_i32_i64(local_tid_45107) +
                                                                                                      (int64_t) 1) *
                                                                                                     segment_sizze_nonzzero_45104 -
                                                                                                     (int64_t) 1];
            }
        }
        barrier(CLK_LOCAL_MEM_FENCE);
        barrier(CLK_GLOBAL_MEM_FENCE | CLK_LOCAL_MEM_FENCE);
    }
    
  error_1:
    return;
    #undef segred_group_sizze_37445
}
__kernel void remove_nanszisegmap_29486(__global int *global_failure,
                                        int64_t m_27536, int64_t n_27537,
                                        int64_t p_27538,
                                        int16_t nan_value_27539, __global
                                        unsigned char *images_mem_42840,
                                        __global unsigned char *mem_42845)
{
    #define segmap_group_sizze_29547 (remove_nanszisegmap_group_sizze_29490)
    
    const int block_dim0 = 0;
    const int block_dim1 = 1;
    const int block_dim2 = 2;
    
    if (*global_failure >= 0)
        return;
    
    int32_t global_tid_44069;
    int32_t local_tid_44070;
    int64_t group_sizze_44073;
    int32_t wave_sizze_44072;
    int32_t group_tid_44071;
    
    global_tid_44069 = get_global_id(0);
    local_tid_44070 = get_local_id(0);
    group_sizze_44073 = get_local_size(0);
    wave_sizze_44072 = LOCKSTEP_WIDTH;
    group_tid_44071 = get_group_id(0);
    
    int32_t phys_tid_29486;
    
    phys_tid_29486 = global_tid_44069;
    
    int64_t gtid_29483;
    
    gtid_29483 = squot64(sext_i32_i64(group_tid_44071) *
                         segmap_group_sizze_29547 +
                         sext_i32_i64(local_tid_44070), n_27537 * p_27538);
    
    int64_t gtid_29484;
    
    gtid_29484 = squot64(sext_i32_i64(group_tid_44071) *
                         segmap_group_sizze_29547 +
                         sext_i32_i64(local_tid_44070) -
                         squot64(sext_i32_i64(group_tid_44071) *
                                 segmap_group_sizze_29547 +
                                 sext_i32_i64(local_tid_44070), n_27537 *
                                 p_27538) * (n_27537 * p_27538), p_27538);
    
    int64_t gtid_29485;
    
    gtid_29485 = sext_i32_i64(group_tid_44071) * segmap_group_sizze_29547 +
        sext_i32_i64(local_tid_44070) - squot64(sext_i32_i64(group_tid_44071) *
                                                segmap_group_sizze_29547 +
                                                sext_i32_i64(local_tid_44070),
                                                n_27537 * p_27538) * (n_27537 *
                                                                      p_27538) -
        squot64(sext_i32_i64(group_tid_44071) * segmap_group_sizze_29547 +
                sext_i32_i64(local_tid_44070) -
                squot64(sext_i32_i64(group_tid_44071) *
                        segmap_group_sizze_29547 +
                        sext_i32_i64(local_tid_44070), n_27537 * p_27538) *
                (n_27537 * p_27538), p_27538) * p_27538;
    if ((slt64(gtid_29483, m_27536) && slt64(gtid_29484, n_27537)) &&
        slt64(gtid_29485, p_27538)) {
        int16_t x_29550 = ((__global int16_t *) images_mem_42840)[gtid_29483 *
                                                                  (p_27538 *
                                                                   n_27537) +
                                                                  gtid_29484 *
                                                                  p_27538 +
                                                                  gtid_29485];
        bool cond_29551 = x_29550 == nan_value_27539;
        float defunc_0_f_res_29552;
        
        if (cond_29551) {
            defunc_0_f_res_29552 = NAN;
        } else {
            float i16_res_29553 = sitofp_i16_f32(x_29550);
            
            defunc_0_f_res_29552 = i16_res_29553;
        }
        ((__global float *) mem_42845)[gtid_29483 * (p_27538 * n_27537) +
                                       gtid_29484 * p_27538 + gtid_29485] =
            defunc_0_f_res_29552;
    }
    
  error_0:
    return;
    #undef segmap_group_sizze_29547
}
"""
# Start of values.py.

# Hacky parser/reader/writer for values written in Futhark syntax.
# Used for reading stdin when compiling standalone programs with the
# Python code generator.

import numpy as np
import string
import struct
import sys

class ReaderInput:
    def __init__(self, f):
        self.f = f
        self.lookahead_buffer = []

    def get_char(self):
        if len(self.lookahead_buffer) == 0:
            return self.f.read(1)
        else:
            c = self.lookahead_buffer[0]
            self.lookahead_buffer = self.lookahead_buffer[1:]
            return c

    def unget_char(self, c):
        self.lookahead_buffer = [c] + self.lookahead_buffer

    def get_chars(self, n):
        n1 = min(n, len(self.lookahead_buffer))
        s = b''.join(self.lookahead_buffer[:n1])
        self.lookahead_buffer = self.lookahead_buffer[n1:]
        n2 = n - n1
        if n2 > 0:
            s += self.f.read(n2)
        return s

    def peek_char(self):
        c = self.get_char()
        if c:
            self.unget_char(c)
        return c

def skip_spaces(f):
    c = f.get_char()
    while c != None:
        if c.isspace():
            c = f.get_char()
        elif c == b'-':
          # May be line comment.
          if f.peek_char() == b'-':
            # Yes, line comment. Skip to end of line.
            while (c != b'\n' and c != None):
              c = f.get_char()
          else:
            break
        else:
          break
    if c:
        f.unget_char(c)

def parse_specific_char(f, expected):
    got = f.get_char()
    if got != expected:
        f.unget_char(got)
        raise ValueError
    return True

def parse_specific_string(f, s):
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    read = []
    try:
        for c in bs:
            parse_specific_char(f, c)
            read.append(c)
        return True
    except ValueError:
        for c in read[::-1]:
            f.unget_char(c)
        raise

def optional(p, *args):
    try:
        return p(*args)
    except ValueError:
        return None

def optional_specific_string(f, s):
    c = f.peek_char()
    # This funky mess is intended, and is caused by the fact that if `type(b) ==
    # bytes` then `type(b[0]) == int`, but we need to match each element with a
    # `bytes`, so therefore we make each character an array element
    b = s.encode('utf8')
    bs = [b[i:i+1] for i in range(len(b))]
    if c == bs[0]:
        return parse_specific_string(f, s)
    else:
        return False

def sepBy(p, sep, *args):
    elems = []
    x = optional(p, *args)
    if x != None:
        elems += [x]
        while optional(sep, *args) != None:
            x = p(*args)
            elems += [x]
    return elems

# Assumes '0x' has already been read
def parse_hex_int(f):
    s = b''
    c = f.get_char()
    while c != None:
        if c in b'01234556789ABCDEFabcdef':
            s += c
            c = f.get_char()
        elif c == b'_':
            c = f.get_char() # skip _
        else:
            f.unget_char(c)
            break
    return str(int(s, 16)).encode('utf8') # ugh

def parse_int(f):
    s = b''
    c = f.get_char()
    if c == b'0' and f.peek_char() in b'xX':
        c = f.get_char() # skip X
        return parse_hex_int(f)
    else:
        while c != None:
            if c.isdigit():
                s += c
                c = f.get_char()
            elif c == b'_':
                c = f.get_char() # skip _
            else:
                f.unget_char(c)
                break
        if len(s) == 0:
            raise ValueError
        return s

def parse_int_signed(f):
    s = b''
    c = f.get_char()

    if c == b'-' and f.peek_char().isdigit():
      return c + parse_int(f)
    else:
      if c != b'+':
          f.unget_char(c)
      return parse_int(f)

def read_str_comma(f):
    skip_spaces(f)
    parse_specific_char(f, b',')
    return b','

def read_str_int(f, s):
    skip_spaces(f)
    x = int(parse_int_signed(f))
    optional_specific_string(f, s)
    return x

def read_str_uint(f, s):
    skip_spaces(f)
    x = int(parse_int(f))
    optional_specific_string(f, s)
    return x

def read_str_i8(f):
    return np.int8(read_str_int(f, 'i8'))
def read_str_i16(f):
    return np.int16(read_str_int(f, 'i16'))
def read_str_i32(f):
    return np.int32(read_str_int(f, 'i32'))
def read_str_i64(f):
    return np.int64(read_str_int(f, 'i64'))

def read_str_u8(f):
    return np.uint8(read_str_int(f, 'u8'))
def read_str_u16(f):
    return np.uint16(read_str_int(f, 'u16'))
def read_str_u32(f):
    return np.uint32(read_str_int(f, 'u32'))
def read_str_u64(f):
    return np.uint64(read_str_int(f, 'u64'))

def read_char(f):
    skip_spaces(f)
    parse_specific_char(f, b'\'')
    c = f.get_char()
    parse_specific_char(f, b'\'')
    return c

def read_str_hex_float(f, sign):
    int_part = parse_hex_int(f)
    parse_specific_char(f, b'.')
    frac_part = parse_hex_int(f)
    parse_specific_char(f, b'p')
    exponent = parse_int(f)

    int_val = int(int_part, 16)
    frac_val = float(int(frac_part, 16)) / (16 ** len(frac_part))
    exp_val = int(exponent)

    total_val = (int_val + frac_val) * (2.0 ** exp_val)
    if sign == b'-':
        total_val = -1 * total_val

    return float(total_val)


def read_str_decimal(f):
    skip_spaces(f)
    c = f.get_char()
    if (c == b'-'):
      sign = b'-'
    else:
      f.unget_char(c)
      sign = b''

    # Check for hexadecimal float
    c = f.get_char()
    if (c == '0' and (f.peek_char() in ['x', 'X'])):
        f.get_char()
        return read_str_hex_float(f, sign)
    else:
        f.unget_char(c)

    bef = optional(parse_int, f)
    if bef == None:
        bef = b'0'
        parse_specific_char(f, b'.')
        aft = parse_int(f)
    elif optional(parse_specific_char, f, b'.'):
        aft = parse_int(f)
    else:
        aft = b'0'
    if (optional(parse_specific_char, f, b'E') or
        optional(parse_specific_char, f, b'e')):
        expt = parse_int_signed(f)
    else:
        expt = b'0'
    return float(sign + bef + b'.' + aft + b'E' + expt)

def read_str_f32(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f32.nan')
        return np.float32(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f32.inf')
            return np.float32(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f32.inf')
               return np.float32(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f32')
               return x

def read_str_f64(f):
    skip_spaces(f)
    try:
        parse_specific_string(f, 'f64.nan')
        return np.float64(np.nan)
    except ValueError:
        try:
            parse_specific_string(f, 'f64.inf')
            return np.float64(np.inf)
        except ValueError:
            try:
               parse_specific_string(f, '-f64.inf')
               return np.float64(-np.inf)
            except ValueError:
               x = read_str_decimal(f)
               optional_specific_string(f, 'f64')
               return x

def read_str_bool(f):
    skip_spaces(f)
    if f.peek_char() == b't':
        parse_specific_string(f, 'true')
        return True
    elif f.peek_char() == b'f':
        parse_specific_string(f, 'false')
        return False
    else:
        raise ValueError

def read_str_empty_array(f, type_name, rank):
    parse_specific_string(f, 'empty')
    parse_specific_char(f, b'(')
    dims = []
    for i in range(rank):
        parse_specific_string(f, '[')
        dims += [int(parse_int(f))]
        parse_specific_string(f, ']')
    if np.product(dims) != 0:
        raise ValueError
    parse_specific_string(f, type_name)
    parse_specific_char(f, b')')

    return tuple(dims)

def read_str_array_elems(f, elem_reader, type_name, rank):
    skip_spaces(f)
    try:
        parse_specific_char(f, b'[')
    except ValueError:
        return read_str_empty_array(f, type_name, rank)
    else:
        xs = sepBy(elem_reader, read_str_comma, f)
        skip_spaces(f)
        parse_specific_char(f, b']')
        return xs

def read_str_array_helper(f, elem_reader, type_name, rank):
    def nested_row_reader(_):
        return read_str_array_helper(f, elem_reader, type_name, rank-1)
    if rank == 1:
        row_reader = elem_reader
    else:
        row_reader = nested_row_reader
    return read_str_array_elems(f, row_reader, type_name, rank)

def expected_array_dims(l, rank):
  if rank > 1:
      n = len(l)
      if n == 0:
          elem = []
      else:
          elem = l[0]
      return [n] + expected_array_dims(elem, rank-1)
  else:
      return [len(l)]

def verify_array_dims(l, dims):
    if dims[0] != len(l):
        raise ValueError
    if len(dims) > 1:
        for x in l:
            verify_array_dims(x, dims[1:])

def read_str_array(f, elem_reader, type_name, rank, bt):
    elems = read_str_array_helper(f, elem_reader, type_name, rank)
    if type(elems) == tuple:
        # Empty array
        return np.empty(elems, dtype=bt)
    else:
        dims = expected_array_dims(elems, rank)
        verify_array_dims(elems, dims)
        return np.array(elems, dtype=bt)

################################################################################

READ_BINARY_VERSION = 2

# struct format specified at
# https://docs.python.org/2/library/struct.html#format-characters

def mk_bin_scalar_reader(t):
    def bin_reader(f):
        fmt = FUTHARK_PRIMTYPES[t]['bin_format']
        size = FUTHARK_PRIMTYPES[t]['size']
        return struct.unpack('<' + fmt, f.get_chars(size))[0]
    return bin_reader

read_bin_i8 = mk_bin_scalar_reader('i8')
read_bin_i16 = mk_bin_scalar_reader('i16')
read_bin_i32 = mk_bin_scalar_reader('i32')
read_bin_i64 = mk_bin_scalar_reader('i64')

read_bin_u8 = mk_bin_scalar_reader('u8')
read_bin_u16 = mk_bin_scalar_reader('u16')
read_bin_u32 = mk_bin_scalar_reader('u32')
read_bin_u64 = mk_bin_scalar_reader('u64')

read_bin_f32 = mk_bin_scalar_reader('f32')
read_bin_f64 = mk_bin_scalar_reader('f64')

read_bin_bool = mk_bin_scalar_reader('bool')

def read_is_binary(f):
    skip_spaces(f)
    c = f.get_char()
    if c == b'b':
        bin_version = read_bin_u8(f)
        if bin_version != READ_BINARY_VERSION:
            panic(1, "binary-input: File uses version %i, but I only understand version %i.\n",
                  bin_version, READ_BINARY_VERSION)
        return True
    else:
        f.unget_char(c)
        return False

FUTHARK_PRIMTYPES = {
    'i8':  {'binname' : b"  i8",
            'size' : 1,
            'bin_reader': read_bin_i8,
            'str_reader': read_str_i8,
            'bin_format': 'b',
            'numpy_type': np.int8 },

    'i16': {'binname' : b" i16",
            'size' : 2,
            'bin_reader': read_bin_i16,
            'str_reader': read_str_i16,
            'bin_format': 'h',
            'numpy_type': np.int16 },

    'i32': {'binname' : b" i32",
            'size' : 4,
            'bin_reader': read_bin_i32,
            'str_reader': read_str_i32,
            'bin_format': 'i',
            'numpy_type': np.int32 },

    'i64': {'binname' : b" i64",
            'size' : 8,
            'bin_reader': read_bin_i64,
            'str_reader': read_str_i64,
            'bin_format': 'q',
            'numpy_type': np.int64},

    'u8':  {'binname' : b"  u8",
            'size' : 1,
            'bin_reader': read_bin_u8,
            'str_reader': read_str_u8,
            'bin_format': 'B',
            'numpy_type': np.uint8 },

    'u16': {'binname' : b" u16",
            'size' : 2,
            'bin_reader': read_bin_u16,
            'str_reader': read_str_u16,
            'bin_format': 'H',
            'numpy_type': np.uint16 },

    'u32': {'binname' : b" u32",
            'size' : 4,
            'bin_reader': read_bin_u32,
            'str_reader': read_str_u32,
            'bin_format': 'I',
            'numpy_type': np.uint32 },

    'u64': {'binname' : b" u64",
            'size' : 8,
            'bin_reader': read_bin_u64,
            'str_reader': read_str_u64,
            'bin_format': 'Q',
            'numpy_type': np.uint64 },

    'f32': {'binname' : b" f32",
            'size' : 4,
            'bin_reader': read_bin_f32,
            'str_reader': read_str_f32,
            'bin_format': 'f',
            'numpy_type': np.float32 },

    'f64': {'binname' : b" f64",
            'size' : 8,
            'bin_reader': read_bin_f64,
            'str_reader': read_str_f64,
            'bin_format': 'd',
            'numpy_type': np.float64 },

    'bool': {'binname' : b"bool",
             'size' : 1,
             'bin_reader': read_bin_bool,
             'str_reader': read_str_bool,
             'bin_format': 'b',
             'numpy_type': np.bool }
}

def read_bin_read_type(f):
    read_binname = f.get_chars(4)

    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['binname'] == read_binname:
            return k
    panic(1, "binary-input: Did not recognize the type '%s'.\n", read_binname)

def numpy_type_to_type_name(t):
    for (k,v) in FUTHARK_PRIMTYPES.items():
        if v['numpy_type'] == t:
            return k
    raise Exception('Unknown Numpy type: {}'.format(t))

def read_bin_ensure_scalar(f, expected_type):
  dims = read_bin_i8(f)

  if dims != 0:
      panic(1, "binary-input: Expected scalar (0 dimensions), but got array with %i dimensions.\n", dims)

  bin_type = read_bin_read_type(f)
  if bin_type != expected_type:
      panic(1, "binary-input: Expected scalar of type %s but got scalar of type %s.\n",
            expected_type, bin_type)

# ------------------------------------------------------------------------------
# General interface for reading Primitive Futhark Values
# ------------------------------------------------------------------------------

def read_scalar(f, ty):
    if read_is_binary(f):
        read_bin_ensure_scalar(f, ty)
        return FUTHARK_PRIMTYPES[ty]['bin_reader'](f)
    return FUTHARK_PRIMTYPES[ty]['str_reader'](f)

def read_array(f, expected_type, rank):
    if not read_is_binary(f):
        str_reader = FUTHARK_PRIMTYPES[expected_type]['str_reader']
        return read_str_array(f, str_reader, expected_type, rank,
                              FUTHARK_PRIMTYPES[expected_type]['numpy_type'])

    bin_rank = read_bin_u8(f)

    if bin_rank != rank:
        panic(1, "binary-input: Expected %i dimensions, but got array with %i dimensions.\n",
              rank, bin_rank)

    bin_type_enum = read_bin_read_type(f)
    if expected_type != bin_type_enum:
        panic(1, "binary-input: Expected %iD-array with element type '%s' but got %iD-array with element type '%s'.\n",
              rank, expected_type, bin_rank, bin_type_enum)

    shape = []
    elem_count = 1
    for i in range(rank):
        bin_size = read_bin_u64(f)
        elem_count *= bin_size
        shape.append(bin_size)

    bin_fmt = FUTHARK_PRIMTYPES[bin_type_enum]['bin_format']

    # We first read the expected number of types into a bytestring,
    # then use np.fromstring.  This is because np.fromfile does not
    # work on things that are insufficiently file-like, like a network
    # stream.
    bytes = f.get_chars(elem_count * FUTHARK_PRIMTYPES[expected_type]['size'])
    arr = np.fromstring(bytes, dtype=FUTHARK_PRIMTYPES[bin_type_enum]['numpy_type'])
    arr.shape = shape

    return arr

if sys.version_info >= (3,0):
    input_reader = ReaderInput(sys.stdin.buffer)
else:
    input_reader = ReaderInput(sys.stdin)

import re

def read_value(type_desc, reader=input_reader):
    """Read a value of the given type.  The type is a string
representation of the Futhark type."""
    m = re.match(r'((?:\[\])*)([a-z0-9]+)$', type_desc)
    if m:
        dims = int(len(m.group(1))/2)
        basetype = m.group(2)
        assert basetype in FUTHARK_PRIMTYPES, "Unknown type: {}".format(type_desc)
        if dims > 0:
            return read_array(reader, basetype, dims)
        else:
            return read_scalar(reader, basetype)
        return (dims, basetype)

def end_of_input(entry, f=input_reader):
    skip_spaces(f)
    if f.get_char() != b'':
        panic(1, "Expected EOF on stdin after reading input for \"%s\".", entry)

def write_value_text(v, out=sys.stdout):
    if type(v) == np.uint8:
        out.write("%uu8" % v)
    elif type(v) == np.uint16:
        out.write("%uu16" % v)
    elif type(v) == np.uint32:
        out.write("%uu32" % v)
    elif type(v) == np.uint64:
        out.write("%uu64" % v)
    elif type(v) == np.int8:
        out.write("%di8" % v)
    elif type(v) == np.int16:
        out.write("%di16" % v)
    elif type(v) == np.int32:
        out.write("%di32" % v)
    elif type(v) == np.int64:
        out.write("%di64" % v)
    elif type(v) in [np.bool, np.bool_]:
        if v:
            out.write("true")
        else:
            out.write("false")
    elif type(v) == np.float32:
        if np.isnan(v):
            out.write('f32.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f32.inf')
            else:
                out.write('-f32.inf')
        else:
            out.write("%.6ff32" % v)
    elif type(v) == np.float64:
        if np.isnan(v):
            out.write('f64.nan')
        elif np.isinf(v):
            if v >= 0:
                out.write('f64.inf')
            else:
                out.write('-f64.inf')
        else:
            out.write("%.6ff64" % v)
    elif type(v) == np.ndarray:
        if np.product(v.shape) == 0:
            tname = numpy_type_to_type_name(v.dtype)
            out.write('empty({}{})'.format(''.join(['[{}]'.format(d)
                                                    for d in v.shape]), tname))
        else:
            first = True
            out.write('[')
            for x in v:
                if not first: out.write(', ')
                first = False
                write_value(x, out=out)
            out.write(']')
    else:
        raise Exception("Cannot print value of type {}: {}".format(type(v), v))

type_strs = { np.dtype('int8'): b'  i8',
              np.dtype('int16'): b' i16',
              np.dtype('int32'): b' i32',
              np.dtype('int64'): b' i64',
              np.dtype('uint8'): b'  u8',
              np.dtype('uint16'): b' u16',
              np.dtype('uint32'): b' u32',
              np.dtype('uint64'): b' u64',
              np.dtype('float32'): b' f32',
              np.dtype('float64'): b' f64',
              np.dtype('bool'): b'bool'}

def construct_binary_value(v):
    t = v.dtype
    shape = v.shape

    elems = 1
    for d in shape:
        elems *= d

    num_bytes = 1 + 1 + 1 + 4 + len(shape) * 8 + elems * t.itemsize
    bytes = bytearray(num_bytes)
    bytes[0] = np.int8(ord('b'))
    bytes[1] = 2
    bytes[2] = np.int8(len(shape))
    bytes[3:7] = type_strs[t]

    for i in range(len(shape)):
        bytes[7+i*8:7+(i+1)*8] = np.int64(shape[i]).tostring()

    bytes[7+len(shape)*8:] = np.ascontiguousarray(v).tostring()

    return bytes

def write_value_binary(v, out=sys.stdout):
    if sys.version_info >= (3,0):
        out = out.buffer
    out.write(construct_binary_value(v))

def write_value(v, out=sys.stdout, binary=False):
    if binary:
        return write_value_binary(v, out=out)
    else:
        return write_value_text(v, out=out)

# End of values.py.
# Start of memory.py.

import ctypes as ct

def addressOffset(x, offset, bt):
  return ct.cast(ct.addressof(x.contents)+int(offset), ct.POINTER(bt))

def allocateMem(size):
  return ct.cast((ct.c_byte * max(0,size))(), ct.POINTER(ct.c_byte))

# Copy an array if its is not-None.  This is important for treating
# Numpy arrays as flat memory, but has some overhead.
def normaliseArray(x):
  if (x.base is x) or (x.base is None):
    return x
  else:
    return x.copy()

def unwrapArray(x):
  return normaliseArray(x).ctypes.data_as(ct.POINTER(ct.c_byte))

def createArray(x, shape):
  # HACK: np.ctypeslib.as_array may fail if the shape contains zeroes,
  # for some reason.
  if any(map(lambda x: x == 0, shape)):
      return np.ndarray(shape, dtype=x._type_)
  else:
      return np.ctypeslib.as_array(x, shape=shape)

def indexArray(x, offset, bt, nptype):
  return nptype(addressOffset(x, offset*ct.sizeof(bt), bt)[0])

def writeScalarArray(x, offset, v):
  ct.memmove(ct.addressof(x.contents)+int(offset)*ct.sizeof(v), ct.addressof(v), ct.sizeof(v))

# An opaque Futhark value.
class opaque(object):
  def __init__(self, desc, *payload):
    self.data = payload
    self.desc = desc

  def __repr__(self):
    return "<opaque Futhark value of type {}>".format(self.desc)

# End of memory.py.
# Start of panic.py.

def panic(exitcode, fmt, *args):
    sys.stderr.write('%s: ' % sys.argv[0])
    sys.stderr.write(fmt % args)
    sys.stderr.write('\n')
    sys.exit(exitcode)

# End of panic.py.
# Start of tuning.py

def read_tuning_file(kvs, f):
    for line in f.read().splitlines():
        size, value = line.split('=')
        kvs[size] = int(value)
    return kvs

# End of tuning.py.
# Start of scalar.py.

import numpy as np
import math
import struct

def intlit(t, x):
  if t == np.int8:
    return np.int8(x)
  elif t == np.int16:
    return np.int16(x)
  elif t == np.int32:
    return np.int32(x)
  else:
    return np.int64(x)

def signed(x):
  if type(x) == np.uint8:
    return np.int8(x)
  elif type(x) == np.uint16:
    return np.int16(x)
  elif type(x) == np.uint32:
    return np.int32(x)
  else:
    return np.int64(x)

def unsigned(x):
  if type(x) == np.int8:
    return np.uint8(x)
  elif type(x) == np.int16:
    return np.uint16(x)
  elif type(x) == np.int32:
    return np.uint32(x)
  else:
    return np.uint64(x)

def shlN(x,y):
  return x << y

def ashrN(x,y):
  return x >> y

# Python is so slow that we just make all the unsafe operations safe,
# always.

def sdivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x // y

def sdiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return (x+y-intlit(type(x), 1)) // y

def smodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return x % y

def udivN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) // unsigned(y))

def udiv_upN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed((unsigned(x)+unsigned(y)-unsigned(intlit(type(x),1))) // unsigned(y))

def umodN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return signed(unsigned(x) % unsigned(y))

def squotN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.floor_divide(np.abs(x), np.abs(y)) * np.sign(x) * np.sign(y)

def sremN(x,y):
  if y == 0:
    return intlit(type(x), 0)
  else:
    return np.remainder(np.abs(x), np.abs(y)) * np.sign(x)

def sminN(x,y):
  return min(x,y)

def smaxN(x,y):
  return max(x,y)

def uminN(x,y):
  return signed(min(unsigned(x),unsigned(y)))

def umaxN(x,y):
  return signed(max(unsigned(x),unsigned(y)))

def fminN(x,y):
  return min(x,y)

def fmaxN(x,y):
  return max(x,y)

def powN(x,y):
  return x ** y

def fpowN(x,y):
  return x ** y

def sleN(x,y):
  return x <= y

def sltN(x,y):
  return x < y

def uleN(x,y):
  return unsigned(x) <= unsigned(y)

def ultN(x,y):
  return unsigned(x) < unsigned(y)

def lshr8(x,y):
  return np.int8(np.uint8(x) >> np.uint8(y))

def lshr16(x,y):
  return np.int16(np.uint16(x) >> np.uint16(y))

def lshr32(x,y):
  return np.int32(np.uint32(x) >> np.uint32(y))

def lshr64(x,y):
  return np.int64(np.uint64(x) >> np.uint64(y))

def sext_T_i8(x):
  return np.int8(x)

def sext_T_i16(x):
  return np.int16(x)

def sext_T_i32(x):
  return np.int32(x)

def sext_T_i64(x):
  return np.int64(x)

def itob_T_bool(x):
  return np.bool(x)

def btoi_bool_i8(x):
  return np.int8(x)

def btoi_bool_i16(x):
  return np.int8(x)

def btoi_bool_i32(x):
  return np.int8(x)

def btoi_bool_i64(x):
  return np.int8(x)

def zext_i8_i8(x):
  return np.int8(np.uint8(x))

def zext_i8_i16(x):
  return np.int16(np.uint8(x))

def zext_i8_i32(x):
  return np.int32(np.uint8(x))

def zext_i8_i64(x):
  return np.int64(np.uint8(x))

def zext_i16_i8(x):
  return np.int8(np.uint16(x))

def zext_i16_i16(x):
  return np.int16(np.uint16(x))

def zext_i16_i32(x):
  return np.int32(np.uint16(x))

def zext_i16_i64(x):
  return np.int64(np.uint16(x))

def zext_i32_i8(x):
  return np.int8(np.uint32(x))

def zext_i32_i16(x):
  return np.int16(np.uint32(x))

def zext_i32_i32(x):
  return np.int32(np.uint32(x))

def zext_i32_i64(x):
  return np.int64(np.uint32(x))

def zext_i64_i8(x):
  return np.int8(np.uint64(x))

def zext_i64_i16(x):
  return np.int16(np.uint64(x))

def zext_i64_i32(x):
  return np.int32(np.uint64(x))

def zext_i64_i64(x):
  return np.int64(np.uint64(x))

sdiv8 = sdiv16 = sdiv32 = sdiv64 = sdivN
sdiv_up8 = sdiv1_up6 = sdiv_up32 = sdiv_up64 = sdiv_upN
sdiv_safe8 = sdiv1_safe6 = sdiv_safe32 = sdiv_safe64 = sdivN
sdiv_up_safe8 = sdiv_up1_safe6 = sdiv_up_safe32 = sdiv_up_safe64 = sdiv_upN
smod8 = smod16 = smod32 = smod64 = smodN
smod_safe8 = smod_safe16 = smod_safe32 = smod_safe64 = smodN
udiv8 = udiv16 = udiv32 = udiv64 = udivN
udiv_up8 = udiv_up16 = udiv_up32 = udiv_up64 = udivN
udiv_safe8 = udiv_safe16 = udiv_safe32 = udiv_safe64 = udiv_upN
udiv_up_safe8 = udiv_up_safe16 = udiv_up_safe32 = udiv_up_safe64 = udiv_upN
umod8 = umod16 = umod32 = umod64 = umodN
umod_safe8 = umod_safe16 = umod_safe32 = umod_safe64 = umodN
squot8 = squot16 = squot32 = squot64 = squotN
squot_safe8 = squot_safe16 = squot_safe32 = squot_safe64 = squotN
srem8 = srem16 = srem32 = srem64 = sremN
srem_safe8 = srem_safe16 = srem_safe32 = srem_safe64 = sremN

shl8 = shl16 = shl32 = shl64 = shlN
ashr8 = ashr16 = ashr32 = ashr64 = ashrN
smax8 = smax16 = smax32 = smax64 = smaxN
smin8 = smin16 = smin32 = smin64 = sminN
umax8 = umax16 = umax32 = umax64 = umaxN
umin8 = umin16 = umin32 = umin64 = uminN
pow8 = pow16 = pow32 = pow64 = powN
fpow32 = fpow64 = fpowN
fmax32 = fmax64 = fmaxN
fmin32 = fmin64 = fminN
sle8 = sle16 = sle32 = sle64 = sleN
slt8 = slt16 = slt32 = slt64 = sltN
ule8 = ule16 = ule32 = ule64 = uleN
ult8 = ult16 = ult32 = ult64 = ultN
sext_i8_i8 = sext_i16_i8 = sext_i32_i8 = sext_i64_i8 = sext_T_i8
sext_i8_i16 = sext_i16_i16 = sext_i32_i16 = sext_i64_i16 = sext_T_i16
sext_i8_i32 = sext_i16_i32 = sext_i32_i32 = sext_i64_i32 = sext_T_i32
sext_i8_i64 = sext_i16_i64 = sext_i32_i64 = sext_i64_i64 = sext_T_i64
itob_i8_bool = itob_i16_bool = itob_i32_bool = itob_i64_bool = itob_T_bool

def clz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if x < 0:
      break
    n += 1
    x <<= np.int8(1)
  return n

def ctz_T(x):
  n = np.int32(0)
  bits = x.itemsize * 8
  for i in range(bits):
    if (x & 1) == 1:
      break
    n += 1
    x >>= np.int8(1)
  return n

def popc_T(x):
  c = np.int32(0)
  while x != 0:
    x &= x - np.int8(1)
    c += np.int8(1)
  return c

futhark_popc8 = futhark_popc16 = futhark_popc32 = futhark_popc64 = popc_T
futhark_clzz8 = futhark_clzz16 = futhark_clzz32 = futhark_clzz64 = clz_T
futhark_ctzz8 = futhark_ctzz16 = futhark_ctzz32 = futhark_ctzz64 = ctz_T

def ssignum(x):
  return np.sign(x)

def usignum(x):
  if x < 0:
    return ssignum(-x)
  else:
    return ssignum(x)

def sitofp_T_f32(x):
  return np.float32(x)
sitofp_i8_f32 = sitofp_i16_f32 = sitofp_i32_f32 = sitofp_i64_f32 = sitofp_T_f32

def sitofp_T_f64(x):
  return np.float64(x)
sitofp_i8_f64 = sitofp_i16_f64 = sitofp_i32_f64 = sitofp_i64_f64 = sitofp_T_f64

def uitofp_T_f32(x):
  return np.float32(unsigned(x))
uitofp_i8_f32 = uitofp_i16_f32 = uitofp_i32_f32 = uitofp_i64_f32 = uitofp_T_f32

def uitofp_T_f64(x):
  return np.float64(unsigned(x))
uitofp_i8_f64 = uitofp_i16_f64 = uitofp_i32_f64 = uitofp_i64_f64 = uitofp_T_f64

def fptosi_T_i8(x):
  return np.int8(np.trunc(x))
fptosi_f32_i8 = fptosi_f64_i8 = fptosi_T_i8

def fptosi_T_i16(x):
  return np.int16(np.trunc(x))
fptosi_f32_i16 = fptosi_f64_i16 = fptosi_T_i16

def fptosi_T_i32(x):
  return np.int32(np.trunc(x))
fptosi_f32_i32 = fptosi_f64_i32 = fptosi_T_i32

def fptosi_T_i64(x):
  return np.int64(np.trunc(x))
fptosi_f32_i64 = fptosi_f64_i64 = fptosi_T_i64

def fptoui_T_i8(x):
  return np.uint8(np.trunc(x))
fptoui_f32_i8 = fptoui_f64_i8 = fptoui_T_i8

def fptoui_T_i16(x):
  return np.uint16(np.trunc(x))
fptoui_f32_i16 = fptoui_f64_i16 = fptoui_T_i16

def fptoui_T_i32(x):
  return np.uint32(np.trunc(x))
fptoui_f32_i32 = fptoui_f64_i32 = fptoui_T_i32

def fptoui_T_i64(x):
  return np.uint64(np.trunc(x))
fptoui_f32_i64 = fptoui_f64_i64 = fptoui_T_i64

def fpconv_f32_f64(x):
  return np.float64(x)

def fpconv_f64_f32(x):
  return np.float32(x)

def futhark_mul_hi8(a, b):
  a = np.uint64(np.uint8(a))
  b = np.uint64(np.uint8(b))
  return np.int8((a*b) >> np.uint64(8))

def futhark_mul_hi16(a, b):
  a = np.uint64(np.uint16(a))
  b = np.uint64(np.uint16(b))
  return np.int16((a*b) >> np.uint64(16))

def futhark_mul_hi32(a, b):
  a = np.uint64(np.uint32(a))
  b = np.uint64(np.uint32(b))
  return np.int32((a*b) >> np.uint64(32))

# This one is done with arbitrary-precision integers.
def futhark_mul_hi64(a, b):
  a = int(np.uint64(a))
  b = int(np.uint64(b))
  return np.int64(np.uint64(a*b >> 64))

def futhark_mad_hi8(a, b, c):
  return futhark_mul_hi8(a,b) + c

def futhark_mad_hi16(a, b, c):
  return futhark_mul_hi16(a,b) + c

def futhark_mad_hi32(a, b, c):
  return futhark_mul_hi32(a,b) + c

def futhark_mad_hi64(a, b, c):
  return futhark_mul_hi64(a,b) + c

def futhark_log64(x):
  return np.float64(np.log(x))

def futhark_log2_64(x):
  return np.float64(np.log2(x))

def futhark_log10_64(x):
  return np.float64(np.log10(x))

def futhark_sqrt64(x):
  return np.sqrt(x)

def futhark_exp64(x):
  return np.exp(x)

def futhark_cos64(x):
  return np.cos(x)

def futhark_sin64(x):
  return np.sin(x)

def futhark_tan64(x):
  return np.tan(x)

def futhark_acos64(x):
  return np.arccos(x)

def futhark_asin64(x):
  return np.arcsin(x)

def futhark_atan64(x):
  return np.arctan(x)

def futhark_cosh64(x):
  return np.cosh(x)

def futhark_sinh64(x):
  return np.sinh(x)

def futhark_tanh64(x):
  return np.tanh(x)

def futhark_acosh64(x):
  return np.arccosh(x)

def futhark_asinh64(x):
  return np.arcsinh(x)

def futhark_atanh64(x):
  return np.arctanh(x)

def futhark_atan2_64(x, y):
  return np.arctan2(x, y)

def futhark_gamma64(x):
  return np.float64(math.gamma(x))

def futhark_lgamma64(x):
  return np.float64(math.lgamma(x))

def futhark_round64(x):
  return np.round(x)

def futhark_ceil64(x):
  return np.ceil(x)

def futhark_floor64(x):
  return np.floor(x)

def futhark_isnan64(x):
  return np.isnan(x)

def futhark_isinf64(x):
  return np.isinf(x)

def futhark_to_bits64(x):
  s = struct.pack('>d', x)
  return np.int64(struct.unpack('>q', s)[0])

def futhark_from_bits64(x):
  s = struct.pack('>q', x)
  return np.float64(struct.unpack('>d', s)[0])

def futhark_log32(x):
  return np.float32(np.log(x))

def futhark_log2_32(x):
  return np.float32(np.log2(x))

def futhark_log10_32(x):
  return np.float32(np.log10(x))

def futhark_sqrt32(x):
  return np.float32(np.sqrt(x))

def futhark_exp32(x):
  return np.exp(x)

def futhark_cos32(x):
  return np.cos(x)

def futhark_sin32(x):
  return np.sin(x)

def futhark_tan32(x):
  return np.tan(x)

def futhark_acos32(x):
  return np.arccos(x)

def futhark_asin32(x):
  return np.arcsin(x)

def futhark_atan32(x):
  return np.arctan(x)

def futhark_cosh32(x):
  return np.cosh(x)

def futhark_sinh32(x):
  return np.sinh(x)

def futhark_tanh32(x):
  return np.tanh(x)

def futhark_acosh32(x):
  return np.arccosh(x)

def futhark_asinh32(x):
  return np.arcsinh(x)

def futhark_atanh32(x):
  return np.arctanh(x)

def futhark_atan2_32(x, y):
  return np.arctan2(x, y)

def futhark_gamma32(x):
  return np.float32(math.gamma(x))

def futhark_lgamma32(x):
  return np.float32(math.lgamma(x))

def futhark_round32(x):
  return np.round(x)

def futhark_ceil32(x):
  return np.ceil(x)

def futhark_floor32(x):
  return np.floor(x)

def futhark_isnan32(x):
  return np.isnan(x)

def futhark_isinf32(x):
  return np.isinf(x)

def futhark_to_bits32(x):
  s = struct.pack('>f', x)
  return np.int32(struct.unpack('>l', s)[0])

def futhark_from_bits32(x):
  s = struct.pack('>l', x)
  return np.float32(struct.unpack('>f', s)[0])

def futhark_lerp32(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_lerp64(v0, v1, t):
  return v0 + (v1-v0)*t

def futhark_mad32(a, b, c):
  return a * b + c

def futhark_mad64(a, b, c):
  return a * b + c

def futhark_fma32(a, b, c):
  return a * b + c

def futhark_fma64(a, b, c):
  return a * b + c

# End of scalar.py.
# Start of server.py

import sys
import time

class Server:
    def __init__(self, ctx):
        self._ctx = ctx
        self._vars = {}

    class Failure(BaseException):
        def __init__(self, msg):
            self.msg = msg

    def _get_arg(self, args, i):
        if i < len(args):
            return args[i]
        else:
            raise self.Failure('Insufficient command args')

    def _get_entry_point(self, entry):
        if entry in self._ctx.entry_points:
            return self._ctx.entry_points[entry]
        else:
            raise self.Failure('Unknown entry point: %s' % entry)

    def _check_var(self, vname):
        if not vname in self._vars:
            raise self.Failure('Unknown variable: %s' % vname)

    def _get_var(self, vname):
        self._check_var(vname)
        return self._vars[vname]

    def _cmd_inputs(self, args):
        entry = self._get_arg(args, 0)
        for t in self._get_entry_point(entry)[0]:
            print(t)

    def _cmd_outputs(self, args):
        entry = self._get_arg(args, 0)
        for t in self._get_entry_point(entry)[1]:
            print(t)

    def _cmd_dummy(self, args):
        pass

    def _cmd_free(self, args):
        for vname in args:
            self._check_var(vname)
            del self._vars[vname]

    def _cmd_call(self, args):
        entry = self._get_entry_point(self._get_arg(args, 0))
        num_ins = len(entry[0])
        num_outs = len(entry[1])

        if len(args) != 1 + num_outs + num_ins:
            raise self.Failure('Invalid argument count, expected %d')

        out_vnames = args[1:num_outs+1]

        for out_vname in out_vnames:
            if out_vname in self._vars:
                raise self.Failure('Variable already exists: %s' % out_vname)

        in_vnames = args[1+num_outs:]
        ins = [ self._get_var(in_vname) for in_vname in in_vnames ]

        try:
            (runtime, vals) = getattr(self._ctx, args[0])(*ins)
        except Exception as e:
            raise self.Failure(str(e))

        print('runtime: %d' % runtime)

        if num_outs == 1:
            self._vars[out_vnames[0]] = vals
        else:
            for (out_vname, val) in zip(out_vnames, vals):
                self._vars[out_vname] = val

    def _cmd_store(self, args):
        fname = self._get_arg(args, 0)

        with open(fname, 'wb') as f:
            for i in range(1, len(args)):
                vname = args[i]
                value = self._get_var(vname)
                # In case we are using the PyOpenCL backend, we first
                # need to convert OpenCL arrays to ordinary NumPy
                # arrays.  We do this in a nasty way.
                if isinstance(value, np.number) or isinstance(value, np.bool) or isinstance(value, np.bool_) or isinstance(value, np.ndarray):
                    # Ordinary NumPy value.
                    f.write(construct_binary_value(self._vars[vname]))
                else:
                    # Assuming PyOpenCL array.
                    f.write(construct_binary_value(self._vars[vname].get()))

    def _cmd_restore(self, args):
        if len(args) % 2 == 0:
            raise self.Failure('Invalid argument count')

        fname = args[0]
        args = args[1:]

        with open(fname, 'rb') as f:
            reader = ReaderInput(f)
            while args != []:
                vname = args[0]
                typename = args[1]
                args = args[2:]

                if vname in self._vars:
                    raise self.Failure('Variable already exists: %s' % vname)

                try:
                    self._vars[vname] = read_value(typename, reader)
                except ValueError:
                    raise self.Failure('Failed to restore variable %s.\n'
                                       'Possibly malformed data in %s.\n'
                                       % (vname, fname))

            skip_spaces(reader)
            if reader.get_char() != b'':
                raise self.Failure('Expected EOF after reading values')

    _commands = { 'inputs': _cmd_inputs,
                  'outputs': _cmd_outputs,
                  'call': _cmd_call,
                  'restore': _cmd_restore,
                  'store': _cmd_store,
                  'free': _cmd_free,
                  'clear': _cmd_dummy,
                  'pause_profiling': _cmd_dummy,
                  'unpause_profiling': _cmd_dummy,
                  'report': _cmd_dummy
                 }

    def _process_line(self, line):
        words = line.split()
        if words == []:
            raise self.Failure('Empty line')
        else:
            cmd = words[0]
            args = words[1:]
            if cmd in self._commands:
                self._commands[cmd](self, args)
            else:
                raise self.Failure('Unknown command: %s' % cmd)

    def run(self):
        while True:
            line = sys.stdin.readline()
            if line == '':
                return
            try:
                self._process_line(line)
            except self.Failure as e:
                print('%%% FAILURE')
                print(e.msg)
            print('%%% OK', flush=True)


# End of server.py
class bfastfinal:
  entry_points = {"main": (["i32", "i32", "i32", "f32", "f32", "f32", "[]i32",
                            "[][]f32"], ["[]i32", "[]f32"]),
                  "mainDetailed": (["i32", "i32", "i32", "f32", "f32", "f32",
                                    "[]i32", "[][]f32"], ["[]f32", "[]i32",
                                                          "[]i32", "[]f32",
                                                          "[][]f32", "[][]f32",
                                                          "[]f32", "[]i32",
                                                          "[]f32", "[]f32",
                                                          "[][]f32",
                                                          "[][]f32"]),
                  "mainMagnitude": (["i32", "i32", "i32", "f32", "f32", "f32",
                                     "[]i32", "[][]f32"], ["[]i32", "[]f32",
                                                           "[]f32"]),
                  "remove_nans": (["i16", "[][][]i16"], ["[][][]f32"]),
                  "reshapeTransp": (["[][][]f32"], ["[][]f32"])}
  def __init__(self, command_queue=None, interactive=False,
               platform_pref=preferred_platform, device_pref=preferred_device,
               default_group_size=default_group_size,
               default_num_groups=default_num_groups,
               default_tile_size=default_tile_size,
               default_reg_tile_size=default_reg_tile_size,
               default_threshold=default_threshold, sizes=sizes):
    size_heuristics=[("NVIDIA CUDA", cl.device_type.GPU, "lockstep_width",
      lambda device: np.int32(32)), ("AMD Accelerated Parallel Processing",
                                     cl.device_type.GPU, "lockstep_width",
                                     lambda device: np.int32(32)), ("",
                                                                    cl.device_type.GPU,
                                                                    "lockstep_width",
                                                                    lambda device: np.int32(1)),
     ("", cl.device_type.GPU, "num_groups",
      lambda device: (np.int32(4) * device.get_info(getattr(cl.device_info,
                                                            "MAX_COMPUTE_UNITS")))),
     ("", cl.device_type.GPU, "group_size", lambda device: np.int32(256)), ("",
                                                                            cl.device_type.GPU,
                                                                            "tile_size",
                                                                            lambda device: np.int32(32)),
     ("", cl.device_type.GPU, "reg_tile_size", lambda device: np.int32(2)), ("",
                                                                             cl.device_type.GPU,
                                                                             "threshold",
                                                                             lambda device: np.int32(32768)),
     ("", cl.device_type.CPU, "lockstep_width", lambda device: np.int32(1)), ("",
                                                                              cl.device_type.CPU,
                                                                              "num_groups",
                                                                              lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                     "MAX_COMPUTE_UNITS"))),
     ("", cl.device_type.CPU, "group_size", lambda device: np.int32(32)), ("",
                                                                           cl.device_type.CPU,
                                                                           "tile_size",
                                                                           lambda device: np.int32(4)),
     ("", cl.device_type.CPU, "reg_tile_size", lambda device: np.int32(1)), ("",
                                                                             cl.device_type.CPU,
                                                                             "threshold",
                                                                             lambda device: device.get_info(getattr(cl.device_info,
                                                                                                                    "MAX_COMPUTE_UNITS")))]
    self.global_failure_args_max = 2
    self.failure_msgs=["Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:121:54-68\n   #1  bfastfinal.fut:121:13-124:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:119:20-135:9\n   #4  bfastfinal.fut:178:3-56\n   #5  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:122:29-43\n   #1  bfastfinal.fut:121:13-124:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:119:20-135:9\n   #4  bfastfinal.fut:178:3-56\n   #5  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:13-126:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:119:20-135:9\n   #6  bfastfinal.fut:178:3-56\n   #7  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:13-126:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:119:20-135:9\n   #6  bfastfinal.fut:178:3-56\n   #7  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:133:34-38\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-134:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:133:42-46\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-134:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:134:33-37\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-134:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:121:54-68\n   #1  bfastfinal.fut:121:13-124:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:119:20-135:9\n   #4  bfastfinal.fut:185:5-58\n   #5  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:122:29-43\n   #1  bfastfinal.fut:121:13-124:36\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:119:20-135:9\n   #4  bfastfinal.fut:185:5-58\n   #5  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:8:17-21\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:13-126:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:119:20-135:9\n   #6  bfastfinal.fut:185:5-58\n   #7  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:9:20-24\n   #1  lib/github.com/diku-dk/sorts/insertion_sort.fut:20:28-42\n   #2  /prelude/functional.fut:9:42-44\n   #3  bfastfinal.fut:121:13-126:42\n   #4  /prelude/functional.fut:9:42-44\n   #5  bfastfinal.fut:119:20-135:9\n   #6  bfastfinal.fut:185:5-58\n   #7  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:72-76\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:19:59-65\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:133:34-38\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-134:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:133:42-46\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-134:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n",
     "Index [{}] out of bounds for array of shape [{}].\n-> #0  bfastfinal.fut:134:33-37\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-134:38\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n"]
    program = initialise_opencl_object(self,
                                       program_src=fut_opencl_src,
                                       command_queue=command_queue,
                                       interactive=interactive,
                                       platform_pref=platform_pref,
                                       device_pref=device_pref,
                                       default_group_size=default_group_size,
                                       default_num_groups=default_num_groups,
                                       default_tile_size=default_tile_size,
                                       default_reg_tile_size=default_reg_tile_size,
                                       default_threshold=default_threshold,
                                       size_heuristics=size_heuristics,
                                       required_types=["i16", "i32", "i64", "f32", "bool", "cert"],
                                       user_sizes=sizes,
                                       all_sizes={"builtin#replicate_f32.group_size_44712": {"class": "group_size",
                                                                                   "value": None},
                                        "builtin#replicate_i32.group_size_44721": {"class": "group_size",
                                                                                   "value": None},
                                        "main.Rx_41192": {"class": "reg_tile_size", "value": None},
                                        "main.Rx_41933": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_41193": {"class": "reg_tile_size", "value": None},
                                        "main.Ry_41934": {"class": "reg_tile_size", "value": None},
                                        "main.Tk_41189": {"class": "tile_size", "value": None},
                                        "main.Tk_41930": {"class": "tile_size", "value": None},
                                        "main.Tx_41044": {"class": "tile_size", "value": None},
                                        "main.Tx_41190": {"class": "tile_size", "value": None},
                                        "main.Tx_41931": {"class": "tile_size", "value": None},
                                        "main.Ty_41045": {"class": "tile_size", "value": None},
                                        "main.Ty_41191": {"class": "tile_size", "value": None},
                                        "main.Ty_41932": {"class": "tile_size", "value": None},
                                        "main.group_size_44243": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37619": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37797": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37925": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_37957": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38004": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38489": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38654": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38708": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38775": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_38869": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39049": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39190": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39322": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39603": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39678": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39827": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_39929": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40076": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40200": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40570": {"class": "group_size", "value": None},
                                        "main.segmap_group_size_40712": {"class": "group_size", "value": None},
                                        "main.segmap_num_groups_37959": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_38006": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39051": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39192": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_39324": {"class": "num_groups", "value": None},
                                        "main.segmap_num_groups_40714": {"class": "num_groups", "value": None},
                                        "main.segred_group_size_38064": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39111": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39248": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39378": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39944": {"class": "group_size", "value": None},
                                        "main.segred_group_size_39965": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40032": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40116": {"class": "group_size", "value": None},
                                        "main.segred_group_size_40617": {"class": "group_size", "value": None},
                                        "main.segred_num_groups_38066": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39113": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39250": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39380": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39946": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_39967": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40034": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40118": {"class": "num_groups", "value": None},
                                        "main.segred_num_groups_40619": {"class": "num_groups", "value": None},
                                        "main.segscan_group_size_39687": {"class": "group_size", "value": None},
                                        "main.segscan_group_size_40671": {"class": "group_size", "value": None},
                                        "main.segscan_num_groups_39689": {"class": "num_groups", "value": None},
                                        "main.segscan_num_groups_40673": {"class": "num_groups", "value": None},
                                        "main.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_13": {"class": "threshold (!main.suff_intra_par_11)",
                                                                   "value": 32},
                                        "main.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "main.suff_intra_par_29": {"class": "threshold (!main.suff_outer_par_28)",
                                                                   "value": 32},
                                        "main.suff_intra_par_34": {"class": "threshold ()", "value": 32},
                                        "main.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_17": {"class": "threshold (!main.suff_outer_par_16)",
                                                                   "value": None},
                                        "main.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_19": {"class": "threshold (!main.suff_outer_par_18)",
                                                                   "value": None},
                                        "main.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_21": {"class": "threshold (!main.suff_outer_par_20)",
                                                                   "value": None},
                                        "main.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "main.suff_outer_par_7": {"class": "threshold (!main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.suff_outer_par_8": {"class": "threshold (!main.suff_outer_par_7 !main.suff_outer_par_6)",
                                                                  "value": None},
                                        "main.tile_size_41656": {"class": "tile_size", "value": None},
                                        "mainDetailed.Rx_41192": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Rx_41933": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_41193": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Ry_41934": {"class": "reg_tile_size", "value": None},
                                        "mainDetailed.Tk_41189": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tk_41930": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41044": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41190": {"class": "tile_size", "value": None},
                                        "mainDetailed.Tx_41931": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41045": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41191": {"class": "tile_size", "value": None},
                                        "mainDetailed.Ty_41932": {"class": "tile_size", "value": None},
                                        "mainDetailed.group_size_44256": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29648": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29826": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29954": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_29986": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30033": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30518": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30683": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30737": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30804": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_30898": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31078": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31219": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31351": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31632": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31707": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31856": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_31958": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32105": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32229": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32480": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32602": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_32659": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33204": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33256": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33291": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_group_size_33412": {"class": "group_size", "value": None},
                                        "mainDetailed.segmap_num_groups_29988": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_30035": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31080": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31221": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_31353": {"class": "num_groups", "value": None},
                                        "mainDetailed.segmap_num_groups_33414": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_group_size_30093": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31140": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31277": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31407": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31973": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_31994": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32061": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_32145": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_group_size_33317": {"class": "group_size", "value": None},
                                        "mainDetailed.segred_num_groups_30095": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31142": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31279": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31409": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31975": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_31996": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32063": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_32147": {"class": "num_groups", "value": None},
                                        "mainDetailed.segred_num_groups_33319": {"class": "num_groups", "value": None},
                                        "mainDetailed.segscan_group_size_31716": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_group_size_33371": {"class": "group_size",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_31718": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.segscan_num_groups_33373": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainDetailed.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_13": {"class": "threshold (!mainDetailed.suff_intra_par_11)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_intra_par_29": {"class": "threshold (!mainDetailed.suff_outer_par_28)",
                                                                           "value": 32},
                                        "mainDetailed.suff_intra_par_37": {"class": "threshold ()", "value": 32},
                                        "mainDetailed.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_17": {"class": "threshold (!mainDetailed.suff_outer_par_16)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_19": {"class": "threshold (!mainDetailed.suff_outer_par_18)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_21": {"class": "threshold (!mainDetailed.suff_outer_par_20)",
                                                                           "value": None},
                                        "mainDetailed.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainDetailed.suff_outer_par_7": {"class": "threshold (!mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.suff_outer_par_8": {"class": "threshold (!mainDetailed.suff_outer_par_7 !mainDetailed.suff_outer_par_6)",
                                                                          "value": None},
                                        "mainDetailed.tile_size_41656": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Rx_41192": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Rx_41933": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_41193": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Ry_41934": {"class": "reg_tile_size", "value": None},
                                        "mainMagnitude.Tk_41189": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tk_41930": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41044": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41190": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Tx_41931": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41045": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41191": {"class": "tile_size", "value": None},
                                        "mainMagnitude.Ty_41932": {"class": "tile_size", "value": None},
                                        "mainMagnitude.group_size_44244": {"class": "group_size", "value": None},
                                        "mainMagnitude.segmap_group_size_33713": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_33891": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34019": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34051": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34098": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34583": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34748": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34802": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34869": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_34963": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35143": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35284": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35416": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35697": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35772": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_35921": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36023": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36170": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36294": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36545": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36667": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_36724": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37222": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_group_size_37364": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34053": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_34100": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35145": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35286": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_35418": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segmap_num_groups_37366": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_34158": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35205": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35342": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_35472": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36038": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36059": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36126": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_36210": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_group_size_37269": {"class": "group_size",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_34160": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35207": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35344": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_35474": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36040": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36061": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36128": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_36212": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segred_num_groups_37271": {"class": "num_groups",
                                                                                  "value": None},
                                        "mainMagnitude.segscan_group_size_35781": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_group_size_37323": {"class": "group_size",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_35783": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.segscan_num_groups_37325": {"class": "num_groups",
                                                                                   "value": None},
                                        "mainMagnitude.suff_intra_par_11": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_13": {"class": "threshold (!mainMagnitude.suff_intra_par_11)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_24": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_intra_par_29": {"class": "threshold (!mainMagnitude.suff_outer_par_28)",
                                                                            "value": 32},
                                        "mainMagnitude.suff_intra_par_37": {"class": "threshold ()", "value": 32},
                                        "mainMagnitude.suff_outer_par_16": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_17": {"class": "threshold (!mainMagnitude.suff_outer_par_16)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_18": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_19": {"class": "threshold (!mainMagnitude.suff_outer_par_18)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_20": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_21": {"class": "threshold (!mainMagnitude.suff_outer_par_20)",
                                                                            "value": None},
                                        "mainMagnitude.suff_outer_par_28": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_31": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_6": {"class": "threshold ()", "value": None},
                                        "mainMagnitude.suff_outer_par_7": {"class": "threshold (!mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.suff_outer_par_8": {"class": "threshold (!mainMagnitude.suff_outer_par_7 !mainMagnitude.suff_outer_par_6)",
                                                                           "value": None},
                                        "mainMagnitude.tile_size_41656": {"class": "tile_size", "value": None},
                                        "remove_nans.segmap_group_size_29490": {"class": "group_size", "value": None}})
    self.builtinzhreplicate_f32zireplicate_44709_var = program.builtinzhreplicate_f32zireplicate_44709
    self.builtinzhreplicate_i32zireplicate_44718_var = program.builtinzhreplicate_i32zireplicate_44718
    self.gpu_map_transpose_f32_var = program.gpu_map_transpose_f32
    self.gpu_map_transpose_f32_low_height_var = program.gpu_map_transpose_f32_low_height
    self.gpu_map_transpose_f32_low_width_var = program.gpu_map_transpose_f32_low_width
    self.gpu_map_transpose_f32_small_var = program.gpu_map_transpose_f32_small
    self.mainzicopy_44240_var = program.mainzicopy_44240
    self.mainziscan_stage1_39693_var = program.mainziscan_stage1_39693
    self.mainziscan_stage1_40677_var = program.mainziscan_stage1_40677
    self.mainziscan_stage2_39693_var = program.mainziscan_stage2_39693
    self.mainziscan_stage2_40677_var = program.mainziscan_stage2_40677
    self.mainziscan_stage3_39693_var = program.mainziscan_stage3_39693
    self.mainziscan_stage3_40677_var = program.mainziscan_stage3_40677
    self.mainzisegmap_37616_var = program.mainzisegmap_37616
    self.mainzisegmap_37794_var = program.mainzisegmap_37794
    self.mainzisegmap_37922_var = program.mainzisegmap_37922
    self.mainzisegmap_37955_var = program.mainzisegmap_37955
    self.mainzisegmap_38001_var = program.mainzisegmap_38001
    self.mainzisegmap_38485_var = program.mainzisegmap_38485
    self.mainzisegmap_38651_var = program.mainzisegmap_38651
    self.mainzisegmap_38705_var = program.mainzisegmap_38705
    self.mainzisegmap_38773_var = program.mainzisegmap_38773
    self.mainzisegmap_38866_var = program.mainzisegmap_38866
    self.mainzisegmap_39047_var = program.mainzisegmap_39047
    self.mainzisegmap_39188_var = program.mainzisegmap_39188
    self.mainzisegmap_39320_var = program.mainzisegmap_39320
    self.mainzisegmap_39600_var = program.mainzisegmap_39600
    self.mainzisegmap_39676_var = program.mainzisegmap_39676
    self.mainzisegmap_39927_var = program.mainzisegmap_39927
    self.mainzisegmap_40198_var = program.mainzisegmap_40198
    self.mainzisegmap_40568_var = program.mainzisegmap_40568
    self.mainzisegmap_40710_var = program.mainzisegmap_40710
    self.mainzisegmap_intragroup_38305_var = program.mainzisegmap_intragroup_38305
    self.mainzisegmap_intragroup_38532_var = program.mainzisegmap_intragroup_38532
    self.mainzisegmap_intragroup_39483_var = program.mainzisegmap_intragroup_39483
    self.mainzisegmap_intragroup_39823_var = program.mainzisegmap_intragroup_39823
    self.mainzisegmap_intragroup_40243_var = program.mainzisegmap_intragroup_40243
    self.mainzisegmap_intragroup_41060_var = program.mainzisegmap_intragroup_41060
    self.mainzisegmap_intragroup_41213_var = program.mainzisegmap_intragroup_41213
    self.mainzisegmap_intragroup_41662_var = program.mainzisegmap_intragroup_41662
    self.mainzisegmap_intragroup_41954_var = program.mainzisegmap_intragroup_41954
    self.mainzisegmap_intragroup_42388_var = program.mainzisegmap_intragroup_42388
    self.mainzisegmap_intragroup_42578_var = program.mainzisegmap_intragroup_42578
    self.mainzisegred_large_38070_var = program.mainzisegred_large_38070
    self.mainzisegred_large_39117_var = program.mainzisegred_large_39117
    self.mainzisegred_large_39254_var = program.mainzisegred_large_39254
    self.mainzisegred_large_39384_var = program.mainzisegred_large_39384
    self.mainzisegred_large_39950_var = program.mainzisegred_large_39950
    self.mainzisegred_large_39971_var = program.mainzisegred_large_39971
    self.mainzisegred_large_40122_var = program.mainzisegred_large_40122
    self.mainzisegred_large_40623_var = program.mainzisegred_large_40623
    self.mainzisegred_nonseg_40040_var = program.mainzisegred_nonseg_40040
    self.mainzisegred_small_38070_var = program.mainzisegred_small_38070
    self.mainzisegred_small_39117_var = program.mainzisegred_small_39117
    self.mainzisegred_small_39254_var = program.mainzisegred_small_39254
    self.mainzisegred_small_39384_var = program.mainzisegred_small_39384
    self.mainzisegred_small_39950_var = program.mainzisegred_small_39950
    self.mainzisegred_small_39971_var = program.mainzisegred_small_39971
    self.mainzisegred_small_40122_var = program.mainzisegred_small_40122
    self.mainzisegred_small_40623_var = program.mainzisegred_small_40623
    self.mainDetailedzicopy_44253_var = program.mainDetailedzicopy_44253
    self.mainDetailedziscan_stage1_31722_var = program.mainDetailedziscan_stage1_31722
    self.mainDetailedziscan_stage1_33377_var = program.mainDetailedziscan_stage1_33377
    self.mainDetailedziscan_stage2_31722_var = program.mainDetailedziscan_stage2_31722
    self.mainDetailedziscan_stage2_33377_var = program.mainDetailedziscan_stage2_33377
    self.mainDetailedziscan_stage3_31722_var = program.mainDetailedziscan_stage3_31722
    self.mainDetailedziscan_stage3_33377_var = program.mainDetailedziscan_stage3_33377
    self.mainDetailedzisegmap_29645_var = program.mainDetailedzisegmap_29645
    self.mainDetailedzisegmap_29823_var = program.mainDetailedzisegmap_29823
    self.mainDetailedzisegmap_29951_var = program.mainDetailedzisegmap_29951
    self.mainDetailedzisegmap_29984_var = program.mainDetailedzisegmap_29984
    self.mainDetailedzisegmap_30030_var = program.mainDetailedzisegmap_30030
    self.mainDetailedzisegmap_30514_var = program.mainDetailedzisegmap_30514
    self.mainDetailedzisegmap_30680_var = program.mainDetailedzisegmap_30680
    self.mainDetailedzisegmap_30734_var = program.mainDetailedzisegmap_30734
    self.mainDetailedzisegmap_30802_var = program.mainDetailedzisegmap_30802
    self.mainDetailedzisegmap_30895_var = program.mainDetailedzisegmap_30895
    self.mainDetailedzisegmap_31076_var = program.mainDetailedzisegmap_31076
    self.mainDetailedzisegmap_31217_var = program.mainDetailedzisegmap_31217
    self.mainDetailedzisegmap_31349_var = program.mainDetailedzisegmap_31349
    self.mainDetailedzisegmap_31629_var = program.mainDetailedzisegmap_31629
    self.mainDetailedzisegmap_31705_var = program.mainDetailedzisegmap_31705
    self.mainDetailedzisegmap_31956_var = program.mainDetailedzisegmap_31956
    self.mainDetailedzisegmap_32227_var = program.mainDetailedzisegmap_32227
    self.mainDetailedzisegmap_32478_var = program.mainDetailedzisegmap_32478
    self.mainDetailedzisegmap_32599_var = program.mainDetailedzisegmap_32599
    self.mainDetailedzisegmap_32657_var = program.mainDetailedzisegmap_32657
    self.mainDetailedzisegmap_33201_var = program.mainDetailedzisegmap_33201
    self.mainDetailedzisegmap_33254_var = program.mainDetailedzisegmap_33254
    self.mainDetailedzisegmap_33289_var = program.mainDetailedzisegmap_33289
    self.mainDetailedzisegmap_33410_var = program.mainDetailedzisegmap_33410
    self.mainDetailedzisegmap_intragroup_30334_var = program.mainDetailedzisegmap_intragroup_30334
    self.mainDetailedzisegmap_intragroup_30561_var = program.mainDetailedzisegmap_intragroup_30561
    self.mainDetailedzisegmap_intragroup_31512_var = program.mainDetailedzisegmap_intragroup_31512
    self.mainDetailedzisegmap_intragroup_31852_var = program.mainDetailedzisegmap_intragroup_31852
    self.mainDetailedzisegmap_intragroup_32832_var = program.mainDetailedzisegmap_intragroup_32832
    self.mainDetailedzisegmap_intragroup_41060_var = program.mainDetailedzisegmap_intragroup_41060
    self.mainDetailedzisegmap_intragroup_41213_var = program.mainDetailedzisegmap_intragroup_41213
    self.mainDetailedzisegmap_intragroup_41662_var = program.mainDetailedzisegmap_intragroup_41662
    self.mainDetailedzisegmap_intragroup_41954_var = program.mainDetailedzisegmap_intragroup_41954
    self.mainDetailedzisegmap_intragroup_42388_var = program.mainDetailedzisegmap_intragroup_42388
    self.mainDetailedzisegmap_intragroup_42578_var = program.mainDetailedzisegmap_intragroup_42578
    self.mainDetailedzisegred_large_30099_var = program.mainDetailedzisegred_large_30099
    self.mainDetailedzisegred_large_31146_var = program.mainDetailedzisegred_large_31146
    self.mainDetailedzisegred_large_31283_var = program.mainDetailedzisegred_large_31283
    self.mainDetailedzisegred_large_31413_var = program.mainDetailedzisegred_large_31413
    self.mainDetailedzisegred_large_31979_var = program.mainDetailedzisegred_large_31979
    self.mainDetailedzisegred_large_32000_var = program.mainDetailedzisegred_large_32000
    self.mainDetailedzisegred_large_32151_var = program.mainDetailedzisegred_large_32151
    self.mainDetailedzisegred_large_33323_var = program.mainDetailedzisegred_large_33323
    self.mainDetailedzisegred_nonseg_32069_var = program.mainDetailedzisegred_nonseg_32069
    self.mainDetailedzisegred_small_30099_var = program.mainDetailedzisegred_small_30099
    self.mainDetailedzisegred_small_31146_var = program.mainDetailedzisegred_small_31146
    self.mainDetailedzisegred_small_31283_var = program.mainDetailedzisegred_small_31283
    self.mainDetailedzisegred_small_31413_var = program.mainDetailedzisegred_small_31413
    self.mainDetailedzisegred_small_31979_var = program.mainDetailedzisegred_small_31979
    self.mainDetailedzisegred_small_32000_var = program.mainDetailedzisegred_small_32000
    self.mainDetailedzisegred_small_32151_var = program.mainDetailedzisegred_small_32151
    self.mainDetailedzisegred_small_33323_var = program.mainDetailedzisegred_small_33323
    self.mainMagnitudezicopy_44241_var = program.mainMagnitudezicopy_44241
    self.mainMagnitudeziscan_stage1_35787_var = program.mainMagnitudeziscan_stage1_35787
    self.mainMagnitudeziscan_stage1_37329_var = program.mainMagnitudeziscan_stage1_37329
    self.mainMagnitudeziscan_stage2_35787_var = program.mainMagnitudeziscan_stage2_35787
    self.mainMagnitudeziscan_stage2_37329_var = program.mainMagnitudeziscan_stage2_37329
    self.mainMagnitudeziscan_stage3_35787_var = program.mainMagnitudeziscan_stage3_35787
    self.mainMagnitudeziscan_stage3_37329_var = program.mainMagnitudeziscan_stage3_37329
    self.mainMagnitudezisegmap_33710_var = program.mainMagnitudezisegmap_33710
    self.mainMagnitudezisegmap_33888_var = program.mainMagnitudezisegmap_33888
    self.mainMagnitudezisegmap_34016_var = program.mainMagnitudezisegmap_34016
    self.mainMagnitudezisegmap_34049_var = program.mainMagnitudezisegmap_34049
    self.mainMagnitudezisegmap_34095_var = program.mainMagnitudezisegmap_34095
    self.mainMagnitudezisegmap_34579_var = program.mainMagnitudezisegmap_34579
    self.mainMagnitudezisegmap_34745_var = program.mainMagnitudezisegmap_34745
    self.mainMagnitudezisegmap_34799_var = program.mainMagnitudezisegmap_34799
    self.mainMagnitudezisegmap_34867_var = program.mainMagnitudezisegmap_34867
    self.mainMagnitudezisegmap_34960_var = program.mainMagnitudezisegmap_34960
    self.mainMagnitudezisegmap_35141_var = program.mainMagnitudezisegmap_35141
    self.mainMagnitudezisegmap_35282_var = program.mainMagnitudezisegmap_35282
    self.mainMagnitudezisegmap_35414_var = program.mainMagnitudezisegmap_35414
    self.mainMagnitudezisegmap_35694_var = program.mainMagnitudezisegmap_35694
    self.mainMagnitudezisegmap_35770_var = program.mainMagnitudezisegmap_35770
    self.mainMagnitudezisegmap_36021_var = program.mainMagnitudezisegmap_36021
    self.mainMagnitudezisegmap_36292_var = program.mainMagnitudezisegmap_36292
    self.mainMagnitudezisegmap_36543_var = program.mainMagnitudezisegmap_36543
    self.mainMagnitudezisegmap_36664_var = program.mainMagnitudezisegmap_36664
    self.mainMagnitudezisegmap_36722_var = program.mainMagnitudezisegmap_36722
    self.mainMagnitudezisegmap_37220_var = program.mainMagnitudezisegmap_37220
    self.mainMagnitudezisegmap_37362_var = program.mainMagnitudezisegmap_37362
    self.mainMagnitudezisegmap_intragroup_34399_var = program.mainMagnitudezisegmap_intragroup_34399
    self.mainMagnitudezisegmap_intragroup_34626_var = program.mainMagnitudezisegmap_intragroup_34626
    self.mainMagnitudezisegmap_intragroup_35577_var = program.mainMagnitudezisegmap_intragroup_35577
    self.mainMagnitudezisegmap_intragroup_35917_var = program.mainMagnitudezisegmap_intragroup_35917
    self.mainMagnitudezisegmap_intragroup_36895_var = program.mainMagnitudezisegmap_intragroup_36895
    self.mainMagnitudezisegmap_intragroup_41060_var = program.mainMagnitudezisegmap_intragroup_41060
    self.mainMagnitudezisegmap_intragroup_41213_var = program.mainMagnitudezisegmap_intragroup_41213
    self.mainMagnitudezisegmap_intragroup_41662_var = program.mainMagnitudezisegmap_intragroup_41662
    self.mainMagnitudezisegmap_intragroup_41954_var = program.mainMagnitudezisegmap_intragroup_41954
    self.mainMagnitudezisegmap_intragroup_42388_var = program.mainMagnitudezisegmap_intragroup_42388
    self.mainMagnitudezisegmap_intragroup_42578_var = program.mainMagnitudezisegmap_intragroup_42578
    self.mainMagnitudezisegred_large_34164_var = program.mainMagnitudezisegred_large_34164
    self.mainMagnitudezisegred_large_35211_var = program.mainMagnitudezisegred_large_35211
    self.mainMagnitudezisegred_large_35348_var = program.mainMagnitudezisegred_large_35348
    self.mainMagnitudezisegred_large_35478_var = program.mainMagnitudezisegred_large_35478
    self.mainMagnitudezisegred_large_36044_var = program.mainMagnitudezisegred_large_36044
    self.mainMagnitudezisegred_large_36065_var = program.mainMagnitudezisegred_large_36065
    self.mainMagnitudezisegred_large_36216_var = program.mainMagnitudezisegred_large_36216
    self.mainMagnitudezisegred_large_37275_var = program.mainMagnitudezisegred_large_37275
    self.mainMagnitudezisegred_nonseg_36134_var = program.mainMagnitudezisegred_nonseg_36134
    self.mainMagnitudezisegred_small_34164_var = program.mainMagnitudezisegred_small_34164
    self.mainMagnitudezisegred_small_35211_var = program.mainMagnitudezisegred_small_35211
    self.mainMagnitudezisegred_small_35348_var = program.mainMagnitudezisegred_small_35348
    self.mainMagnitudezisegred_small_35478_var = program.mainMagnitudezisegred_small_35478
    self.mainMagnitudezisegred_small_36044_var = program.mainMagnitudezisegred_small_36044
    self.mainMagnitudezisegred_small_36065_var = program.mainMagnitudezisegred_small_36065
    self.mainMagnitudezisegred_small_36216_var = program.mainMagnitudezisegred_small_36216
    self.mainMagnitudezisegred_small_37275_var = program.mainMagnitudezisegred_small_37275
    self.remove_nanszisegmap_29486_var = program.remove_nanszisegmap_29486
    self.constants = {}
    mainzicounter_mem_44175 = np.zeros(10240, dtype=np.int32)
    static_mem_45230 = opencl_alloc(self, 40960, "static_mem_45230")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45230,
                      normaliseArray(mainzicounter_mem_44175),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44175 = static_mem_45230
    mainzicounter_mem_44372 = np.zeros(10240, dtype=np.int32)
    static_mem_45233 = opencl_alloc(self, 40960, "static_mem_45233")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45233,
                      normaliseArray(mainzicounter_mem_44372),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44372 = static_mem_45233
    mainzicounter_mem_44460 = np.zeros(10240, dtype=np.int32)
    static_mem_45234 = opencl_alloc(self, 40960, "static_mem_45234")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45234,
                      normaliseArray(mainzicounter_mem_44460),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44460 = static_mem_45234
    mainzicounter_mem_44592 = np.zeros(10240, dtype=np.int32)
    static_mem_45235 = opencl_alloc(self, 40960, "static_mem_45235")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45235,
                      normaliseArray(mainzicounter_mem_44592),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44592 = static_mem_45235
    mainzicounter_mem_44784 = np.zeros(10240, dtype=np.int32)
    static_mem_45236 = opencl_alloc(self, 40960, "static_mem_45236")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45236,
                      normaliseArray(mainzicounter_mem_44784),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44784 = static_mem_45236
    mainzicounter_mem_44844 = np.zeros(10240, dtype=np.int32)
    static_mem_45237 = opencl_alloc(self, 40960, "static_mem_45237")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45237,
                      normaliseArray(mainzicounter_mem_44844),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44844 = static_mem_45237
    mainzicounter_mem_44884 = np.array([np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0), np.int32(0), np.int32(0),
                                        np.int32(0)], dtype=np.int32)
    static_mem_45238 = opencl_alloc(self, 40, "static_mem_45238")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45238,
                      normaliseArray(mainzicounter_mem_44884),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44884 = static_mem_45238
    mainzicounter_mem_44953 = np.zeros(10240, dtype=np.int32)
    static_mem_45240 = opencl_alloc(self, 40960, "static_mem_45240")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45240,
                      normaliseArray(mainzicounter_mem_44953),
                      is_blocking=synchronous)
    self.mainzicounter_mem_44953 = static_mem_45240
    mainzicounter_mem_45130 = np.zeros(10240, dtype=np.int32)
    static_mem_45242 = opencl_alloc(self, 40960, "static_mem_45242")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45242,
                      normaliseArray(mainzicounter_mem_45130),
                      is_blocking=synchronous)
    self.mainzicounter_mem_45130 = static_mem_45242
    mainDetailedzicounter_mem_44188 = np.zeros(10240, dtype=np.int32)
    static_mem_45243 = opencl_alloc(self, 40960, "static_mem_45243")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45243,
                      normaliseArray(mainDetailedzicounter_mem_44188),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44188 = static_mem_45243
    mainDetailedzicounter_mem_44385 = np.zeros(10240, dtype=np.int32)
    static_mem_45246 = opencl_alloc(self, 40960, "static_mem_45246")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45246,
                      normaliseArray(mainDetailedzicounter_mem_44385),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44385 = static_mem_45246
    mainDetailedzicounter_mem_44473 = np.zeros(10240, dtype=np.int32)
    static_mem_45247 = opencl_alloc(self, 40960, "static_mem_45247")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45247,
                      normaliseArray(mainDetailedzicounter_mem_44473),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44473 = static_mem_45247
    mainDetailedzicounter_mem_44605 = np.zeros(10240, dtype=np.int32)
    static_mem_45248 = opencl_alloc(self, 40960, "static_mem_45248")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45248,
                      normaliseArray(mainDetailedzicounter_mem_44605),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44605 = static_mem_45248
    mainDetailedzicounter_mem_44797 = np.zeros(10240, dtype=np.int32)
    static_mem_45249 = opencl_alloc(self, 40960, "static_mem_45249")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45249,
                      normaliseArray(mainDetailedzicounter_mem_44797),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44797 = static_mem_45249
    mainDetailedzicounter_mem_44857 = np.zeros(10240, dtype=np.int32)
    static_mem_45250 = opencl_alloc(self, 40960, "static_mem_45250")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45250,
                      normaliseArray(mainDetailedzicounter_mem_44857),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44857 = static_mem_45250
    mainDetailedzicounter_mem_44897 = np.array([np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0),
                                                np.int32(0), np.int32(0)],
                                               dtype=np.int32)
    static_mem_45251 = opencl_alloc(self, 40, "static_mem_45251")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45251,
                      normaliseArray(mainDetailedzicounter_mem_44897),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44897 = static_mem_45251
    mainDetailedzicounter_mem_44966 = np.zeros(10240, dtype=np.int32)
    static_mem_45253 = opencl_alloc(self, 40960, "static_mem_45253")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45253,
                      normaliseArray(mainDetailedzicounter_mem_44966),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_44966 = static_mem_45253
    mainDetailedzicounter_mem_45163 = np.zeros(10240, dtype=np.int32)
    static_mem_45255 = opencl_alloc(self, 40960, "static_mem_45255")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45255,
                      normaliseArray(mainDetailedzicounter_mem_45163),
                      is_blocking=synchronous)
    self.mainDetailedzicounter_mem_45163 = static_mem_45255
    mainMagnitudezicounter_mem_44176 = np.zeros(10240, dtype=np.int32)
    static_mem_45256 = opencl_alloc(self, 40960, "static_mem_45256")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45256,
                      normaliseArray(mainMagnitudezicounter_mem_44176),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44176 = static_mem_45256
    mainMagnitudezicounter_mem_44373 = np.zeros(10240, dtype=np.int32)
    static_mem_45259 = opencl_alloc(self, 40960, "static_mem_45259")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45259,
                      normaliseArray(mainMagnitudezicounter_mem_44373),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44373 = static_mem_45259
    mainMagnitudezicounter_mem_44461 = np.zeros(10240, dtype=np.int32)
    static_mem_45260 = opencl_alloc(self, 40960, "static_mem_45260")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45260,
                      normaliseArray(mainMagnitudezicounter_mem_44461),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44461 = static_mem_45260
    mainMagnitudezicounter_mem_44593 = np.zeros(10240, dtype=np.int32)
    static_mem_45261 = opencl_alloc(self, 40960, "static_mem_45261")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45261,
                      normaliseArray(mainMagnitudezicounter_mem_44593),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44593 = static_mem_45261
    mainMagnitudezicounter_mem_44785 = np.zeros(10240, dtype=np.int32)
    static_mem_45262 = opencl_alloc(self, 40960, "static_mem_45262")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45262,
                      normaliseArray(mainMagnitudezicounter_mem_44785),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44785 = static_mem_45262
    mainMagnitudezicounter_mem_44845 = np.zeros(10240, dtype=np.int32)
    static_mem_45263 = opencl_alloc(self, 40960, "static_mem_45263")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45263,
                      normaliseArray(mainMagnitudezicounter_mem_44845),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44845 = static_mem_45263
    mainMagnitudezicounter_mem_44885 = np.array([np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0),
                                                 np.int32(0), np.int32(0)],
                                                dtype=np.int32)
    static_mem_45264 = opencl_alloc(self, 40, "static_mem_45264")
    if (40 != 0):
      cl.enqueue_copy(self.queue, static_mem_45264,
                      normaliseArray(mainMagnitudezicounter_mem_44885),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44885 = static_mem_45264
    mainMagnitudezicounter_mem_44954 = np.zeros(10240, dtype=np.int32)
    static_mem_45266 = opencl_alloc(self, 40960, "static_mem_45266")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45266,
                      normaliseArray(mainMagnitudezicounter_mem_44954),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_44954 = static_mem_45266
    mainMagnitudezicounter_mem_45151 = np.zeros(10240, dtype=np.int32)
    static_mem_45268 = opencl_alloc(self, 40960, "static_mem_45268")
    if (40960 != 0):
      cl.enqueue_copy(self.queue, static_mem_45268,
                      normaliseArray(mainMagnitudezicounter_mem_45151),
                      is_blocking=synchronous)
    self.mainMagnitudezicounter_mem_45151 = static_mem_45268
  def futhark_builtinzhgpu_map_transpose_f32(self, destmem_0, destoffset_1,
                                             srcmem_2, srcoffset_3,
                                             num_arrays_4, x_elems_5,
                                             y_elems_6):
    if ((num_arrays_4 == np.int32(0)) or ((x_elems_5 == np.int32(0)) or (y_elems_6 == np.int32(0)))):
      pass
    else:
      muly_8 = squot32(np.int32(16), x_elems_5)
      mulx_7 = squot32(np.int32(16), y_elems_6)
      if ((num_arrays_4 == np.int32(1)) and ((x_elems_5 == np.int32(1)) or (y_elems_6 == np.int32(1)))):
        if (sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4))) != 0):
          cl.enqueue_copy(self.queue, destmem_0, srcmem_2,
                          dest_offset=np.long(sext_i32_i64(destoffset_1)),
                          src_offset=np.long(sext_i32_i64(srcoffset_3)),
                          byte_count=np.long(sext_i32_i64(((x_elems_5 * y_elems_6) * np.int32(4)))))
        if synchronous:
          sync(self)
      else:
        if (sle32(x_elems_5, np.int32(8)) and slt32(np.int32(16), y_elems_6)):
          if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                                                                muly_8),
                                                                                                      np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
            self.gpu_map_transpose_f32_low_width_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.gpu_map_transpose_f32_low_width_var,
                                       ((np.long(sdiv_up32(x_elems_5,
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(sdiv_up32(sdiv_up32(y_elems_6,
                                                                     muly_8),
                                                           np.int32(16))) * np.long(np.int32(16))),
                                        (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                       (np.long(np.int32(16)),
                                        np.long(np.int32(16)),
                                        np.long(np.int32(1))))
            if synchronous:
              sync(self)
        else:
          if (sle32(y_elems_6, np.int32(8)) and slt32(np.int32(16), x_elems_5)):
            if ((((1 * (np.long(sdiv_up32(sdiv_up32(x_elems_5, mulx_7),
                                          np.int32(16))) * np.long(np.int32(16)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                        np.int32(16))) * np.long(np.int32(16)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
              self.gpu_map_transpose_f32_low_height_var.set_args(cl.LocalMemory(np.long(np.int64(1088))),
                                                                 np.int32(destoffset_1),
                                                                 np.int32(srcoffset_3),
                                                                 np.int32(num_arrays_4),
                                                                 np.int32(x_elems_5),
                                                                 np.int32(y_elems_6),
                                                                 np.int32(mulx_7),
                                                                 np.int32(muly_8),
                                                                 destmem_0,
                                                                 srcmem_2)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.gpu_map_transpose_f32_low_height_var,
                                         ((np.long(sdiv_up32(sdiv_up32(x_elems_5,
                                                                       mulx_7),
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(sdiv_up32(y_elems_6,
                                                             np.int32(16))) * np.long(np.int32(16))),
                                          (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                         (np.long(np.int32(16)),
                                          np.long(np.int32(16)),
                                          np.long(np.int32(1))))
              if synchronous:
                sync(self)
          else:
            if (sle32(x_elems_5, np.int32(8)) and sle32(y_elems_6,
                                                        np.int32(8))):
              if ((1 * (np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                          np.int32(256))) * np.long(np.int32(256)))) != 0):
                self.gpu_map_transpose_f32_small_var.set_args(cl.LocalMemory(np.long(np.int64(1))),
                                                              np.int32(destoffset_1),
                                                              np.int32(srcoffset_3),
                                                              np.int32(num_arrays_4),
                                                              np.int32(x_elems_5),
                                                              np.int32(y_elems_6),
                                                              np.int32(mulx_7),
                                                              np.int32(muly_8),
                                                              destmem_0,
                                                              srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_small_var,
                                           ((np.long(sdiv_up32(((num_arrays_4 * x_elems_5) * y_elems_6),
                                                               np.int32(256))) * np.long(np.int32(256))),),
                                           (np.long(np.int32(256)),))
                if synchronous:
                  sync(self)
            else:
              if ((((1 * (np.long(sdiv_up32(x_elems_5,
                                            np.int32(32))) * np.long(np.int32(32)))) * (np.long(sdiv_up32(y_elems_6,
                                                                                                          np.int32(32))) * np.long(np.int32(8)))) * (np.long(num_arrays_4) * np.long(np.int32(1)))) != 0):
                self.gpu_map_transpose_f32_var.set_args(cl.LocalMemory(np.long(np.int64(4224))),
                                                        np.int32(destoffset_1),
                                                        np.int32(srcoffset_3),
                                                        np.int32(num_arrays_4),
                                                        np.int32(x_elems_5),
                                                        np.int32(y_elems_6),
                                                        np.int32(mulx_7),
                                                        np.int32(muly_8),
                                                        destmem_0, srcmem_2)
                cl.enqueue_nd_range_kernel(self.queue,
                                           self.gpu_map_transpose_f32_var,
                                           ((np.long(sdiv_up32(x_elems_5,
                                                               np.int32(32))) * np.long(np.int32(32))),
                                            (np.long(sdiv_up32(y_elems_6,
                                                               np.int32(32))) * np.long(np.int32(8))),
                                            (np.long(num_arrays_4) * np.long(np.int32(1)))),
                                           (np.long(np.int32(32)),
                                            np.long(np.int32(8)),
                                            np.long(np.int32(1))))
                if synchronous:
                  sync(self)
    return ()
  def futhark_builtinzhreplicate_f32(self, mem_44705, num_elems_44706,
                                     val_44707):
    group_sizze_44712 = self.sizes["builtin#replicate_f32.group_size_44712"]
    num_groups_44713 = sdiv_up64(num_elems_44706, group_sizze_44712)
    if ((1 * (np.long(num_groups_44713) * np.long(group_sizze_44712))) != 0):
      self.builtinzhreplicate_f32zireplicate_44709_var.set_args(np.int32(num_elems_44706),
                                                                np.float32(val_44707),
                                                                mem_44705)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_f32zireplicate_44709_var,
                                 ((np.long(num_groups_44713) * np.long(group_sizze_44712)),),
                                 (np.long(group_sizze_44712),))
      if synchronous:
        sync(self)
    return ()
  def futhark_builtinzhreplicate_i32(self, mem_44714, num_elems_44715,
                                     val_44716):
    group_sizze_44721 = self.sizes["builtin#replicate_i32.group_size_44721"]
    num_groups_44722 = sdiv_up64(num_elems_44715, group_sizze_44721)
    if ((1 * (np.long(num_groups_44722) * np.long(group_sizze_44721))) != 0):
      self.builtinzhreplicate_i32zireplicate_44718_var.set_args(np.int32(num_elems_44715),
                                                                np.int32(val_44716),
                                                                mem_44714)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.builtinzhreplicate_i32zireplicate_44718_var,
                                 ((np.long(num_groups_44722) * np.long(group_sizze_44721)),),
                                 (np.long(group_sizze_44721),))
      if synchronous:
        sync(self)
    return ()
  def futhark_main(self, mappingindices_mem_42840, images_mem_42841, N_28885,
                   m_28886, trend_28887, k_28888, n_28889, freq_28890,
                   hfrac_28891, lam_28892):
    i32_res_28895 = sext_i32_i64(n_28889)
    x_28896 = (np.int32(2) * k_28888)
    k2p2_28897 = (np.int32(2) + x_28896)
    cond_28898 = slt32(np.int32(0), trend_28887)
    if cond_28898:
      k2p2zq_28899 = k2p2_28897
    else:
      k2p2zq_f_res_28900 = (k2p2_28897 - np.int32(1))
      k2p2zq_28899 = k2p2zq_f_res_28900
    i32_res_28901 = sext_i32_i64(k2p2zq_28899)
    binop_x_42844 = (N_28885 * i32_res_28901)
    bytes_42843 = (np.int64(4) * binop_x_42844)
    if cond_28898:
      bounds_invalid_upwards_28903 = slt64(i32_res_28901, np.int64(0))
      valid_28904 = not(bounds_invalid_upwards_28903)
      range_valid_c_28905 = True
      assert valid_28904, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:193:5-58\n   #5  bfastfinal.fut:188:1-194:20\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28901,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_37689 = self.sizes["main.segmap_group_size_37619"]
      segmap_usable_groups_37690 = sdiv_up64(binop_x_42844,
                                             segmap_group_sizze_37689)
      mem_42845 = opencl_alloc(self, bytes_42843, "mem_42845")
      if ((1 * (np.long(segmap_usable_groups_37690) * np.long(segmap_group_sizze_37689))) != 0):
        self.mainzisegmap_37616_var.set_args(self.global_failure,
                                             np.int64(N_28885),
                                             np.float32(freq_28890),
                                             np.int64(i32_res_28901),
                                             mappingindices_mem_42840,
                                             mem_42845)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37616_var,
                                   ((np.long(segmap_usable_groups_37690) * np.long(segmap_group_sizze_37689)),),
                                   (np.long(segmap_group_sizze_37689),))
        if synchronous:
          sync(self)
      binop_p_mem_42850 = mem_42845
    else:
      bounds_invalid_upwards_28929 = slt64(i32_res_28901, np.int64(0))
      valid_28930 = not(bounds_invalid_upwards_28929)
      range_valid_c_28931 = True
      assert valid_28930, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:193:5-58\n   #5  bfastfinal.fut:188:1-194:20\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28901,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_37863 = self.sizes["main.segmap_group_size_37797"]
      segmap_usable_groups_37864 = sdiv_up64(binop_x_42844,
                                             segmap_group_sizze_37863)
      mem_42849 = opencl_alloc(self, bytes_42843, "mem_42849")
      if ((1 * (np.long(segmap_usable_groups_37864) * np.long(segmap_group_sizze_37863))) != 0):
        self.mainzisegmap_37794_var.set_args(self.global_failure,
                                             np.int64(N_28885),
                                             np.float32(freq_28890),
                                             np.int64(i32_res_28901),
                                             mappingindices_mem_42840,
                                             mem_42849)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37794_var,
                                   ((np.long(segmap_usable_groups_37864) * np.long(segmap_group_sizze_37863)),),
                                   (np.long(segmap_group_sizze_37863),))
        if synchronous:
          sync(self)
      binop_p_mem_42850 = mem_42849
    x_28954 = (N_28885 * N_28885)
    y_28955 = (np.int64(2) * N_28885)
    x_28956 = (x_28954 + y_28955)
    x_28957 = (np.int64(1) + x_28956)
    y_28958 = (np.int64(1) + N_28885)
    zzero_28959 = (y_28958 == np.int64(0))
    nonzzero_28960 = not(zzero_28959)
    nonzzero_cert_28961 = True
    assert nonzzero_28960, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:36:32-60\n   #1  bfastfinal.fut:193:5-58\n   #2  bfastfinal.fut:188:1-194:20\n" % ("division by zero",))
    x_28962 = sdiv64(x_28957, y_28958)
    x_28963 = (x_28962 - N_28885)
    binop_p_28964 = (x_28963 - np.int64(1))
    defunc_0_f_res_28965 = sext_i64_i32(binop_p_28964)
    i32_res_28966 = sitofp_i32_f32(defunc_0_f_res_28965)
    segmap_group_sizze_37946 = self.sizes["main.segmap_group_size_37925"]
    segmap_usable_groups_37947 = sdiv_up64(binop_x_42844,
                                           segmap_group_sizze_37946)
    mem_42853 = opencl_alloc(self, bytes_42843, "mem_42853")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42853, np.int64(0),
                                                binop_p_mem_42850, np.int64(0),
                                                np.int64(1), N_28885,
                                                i32_res_28901)
    mem_42857 = opencl_alloc(self, bytes_42843, "mem_42857")
    if ((1 * (np.long(segmap_usable_groups_37947) * np.long(segmap_group_sizze_37946))) != 0):
      self.mainzisegmap_37922_var.set_args(self.global_failure,
                                           np.int64(N_28885),
                                           np.int64(i32_res_28901),
                                           np.float32(i32_res_28966), mem_42853,
                                           mem_42857)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37922_var,
                                 ((np.long(segmap_usable_groups_37947) * np.long(segmap_group_sizze_37946)),),
                                 (np.long(segmap_group_sizze_37946),))
      if synchronous:
        sync(self)
    eq_x_y_28974 = (np.int64(0) == i32_res_28901)
    p_and_eq_x_y_28975 = (cond_28898 and eq_x_y_28974)
    not_p_28976 = not(cond_28898)
    p_and_eq_x_y_28977 = (eq_x_y_28974 and not_p_28976)
    empty_slice_28978 = (p_and_eq_x_y_28975 or p_and_eq_x_y_28977)
    m_28979 = (i32_res_28901 - np.int64(1))
    zzero_leq_i_p_m_t_s_28980 = sle64(np.int64(0), m_28979)
    i_p_m_t_s_leq_w_28981 = slt64(m_28979, i32_res_28901)
    i_lte_j_28982 = sle64(np.int64(0), i32_res_28901)
    y_28983 = (zzero_leq_i_p_m_t_s_28980 and i_p_m_t_s_leq_w_28981)
    y_28984 = (i_lte_j_28982 and y_28983)
    ok_or_empty_28985 = (empty_slice_28978 or y_28984)
    empty_slice_28986 = (i32_res_28895 == np.int64(0))
    m_28987 = (i32_res_28895 - np.int64(1))
    zzero_leq_i_p_m_t_s_28988 = sle64(np.int64(0), m_28987)
    i_p_m_t_s_leq_w_28989 = slt64(m_28987, N_28885)
    i_lte_j_28990 = sle64(np.int64(0), i32_res_28895)
    y_28991 = (zzero_leq_i_p_m_t_s_28988 and i_p_m_t_s_leq_w_28989)
    y_28992 = (i_lte_j_28990 and y_28991)
    ok_or_empty_28993 = (empty_slice_28986 or y_28992)
    index_ok_28994 = (ok_or_empty_28985 and ok_or_empty_28993)
    index_certs_28995 = True
    assert index_ok_28994, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:15-23\n   #1  bfastfinal.fut:193:5-58\n   #2  bfastfinal.fut:188:1-194:20\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28895,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28901,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28885,
                                                                                                                                                                               "]."))
    empty_slice_28997 = (i32_res_28901 == np.int64(0))
    ok_or_empty_28998 = (y_28984 or empty_slice_28997)
    index_ok_28999 = (ok_or_empty_28993 and ok_or_empty_28998)
    index_certs_29000 = True
    assert index_ok_28999, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:15-24\n   #1  bfastfinal.fut:193:5-58\n   #2  bfastfinal.fut:188:1-194:20\n" % ("Index [:",
                                                                                                                                                                               i32_res_28895,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28885,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28901,
                                                                                                                                                                               "]."))
    empty_slice_29002 = (m_28886 == np.int64(0))
    m_29003 = (m_28886 - np.int64(1))
    zzero_leq_i_p_m_t_s_29004 = sle64(np.int64(0), m_29003)
    i_p_m_t_s_leq_w_29005 = slt64(m_29003, m_28886)
    i_lte_j_29006 = sle64(np.int64(0), m_28886)
    y_29007 = (zzero_leq_i_p_m_t_s_29004 and i_p_m_t_s_leq_w_29005)
    y_29008 = (i_lte_j_29006 and y_29007)
    ok_or_empty_29009 = (empty_slice_29002 or y_29008)
    index_ok_29010 = (ok_or_empty_28993 and ok_or_empty_29009)
    index_certs_29011 = True
    assert index_ok_29010, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:15-28\n   #1  bfastfinal.fut:193:5-58\n   #2  bfastfinal.fut:188:1-194:20\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28895,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28886,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28885,
                                                                                                                                                                               "]."))
    suff_outer_par_37953 = (self.sizes["main.suff_outer_par_6"] <= m_28886)
    segmap_group_sizze_37979 = self.sizes["main.segmap_group_size_37957"]
    max_num_groups_44085 = self.sizes["main.segmap_num_groups_37959"]
    num_groups_37980 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28886,
                                                            segmap_group_sizze_37979),
                                                  sext_i32_i64(max_num_groups_44085))))
    nest_sizze_38155 = (m_28886 * i32_res_28901)
    segmap_group_sizze_38156 = self.sizes["main.segmap_group_size_38004"]
    max_num_groups_44086 = self.sizes["main.segmap_num_groups_38006"]
    num_groups_38157 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38155,
                                                            segmap_group_sizze_38156),
                                                  sext_i32_i64(max_num_groups_44086))))
    suff_outer_par_38161 = (self.sizes["main.suff_outer_par_7"] <= nest_sizze_38155)
    y_38185 = (i32_res_28901 * i32_res_28901)
    comparatee_38186 = (m_28886 * y_38185)
    suff_outer_par_38187 = (self.sizes["main.suff_outer_par_8"] <= comparatee_38186)
    nest_sizze_38207 = (i32_res_28895 * comparatee_38186)
    segred_group_sizze_38208 = self.sizes["main.segred_group_size_38064"]
    max_num_groups_44087 = self.sizes["main.segred_num_groups_38066"]
    num_groups_38209 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_38207,
                                                            segred_group_sizze_38208),
                                                  sext_i32_i64(max_num_groups_44087))))
    Tx_41046 = self.sizes["main.Tx_41044"]
    Ty_41047 = self.sizes["main.Ty_41045"]
    Ty_41048 = smin64(i32_res_28901, Ty_41047)
    Tx_41049 = smin64(i32_res_28901, Tx_41046)
    gridDim_zz_41052 = sdiv_up64(m_28886, np.int64(30))
    group_sizze_tile3d_41055 = (Ty_41048 * Tx_41049)
    binop_x_42859 = (N_28885 * m_28886)
    bytes_42858 = (np.int64(4) * binop_x_42859)
    bytes_42903 = (np.int64(4) * comparatee_38186)
    bytes_42862 = (np.int64(4) * y_38185)
    binop_x_43006 = (i32_res_28901 * nest_sizze_38155)
    bytes_43004 = (np.int64(4) * binop_x_43006)
    bytes_42908 = (np.int64(4) * i32_res_28901)
    binop_x_42937 = (np.int64(30) * group_sizze_tile3d_41055)
    bytes_42935 = (np.int64(4) * binop_x_42937)
    binop_x_43843 = (np.int64(4) * Ty_41048)
    binop_x_43844 = (Tx_41049 * binop_x_43843)
    sizze_43845 = (np.int64(30) * binop_x_43844)
    num_threads_44025 = (segmap_group_sizze_37979 * num_groups_37980)
    total_sizze_44026 = (bytes_42862 * num_threads_44025)
    num_threads_44027 = (segmap_group_sizze_38156 * num_groups_38157)
    total_sizze_44028 = (bytes_42908 * num_threads_44027)
    local_memory_capacity_44209 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44209)) and suff_outer_par_37953):
      mem_42860 = opencl_alloc(self, bytes_42858, "mem_42860")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42860, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_28885, m_28886)
      mem_42906 = opencl_alloc(self, bytes_42903, "mem_42906")
      mem_42864 = opencl_alloc(self, total_sizze_44026, "mem_42864")
      if ((1 * (np.long(num_groups_37980) * np.long(segmap_group_sizze_37979))) != 0):
        self.mainzisegmap_37955_var.set_args(self.global_failure,
                                             np.int64(N_28885),
                                             np.int64(m_28886),
                                             np.int32(n_28889),
                                             np.int32(k2p2zq_28899),
                                             np.int64(i32_res_28901),
                                             np.int64(num_groups_37980),
                                             binop_p_mem_42850, mem_42857,
                                             mem_42860, mem_42864, mem_42906)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_37955_var,
                                   ((np.long(num_groups_37980) * np.long(segmap_group_sizze_37979)),),
                                   (np.long(segmap_group_sizze_37979),))
        if synchronous:
          sync(self)
      mem_42860 = None
      mem_42864 = None
      mem_43007 = opencl_alloc(self, bytes_43004, "mem_43007")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43007, np.int64(0),
                                                  mem_42906, np.int64(0),
                                                  np.int64(1), m_28886,
                                                  (i32_res_28901 * i32_res_28901))
      mem_42906 = None
      defunc_3_map_res_mem_43009 = mem_43007
    else:
      local_memory_capacity_44208 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44208)) and suff_outer_par_38161):
        mem_42925 = opencl_alloc(self, bytes_43004, "mem_42925")
        mem_42909 = opencl_alloc(self, total_sizze_44028, "mem_42909")
        if ((1 * (np.long(num_groups_38157) * np.long(segmap_group_sizze_38156))) != 0):
          self.mainzisegmap_38001_var.set_args(self.global_failure,
                                               np.int64(N_28885),
                                               np.int64(m_28886),
                                               np.int32(n_28889),
                                               np.int32(k2p2zq_28899),
                                               np.int64(i32_res_28901),
                                               np.int64(num_groups_38157),
                                               images_mem_42841, mem_42853,
                                               mem_42857, mem_42909, mem_42925)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38001_var,
                                     ((np.long(num_groups_38157) * np.long(segmap_group_sizze_38156)),),
                                     (np.long(segmap_group_sizze_38156),))
          if synchronous:
            sync(self)
        mem_42909 = None
        mem_43001 = opencl_alloc(self, bytes_43004, "mem_43001")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43001, np.int64(0),
                                                    mem_42925, np.int64(0),
                                                    np.int64(1),
                                                    (m_28886 * i32_res_28901),
                                                    i32_res_28901)
        mem_42925 = None
        defunc_3_map_res_mem_43003 = mem_43001
      else:
        local_memory_capacity_44207 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44207)) and suff_outer_par_38187):
          mem_42928 = opencl_alloc(self, bytes_42858, "mem_42928")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42928, np.int64(0),
                                                      images_mem_42841,
                                                      np.int64(0), np.int64(1),
                                                      N_28885, m_28886)
          gridDim_x_41050 = sdiv_up64(i32_res_28901, Tx_41049)
          gridDim_y_41051 = sdiv_up64(i32_res_28901, Ty_41048)
          binop_x_41053 = (gridDim_y_41051 * gridDim_zz_41052)
          grid_sizze_tile3d_41054 = (gridDim_x_41050 * binop_x_41053)
          count_shmem_41056 = sdiv_up64(np.int64(30), group_sizze_tile3d_41055)
          mem_42988 = opencl_alloc(self, bytes_43004, "mem_42988")
          if ((1 * (np.long(grid_sizze_tile3d_41054) * np.long(group_sizze_tile3d_41055))) != 0):
            self.mainzisegmap_intragroup_41060_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(np.int64(120))),
                                                            np.int64(m_28886),
                                                            np.int32(n_28889),
                                                            np.int64(i32_res_28901),
                                                            np.int64(Ty_41048),
                                                            np.int64(Tx_41049),
                                                            np.int64(gridDim_x_41050),
                                                            np.int64(gridDim_y_41051),
                                                            np.int64(group_sizze_tile3d_41055),
                                                            np.int64(count_shmem_41056),
                                                            mem_42853,
                                                            mem_42857,
                                                            mem_42928,
                                                            mem_42988)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_41060_var,
                                       ((np.long(grid_sizze_tile3d_41054) * np.long(group_sizze_tile3d_41055)),),
                                       (np.long(group_sizze_tile3d_41055),))
            if synchronous:
              sync(self)
          mem_42928 = None
          defunc_3_map_res_mem_42997 = mem_42988
        else:
          mem_42991 = opencl_alloc(self, bytes_42843, "mem_42991")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42991, np.int64(0),
                                                      mem_42857, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28901, N_28885)
          mem_42996 = opencl_alloc(self, bytes_43004, "mem_42996")
          if slt64((i32_res_28895 * np.int64(2)), segred_group_sizze_38208):
            segment_sizze_nonzzero_44147 = smax64(np.int64(1), i32_res_28895)
            num_threads_44148 = (num_groups_38209 * segred_group_sizze_38208)
            if ((1 * (np.long(num_groups_38209) * np.long(segred_group_sizze_38208))) != 0):
              self.mainzisegred_small_38070_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38208))),
                                                         np.int64(N_28885),
                                                         np.int64(m_28886),
                                                         np.int64(i32_res_28895),
                                                         np.int64(i32_res_28901),
                                                         np.int64(num_groups_38209),
                                                         np.int64(segment_sizze_nonzzero_44147),
                                                         images_mem_42841,
                                                         binop_p_mem_42850,
                                                         mem_42991, mem_42996)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_small_38070_var,
                                         ((np.long(num_groups_38209) * np.long(segred_group_sizze_38208)),),
                                         (np.long(segred_group_sizze_38208),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44168 = sdiv_up64(num_groups_38209,
                                                 smax64(np.int64(1),
                                                        ((m_28886 * i32_res_28901) * i32_res_28901)))
            elements_per_thread_44169 = sdiv_up64(i32_res_28895,
                                                  (segred_group_sizze_38208 * groups_per_segment_44168))
            virt_num_groups_44170 = (groups_per_segment_44168 * ((m_28886 * i32_res_28901) * i32_res_28901))
            num_threads_44171 = (num_groups_38209 * segred_group_sizze_38208)
            threads_per_segment_44172 = (groups_per_segment_44168 * segred_group_sizze_38208)
            group_res_arr_mem_44173 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_38208 * virt_num_groups_44170)),
                                                   "group_res_arr_mem_44173")
            mainzicounter_mem_44175 = self.mainzicounter_mem_44175
            if ((1 * (np.long(num_groups_38209) * np.long(segred_group_sizze_38208))) != 0):
              self.mainzisegred_large_38070_var.set_args(self.global_failure,
                                                         cl.LocalMemory(np.long(np.int32(1))),
                                                         cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_38208))),
                                                         np.int64(N_28885),
                                                         np.int64(i32_res_28895),
                                                         np.int64(i32_res_28901),
                                                         np.int64(num_groups_38209),
                                                         np.int64(groups_per_segment_44168),
                                                         np.int64(elements_per_thread_44169),
                                                         np.int64(virt_num_groups_44170),
                                                         np.int64(threads_per_segment_44172),
                                                         images_mem_42841,
                                                         binop_p_mem_42850,
                                                         mem_42991, mem_42996,
                                                         group_res_arr_mem_44173,
                                                         mainzicounter_mem_44175)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainzisegred_large_38070_var,
                                         ((np.long(num_groups_38209) * np.long(segred_group_sizze_38208)),),
                                         (np.long(segred_group_sizze_38208),))
              if synchronous:
                sync(self)
          mem_42991 = None
          defunc_3_map_res_mem_42997 = mem_42996
        defunc_3_map_res_mem_43003 = defunc_3_map_res_mem_42997
      defunc_3_map_res_mem_43009 = defunc_3_map_res_mem_43003
    m_29032 = (np.int32(2) * k2p2zq_28899)
    nm_29033 = (k2p2zq_28899 * m_29032)
    i32_res_29034 = sext_i32_i64(nm_29033)
    bounds_invalid_upwards_29035 = slt64(i32_res_29034, np.int64(0))
    valid_29036 = not(bounds_invalid_upwards_29035)
    range_valid_c_29037 = True
    assert valid_29036, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:193:5-58\n   #4  bfastfinal.fut:188:1-194:20\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_29034,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_29042 = (m_29032 == np.int32(0))
    nonzzero_29043 = not(zzero_29042)
    nonzzero_cert_29044 = True
    assert nonzzero_29043, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:193:5-58\n   #4  bfastfinal.fut:188:1-194:20\n" % ("division by zero",))
    loop_nonempty_29045 = slt32(np.int32(0), k2p2zq_28899)
    loop_not_taken_29046 = not(loop_nonempty_29045)
    protect_assert_disj_29047 = (nonzzero_29043 or loop_not_taken_29046)
    nonzzero_cert_29048 = True
    assert protect_assert_disj_29047, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:51:35-50\n   #4  bfastfinal.fut:193:5-58\n   #5  bfastfinal.fut:188:1-194:20\n" % ("division by zero",))
    i32_res_29049 = sext_i32_i64(m_29032)
    x_29050 = (i32_res_28901 * i32_res_29049)
    dim_ok_29051 = (x_29050 == i32_res_29034)
    dim_ok_cert_29052 = True
    assert dim_ok_29051, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:193:5-58\n   #4  bfastfinal.fut:188:1-194:20\n" % ("new shape has different number of elements than old shape",))
    j_m_i_29053 = (i32_res_29049 - i32_res_28901)
    empty_slice_29054 = (j_m_i_29053 == np.int64(0))
    m_29055 = (j_m_i_29053 - np.int64(1))
    i_p_m_t_s_29056 = (i32_res_28901 + m_29055)
    zzero_leq_i_p_m_t_s_29057 = sle64(np.int64(0), i_p_m_t_s_29056)
    i_p_m_t_s_leq_w_29058 = slt64(i_p_m_t_s_29056, i32_res_29049)
    i_lte_j_29059 = sle64(i32_res_28901, i32_res_29049)
    y_29060 = (i_lte_j_28982 and i_p_m_t_s_leq_w_29058)
    y_29061 = (zzero_leq_i_p_m_t_s_29057 and y_29060)
    y_29062 = (i_lte_j_29059 and y_29061)
    forwards_ok_29063 = (i_lte_j_28982 and y_29062)
    ok_or_empty_29064 = (empty_slice_29054 or forwards_ok_29063)
    index_ok_29065 = (ok_or_empty_28998 and ok_or_empty_29064)
    index_certs_29066 = True
    assert index_ok_29065, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:51:35-50\n   #2  bfastfinal.fut:193:5-58\n   #3  bfastfinal.fut:188:1-194:20\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28901,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28901,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_29049,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28901,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_29049,
                                                                                                                                                                                                                   "]."))
    dim_match_29067 = (i32_res_28901 == j_m_i_29053)
    empty_or_match_cert_29068 = True
    assert dim_match_29067, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:51:35-50\n   #2  bfastfinal.fut:193:5-58\n   #3  bfastfinal.fut:188:1-194:20\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_28901,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_29053,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_28901,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_28901,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_38423 = self.max_group_size
    fits_38424 = sle64(i32_res_29034, max_group_sizze_38423)
    suff_intra_par_38422 = (self.sizes["main.suff_intra_par_11"] <= i32_res_29034)
    intra_suff_and_fits_38425 = (suff_intra_par_38422 and fits_38424)
    nest_sizze_38909 = (m_28886 * i32_res_29034)
    segmap_group_sizze_38910 = self.sizes["main.segmap_group_size_38869"]
    suff_intra_par_38937 = (self.sizes["main.suff_intra_par_13"] <= i32_res_29034)
    intra_suff_and_fits_38938 = (fits_38424 and suff_intra_par_38937)
    segmap_group_sizze_38974 = self.sizes["main.segmap_group_size_38775"]
    segmap_group_sizze_38990 = self.sizes["main.segmap_group_size_38708"]
    segmap_group_sizze_39024 = self.sizes["main.segmap_group_size_38654"]
    y_39034 = (i32_res_28901 * j_m_i_29053)
    nest_sizze_39035 = (m_28886 * y_39034)
    segmap_group_sizze_39036 = self.sizes["main.segmap_group_size_38489"]
    segmap_usable_groups_38975 = sdiv_up_safe64(m_28886,
                                                segmap_group_sizze_38974)
    segmap_usable_groups_38991 = sdiv_up_safe64(nest_sizze_38909,
                                                segmap_group_sizze_38990)
    segmap_usable_groups_39025 = sdiv_up_safe64(nest_sizze_38909,
                                                segmap_group_sizze_39024)
    bytes_43012 = (np.int64(4) * i32_res_29034)
    bytes_43035 = (np.int64(4) * nest_sizze_38909)
    binop_x_43086 = (j_m_i_29053 * nest_sizze_38155)
    bytes_43084 = (np.int64(4) * binop_x_43086)
    local_memory_capacity_44210 = self.max_local_memory
    if intra_suff_and_fits_38425:
      defunc_3_map_res_ixfn_43088 = i32_res_28901
    else:
      defunc_3_map_res_ixfn_43088 = j_m_i_29053
    local_memory_capacity_44273 = self.max_local_memory
    if (sle64(((bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44273)) and intra_suff_and_fits_38425):
      mem_43033 = opencl_alloc(self, bytes_43004, "mem_43033")
      if ((1 * (np.long(m_28886) * np.long(i32_res_29034))) != 0):
        self.mainzisegmap_intragroup_38305_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43012)),
                                                        cl.LocalMemory(np.long(bytes_43012)),
                                                        np.int32(k2p2zq_28899),
                                                        np.int64(i32_res_28901),
                                                        np.int32(m_29032),
                                                        np.int64(i32_res_29034),
                                                        np.int64(i32_res_29049),
                                                        defunc_3_map_res_mem_43009,
                                                        mem_43033)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_38305_var,
                                   ((np.long(m_28886) * np.long(i32_res_29034)),),
                                   (np.long(i32_res_29034),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43089 = mem_43033
    else:
      segmap_usable_groups_38911 = sdiv_up64(nest_sizze_38909,
                                             segmap_group_sizze_38910)
      mem_43037 = opencl_alloc(self, bytes_43035, "mem_43037")
      if ((1 * (np.long(segmap_usable_groups_38911) * np.long(segmap_group_sizze_38910))) != 0):
        self.mainzisegmap_38866_var.set_args(self.global_failure,
                                             np.int64(m_28886),
                                             np.int32(k2p2zq_28899),
                                             np.int64(i32_res_28901),
                                             np.int32(m_29032),
                                             np.int64(i32_res_29034),
                                             defunc_3_map_res_mem_43009,
                                             mem_43037)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38866_var,
                                   ((np.long(segmap_usable_groups_38911) * np.long(segmap_group_sizze_38910)),),
                                   (np.long(segmap_group_sizze_38910),))
        if synchronous:
          sync(self)
      ctx_param_ext_43038 = m_28886
      ctx_param_ext_43039 = i32_res_29034
      ctx_param_ext_43040 = np.int64(0)
      ctx_param_ext_43041 = i32_res_29034
      ctx_param_ext_43042 = m_28886
      ctx_param_ext_43043 = np.int64(1)
      ctx_param_ext_43044 = i32_res_29034
      mem_param_43045 = mem_43037
      i_38927 = np.int32(0)
      one_45232 = np.int32(1)
      for counter_45231 in range(k2p2zq_28899):
        i32_res_38929 = sext_i32_i64(i_38927)
        local_memory_capacity_44233 = self.max_local_memory
        if intra_suff_and_fits_38938:
          gauss_jordan_res_ixfn_43067 = m_28886
        else:
          gauss_jordan_res_ixfn_43067 = ctx_param_ext_43042
        local_memory_capacity_44234 = self.max_local_memory
        if intra_suff_and_fits_38938:
          gauss_jordan_res_ixfn_43068 = i32_res_29034
        else:
          gauss_jordan_res_ixfn_43068 = ctx_param_ext_43044
        local_memory_capacity_44235 = self.max_local_memory
        if intra_suff_and_fits_38938:
          gauss_jordan_res_ixfn_43069 = m_28886
        else:
          gauss_jordan_res_ixfn_43069 = ctx_param_ext_43038
        local_memory_capacity_44236 = self.max_local_memory
        if intra_suff_and_fits_38938:
          gauss_jordan_res_ixfn_43070 = i32_res_29034
        else:
          gauss_jordan_res_ixfn_43070 = ctx_param_ext_43039
        local_memory_capacity_44237 = self.max_local_memory
        if intra_suff_and_fits_38938:
          gauss_jordan_res_ixfn_43071 = i32_res_29034
        else:
          gauss_jordan_res_ixfn_43071 = ctx_param_ext_43041
        local_memory_capacity_44238 = self.max_local_memory
        if intra_suff_and_fits_38938:
          gauss_jordan_res_ixfn_43072 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43072 = ctx_param_ext_43043
        local_memory_capacity_44239 = self.max_local_memory
        if intra_suff_and_fits_38938:
          gauss_jordan_res_ixfn_43073 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43073 = ctx_param_ext_43040
        local_memory_capacity_44267 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44267)) and sle64((bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44267))) and intra_suff_and_fits_38938):
          mem_43050 = opencl_alloc(self, bytes_43035, "mem_43050")
          group_sizze_44243 = self.sizes["main.group_size_44243"]
          num_groups_44244 = sdiv_up64((m_28886 * i32_res_29034),
                                       group_sizze_44243)
          if ((1 * (np.long(num_groups_44244) * np.long(group_sizze_44243))) != 0):
            self.mainzicopy_44240_var.set_args(np.int64(m_28886),
                                               np.int64(i32_res_29034),
                                               np.int64(ctx_param_ext_43040),
                                               np.int64(ctx_param_ext_43041),
                                               np.int64(ctx_param_ext_43043),
                                               mem_param_43045, mem_43050)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzicopy_44240_var,
                                       ((np.long(num_groups_44244) * np.long(group_sizze_44243)),),
                                       (np.long(group_sizze_44243),))
            if synchronous:
              sync(self)
          mem_43058 = opencl_alloc(self, bytes_43035, "mem_43058")
          if ((1 * (np.long(m_28886) * np.long(i32_res_29034))) != 0):
            self.mainzisegmap_intragroup_38532_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(bytes_43012)),
                                                            np.int64(m_28886),
                                                            np.int32(k2p2zq_28899),
                                                            np.int32(m_29032),
                                                            np.int64(i32_res_29034),
                                                            np.int32(i_38927),
                                                            np.int64(i32_res_38929),
                                                            np.int64(ctx_param_ext_43040),
                                                            np.int64(ctx_param_ext_43041),
                                                            np.int64(ctx_param_ext_43043),
                                                            mem_param_43045,
                                                            mem_43050,
                                                            mem_43058)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegmap_intragroup_38532_var,
                                       ((np.long(m_28886) * np.long(i32_res_29034)),),
                                       (np.long(i32_res_29034),))
            if synchronous:
              sync(self)
          mem_43050 = None
          gauss_jordan_res_mem_43074 = mem_43058
        else:
          mem_43061 = opencl_alloc(self, m_28886, "mem_43061")
          if ((1 * (np.long(segmap_usable_groups_38975) * np.long(segmap_group_sizze_38974))) != 0):
            self.mainzisegmap_38773_var.set_args(self.global_failure,
                                                 np.int64(m_28886),
                                                 np.int64(i32_res_38929),
                                                 np.int64(ctx_param_ext_43040),
                                                 np.int64(ctx_param_ext_43041),
                                                 np.int64(ctx_param_ext_43043),
                                                 mem_param_43045, mem_43061)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38773_var,
                                       ((np.long(segmap_usable_groups_38975) * np.long(segmap_group_sizze_38974)),),
                                       (np.long(segmap_group_sizze_38974),))
            if synchronous:
              sync(self)
          mem_43065 = opencl_alloc(self, bytes_43035, "mem_43065")
          if ((1 * (np.long(segmap_usable_groups_38991) * np.long(segmap_group_sizze_38990))) != 0):
            self.mainzisegmap_38705_var.set_args(self.global_failure,
                                                 np.int64(m_28886),
                                                 np.int32(k2p2zq_28899),
                                                 np.int32(m_29032),
                                                 np.int64(i32_res_29034),
                                                 np.int32(i_38927),
                                                 np.int64(i32_res_38929),
                                                 np.int64(ctx_param_ext_43040),
                                                 np.int64(ctx_param_ext_43041),
                                                 np.int64(ctx_param_ext_43043),
                                                 mem_param_43045, mem_43061,
                                                 mem_43065)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38705_var,
                                       ((np.long(segmap_usable_groups_38991) * np.long(segmap_group_sizze_38990)),),
                                       (np.long(segmap_group_sizze_38990),))
            if synchronous:
              sync(self)
          mem_43061 = None
          if ((1 * (np.long(segmap_usable_groups_39025) * np.long(segmap_group_sizze_39024))) != 0):
            self.mainzisegmap_38651_var.set_args(self.global_failure,
                                                 np.int64(m_28886),
                                                 np.int64(i32_res_29034),
                                                 np.int64(ctx_param_ext_43040),
                                                 np.int64(ctx_param_ext_43041),
                                                 np.int64(ctx_param_ext_43043),
                                                 mem_param_43045, mem_43065)
            cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38651_var,
                                       ((np.long(segmap_usable_groups_39025) * np.long(segmap_group_sizze_39024)),),
                                       (np.long(segmap_group_sizze_39024),))
            if synchronous:
              sync(self)
          mem_43065 = None
          gauss_jordan_res_mem_43074 = mem_param_43045
        ctx_param_ext_tmp_44224 = gauss_jordan_res_ixfn_43069
        ctx_param_ext_tmp_44225 = gauss_jordan_res_ixfn_43070
        ctx_param_ext_tmp_44226 = gauss_jordan_res_ixfn_43073
        ctx_param_ext_tmp_44227 = gauss_jordan_res_ixfn_43071
        ctx_param_ext_tmp_44228 = gauss_jordan_res_ixfn_43067
        ctx_param_ext_tmp_44229 = gauss_jordan_res_ixfn_43072
        ctx_param_ext_tmp_44230 = gauss_jordan_res_ixfn_43068
        mem_param_tmp_44231 = gauss_jordan_res_mem_43074
        ctx_param_ext_43038 = ctx_param_ext_tmp_44224
        ctx_param_ext_43039 = ctx_param_ext_tmp_44225
        ctx_param_ext_43040 = ctx_param_ext_tmp_44226
        ctx_param_ext_43041 = ctx_param_ext_tmp_44227
        ctx_param_ext_43042 = ctx_param_ext_tmp_44228
        ctx_param_ext_43043 = ctx_param_ext_tmp_44229
        ctx_param_ext_43044 = ctx_param_ext_tmp_44230
        mem_param_43045 = mem_param_tmp_44231
        i_38927 += one_45232
      gauss_jordan_res_r_ixfn_43075 = ctx_param_ext_43038
      gauss_jordan_res_r_ixfn_43076 = ctx_param_ext_43039
      gauss_jordan_res_r_ixfn_43077 = ctx_param_ext_43040
      gauss_jordan_res_r_ixfn_43078 = ctx_param_ext_43041
      gauss_jordan_res_r_ixfn_43079 = ctx_param_ext_43042
      gauss_jordan_res_r_ixfn_43080 = ctx_param_ext_43043
      gauss_jordan_res_r_ixfn_43081 = ctx_param_ext_43044
      gauss_jordan_res_r_mem_43082 = mem_param_43045
      mem_43037 = None
      segmap_usable_groups_39037 = sdiv_up64(nest_sizze_39035,
                                             segmap_group_sizze_39036)
      mem_43087 = opencl_alloc(self, bytes_43084, "mem_43087")
      if ((1 * (np.long(segmap_usable_groups_39037) * np.long(segmap_group_sizze_39036))) != 0):
        self.mainzisegmap_38485_var.set_args(self.global_failure,
                                             np.int64(m_28886),
                                             np.int64(i32_res_28901),
                                             np.int64(i32_res_29034),
                                             np.int64(i32_res_29049),
                                             np.int64(x_29050),
                                             np.int64(j_m_i_29053),
                                             np.int64(gauss_jordan_res_r_ixfn_43077),
                                             np.int64(gauss_jordan_res_r_ixfn_43078),
                                             np.int64(gauss_jordan_res_r_ixfn_43080),
                                             gauss_jordan_res_r_mem_43082,
                                             mem_43087)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_38485_var,
                                   ((np.long(segmap_usable_groups_39037) * np.long(segmap_group_sizze_39036)),),
                                   (np.long(segmap_group_sizze_39036),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43082 = None
      defunc_3_map_res_mem_43089 = mem_43087
    defunc_3_map_res_mem_43009 = None
    suff_outer_par_39045 = (self.sizes["main.suff_outer_par_16"] <= m_28886)
    segmap_group_sizze_39067 = self.sizes["main.segmap_group_size_39049"]
    max_num_groups_44274 = self.sizes["main.segmap_num_groups_39051"]
    num_groups_39068 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28886,
                                                            segmap_group_sizze_39067),
                                                  sext_i32_i64(max_num_groups_44274))))
    suff_outer_par_39152 = (self.sizes["main.suff_outer_par_17"] <= nest_sizze_38155)
    nest_sizze_39168 = (i32_res_28895 * nest_sizze_38155)
    segred_group_sizze_39169 = self.sizes["main.segred_group_size_39111"]
    max_num_groups_44275 = self.sizes["main.segred_num_groups_39113"]
    num_groups_39170 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39168,
                                                            segred_group_sizze_39169),
                                                  sext_i32_i64(max_num_groups_44275))))
    Ty_41194 = self.sizes["main.Ty_41191"]
    Ry_41195 = self.sizes["main.Ry_41193"]
    Tx_41196 = self.sizes["main.Tx_41190"]
    Rx_41197 = self.sizes["main.Rx_41192"]
    Tk_41198 = self.sizes["main.Tk_41189"]
    TxRx_41201 = (Tx_41196 * Rx_41197)
    TyRy_41202 = (Ty_41194 * Ry_41195)
    a_loc_szz_41204 = (Tk_41198 * TyRy_41202)
    binop_x_41205 = (Tx_41196 * Tk_41198)
    b_loc_szz_41206 = (Rx_41197 * binop_x_41205)
    group_sizze_41210 = (Ty_41194 * Tx_41196)
    bytes_43108 = (np.int64(4) * nest_sizze_38155)
    binop_x_43122 = (Ry_41195 * group_sizze_41210)
    binop_x_43123 = (Rx_41197 * binop_x_43122)
    bytes_43120 = (np.int64(4) * binop_x_43123)
    binop_x_43114 = (Ry_41195 * Rx_41197)
    bytes_43113 = (np.int64(4) * binop_x_43114)
    bytes_43125 = (np.int64(4) * a_loc_szz_41204)
    bytes_43127 = (np.int64(4) * b_loc_szz_41206)
    bytes_43196 = (np.int64(4) * binop_x_43122)
    binop_x_43202 = (Rx_41197 * group_sizze_41210)
    bytes_43200 = (np.int64(4) * binop_x_43202)
    bytes_43188 = (np.int64(4) * Ry_41195)
    bytes_43190 = (np.int64(4) * Rx_41197)
    binop_x_43860 = (np.int64(4) * Ty_41194)
    binop_x_43861 = (Tx_41196 * binop_x_43860)
    binop_x_43862 = (Ry_41195 * binop_x_43861)
    sizze_43863 = (Rx_41197 * binop_x_43862)
    num_threads_44038 = (segmap_group_sizze_39067 * num_groups_39068)
    total_sizze_44039 = (bytes_42908 * num_threads_44038)
    local_memory_capacity_44405 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44405)) and suff_outer_par_39045):
      mem_43092 = opencl_alloc(self, bytes_42858, "mem_43092")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43092, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_28885, m_28886)
      mem_43110 = opencl_alloc(self, bytes_43108, "mem_43110")
      mem_43095 = opencl_alloc(self, total_sizze_44039, "mem_43095")
      if ((1 * (np.long(num_groups_39068) * np.long(segmap_group_sizze_39067))) != 0):
        self.mainzisegmap_39047_var.set_args(self.global_failure,
                                             np.int64(N_28885),
                                             np.int64(m_28886),
                                             np.int32(n_28889),
                                             np.int32(k2p2zq_28899),
                                             np.int64(i32_res_28901),
                                             np.int64(num_groups_39068),
                                             binop_p_mem_42850, mem_43092,
                                             mem_43095, mem_43110)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39047_var,
                                   ((np.long(num_groups_39068) * np.long(segmap_group_sizze_39067)),),
                                   (np.long(segmap_group_sizze_39067),))
        if synchronous:
          sync(self)
      mem_43092 = None
      mem_43095 = None
      mem_43308 = opencl_alloc(self, bytes_43108, "mem_43308")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43308, np.int64(0),
                                                  mem_43110, np.int64(0),
                                                  np.int64(1), m_28886,
                                                  i32_res_28901)
      mem_43110 = None
      defunc_3_map_res_mem_43310 = mem_43308
    else:
      local_memory_capacity_44404 = self.max_local_memory
      if (sle64(((bytes_43125 + srem64((np.int64(8) - srem64(bytes_43125,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43127 + srem64((np.int64(8) - srem64(bytes_43127,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44404)) and suff_outer_par_39152):
        tk_div_tx_41199 = sdiv_up64(Tk_41198, Tx_41196)
        tk_div_ty_41200 = sdiv_up64(Tk_41198, Ty_41194)
        gridDim_x_41207 = sdiv_up64(i32_res_28901, TxRx_41201)
        gridDim_y_41208 = sdiv_up64(m_28886, TyRy_41202)
        grid_sizze_41209 = (gridDim_x_41207 * gridDim_y_41208)
        full_tiles_41238 = squot64(i32_res_28895, Tk_41198)
        kk_41445 = (Tk_41198 * full_tiles_41238)
        mem_43300 = opencl_alloc(self, bytes_43108, "mem_43300")
        if ((1 * (np.long(grid_sizze_41209) * np.long(group_sizze_41210))) != 0):
          self.mainzisegmap_intragroup_41213_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43127)),
                                                          cl.LocalMemory(np.long(bytes_43125)),
                                                          np.int64(N_28885),
                                                          np.int64(m_28886),
                                                          np.int64(i32_res_28895),
                                                          np.int64(i32_res_28901),
                                                          np.int64(gridDim_x_41207),
                                                          np.int64(full_tiles_41238),
                                                          np.int64(kk_41445),
                                                          images_mem_42841,
                                                          mem_42853, mem_43300)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41213_var,
                                     ((np.long(grid_sizze_41209) * np.long(group_sizze_41210)),),
                                     (np.long(group_sizze_41210),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43305 = mem_43300
      else:
        mem_43304 = opencl_alloc(self, bytes_43108, "mem_43304")
        if slt64((i32_res_28895 * np.int64(2)), segred_group_sizze_39169):
          segment_sizze_nonzzero_44344 = smax64(np.int64(1), i32_res_28895)
          num_threads_44345 = (num_groups_39170 * segred_group_sizze_39169)
          if ((1 * (np.long(num_groups_39170) * np.long(segred_group_sizze_39169))) != 0):
            self.mainzisegred_small_39117_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39169))),
                                                       np.int64(N_28885),
                                                       np.int64(m_28886),
                                                       np.int64(i32_res_28895),
                                                       np.int64(i32_res_28901),
                                                       np.int64(num_groups_39170),
                                                       np.int64(segment_sizze_nonzzero_44344),
                                                       images_mem_42841,
                                                       binop_p_mem_42850,
                                                       mem_43304)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39117_var,
                                       ((np.long(num_groups_39170) * np.long(segred_group_sizze_39169)),),
                                       (np.long(segred_group_sizze_39169),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44365 = sdiv_up64(num_groups_39170,
                                               smax64(np.int64(1),
                                                      (m_28886 * i32_res_28901)))
          elements_per_thread_44366 = sdiv_up64(i32_res_28895,
                                                (segred_group_sizze_39169 * groups_per_segment_44365))
          virt_num_groups_44367 = (groups_per_segment_44365 * (m_28886 * i32_res_28901))
          num_threads_44368 = (num_groups_39170 * segred_group_sizze_39169)
          threads_per_segment_44369 = (groups_per_segment_44365 * segred_group_sizze_39169)
          group_res_arr_mem_44370 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39169 * virt_num_groups_44367)),
                                                 "group_res_arr_mem_44370")
          mainzicounter_mem_44372 = self.mainzicounter_mem_44372
          if ((1 * (np.long(num_groups_39170) * np.long(segred_group_sizze_39169))) != 0):
            self.mainzisegred_large_39117_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39169))),
                                                       np.int64(N_28885),
                                                       np.int64(i32_res_28895),
                                                       np.int64(i32_res_28901),
                                                       np.int64(num_groups_39170),
                                                       np.int64(groups_per_segment_44365),
                                                       np.int64(elements_per_thread_44366),
                                                       np.int64(virt_num_groups_44367),
                                                       np.int64(threads_per_segment_44369),
                                                       images_mem_42841,
                                                       binop_p_mem_42850,
                                                       mem_43304,
                                                       group_res_arr_mem_44370,
                                                       mainzicounter_mem_44372)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39117_var,
                                       ((np.long(num_groups_39170) * np.long(segred_group_sizze_39169)),),
                                       (np.long(segred_group_sizze_39169),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43305 = mem_43304
      defunc_3_map_res_mem_43310 = defunc_3_map_res_mem_43305
    binop_p_mem_42850 = None
    mem_42853 = None
    suff_outer_par_39186 = (self.sizes["main.suff_outer_par_18"] <= m_28886)
    segmap_group_sizze_39207 = self.sizes["main.segmap_group_size_39190"]
    max_num_groups_44406 = self.sizes["main.segmap_num_groups_39192"]
    num_groups_39208 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28886,
                                                            segmap_group_sizze_39207),
                                                  sext_i32_i64(max_num_groups_44406))))
    suff_outer_par_39287 = (self.sizes["main.suff_outer_par_19"] <= nest_sizze_38155)
    segred_group_sizze_39302 = self.sizes["main.segred_group_size_39248"]
    max_num_groups_44407 = self.sizes["main.segred_num_groups_39250"]
    num_groups_39303 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43006,
                                                            segred_group_sizze_39302),
                                                  sext_i32_i64(max_num_groups_44407))))
    tile_sizze_41657 = self.sizes["main.tile_size_41656"]
    group_sizze_41658 = (tile_sizze_41657 * tile_sizze_41657)
    bytes_43342 = (np.int64(4) * group_sizze_41658)
    binop_x_43876 = (np.int64(4) * tile_sizze_41657)
    sizze_43877 = (tile_sizze_41657 * binop_x_43876)
    num_threads_44042 = (segmap_group_sizze_39207 * num_groups_39208)
    total_sizze_44043 = (bytes_42908 * num_threads_44042)
    local_memory_capacity_44493 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44493)) and suff_outer_par_39186):
      mem_43314 = opencl_alloc(self, bytes_42903, "mem_43314")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43314, np.int64(0),
                                                  defunc_3_map_res_mem_43089,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28901 * i32_res_28901),
                                                  m_28886)
      mem_43317 = opencl_alloc(self, bytes_43108, "mem_43317")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43317, np.int64(0),
                                                  defunc_3_map_res_mem_43310,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28901, m_28886)
      mem_43335 = opencl_alloc(self, bytes_43108, "mem_43335")
      mem_43320 = opencl_alloc(self, total_sizze_44043, "mem_43320")
      if ((1 * (np.long(num_groups_39208) * np.long(segmap_group_sizze_39207))) != 0):
        self.mainzisegmap_39188_var.set_args(self.global_failure,
                                             np.int64(m_28886),
                                             np.int32(k2p2zq_28899),
                                             np.int64(i32_res_28901),
                                             np.int64(num_groups_39208),
                                             mem_43314, mem_43317, mem_43320,
                                             mem_43335)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39188_var,
                                   ((np.long(num_groups_39208) * np.long(segmap_group_sizze_39207)),),
                                   (np.long(segmap_group_sizze_39207),))
        if synchronous:
          sync(self)
      mem_43314 = None
      mem_43317 = None
      mem_43320 = None
      mem_43374 = opencl_alloc(self, bytes_43108, "mem_43374")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43374, np.int64(0),
                                                  mem_43335, np.int64(0),
                                                  np.int64(1), m_28886,
                                                  i32_res_28901)
      mem_43335 = None
      defunc_4_map_res_mem_43376 = mem_43374
    else:
      local_memory_capacity_44492 = self.max_local_memory
      if (sle64(((bytes_43342 + srem64((np.int64(8) - srem64(bytes_43342,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43342 + srem64((np.int64(8) - srem64(bytes_43342,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44492)) and suff_outer_par_39287):
        mem_43339 = opencl_alloc(self, bytes_43004, "mem_43339")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43339, np.int64(0),
                                                    defunc_3_map_res_mem_43089,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28901,
                                                    (m_28886 * i32_res_28901))
        num_groups_x_41659 = sdiv_up64(m_28886, tile_sizze_41657)
        num_groups_y_41660 = sdiv_up64(i32_res_28901, tile_sizze_41657)
        num_groups_top_41661 = (num_groups_x_41659 * num_groups_y_41660)
        num_whole_tiles_41678 = squot64(i32_res_28901, tile_sizze_41657)
        residual_input_41805 = srem64(i32_res_28901, tile_sizze_41657)
        cond_41806 = (residual_input_41805 == np.int64(0))
        mem_43366 = opencl_alloc(self, bytes_43108, "mem_43366")
        if ((1 * (np.long(num_groups_top_41661) * np.long(group_sizze_41658))) != 0):
          self.mainzisegmap_intragroup_41662_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43342)),
                                                          cl.LocalMemory(np.long(bytes_43342)),
                                                          np.int64(m_28886),
                                                          np.int64(i32_res_28901),
                                                          np.int64(num_groups_y_41660),
                                                          np.int64(num_whole_tiles_41678),
                                                          np.int64(residual_input_41805),
                                                          np.byte(cond_41806),
                                                          defunc_3_map_res_mem_43310,
                                                          mem_43339, mem_43366)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41662_var,
                                     ((np.long(num_groups_top_41661) * np.long(group_sizze_41658)),),
                                     (np.long(group_sizze_41658),))
          if synchronous:
            sync(self)
        mem_43339 = None
        defunc_4_map_res_mem_43371 = mem_43366
      else:
        mem_43370 = opencl_alloc(self, bytes_43108, "mem_43370")
        if slt64((i32_res_28901 * np.int64(2)), segred_group_sizze_39302):
          segment_sizze_nonzzero_44432 = smax64(np.int64(1), i32_res_28901)
          num_threads_44433 = (num_groups_39303 * segred_group_sizze_39302)
          if ((1 * (np.long(num_groups_39303) * np.long(segred_group_sizze_39302))) != 0):
            self.mainzisegred_small_39254_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39302))),
                                                       np.int64(m_28886),
                                                       np.int64(i32_res_28901),
                                                       np.int64(num_groups_39303),
                                                       np.int64(segment_sizze_nonzzero_44432),
                                                       defunc_3_map_res_mem_43089,
                                                       defunc_3_map_res_mem_43310,
                                                       mem_43370)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39254_var,
                                       ((np.long(num_groups_39303) * np.long(segred_group_sizze_39302)),),
                                       (np.long(segred_group_sizze_39302),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44453 = sdiv_up64(num_groups_39303,
                                               smax64(np.int64(1),
                                                      (m_28886 * i32_res_28901)))
          elements_per_thread_44454 = sdiv_up64(i32_res_28901,
                                                (segred_group_sizze_39302 * groups_per_segment_44453))
          virt_num_groups_44455 = (groups_per_segment_44453 * (m_28886 * i32_res_28901))
          num_threads_44456 = (num_groups_39303 * segred_group_sizze_39302)
          threads_per_segment_44457 = (groups_per_segment_44453 * segred_group_sizze_39302)
          group_res_arr_mem_44458 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39302 * virt_num_groups_44455)),
                                                 "group_res_arr_mem_44458")
          mainzicounter_mem_44460 = self.mainzicounter_mem_44460
          if ((1 * (np.long(num_groups_39303) * np.long(segred_group_sizze_39302))) != 0):
            self.mainzisegred_large_39254_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39302))),
                                                       np.int64(i32_res_28901),
                                                       np.int64(num_groups_39303),
                                                       np.int64(groups_per_segment_44453),
                                                       np.int64(elements_per_thread_44454),
                                                       np.int64(virt_num_groups_44455),
                                                       np.int64(threads_per_segment_44457),
                                                       defunc_3_map_res_mem_43089,
                                                       defunc_3_map_res_mem_43310,
                                                       mem_43370,
                                                       group_res_arr_mem_44458,
                                                       mainzicounter_mem_44460)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39254_var,
                                       ((np.long(num_groups_39303) * np.long(segred_group_sizze_39302)),),
                                       (np.long(segred_group_sizze_39302),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43371 = mem_43370
      defunc_4_map_res_mem_43376 = defunc_4_map_res_mem_43371
    defunc_3_map_res_mem_43089 = None
    defunc_3_map_res_mem_43310 = None
    suff_outer_par_39318 = (self.sizes["main.suff_outer_par_20"] <= m_28886)
    segmap_group_sizze_39338 = self.sizes["main.segmap_group_size_39322"]
    max_num_groups_44494 = self.sizes["main.segmap_num_groups_39324"]
    num_groups_39339 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28886,
                                                            segmap_group_sizze_39338),
                                                  sext_i32_i64(max_num_groups_44494))))
    suff_outer_par_39415 = (self.sizes["main.suff_outer_par_21"] <= binop_x_42859)
    nest_sizze_39429 = (i32_res_28901 * binop_x_42859)
    segred_group_sizze_39430 = self.sizes["main.segred_group_size_39378"]
    max_num_groups_44495 = self.sizes["main.segred_num_groups_39380"]
    num_groups_39431 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39429,
                                                            segred_group_sizze_39430),
                                                  sext_i32_i64(max_num_groups_44495))))
    Ty_41935 = self.sizes["main.Ty_41932"]
    Ry_41936 = self.sizes["main.Ry_41934"]
    Tx_41937 = self.sizes["main.Tx_41931"]
    Rx_41938 = self.sizes["main.Rx_41933"]
    Tk_41939 = self.sizes["main.Tk_41930"]
    TxRx_41942 = (Tx_41937 * Rx_41938)
    TyRy_41943 = (Ty_41935 * Ry_41936)
    a_loc_szz_41945 = (Tk_41939 * TyRy_41943)
    binop_x_41946 = (Tx_41937 * Tk_41939)
    b_loc_szz_41947 = (Rx_41938 * binop_x_41946)
    group_sizze_41951 = (Ty_41935 * Tx_41937)
    bytes_43381 = (np.int64(4) * N_28885)
    binop_x_43412 = (Ry_41936 * group_sizze_41951)
    binop_x_43413 = (Rx_41938 * binop_x_43412)
    bytes_43410 = (np.int64(4) * binop_x_43413)
    binop_x_43404 = (Ry_41936 * Rx_41938)
    bytes_43403 = (np.int64(4) * binop_x_43404)
    bytes_43415 = (np.int64(4) * a_loc_szz_41945)
    bytes_43417 = (np.int64(4) * b_loc_szz_41947)
    bytes_43486 = (np.int64(4) * binop_x_43412)
    binop_x_43492 = (Rx_41938 * group_sizze_41951)
    bytes_43490 = (np.int64(4) * binop_x_43492)
    bytes_43478 = (np.int64(4) * Ry_41936)
    bytes_43480 = (np.int64(4) * Rx_41938)
    binop_x_43890 = (np.int64(4) * Ty_41935)
    binop_x_43891 = (Tx_41937 * binop_x_43890)
    binop_x_43892 = (Ry_41936 * binop_x_43891)
    sizze_43893 = (Rx_41938 * binop_x_43892)
    num_threads_44046 = (segmap_group_sizze_39338 * num_groups_39339)
    total_sizze_44047 = (bytes_43381 * num_threads_44046)
    local_memory_capacity_44625 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44625)) and suff_outer_par_39318):
      mem_43379 = opencl_alloc(self, bytes_43108, "mem_43379")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43379, np.int64(0),
                                                  defunc_4_map_res_mem_43376,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28901, m_28886)
      mem_43397 = opencl_alloc(self, bytes_42858, "mem_43397")
      mem_43382 = opencl_alloc(self, total_sizze_44047, "mem_43382")
      if ((1 * (np.long(num_groups_39339) * np.long(segmap_group_sizze_39338))) != 0):
        self.mainzisegmap_39320_var.set_args(self.global_failure,
                                             np.int64(N_28885),
                                             np.int64(m_28886),
                                             np.int32(k2p2zq_28899),
                                             np.int64(i32_res_28901),
                                             np.int64(num_groups_39339),
                                             mem_42857, mem_43379, mem_43382,
                                             mem_43397)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39320_var,
                                   ((np.long(num_groups_39339) * np.long(segmap_group_sizze_39338)),),
                                   (np.long(segmap_group_sizze_39338),))
        if synchronous:
          sync(self)
      mem_43379 = None
      mem_43382 = None
      mem_43598 = opencl_alloc(self, bytes_42858, "mem_43598")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43598, np.int64(0),
                                                  mem_43397, np.int64(0),
                                                  np.int64(1), m_28886, N_28885)
      mem_43397 = None
      defunc_3_map_res_mem_43600 = mem_43598
    else:
      local_memory_capacity_44624 = self.max_local_memory
      if (sle64(((bytes_43415 + srem64((np.int64(8) - srem64(bytes_43415,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43417 + srem64((np.int64(8) - srem64(bytes_43417,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44624)) and suff_outer_par_39415):
        mem_43400 = opencl_alloc(self, bytes_42843, "mem_43400")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43400, np.int64(0),
                                                    mem_42857, np.int64(0),
                                                    np.int64(1), i32_res_28901,
                                                    N_28885)
        tk_div_tx_41940 = sdiv_up64(Tk_41939, Tx_41937)
        tk_div_ty_41941 = sdiv_up64(Tk_41939, Ty_41935)
        gridDim_x_41948 = sdiv_up64(N_28885, TxRx_41942)
        gridDim_y_41949 = sdiv_up64(m_28886, TyRy_41943)
        grid_sizze_41950 = (gridDim_x_41948 * gridDim_y_41949)
        full_tiles_41979 = squot64(i32_res_28901, Tk_41939)
        kk_42182 = (Tk_41939 * full_tiles_41979)
        mem_43590 = opencl_alloc(self, bytes_42858, "mem_43590")
        if ((1 * (np.long(grid_sizze_41950) * np.long(group_sizze_41951))) != 0):
          self.mainzisegmap_intragroup_41954_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long(bytes_43417)),
                                                          cl.LocalMemory(np.long(bytes_43415)),
                                                          np.int64(N_28885),
                                                          np.int64(m_28886),
                                                          np.int64(i32_res_28901),
                                                          np.int64(gridDim_x_41948),
                                                          np.int64(full_tiles_41979),
                                                          np.int64(kk_42182),
                                                          defunc_4_map_res_mem_43376,
                                                          mem_43400, mem_43590)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_41954_var,
                                     ((np.long(grid_sizze_41950) * np.long(group_sizze_41951)),),
                                     (np.long(group_sizze_41951),))
          if synchronous:
            sync(self)
        mem_43400 = None
        defunc_3_map_res_mem_43595 = mem_43590
      else:
        mem_43594 = opencl_alloc(self, bytes_42858, "mem_43594")
        if slt64((i32_res_28901 * np.int64(2)), segred_group_sizze_39430):
          segment_sizze_nonzzero_44564 = smax64(np.int64(1), i32_res_28901)
          num_threads_44565 = (num_groups_39431 * segred_group_sizze_39430)
          if ((1 * (np.long(num_groups_39431) * np.long(segred_group_sizze_39430))) != 0):
            self.mainzisegred_small_39384_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39430))),
                                                       np.int64(N_28885),
                                                       np.int64(m_28886),
                                                       np.int64(i32_res_28901),
                                                       np.int64(num_groups_39431),
                                                       np.int64(segment_sizze_nonzzero_44564),
                                                       mem_42857,
                                                       defunc_4_map_res_mem_43376,
                                                       mem_43594)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39384_var,
                                       ((np.long(num_groups_39431) * np.long(segred_group_sizze_39430)),),
                                       (np.long(segred_group_sizze_39430),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44585 = sdiv_up64(num_groups_39431,
                                               smax64(np.int64(1),
                                                      (m_28886 * N_28885)))
          elements_per_thread_44586 = sdiv_up64(i32_res_28901,
                                                (segred_group_sizze_39430 * groups_per_segment_44585))
          virt_num_groups_44587 = (groups_per_segment_44585 * (m_28886 * N_28885))
          num_threads_44588 = (num_groups_39431 * segred_group_sizze_39430)
          threads_per_segment_44589 = (groups_per_segment_44585 * segred_group_sizze_39430)
          group_res_arr_mem_44590 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39430 * virt_num_groups_44587)),
                                                 "group_res_arr_mem_44590")
          mainzicounter_mem_44592 = self.mainzicounter_mem_44592
          if ((1 * (np.long(num_groups_39431) * np.long(segred_group_sizze_39430))) != 0):
            self.mainzisegred_large_39384_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39430))),
                                                       np.int64(N_28885),
                                                       np.int64(i32_res_28901),
                                                       np.int64(num_groups_39431),
                                                       np.int64(groups_per_segment_44585),
                                                       np.int64(elements_per_thread_44586),
                                                       np.int64(virt_num_groups_44587),
                                                       np.int64(threads_per_segment_44589),
                                                       mem_42857,
                                                       defunc_4_map_res_mem_43376,
                                                       mem_43594,
                                                       group_res_arr_mem_44590,
                                                       mainzicounter_mem_44592)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39384_var,
                                       ((np.long(num_groups_39431) * np.long(segred_group_sizze_39430)),),
                                       (np.long(segred_group_sizze_39430),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43595 = mem_43594
      defunc_3_map_res_mem_43600 = defunc_3_map_res_mem_43595
    mem_42857 = None
    defunc_4_map_res_mem_43376 = None
    i_29161 = (N_28885 - np.int64(1))
    x_29162 = sle64(np.int64(0), i_29161)
    y_29163 = slt64(i_29161, N_28885)
    bounds_check_29164 = (x_29162 and y_29163)
    index_certs_29165 = True
    assert bounds_check_29164, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:78:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:72:5-81:25\n   #6  bfastfinal.fut:193:5-58\n   #7  bfastfinal.fut:188:1-194:20\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_29161,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28885,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_39560 = sle64(N_28885, max_group_sizze_38423)
    suff_intra_par_39558 = (self.sizes["main.suff_intra_par_24"] <= N_28885)
    intra_suff_and_fits_39561 = (suff_intra_par_39558 and fits_39560)
    segscan_group_sizze_39710 = self.sizes["main.segscan_group_size_39687"]
    max_num_groups_44626 = self.sizes["main.segscan_num_groups_39689"]
    num_groups_39711 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42859,
                                                            segscan_group_sizze_39710),
                                                  sext_i32_i64(max_num_groups_44626))))
    segmap_group_sizze_39730 = self.sizes["main.segmap_group_size_39678"]
    segmap_group_sizze_39766 = self.sizes["main.segmap_group_size_39603"]
    bytes_43612 = (np.int64(4) * m_28886)
    bytes_43603 = (np.int64(8) * N_28885)
    bytes_43621 = (np.int64(8) * binop_x_42859)
    local_memory_capacity_44728 = self.max_local_memory
    if (sle64(((((bytes_43603 + srem64((np.int64(8) - srem64(bytes_43603,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44728)) and intra_suff_and_fits_39561):
      mem_43613 = opencl_alloc(self, bytes_43612, "mem_43613")
      mem_43616 = opencl_alloc(self, bytes_42858, "mem_43616")
      mem_43619 = opencl_alloc(self, bytes_42858, "mem_43619")
      if ((1 * (np.long(m_28886) * np.long(N_28885))) != 0):
        self.mainzisegmap_intragroup_39483_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43381)),
                                                        cl.LocalMemory(np.long(bytes_43381)),
                                                        cl.LocalMemory(np.long(bytes_43381)),
                                                        cl.LocalMemory(np.long(bytes_43603)),
                                                        np.int64(N_28885),
                                                        np.int64(i_29161),
                                                        images_mem_42841,
                                                        defunc_3_map_res_mem_43600,
                                                        mem_43613, mem_43616,
                                                        mem_43619)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_39483_var,
                                   ((np.long(m_28886) * np.long(N_28885)),),
                                   (np.long(N_28885),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43637 = mem_43613
      defunc_4_map_res_mem_43638 = mem_43616
      defunc_4_map_res_mem_43639 = mem_43619
    else:
      mem_43623 = opencl_alloc(self, bytes_43621, "mem_43623")
      mem_43626 = opencl_alloc(self, bytes_42858, "mem_43626")
      if slt64(np.int64(0), (m_28886 * N_28885)):
        stage1_max_num_groups_44644 = self.max_group_size
        stage1_num_groups_44645 = smin64(stage1_max_num_groups_44644,
                                         num_groups_39711)
        num_threads_44646 = sext_i64_i32((stage1_num_groups_44645 * segscan_group_sizze_39710))
        if ((1 * (np.long(stage1_num_groups_44645) * np.long(segscan_group_sizze_39710))) != 0):
          self.mainziscan_stage1_39693_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * segscan_group_sizze_39710)))),
                                                    np.int64(N_28885),
                                                    np.int64(m_28886),
                                                    np.int32(num_threads_44646),
                                                    images_mem_42841,
                                                    defunc_3_map_res_mem_43600,
                                                    mem_43623, mem_43626)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_39693_var,
                                     ((np.long(stage1_num_groups_44645) * np.long(segscan_group_sizze_39710)),),
                                     (np.long(segscan_group_sizze_39710),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44645))) != 0):
          self.mainziscan_stage2_39693_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(8) * stage1_num_groups_44645)))),
                                                    np.int64(N_28885),
                                                    np.int64(m_28886),
                                                    np.int64(stage1_num_groups_44645),
                                                    np.int32(num_threads_44646),
                                                    mem_43623)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_39693_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44645)),),
                                     (np.long(stage1_num_groups_44645),))
          if synchronous:
            sync(self)
        required_groups_44688 = sext_i64_i32(sdiv_up64((m_28886 * N_28885),
                                                       segscan_group_sizze_39710))
        if ((1 * (np.long(num_groups_39711) * np.long(segscan_group_sizze_39710))) != 0):
          self.mainziscan_stage3_39693_var.set_args(self.global_failure,
                                                    np.int64(N_28885),
                                                    np.int64(m_28886),
                                                    np.int64(num_groups_39711),
                                                    np.int32(num_threads_44646),
                                                    np.int32(required_groups_44688),
                                                    mem_43623)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_39693_var,
                                     ((np.long(num_groups_39711) * np.long(segscan_group_sizze_39710)),),
                                     (np.long(segscan_group_sizze_39710),))
          if synchronous:
            sync(self)
      segmap_usable_groups_39731 = sdiv_up64(m_28886, segmap_group_sizze_39730)
      mem_43629 = opencl_alloc(self, bytes_43612, "mem_43629")
      if ((1 * (np.long(segmap_usable_groups_39731) * np.long(segmap_group_sizze_39730))) != 0):
        self.mainzisegmap_39676_var.set_args(self.global_failure,
                                             np.int64(N_28885),
                                             np.int64(m_28886),
                                             np.int64(i_29161), mem_43623,
                                             mem_43629)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39676_var,
                                   ((np.long(segmap_usable_groups_39731) * np.long(segmap_group_sizze_39730)),),
                                   (np.long(segmap_group_sizze_39730),))
        if synchronous:
          sync(self)
      mem_43632 = opencl_alloc(self, bytes_42858, "mem_43632")
      self.futhark_builtinzhreplicate_f32(mem_43632, (m_28886 * N_28885),
                                          np.nan)
      mem_43635 = opencl_alloc(self, bytes_42858, "mem_43635")
      self.futhark_builtinzhreplicate_i32(mem_43635, (m_28886 * N_28885),
                                          np.int32(0))
      segmap_usable_groups_39767 = sdiv_up64(binop_x_42859,
                                             segmap_group_sizze_39766)
      if ((1 * (np.long(segmap_usable_groups_39767) * np.long(segmap_group_sizze_39766))) != 0):
        self.mainzisegmap_39600_var.set_args(self.global_failure,
                                             np.int64(N_28885),
                                             np.int64(m_28886), mem_43623,
                                             mem_43626, mem_43632, mem_43635)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39600_var,
                                   ((np.long(segmap_usable_groups_39767) * np.long(segmap_group_sizze_39766)),),
                                   (np.long(segmap_group_sizze_39766),))
        if synchronous:
          sync(self)
      mem_43623 = None
      mem_43626 = None
      defunc_4_map_res_mem_43637 = mem_43629
      defunc_4_map_res_mem_43638 = mem_43632
      defunc_4_map_res_mem_43639 = mem_43635
    defunc_3_map_res_mem_43600 = None
    suff_outer_par_39815 = (self.sizes["main.suff_outer_par_28"] <= m_28886)
    fits_39893 = sle64(i32_res_28895, max_group_sizze_38423)
    suff_intra_par_39891 = (self.sizes["main.suff_intra_par_29"] <= i32_res_28895)
    intra_suff_and_fits_39894 = (suff_intra_par_39891 and fits_39893)
    segmap_group_sizze_39858 = self.sizes["main.segmap_group_size_39827"]
    nest_sizze_39981 = (m_28886 * i32_res_28895)
    segred_group_sizze_39982 = self.sizes["main.segred_group_size_39965"]
    max_num_groups_44729 = self.sizes["main.segred_num_groups_39967"]
    num_groups_39983 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39981,
                                                            segred_group_sizze_39982),
                                                  sext_i32_i64(max_num_groups_44729))))
    segred_group_sizze_39996 = self.sizes["main.segred_group_size_39944"]
    max_num_groups_44730 = self.sizes["main.segred_num_groups_39946"]
    num_groups_39997 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_39981,
                                                            segred_group_sizze_39996),
                                                  sext_i32_i64(max_num_groups_44730))))
    segmap_group_sizze_40012 = self.sizes["main.segmap_group_size_39929"]
    bytes_43648 = (np.int64(4) * segmap_group_sizze_39858)
    local_memory_capacity_44882 = self.max_local_memory
    if (sle64(((bytes_43648 + srem64((np.int64(8) - srem64(bytes_43648,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43648 + srem64((np.int64(8) - srem64(bytes_43648,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44882)) and suff_outer_par_39815):
      segmap_usable_groups_39859 = sdiv_up64(m_28886, segmap_group_sizze_39858)
      mem_43642 = opencl_alloc(self, bytes_42858, "mem_43642")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43642, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_28885, m_28886)
      mem_43645 = opencl_alloc(self, bytes_42858, "mem_43645")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43645, np.int64(0),
                                                  defunc_4_map_res_mem_43638,
                                                  np.int64(0), np.int64(1),
                                                  N_28885, m_28886)
      num_whole_tiles_42410 = squot64(i32_res_28895, segmap_group_sizze_39858)
      residual_input_42499 = srem64(i32_res_28895, segmap_group_sizze_39858)
      cond_42500 = (residual_input_42499 == np.int64(0))
      mem_43676 = opencl_alloc(self, bytes_43612, "mem_43676")
      mem_43678 = opencl_alloc(self, bytes_43612, "mem_43678")
      mem_43680 = opencl_alloc(self, bytes_43612, "mem_43680")
      if ((1 * (np.long(segmap_usable_groups_39859) * np.long(segmap_group_sizze_39858))) != 0):
        self.mainzisegmap_intragroup_42388_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43648)),
                                                        cl.LocalMemory(np.long(bytes_43648)),
                                                        np.int64(m_28886),
                                                        np.int32(n_28889),
                                                        np.float32(hfrac_28891),
                                                        np.int64(i32_res_28895),
                                                        np.int32(k2p2_28897),
                                                        np.int64(num_whole_tiles_42410),
                                                        np.int64(residual_input_42499),
                                                        np.byte(cond_42500),
                                                        mem_43642, mem_43645,
                                                        mem_43676, mem_43678,
                                                        mem_43680)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42388_var,
                                   ((np.long(segmap_usable_groups_39859) * np.long(segmap_group_sizze_39858)),),
                                   (np.long(segmap_group_sizze_39858),))
        if synchronous:
          sync(self)
      mem_43642 = None
      mem_43645 = None
      defunc_3_map_res_mem_43704 = mem_43676
      defunc_3_map_res_mem_43705 = mem_43678
      defunc_3_map_res_mem_43706 = mem_43680
    else:
      local_memory_capacity_44881 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_28895) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28895),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_28895) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28895),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44881)) and intra_suff_and_fits_39894):
        mem_43685 = opencl_alloc(self, bytes_43612, "mem_43685")
        mem_43687 = opencl_alloc(self, bytes_43612, "mem_43687")
        mem_43689 = opencl_alloc(self, bytes_43612, "mem_43689")
        if ((1 * (np.long(m_28886) * np.long(i32_res_28895))) != 0):
          self.mainzisegmap_intragroup_39823_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_28895))),
                                                          cl.LocalMemory(np.long((np.int32(4) * i32_res_28895))),
                                                          np.int64(N_28885),
                                                          np.float32(hfrac_28891),
                                                          np.int64(i32_res_28895),
                                                          np.int32(k2p2_28897),
                                                          images_mem_42841,
                                                          defunc_4_map_res_mem_43638,
                                                          mem_43685, mem_43687,
                                                          mem_43689)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegmap_intragroup_39823_var,
                                     ((np.long(m_28886) * np.long(i32_res_28895)),),
                                     (np.long(i32_res_28895),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43701 = mem_43685
        defunc_3_map_res_mem_43702 = mem_43687
        defunc_3_map_res_mem_43703 = mem_43689
      else:
        mem_43692 = opencl_alloc(self, bytes_43612, "mem_43692")
        if slt64((i32_res_28895 * np.int64(2)), segred_group_sizze_39982):
          segment_sizze_nonzzero_44756 = smax64(np.int64(1), i32_res_28895)
          num_threads_44757 = (num_groups_39983 * segred_group_sizze_39982)
          if ((1 * (np.long(num_groups_39983) * np.long(segred_group_sizze_39982))) != 0):
            self.mainzisegred_small_39971_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39982))),
                                                       np.int64(N_28885),
                                                       np.int64(m_28886),
                                                       np.int64(i32_res_28895),
                                                       np.int64(num_groups_39983),
                                                       np.int64(segment_sizze_nonzzero_44756),
                                                       images_mem_42841,
                                                       mem_43692)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39971_var,
                                       ((np.long(num_groups_39983) * np.long(segred_group_sizze_39982)),),
                                       (np.long(segred_group_sizze_39982),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44777 = sdiv_up64(num_groups_39983,
                                               smax64(np.int64(1), m_28886))
          elements_per_thread_44778 = sdiv_up64(i32_res_28895,
                                                (segred_group_sizze_39982 * groups_per_segment_44777))
          virt_num_groups_44779 = (groups_per_segment_44777 * m_28886)
          num_threads_44780 = (num_groups_39983 * segred_group_sizze_39982)
          threads_per_segment_44781 = (groups_per_segment_44777 * segred_group_sizze_39982)
          group_res_arr_mem_44782 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39982 * virt_num_groups_44779)),
                                                 "group_res_arr_mem_44782")
          mainzicounter_mem_44784 = self.mainzicounter_mem_44784
          if ((1 * (np.long(num_groups_39983) * np.long(segred_group_sizze_39982))) != 0):
            self.mainzisegred_large_39971_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39982))),
                                                       np.int64(N_28885),
                                                       np.int64(i32_res_28895),
                                                       np.int64(num_groups_39983),
                                                       np.int64(groups_per_segment_44777),
                                                       np.int64(elements_per_thread_44778),
                                                       np.int64(virt_num_groups_44779),
                                                       np.int64(threads_per_segment_44781),
                                                       images_mem_42841,
                                                       mem_43692,
                                                       group_res_arr_mem_44782,
                                                       mainzicounter_mem_44784)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39971_var,
                                       ((np.long(num_groups_39983) * np.long(segred_group_sizze_39982)),),
                                       (np.long(segred_group_sizze_39982),))
            if synchronous:
              sync(self)
        mem_43695 = opencl_alloc(self, bytes_43612, "mem_43695")
        if slt64((i32_res_28895 * np.int64(2)), segred_group_sizze_39996):
          segment_sizze_nonzzero_44816 = smax64(np.int64(1), i32_res_28895)
          num_threads_44817 = (num_groups_39997 * segred_group_sizze_39996)
          if ((1 * (np.long(num_groups_39997) * np.long(segred_group_sizze_39996))) != 0):
            self.mainzisegred_small_39950_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39996))),
                                                       np.int64(N_28885),
                                                       np.int64(m_28886),
                                                       np.int64(i32_res_28895),
                                                       np.int64(num_groups_39997),
                                                       np.int64(segment_sizze_nonzzero_44816),
                                                       defunc_4_map_res_mem_43638,
                                                       mem_43692, mem_43695)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_small_39950_var,
                                       ((np.long(num_groups_39997) * np.long(segred_group_sizze_39996)),),
                                       (np.long(segred_group_sizze_39996),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44837 = sdiv_up64(num_groups_39997,
                                               smax64(np.int64(1), m_28886))
          elements_per_thread_44838 = sdiv_up64(i32_res_28895,
                                                (segred_group_sizze_39996 * groups_per_segment_44837))
          virt_num_groups_44839 = (groups_per_segment_44837 * m_28886)
          num_threads_44840 = (num_groups_39997 * segred_group_sizze_39996)
          threads_per_segment_44841 = (groups_per_segment_44837 * segred_group_sizze_39996)
          group_res_arr_mem_44842 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_39996 * virt_num_groups_44839)),
                                                 "group_res_arr_mem_44842")
          mainzicounter_mem_44844 = self.mainzicounter_mem_44844
          if ((1 * (np.long(num_groups_39997) * np.long(segred_group_sizze_39996))) != 0):
            self.mainzisegred_large_39950_var.set_args(self.global_failure,
                                                       cl.LocalMemory(np.long(np.int32(1))),
                                                       cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_39996))),
                                                       np.int64(N_28885),
                                                       np.int64(i32_res_28895),
                                                       np.int64(num_groups_39997),
                                                       np.int64(groups_per_segment_44837),
                                                       np.int64(elements_per_thread_44838),
                                                       np.int64(virt_num_groups_44839),
                                                       np.int64(threads_per_segment_44841),
                                                       defunc_4_map_res_mem_43638,
                                                       mem_43692, mem_43695,
                                                       group_res_arr_mem_44842,
                                                       mainzicounter_mem_44844)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainzisegred_large_39950_var,
                                       ((np.long(num_groups_39997) * np.long(segred_group_sizze_39996)),),
                                       (np.long(segred_group_sizze_39996),))
            if synchronous:
              sync(self)
        segmap_usable_groups_40013 = sdiv_up64(m_28886,
                                               segmap_group_sizze_40012)
        mem_43698 = opencl_alloc(self, bytes_43612, "mem_43698")
        mem_43700 = opencl_alloc(self, bytes_43612, "mem_43700")
        if ((1 * (np.long(segmap_usable_groups_40013) * np.long(segmap_group_sizze_40012))) != 0):
          self.mainzisegmap_39927_var.set_args(self.global_failure,
                                               np.int64(m_28886),
                                               np.float32(hfrac_28891),
                                               np.int32(k2p2_28897), mem_43692,
                                               mem_43695, mem_43698, mem_43700)
          cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_39927_var,
                                     ((np.long(segmap_usable_groups_40013) * np.long(segmap_group_sizze_40012)),),
                                     (np.long(segmap_group_sizze_40012),))
          if synchronous:
            sync(self)
        mem_43695 = None
        defunc_3_map_res_mem_43701 = mem_43698
        defunc_3_map_res_mem_43702 = mem_43692
        defunc_3_map_res_mem_43703 = mem_43700
      defunc_3_map_res_mem_43704 = defunc_3_map_res_mem_43701
      defunc_3_map_res_mem_43705 = defunc_3_map_res_mem_43702
      defunc_3_map_res_mem_43706 = defunc_3_map_res_mem_43703
    segred_group_sizze_40033 = self.sizes["main.segred_group_size_40032"]
    max_num_groups_44883 = self.sizes["main.segred_num_groups_40034"]
    num_groups_40035 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28886,
                                                            segred_group_sizze_40033),
                                                  sext_i32_i64(max_num_groups_44883))))
    mem_43709 = opencl_alloc(self, np.int64(4), "mem_43709")
    mainzicounter_mem_44884 = self.mainzicounter_mem_44884
    group_res_arr_mem_44886 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_40033 * num_groups_40035)),
                                           "group_res_arr_mem_44886")
    num_threads_44888 = (num_groups_40035 * segred_group_sizze_40033)
    if ((1 * (np.long(num_groups_40035) * np.long(segred_group_sizze_40033))) != 0):
      self.mainzisegred_nonseg_40040_var.set_args(self.global_failure,
                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40033))),
                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                  np.int64(m_28886),
                                                  np.int64(num_groups_40035),
                                                  np.int64(num_threads_44888),
                                                  defunc_3_map_res_mem_43704,
                                                  mem_43709,
                                                  mainzicounter_mem_44884,
                                                  group_res_arr_mem_44886)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegred_nonseg_40040_var,
                                 ((np.long(num_groups_40035) * np.long(segred_group_sizze_40033)),),
                                 (np.long(segred_group_sizze_40033),))
      if synchronous:
        sync(self)
    read_res_45239 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45239, mem_43709,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_29251 = read_res_45239[0]
    mem_43709 = None
    i32_res_29256 = sext_i32_i64(defunc_2_reduce_comm_res_29251)
    bounds_invalid_upwards_29257 = slt64(i32_res_29256, np.int64(0))
    valid_29258 = not(bounds_invalid_upwards_29257)
    range_valid_c_29259 = True
    assert valid_29258, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:106:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:101:17-108:24\n   #5  bfastfinal.fut:193:5-58\n   #6  bfastfinal.fut:188:1-194:20\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_29256,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_40072 = (self.sizes["main.suff_outer_par_31"] <= m_28886)
    segmap_group_sizze_40095 = self.sizes["main.segmap_group_size_40076"]
    nest_sizze_40138 = (m_28886 * i32_res_29256)
    segred_group_sizze_40139 = self.sizes["main.segred_group_size_40116"]
    max_num_groups_44914 = self.sizes["main.segred_num_groups_40118"]
    num_groups_40140 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40138,
                                                            segred_group_sizze_40139),
                                                  sext_i32_i64(max_num_groups_44914))))
    bytes_43712 = (np.int64(4) * segmap_group_sizze_40095)
    local_memory_capacity_44985 = self.max_local_memory
    if (sle64(((bytes_43712 + srem64((np.int64(8) - srem64(bytes_43712,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43712 + srem64((np.int64(8) - srem64(bytes_43712,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44985)) and suff_outer_par_40072):
      segmap_usable_groups_40096 = sdiv_up64(m_28886, segmap_group_sizze_40095)
      num_whole_tiles_42598 = squot64(i32_res_29256, segmap_group_sizze_40095)
      residual_input_42697 = srem64(i32_res_29256, segmap_group_sizze_40095)
      cond_42698 = (residual_input_42697 == np.int64(0))
      mem_43735 = opencl_alloc(self, bytes_43612, "mem_43735")
      if ((1 * (np.long(segmap_usable_groups_40096) * np.long(segmap_group_sizze_40095))) != 0):
        self.mainzisegmap_intragroup_42578_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long(bytes_43712)),
                                                        cl.LocalMemory(np.long(bytes_43712)),
                                                        np.int64(N_28885),
                                                        np.int64(m_28886),
                                                        np.int64(i32_res_29256),
                                                        np.int64(num_whole_tiles_42598),
                                                        np.int64(residual_input_42697),
                                                        np.byte(cond_42698),
                                                        defunc_4_map_res_mem_43638,
                                                        defunc_3_map_res_mem_43704,
                                                        defunc_3_map_res_mem_43705,
                                                        mem_43735)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_42578_var,
                                   ((np.long(segmap_usable_groups_40096) * np.long(segmap_group_sizze_40095)),),
                                   (np.long(segmap_group_sizze_40095),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43739 = mem_43735
    else:
      mem_43738 = opencl_alloc(self, bytes_43612, "mem_43738")
      if slt64((i32_res_29256 * np.int64(2)), segred_group_sizze_40139):
        segment_sizze_nonzzero_44925 = smax64(np.int64(1), i32_res_29256)
        num_threads_44926 = (num_groups_40140 * segred_group_sizze_40139)
        if ((1 * (np.long(num_groups_40140) * np.long(segred_group_sizze_40139))) != 0):
          self.mainzisegred_small_40122_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40139))),
                                                     np.int64(N_28885),
                                                     np.int64(m_28886),
                                                     np.int64(i32_res_29256),
                                                     np.int64(num_groups_40140),
                                                     np.int64(segment_sizze_nonzzero_44925),
                                                     defunc_4_map_res_mem_43638,
                                                     defunc_3_map_res_mem_43704,
                                                     defunc_3_map_res_mem_43705,
                                                     mem_43738)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_40122_var,
                                     ((np.long(num_groups_40140) * np.long(segred_group_sizze_40139)),),
                                     (np.long(segred_group_sizze_40139),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44946 = sdiv_up64(num_groups_40140,
                                             smax64(np.int64(1), m_28886))
        elements_per_thread_44947 = sdiv_up64(i32_res_29256,
                                              (segred_group_sizze_40139 * groups_per_segment_44946))
        virt_num_groups_44948 = (groups_per_segment_44946 * m_28886)
        num_threads_44949 = (num_groups_40140 * segred_group_sizze_40139)
        threads_per_segment_44950 = (groups_per_segment_44946 * segred_group_sizze_40139)
        group_res_arr_mem_44951 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40139 * virt_num_groups_44948)),
                                               "group_res_arr_mem_44951")
        mainzicounter_mem_44953 = self.mainzicounter_mem_44953
        if ((1 * (np.long(num_groups_40140) * np.long(segred_group_sizze_40139))) != 0):
          self.mainzisegred_large_40122_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40139))),
                                                     np.int64(N_28885),
                                                     np.int64(i32_res_29256),
                                                     np.int64(num_groups_40140),
                                                     np.int64(groups_per_segment_44946),
                                                     np.int64(elements_per_thread_44947),
                                                     np.int64(virt_num_groups_44948),
                                                     np.int64(threads_per_segment_44950),
                                                     defunc_4_map_res_mem_43638,
                                                     defunc_3_map_res_mem_43704,
                                                     defunc_3_map_res_mem_43705,
                                                     mem_43738,
                                                     group_res_arr_mem_44951,
                                                     mainzicounter_mem_44953)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_40122_var,
                                     ((np.long(num_groups_40140) * np.long(segred_group_sizze_40139)),),
                                     (np.long(segred_group_sizze_40139),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43739 = mem_43738
    iota32_arg_29281 = (N_28885 - i32_res_28895)
    bounds_invalid_upwards_29282 = slt64(iota32_arg_29281, np.int64(0))
    valid_29283 = not(bounds_invalid_upwards_29282)
    range_valid_c_29284 = True
    assert valid_29283, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:114:22-35\n   #3  bfastfinal.fut:193:5-58\n   #4  bfastfinal.fut:188:1-194:20\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_29281,
                                                                                                                                                                                                                                      " is invalid."))
    x_29286 = (np.int32(1) + n_28889)
    i_29287 = (n_28889 - np.int32(1))
    i_29288 = sext_i32_i64(i_29287)
    x_29289 = sle64(np.int64(0), i_29288)
    y_29290 = slt64(i_29288, N_28885)
    bounds_check_29291 = (x_29289 and y_29290)
    index_certs_29292 = True
    assert bounds_check_29291, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:112:64-84\n   #1  bfastfinal.fut:110:15-114:36\n   #2  bfastfinal.fut:193:5-58\n   #3  bfastfinal.fut:188:1-194:20\n" % ("Index [",
                                                                                                                                                                                                                 i_29288,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28885,
                                                                                                                                                                                                                 "]."))
    read_res_45241 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45241, mappingindices_mem_42840,
                    device_offset=(np.long(i_29288) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_29293 = read_res_45241[0]
    i32_res_29294 = sitofp_i32_f32(r32_arg_29293)
    range_valid_c_29295 = True
    assert valid_29283, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:124:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:193:5-58\n   #6  bfastfinal.fut:188:1-194:20\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_29281,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_40217 = self.sizes["main.segmap_group_size_40200"]
    segmap_usable_groups_40218 = sdiv_up64(iota32_arg_29281,
                                           segmap_group_sizze_40217)
    bytes_43741 = (np.int64(4) * iota32_arg_29281)
    mem_43742 = opencl_alloc(self, bytes_43741, "mem_43742")
    mem_43744 = opencl_alloc(self, bytes_43741, "mem_43744")
    if ((1 * (np.long(segmap_usable_groups_40218) * np.long(segmap_group_sizze_40217))) != 0):
      self.mainzisegmap_40198_var.set_args(self.global_failure,
                                           np.float32(lam_28892),
                                           np.int64(iota32_arg_29281),
                                           np.int32(x_29286),
                                           np.float32(i32_res_29294),
                                           mappingindices_mem_42840, mem_43742,
                                           mem_43744)
      cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40198_var,
                                 ((np.long(segmap_usable_groups_40218) * np.long(segmap_group_sizze_40217)),),
                                 (np.long(segmap_group_sizze_40217),))
      if synchronous:
        sync(self)
    mem_43742 = None
    fits_40458 = sle64(iota32_arg_29281, max_group_sizze_38423)
    suff_intra_par_40456 = (self.sizes["main.suff_intra_par_34"] <= iota32_arg_29281)
    intra_suff_and_fits_40459 = (suff_intra_par_40456 and fits_40458)
    segmap_group_sizze_40732 = self.sizes["main.segmap_group_size_40712"]
    max_num_groups_44991 = self.sizes["main.segmap_num_groups_40714"]
    num_groups_40733 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28886,
                                                            segmap_group_sizze_40732),
                                                  sext_i32_i64(max_num_groups_44991))))
    nest_sizze_40754 = (m_28886 * iota32_arg_29281)
    segscan_group_sizze_40755 = self.sizes["main.segscan_group_size_40671"]
    max_num_groups_44992 = self.sizes["main.segscan_num_groups_40673"]
    num_groups_40756 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40754,
                                                            segscan_group_sizze_40755),
                                                  sext_i32_i64(max_num_groups_44992))))
    segred_group_sizze_40793 = self.sizes["main.segred_group_size_40617"]
    max_num_groups_44993 = self.sizes["main.segred_num_groups_40619"]
    num_groups_40794 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_40754,
                                                            segred_group_sizze_40793),
                                                  sext_i32_i64(max_num_groups_44993))))
    segmap_group_sizze_40832 = self.sizes["main.segmap_group_size_40570"]
    bytes_43760 = (np.int64(4) * nest_sizze_40754)
    local_memory_capacity_45186 = self.max_local_memory
    if (sle64(((((bytes_43741 + srem64((np.int64(8) - srem64(bytes_43741,
                                                             np.int64(8))),
                                       np.int64(8))) + ((np.int32(1) * iota32_arg_29281) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_29281),
                                                                                                                        np.int64(8))),
                                                                                                  np.int64(8)))) + ((np.int32(4) * iota32_arg_29281) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_29281),
                                                                                                                                                                                    np.int64(8))),
                                                                                                                                                              np.int64(8)))) + ((np.int32(4) * iota32_arg_29281) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_29281),
                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_45186)) and intra_suff_and_fits_40459):
      mem_43751 = opencl_alloc(self, bytes_43612, "mem_43751")
      mem_43753 = opencl_alloc(self, bytes_43612, "mem_43753")
      if ((1 * (np.long(m_28886) * np.long(iota32_arg_29281))) != 0):
        self.mainzisegmap_intragroup_40243_var.set_args(self.global_failure,
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29281))),
                                                        cl.LocalMemory(np.long((np.int32(4) * iota32_arg_29281))),
                                                        cl.LocalMemory(np.long((np.int32(1) * iota32_arg_29281))),
                                                        cl.LocalMemory(np.long(bytes_43741)),
                                                        np.int64(N_28885),
                                                        np.int32(n_28889),
                                                        np.int64(iota32_arg_29281),
                                                        defunc_4_map_res_mem_43637,
                                                        defunc_4_map_res_mem_43638,
                                                        defunc_4_map_res_mem_43639,
                                                        defunc_3_map_res_mem_43704,
                                                        defunc_3_map_res_mem_43705,
                                                        defunc_3_map_res_mem_43706,
                                                        defunc_0_f_res_mem_43739,
                                                        mem_43744, mem_43751,
                                                        mem_43753)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainzisegmap_intragroup_40243_var,
                                   ((np.long(m_28886) * np.long(iota32_arg_29281)),),
                                   (np.long(iota32_arg_29281),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43775 = mem_43751
      defunc_0_f_res_mem_43776 = mem_43753
    else:
      mem_43756 = opencl_alloc(self, bytes_43612, "mem_43756")
      mem_43758 = opencl_alloc(self, bytes_43612, "mem_43758")
      if ((1 * (np.long(num_groups_40733) * np.long(segmap_group_sizze_40732))) != 0):
        self.mainzisegmap_40710_var.set_args(self.global_failure,
                                             np.int64(m_28886),
                                             np.int64(num_groups_40733),
                                             defunc_4_map_res_mem_43637,
                                             defunc_3_map_res_mem_43705,
                                             defunc_3_map_res_mem_43706,
                                             mem_43756, mem_43758)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40710_var,
                                   ((np.long(num_groups_40733) * np.long(segmap_group_sizze_40732)),),
                                   (np.long(segmap_group_sizze_40732),))
        if synchronous:
          sync(self)
      mem_43762 = opencl_alloc(self, bytes_43760, "mem_43762")
      if slt64(np.int64(0), (m_28886 * iota32_arg_29281)):
        stage1_max_num_groups_45027 = self.max_group_size
        stage1_num_groups_45028 = smin64(stage1_max_num_groups_45027,
                                         num_groups_40756)
        num_threads_45029 = sext_i64_i32((stage1_num_groups_45028 * segscan_group_sizze_40755))
        if ((1 * (np.long(stage1_num_groups_45028) * np.long(segscan_group_sizze_40755))) != 0):
          self.mainziscan_stage1_40677_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * segscan_group_sizze_40755)))),
                                                    np.int64(N_28885),
                                                    np.int64(m_28886),
                                                    np.int64(iota32_arg_29281),
                                                    np.int32(num_threads_45029),
                                                    defunc_4_map_res_mem_43638,
                                                    defunc_3_map_res_mem_43704,
                                                    defunc_3_map_res_mem_43705,
                                                    defunc_0_f_res_mem_43739,
                                                    mem_43758, mem_43762)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage1_40677_var,
                                     ((np.long(stage1_num_groups_45028) * np.long(segscan_group_sizze_40755)),),
                                     (np.long(segscan_group_sizze_40755),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45028))) != 0):
          self.mainziscan_stage2_40677_var.set_args(self.global_failure,
                                                    cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                  (np.int32(4) * stage1_num_groups_45028)))),
                                                    np.int64(m_28886),
                                                    np.int64(iota32_arg_29281),
                                                    np.int64(stage1_num_groups_45028),
                                                    np.int32(num_threads_45029),
                                                    mem_43762)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage2_40677_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45028)),),
                                     (np.long(stage1_num_groups_45028),))
          if synchronous:
            sync(self)
        required_groups_45071 = sext_i64_i32(sdiv_up64((m_28886 * iota32_arg_29281),
                                                       segscan_group_sizze_40755))
        if ((1 * (np.long(num_groups_40756) * np.long(segscan_group_sizze_40755))) != 0):
          self.mainziscan_stage3_40677_var.set_args(self.global_failure,
                                                    np.int64(m_28886),
                                                    np.int64(iota32_arg_29281),
                                                    np.int64(num_groups_40756),
                                                    np.int32(num_threads_45029),
                                                    np.int32(required_groups_45071),
                                                    mem_43762)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainziscan_stage3_40677_var,
                                     ((np.long(num_groups_40756) * np.long(segscan_group_sizze_40755)),),
                                     (np.long(segscan_group_sizze_40755),))
          if synchronous:
            sync(self)
      mem_43765 = opencl_alloc(self, m_28886, "mem_43765")
      mem_43767 = opencl_alloc(self, bytes_43612, "mem_43767")
      mem_43769 = opencl_alloc(self, bytes_43612, "mem_43769")
      if slt64((iota32_arg_29281 * np.int64(2)), segred_group_sizze_40793):
        segment_sizze_nonzzero_45083 = smax64(np.int64(1), iota32_arg_29281)
        num_threads_45084 = (num_groups_40794 * segred_group_sizze_40793)
        if ((1 * (np.long(num_groups_40794) * np.long(segred_group_sizze_40793))) != 0):
          self.mainzisegred_small_40623_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40793))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40793))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_40793))),
                                                     np.int64(m_28886),
                                                     np.int64(iota32_arg_29281),
                                                     np.int64(num_groups_40794),
                                                     np.int64(segment_sizze_nonzzero_45083),
                                                     mem_43744, mem_43756,
                                                     mem_43758, mem_43762,
                                                     mem_43765, mem_43767,
                                                     mem_43769)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_small_40623_var,
                                     ((np.long(num_groups_40794) * np.long(segred_group_sizze_40793)),),
                                     (np.long(segred_group_sizze_40793),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45119 = sdiv_up64(num_groups_40794,
                                             smax64(np.int64(1), m_28886))
        elements_per_thread_45120 = sdiv_up64(iota32_arg_29281,
                                              (segred_group_sizze_40793 * groups_per_segment_45119))
        virt_num_groups_45121 = (groups_per_segment_45119 * m_28886)
        num_threads_45122 = (num_groups_40794 * segred_group_sizze_40793)
        threads_per_segment_45123 = (groups_per_segment_45119 * segred_group_sizze_40793)
        group_res_arr_mem_45124 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_40793 * virt_num_groups_45121)),
                                               "group_res_arr_mem_45124")
        group_res_arr_mem_45126 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40793 * virt_num_groups_45121)),
                                               "group_res_arr_mem_45126")
        group_res_arr_mem_45128 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_40793 * virt_num_groups_45121)),
                                               "group_res_arr_mem_45128")
        mainzicounter_mem_45130 = self.mainzicounter_mem_45130
        if ((1 * (np.long(num_groups_40794) * np.long(segred_group_sizze_40793))) != 0):
          self.mainzisegred_large_40623_var.set_args(self.global_failure,
                                                     cl.LocalMemory(np.long(np.int32(1))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40793))),
                                                     cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_40793))),
                                                     cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_40793))),
                                                     np.int64(iota32_arg_29281),
                                                     np.int64(num_groups_40794),
                                                     np.int64(groups_per_segment_45119),
                                                     np.int64(elements_per_thread_45120),
                                                     np.int64(virt_num_groups_45121),
                                                     mem_43744, mem_43756,
                                                     mem_43758, mem_43762,
                                                     mem_43765, mem_43767,
                                                     mem_43769,
                                                     group_res_arr_mem_45124,
                                                     group_res_arr_mem_45126,
                                                     group_res_arr_mem_45128,
                                                     mainzicounter_mem_45130)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainzisegred_large_40623_var,
                                     ((np.long(num_groups_40794) * np.long(segred_group_sizze_40793)),),
                                     (np.long(segred_group_sizze_40793),))
          if synchronous:
            sync(self)
      mem_43756 = None
      mem_43762 = None
      segmap_usable_groups_40833 = sdiv_up64(m_28886, segmap_group_sizze_40832)
      mem_43772 = opencl_alloc(self, bytes_43612, "mem_43772")
      mem_43774 = opencl_alloc(self, bytes_43612, "mem_43774")
      if ((1 * (np.long(segmap_usable_groups_40833) * np.long(segmap_group_sizze_40832))) != 0):
        self.mainzisegmap_40568_var.set_args(self.global_failure,
                                             np.int64(N_28885),
                                             np.int64(m_28886),
                                             np.int32(n_28889),
                                             defunc_4_map_res_mem_43639,
                                             defunc_3_map_res_mem_43705,
                                             mem_43758, mem_43765, mem_43767,
                                             mem_43769, mem_43772, mem_43774)
        cl.enqueue_nd_range_kernel(self.queue, self.mainzisegmap_40568_var,
                                   ((np.long(segmap_usable_groups_40833) * np.long(segmap_group_sizze_40832)),),
                                   (np.long(segmap_group_sizze_40832),))
        if synchronous:
          sync(self)
      mem_43758 = None
      mem_43765 = None
      mem_43767 = None
      mem_43769 = None
      defunc_0_f_res_mem_43775 = mem_43772
      defunc_0_f_res_mem_43776 = mem_43774
    defunc_4_map_res_mem_43637 = None
    defunc_4_map_res_mem_43638 = None
    defunc_4_map_res_mem_43639 = None
    defunc_3_map_res_mem_43704 = None
    defunc_3_map_res_mem_43705 = None
    defunc_3_map_res_mem_43706 = None
    defunc_0_f_res_mem_43739 = None
    mem_43744 = None
    out_mem_44068 = defunc_0_f_res_mem_43775
    out_mem_44069 = defunc_0_f_res_mem_43776
    return (out_mem_44068, out_mem_44069)
  def futhark_mainDetailed(self, mappingindices_mem_42840, images_mem_42841,
                           N_27550, m_27551, trend_27552, k_27553, n_27554,
                           freq_27555, hfrac_27556, lam_27557):
    i32_res_27560 = sext_i32_i64(n_27554)
    x_27561 = (np.int32(2) * k_27553)
    k2p2_27562 = (np.int32(2) + x_27561)
    cond_27563 = slt32(np.int32(0), trend_27552)
    if cond_27563:
      k2p2zq_27564 = k2p2_27562
    else:
      k2p2zq_f_res_27565 = (k2p2_27562 - np.int32(1))
      k2p2zq_27564 = k2p2zq_f_res_27565
    i32_res_27566 = sext_i32_i64(k2p2zq_27564)
    binop_x_42844 = (N_27550 * i32_res_27566)
    bytes_42843 = (np.int64(4) * binop_x_42844)
    if cond_27563:
      bounds_invalid_upwards_27568 = slt64(i32_res_27566, np.int64(0))
      valid_27569 = not(bounds_invalid_upwards_27568)
      range_valid_c_27570 = True
      assert valid_27569, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:178:3-56\n   #5  bfastfinal.fut:174:1-178:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27566,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_29718 = self.sizes["mainDetailed.segmap_group_size_29648"]
      segmap_usable_groups_29719 = sdiv_up64(binop_x_42844,
                                             segmap_group_sizze_29718)
      mem_42845 = opencl_alloc(self, bytes_42843, "mem_42845")
      if ((1 * (np.long(segmap_usable_groups_29719) * np.long(segmap_group_sizze_29718))) != 0):
        self.mainDetailedzisegmap_29645_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.float32(freq_27555),
                                                     np.int64(i32_res_27566),
                                                     mappingindices_mem_42840,
                                                     mem_42845)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29645_var,
                                   ((np.long(segmap_usable_groups_29719) * np.long(segmap_group_sizze_29718)),),
                                   (np.long(segmap_group_sizze_29718),))
        if synchronous:
          sync(self)
      binop_p_mem_42850 = mem_42845
    else:
      bounds_invalid_upwards_27594 = slt64(i32_res_27566, np.int64(0))
      valid_27595 = not(bounds_invalid_upwards_27594)
      range_valid_c_27596 = True
      assert valid_27595, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:178:3-56\n   #5  bfastfinal.fut:174:1-178:56\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_27566,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_29892 = self.sizes["mainDetailed.segmap_group_size_29826"]
      segmap_usable_groups_29893 = sdiv_up64(binop_x_42844,
                                             segmap_group_sizze_29892)
      mem_42849 = opencl_alloc(self, bytes_42843, "mem_42849")
      if ((1 * (np.long(segmap_usable_groups_29893) * np.long(segmap_group_sizze_29892))) != 0):
        self.mainDetailedzisegmap_29823_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.float32(freq_27555),
                                                     np.int64(i32_res_27566),
                                                     mappingindices_mem_42840,
                                                     mem_42849)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29823_var,
                                   ((np.long(segmap_usable_groups_29893) * np.long(segmap_group_sizze_29892)),),
                                   (np.long(segmap_group_sizze_29892),))
        if synchronous:
          sync(self)
      binop_p_mem_42850 = mem_42849
    x_27619 = (N_27550 * N_27550)
    y_27620 = (np.int64(2) * N_27550)
    x_27621 = (x_27619 + y_27620)
    x_27622 = (np.int64(1) + x_27621)
    y_27623 = (np.int64(1) + N_27550)
    zzero_27624 = (y_27623 == np.int64(0))
    nonzzero_27625 = not(zzero_27624)
    nonzzero_cert_27626 = True
    assert nonzzero_27625, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:36:32-60\n   #1  bfastfinal.fut:178:3-56\n   #2  bfastfinal.fut:174:1-178:56\n" % ("division by zero",))
    x_27627 = sdiv64(x_27622, y_27623)
    x_27628 = (x_27627 - N_27550)
    binop_p_27629 = (x_27628 - np.int64(1))
    defunc_0_f_res_27630 = sext_i64_i32(binop_p_27629)
    i32_res_27631 = sitofp_i32_f32(defunc_0_f_res_27630)
    segmap_group_sizze_29975 = self.sizes["mainDetailed.segmap_group_size_29954"]
    segmap_usable_groups_29976 = sdiv_up64(binop_x_42844,
                                           segmap_group_sizze_29975)
    mem_42853 = opencl_alloc(self, bytes_42843, "mem_42853")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42853, np.int64(0),
                                                binop_p_mem_42850, np.int64(0),
                                                np.int64(1), N_27550,
                                                i32_res_27566)
    mem_42857 = opencl_alloc(self, bytes_42843, "mem_42857")
    if ((1 * (np.long(segmap_usable_groups_29976) * np.long(segmap_group_sizze_29975))) != 0):
      self.mainDetailedzisegmap_29951_var.set_args(self.global_failure,
                                                   np.int64(N_27550),
                                                   np.int64(i32_res_27566),
                                                   np.float32(i32_res_27631),
                                                   mem_42853, mem_42857)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_29951_var,
                                 ((np.long(segmap_usable_groups_29976) * np.long(segmap_group_sizze_29975)),),
                                 (np.long(segmap_group_sizze_29975),))
      if synchronous:
        sync(self)
    eq_x_y_27639 = (np.int64(0) == i32_res_27566)
    p_and_eq_x_y_27640 = (cond_27563 and eq_x_y_27639)
    not_p_27641 = not(cond_27563)
    p_and_eq_x_y_27642 = (eq_x_y_27639 and not_p_27641)
    empty_slice_27643 = (p_and_eq_x_y_27640 or p_and_eq_x_y_27642)
    m_27644 = (i32_res_27566 - np.int64(1))
    zzero_leq_i_p_m_t_s_27645 = sle64(np.int64(0), m_27644)
    i_p_m_t_s_leq_w_27646 = slt64(m_27644, i32_res_27566)
    i_lte_j_27647 = sle64(np.int64(0), i32_res_27566)
    y_27648 = (zzero_leq_i_p_m_t_s_27645 and i_p_m_t_s_leq_w_27646)
    y_27649 = (i_lte_j_27647 and y_27648)
    ok_or_empty_27650 = (empty_slice_27643 or y_27649)
    empty_slice_27651 = (i32_res_27560 == np.int64(0))
    m_27652 = (i32_res_27560 - np.int64(1))
    zzero_leq_i_p_m_t_s_27653 = sle64(np.int64(0), m_27652)
    i_p_m_t_s_leq_w_27654 = slt64(m_27652, N_27550)
    i_lte_j_27655 = sle64(np.int64(0), i32_res_27560)
    y_27656 = (zzero_leq_i_p_m_t_s_27653 and i_p_m_t_s_leq_w_27654)
    y_27657 = (i_lte_j_27655 and y_27656)
    ok_or_empty_27658 = (empty_slice_27651 or y_27657)
    index_ok_27659 = (ok_or_empty_27650 and ok_or_empty_27658)
    index_certs_27660 = True
    assert index_ok_27659, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:15-23\n   #1  bfastfinal.fut:178:3-56\n   #2  bfastfinal.fut:174:1-178:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27560,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_27566,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27550,
                                                                                                                                                                               "]."))
    empty_slice_27662 = (i32_res_27566 == np.int64(0))
    ok_or_empty_27663 = (y_27649 or empty_slice_27662)
    index_ok_27664 = (ok_or_empty_27658 and ok_or_empty_27663)
    index_certs_27665 = True
    assert index_ok_27664, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:15-24\n   #1  bfastfinal.fut:178:3-56\n   #2  bfastfinal.fut:174:1-178:56\n" % ("Index [:",
                                                                                                                                                                               i32_res_27560,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_27550,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_27566,
                                                                                                                                                                               "]."))
    empty_slice_27667 = (m_27551 == np.int64(0))
    m_27668 = (m_27551 - np.int64(1))
    zzero_leq_i_p_m_t_s_27669 = sle64(np.int64(0), m_27668)
    i_p_m_t_s_leq_w_27670 = slt64(m_27668, m_27551)
    i_lte_j_27671 = sle64(np.int64(0), m_27551)
    y_27672 = (zzero_leq_i_p_m_t_s_27669 and i_p_m_t_s_leq_w_27670)
    y_27673 = (i_lte_j_27671 and y_27672)
    ok_or_empty_27674 = (empty_slice_27667 or y_27673)
    index_ok_27675 = (ok_or_empty_27658 and ok_or_empty_27674)
    index_certs_27676 = True
    assert index_ok_27675, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:15-28\n   #1  bfastfinal.fut:178:3-56\n   #2  bfastfinal.fut:174:1-178:56\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_27560,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_27551,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_27550,
                                                                                                                                                                               "]."))
    suff_outer_par_29982 = (self.sizes["mainDetailed.suff_outer_par_6"] <= m_27551)
    segmap_group_sizze_30008 = self.sizes["mainDetailed.segmap_group_size_29986"]
    max_num_groups_44098 = self.sizes["mainDetailed.segmap_num_groups_29988"]
    num_groups_30009 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27551,
                                                            segmap_group_sizze_30008),
                                                  sext_i32_i64(max_num_groups_44098))))
    nest_sizze_30184 = (m_27551 * i32_res_27566)
    segmap_group_sizze_30185 = self.sizes["mainDetailed.segmap_group_size_30033"]
    max_num_groups_44099 = self.sizes["mainDetailed.segmap_num_groups_30035"]
    num_groups_30186 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30184,
                                                            segmap_group_sizze_30185),
                                                  sext_i32_i64(max_num_groups_44099))))
    suff_outer_par_30190 = (self.sizes["mainDetailed.suff_outer_par_7"] <= nest_sizze_30184)
    y_30214 = (i32_res_27566 * i32_res_27566)
    comparatee_30215 = (m_27551 * y_30214)
    suff_outer_par_30216 = (self.sizes["mainDetailed.suff_outer_par_8"] <= comparatee_30215)
    nest_sizze_30236 = (i32_res_27560 * comparatee_30215)
    segred_group_sizze_30237 = self.sizes["mainDetailed.segred_group_size_30093"]
    max_num_groups_44100 = self.sizes["mainDetailed.segred_num_groups_30095"]
    num_groups_30238 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_30236,
                                                            segred_group_sizze_30237),
                                                  sext_i32_i64(max_num_groups_44100))))
    Tx_41046 = self.sizes["mainDetailed.Tx_41044"]
    Ty_41047 = self.sizes["mainDetailed.Ty_41045"]
    Ty_41048 = smin64(i32_res_27566, Ty_41047)
    Tx_41049 = smin64(i32_res_27566, Tx_41046)
    gridDim_zz_41052 = sdiv_up64(m_27551, np.int64(30))
    group_sizze_tile3d_41055 = (Ty_41048 * Tx_41049)
    binop_x_42859 = (N_27550 * m_27551)
    bytes_42858 = (np.int64(4) * binop_x_42859)
    bytes_42903 = (np.int64(4) * comparatee_30215)
    bytes_42862 = (np.int64(4) * y_30214)
    binop_x_43006 = (i32_res_27566 * nest_sizze_30184)
    bytes_43004 = (np.int64(4) * binop_x_43006)
    bytes_42908 = (np.int64(4) * i32_res_27566)
    binop_x_42937 = (np.int64(30) * group_sizze_tile3d_41055)
    bytes_42935 = (np.int64(4) * binop_x_42937)
    binop_x_43843 = (np.int64(4) * Ty_41048)
    binop_x_43844 = (Tx_41049 * binop_x_43843)
    sizze_43845 = (np.int64(30) * binop_x_43844)
    num_threads_43923 = (segmap_group_sizze_30008 * num_groups_30009)
    total_sizze_43924 = (bytes_42862 * num_threads_43923)
    num_threads_43925 = (segmap_group_sizze_30185 * num_groups_30186)
    total_sizze_43926 = (bytes_42908 * num_threads_43925)
    local_memory_capacity_44222 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44222)) and suff_outer_par_29982):
      mem_42860 = opencl_alloc(self, bytes_42858, "mem_42860")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42860, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_27550, m_27551)
      mem_42906 = opencl_alloc(self, bytes_42903, "mem_42906")
      mem_42864 = opencl_alloc(self, total_sizze_43924, "mem_42864")
      if ((1 * (np.long(num_groups_30009) * np.long(segmap_group_sizze_30008))) != 0):
        self.mainDetailedzisegmap_29984_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.int64(m_27551),
                                                     np.int32(n_27554),
                                                     np.int32(k2p2zq_27564),
                                                     np.int64(i32_res_27566),
                                                     np.int64(num_groups_30009),
                                                     binop_p_mem_42850,
                                                     mem_42857, mem_42860,
                                                     mem_42864, mem_42906)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_29984_var,
                                   ((np.long(num_groups_30009) * np.long(segmap_group_sizze_30008)),),
                                   (np.long(segmap_group_sizze_30008),))
        if synchronous:
          sync(self)
      mem_42860 = None
      mem_42864 = None
      mem_43007 = opencl_alloc(self, bytes_43004, "mem_43007")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43007, np.int64(0),
                                                  mem_42906, np.int64(0),
                                                  np.int64(1), m_27551,
                                                  (i32_res_27566 * i32_res_27566))
      mem_42906 = None
      defunc_3_map_res_mem_43009 = mem_43007
    else:
      local_memory_capacity_44221 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44221)) and suff_outer_par_30190):
        mem_42925 = opencl_alloc(self, bytes_43004, "mem_42925")
        mem_42909 = opencl_alloc(self, total_sizze_43926, "mem_42909")
        if ((1 * (np.long(num_groups_30186) * np.long(segmap_group_sizze_30185))) != 0):
          self.mainDetailedzisegmap_30030_var.set_args(self.global_failure,
                                                       np.int64(N_27550),
                                                       np.int64(m_27551),
                                                       np.int32(n_27554),
                                                       np.int32(k2p2zq_27564),
                                                       np.int64(i32_res_27566),
                                                       np.int64(num_groups_30186),
                                                       images_mem_42841,
                                                       mem_42853, mem_42857,
                                                       mem_42909, mem_42925)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_30030_var,
                                     ((np.long(num_groups_30186) * np.long(segmap_group_sizze_30185)),),
                                     (np.long(segmap_group_sizze_30185),))
          if synchronous:
            sync(self)
        mem_42909 = None
        mem_43001 = opencl_alloc(self, bytes_43004, "mem_43001")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43001, np.int64(0),
                                                    mem_42925, np.int64(0),
                                                    np.int64(1),
                                                    (m_27551 * i32_res_27566),
                                                    i32_res_27566)
        mem_42925 = None
        defunc_3_map_res_mem_43003 = mem_43001
      else:
        local_memory_capacity_44220 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44220)) and suff_outer_par_30216):
          mem_42928 = opencl_alloc(self, bytes_42858, "mem_42928")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42928, np.int64(0),
                                                      images_mem_42841,
                                                      np.int64(0), np.int64(1),
                                                      N_27550, m_27551)
          gridDim_x_41050 = sdiv_up64(i32_res_27566, Tx_41049)
          gridDim_y_41051 = sdiv_up64(i32_res_27566, Ty_41048)
          binop_x_41053 = (gridDim_y_41051 * gridDim_zz_41052)
          grid_sizze_tile3d_41054 = (gridDim_x_41050 * binop_x_41053)
          count_shmem_41056 = sdiv_up64(np.int64(30), group_sizze_tile3d_41055)
          mem_42988 = opencl_alloc(self, bytes_43004, "mem_42988")
          if ((1 * (np.long(grid_sizze_tile3d_41054) * np.long(group_sizze_tile3d_41055))) != 0):
            self.mainDetailedzisegmap_intragroup_41060_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(np.int64(120))),
                                                                    np.int64(m_27551),
                                                                    np.int32(n_27554),
                                                                    np.int64(i32_res_27566),
                                                                    np.int64(Ty_41048),
                                                                    np.int64(Tx_41049),
                                                                    np.int64(gridDim_x_41050),
                                                                    np.int64(gridDim_y_41051),
                                                                    np.int64(group_sizze_tile3d_41055),
                                                                    np.int64(count_shmem_41056),
                                                                    mem_42853,
                                                                    mem_42857,
                                                                    mem_42928,
                                                                    mem_42988)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_41060_var,
                                       ((np.long(grid_sizze_tile3d_41054) * np.long(group_sizze_tile3d_41055)),),
                                       (np.long(group_sizze_tile3d_41055),))
            if synchronous:
              sync(self)
          mem_42928 = None
          defunc_3_map_res_mem_42997 = mem_42988
        else:
          mem_42991 = opencl_alloc(self, bytes_42843, "mem_42991")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42991, np.int64(0),
                                                      mem_42857, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_27566, N_27550)
          mem_42996 = opencl_alloc(self, bytes_43004, "mem_42996")
          if slt64((i32_res_27560 * np.int64(2)), segred_group_sizze_30237):
            segment_sizze_nonzzero_44160 = smax64(np.int64(1), i32_res_27560)
            num_threads_44161 = (num_groups_30238 * segred_group_sizze_30237)
            if ((1 * (np.long(num_groups_30238) * np.long(segred_group_sizze_30237))) != 0):
              self.mainDetailedzisegred_small_30099_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30237))),
                                                                 np.int64(N_27550),
                                                                 np.int64(m_27551),
                                                                 np.int64(i32_res_27560),
                                                                 np.int64(i32_res_27566),
                                                                 np.int64(num_groups_30238),
                                                                 np.int64(segment_sizze_nonzzero_44160),
                                                                 images_mem_42841,
                                                                 binop_p_mem_42850,
                                                                 mem_42991,
                                                                 mem_42996)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_small_30099_var,
                                         ((np.long(num_groups_30238) * np.long(segred_group_sizze_30237)),),
                                         (np.long(segred_group_sizze_30237),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44181 = sdiv_up64(num_groups_30238,
                                                 smax64(np.int64(1),
                                                        ((m_27551 * i32_res_27566) * i32_res_27566)))
            elements_per_thread_44182 = sdiv_up64(i32_res_27560,
                                                  (segred_group_sizze_30237 * groups_per_segment_44181))
            virt_num_groups_44183 = (groups_per_segment_44181 * ((m_27551 * i32_res_27566) * i32_res_27566))
            num_threads_44184 = (num_groups_30238 * segred_group_sizze_30237)
            threads_per_segment_44185 = (groups_per_segment_44181 * segred_group_sizze_30237)
            group_res_arr_mem_44186 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_30237 * virt_num_groups_44183)),
                                                   "group_res_arr_mem_44186")
            mainDetailedzicounter_mem_44188 = self.mainDetailedzicounter_mem_44188
            if ((1 * (np.long(num_groups_30238) * np.long(segred_group_sizze_30237))) != 0):
              self.mainDetailedzisegred_large_30099_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(np.int32(1))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_30237))),
                                                                 np.int64(N_27550),
                                                                 np.int64(i32_res_27560),
                                                                 np.int64(i32_res_27566),
                                                                 np.int64(num_groups_30238),
                                                                 np.int64(groups_per_segment_44181),
                                                                 np.int64(elements_per_thread_44182),
                                                                 np.int64(virt_num_groups_44183),
                                                                 np.int64(threads_per_segment_44185),
                                                                 images_mem_42841,
                                                                 binop_p_mem_42850,
                                                                 mem_42991,
                                                                 mem_42996,
                                                                 group_res_arr_mem_44186,
                                                                 mainDetailedzicounter_mem_44188)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainDetailedzisegred_large_30099_var,
                                         ((np.long(num_groups_30238) * np.long(segred_group_sizze_30237)),),
                                         (np.long(segred_group_sizze_30237),))
              if synchronous:
                sync(self)
          mem_42991 = None
          defunc_3_map_res_mem_42997 = mem_42996
        defunc_3_map_res_mem_43003 = defunc_3_map_res_mem_42997
      defunc_3_map_res_mem_43009 = defunc_3_map_res_mem_43003
    m_27697 = (np.int32(2) * k2p2zq_27564)
    nm_27698 = (k2p2zq_27564 * m_27697)
    i32_res_27699 = sext_i32_i64(nm_27698)
    bounds_invalid_upwards_27700 = slt64(i32_res_27699, np.int64(0))
    valid_27701 = not(bounds_invalid_upwards_27700)
    range_valid_c_27702 = True
    assert valid_27701, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:178:3-56\n   #4  bfastfinal.fut:174:1-178:56\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_27699,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_27707 = (m_27697 == np.int32(0))
    nonzzero_27708 = not(zzero_27707)
    nonzzero_cert_27709 = True
    assert nonzzero_27708, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:178:3-56\n   #4  bfastfinal.fut:174:1-178:56\n" % ("division by zero",))
    loop_nonempty_27710 = slt32(np.int32(0), k2p2zq_27564)
    loop_not_taken_27711 = not(loop_nonempty_27710)
    protect_assert_disj_27712 = (nonzzero_27708 or loop_not_taken_27711)
    nonzzero_cert_27713 = True
    assert protect_assert_disj_27712, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:51:35-50\n   #4  bfastfinal.fut:178:3-56\n   #5  bfastfinal.fut:174:1-178:56\n" % ("division by zero",))
    i32_res_27714 = sext_i32_i64(m_27697)
    x_27715 = (i32_res_27566 * i32_res_27714)
    dim_ok_27716 = (x_27715 == i32_res_27699)
    dim_ok_cert_27717 = True
    assert dim_ok_27716, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:178:3-56\n   #4  bfastfinal.fut:174:1-178:56\n" % ("new shape has different number of elements than old shape",))
    j_m_i_27718 = (i32_res_27714 - i32_res_27566)
    empty_slice_27719 = (j_m_i_27718 == np.int64(0))
    m_27720 = (j_m_i_27718 - np.int64(1))
    i_p_m_t_s_27721 = (i32_res_27566 + m_27720)
    zzero_leq_i_p_m_t_s_27722 = sle64(np.int64(0), i_p_m_t_s_27721)
    i_p_m_t_s_leq_w_27723 = slt64(i_p_m_t_s_27721, i32_res_27714)
    i_lte_j_27724 = sle64(i32_res_27566, i32_res_27714)
    y_27725 = (i_lte_j_27647 and i_p_m_t_s_leq_w_27723)
    y_27726 = (zzero_leq_i_p_m_t_s_27722 and y_27725)
    y_27727 = (i_lte_j_27724 and y_27726)
    forwards_ok_27728 = (i_lte_j_27647 and y_27727)
    ok_or_empty_27729 = (empty_slice_27719 or forwards_ok_27728)
    index_ok_27730 = (ok_or_empty_27663 and ok_or_empty_27729)
    index_certs_27731 = True
    assert index_ok_27730, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:51:35-50\n   #2  bfastfinal.fut:178:3-56\n   #3  bfastfinal.fut:174:1-178:56\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27566,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_27566,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_27714,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_27566,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_27714,
                                                                                                                                                                                                                   "]."))
    dim_match_27732 = (i32_res_27566 == j_m_i_27718)
    empty_or_match_cert_27733 = True
    assert dim_match_27732, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:51:35-50\n   #2  bfastfinal.fut:178:3-56\n   #3  bfastfinal.fut:174:1-178:56\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_27566,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_27718,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_27566,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_27566,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_30452 = self.max_group_size
    fits_30453 = sle64(i32_res_27699, max_group_sizze_30452)
    suff_intra_par_30451 = (self.sizes["mainDetailed.suff_intra_par_11"] <= i32_res_27699)
    intra_suff_and_fits_30454 = (suff_intra_par_30451 and fits_30453)
    nest_sizze_30938 = (m_27551 * i32_res_27699)
    segmap_group_sizze_30939 = self.sizes["mainDetailed.segmap_group_size_30898"]
    suff_intra_par_30966 = (self.sizes["mainDetailed.suff_intra_par_13"] <= i32_res_27699)
    intra_suff_and_fits_30967 = (fits_30453 and suff_intra_par_30966)
    segmap_group_sizze_31003 = self.sizes["mainDetailed.segmap_group_size_30804"]
    segmap_group_sizze_31019 = self.sizes["mainDetailed.segmap_group_size_30737"]
    segmap_group_sizze_31053 = self.sizes["mainDetailed.segmap_group_size_30683"]
    y_31063 = (i32_res_27566 * j_m_i_27718)
    nest_sizze_31064 = (m_27551 * y_31063)
    segmap_group_sizze_31065 = self.sizes["mainDetailed.segmap_group_size_30518"]
    segmap_usable_groups_31004 = sdiv_up_safe64(m_27551,
                                                segmap_group_sizze_31003)
    segmap_usable_groups_31020 = sdiv_up_safe64(nest_sizze_30938,
                                                segmap_group_sizze_31019)
    segmap_usable_groups_31054 = sdiv_up_safe64(nest_sizze_30938,
                                                segmap_group_sizze_31053)
    bytes_43012 = (np.int64(4) * i32_res_27699)
    bytes_43035 = (np.int64(4) * nest_sizze_30938)
    binop_x_43086 = (j_m_i_27718 * nest_sizze_30184)
    bytes_43084 = (np.int64(4) * binop_x_43086)
    local_memory_capacity_44223 = self.max_local_memory
    if intra_suff_and_fits_30454:
      defunc_3_map_res_ixfn_43088 = i32_res_27566
    else:
      defunc_3_map_res_ixfn_43088 = j_m_i_27718
    local_memory_capacity_44286 = self.max_local_memory
    if (sle64(((bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44286)) and intra_suff_and_fits_30454):
      mem_43033 = opencl_alloc(self, bytes_43004, "mem_43033")
      if ((1 * (np.long(m_27551) * np.long(i32_res_27699))) != 0):
        self.mainDetailedzisegmap_intragroup_30334_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43012)),
                                                                cl.LocalMemory(np.long(bytes_43012)),
                                                                np.int32(k2p2zq_27564),
                                                                np.int64(i32_res_27566),
                                                                np.int32(m_27697),
                                                                np.int64(i32_res_27699),
                                                                np.int64(i32_res_27714),
                                                                defunc_3_map_res_mem_43009,
                                                                mem_43033)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_30334_var,
                                   ((np.long(m_27551) * np.long(i32_res_27699)),),
                                   (np.long(i32_res_27699),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43089 = mem_43033
    else:
      segmap_usable_groups_30940 = sdiv_up64(nest_sizze_30938,
                                             segmap_group_sizze_30939)
      mem_43037 = opencl_alloc(self, bytes_43035, "mem_43037")
      if ((1 * (np.long(segmap_usable_groups_30940) * np.long(segmap_group_sizze_30939))) != 0):
        self.mainDetailedzisegmap_30895_var.set_args(self.global_failure,
                                                     np.int64(m_27551),
                                                     np.int32(k2p2zq_27564),
                                                     np.int64(i32_res_27566),
                                                     np.int32(m_27697),
                                                     np.int64(i32_res_27699),
                                                     defunc_3_map_res_mem_43009,
                                                     mem_43037)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30895_var,
                                   ((np.long(segmap_usable_groups_30940) * np.long(segmap_group_sizze_30939)),),
                                   (np.long(segmap_group_sizze_30939),))
        if synchronous:
          sync(self)
      ctx_param_ext_43038 = m_27551
      ctx_param_ext_43039 = i32_res_27699
      ctx_param_ext_43040 = np.int64(0)
      ctx_param_ext_43041 = i32_res_27699
      ctx_param_ext_43042 = m_27551
      ctx_param_ext_43043 = np.int64(1)
      ctx_param_ext_43044 = i32_res_27699
      mem_param_43045 = mem_43037
      i_30956 = np.int32(0)
      one_45245 = np.int32(1)
      for counter_45244 in range(k2p2zq_27564):
        i32_res_30958 = sext_i32_i64(i_30956)
        local_memory_capacity_44246 = self.max_local_memory
        if intra_suff_and_fits_30967:
          gauss_jordan_res_ixfn_43067 = m_27551
        else:
          gauss_jordan_res_ixfn_43067 = ctx_param_ext_43042
        local_memory_capacity_44247 = self.max_local_memory
        if intra_suff_and_fits_30967:
          gauss_jordan_res_ixfn_43068 = i32_res_27699
        else:
          gauss_jordan_res_ixfn_43068 = ctx_param_ext_43044
        local_memory_capacity_44248 = self.max_local_memory
        if intra_suff_and_fits_30967:
          gauss_jordan_res_ixfn_43069 = m_27551
        else:
          gauss_jordan_res_ixfn_43069 = ctx_param_ext_43038
        local_memory_capacity_44249 = self.max_local_memory
        if intra_suff_and_fits_30967:
          gauss_jordan_res_ixfn_43070 = i32_res_27699
        else:
          gauss_jordan_res_ixfn_43070 = ctx_param_ext_43039
        local_memory_capacity_44250 = self.max_local_memory
        if intra_suff_and_fits_30967:
          gauss_jordan_res_ixfn_43071 = i32_res_27699
        else:
          gauss_jordan_res_ixfn_43071 = ctx_param_ext_43041
        local_memory_capacity_44251 = self.max_local_memory
        if intra_suff_and_fits_30967:
          gauss_jordan_res_ixfn_43072 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43072 = ctx_param_ext_43043
        local_memory_capacity_44252 = self.max_local_memory
        if intra_suff_and_fits_30967:
          gauss_jordan_res_ixfn_43073 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43073 = ctx_param_ext_43040
        local_memory_capacity_44280 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44280)) and sle64((bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44280))) and intra_suff_and_fits_30967):
          mem_43050 = opencl_alloc(self, bytes_43035, "mem_43050")
          group_sizze_44256 = self.sizes["mainDetailed.group_size_44256"]
          num_groups_44257 = sdiv_up64((m_27551 * i32_res_27699),
                                       group_sizze_44256)
          if ((1 * (np.long(num_groups_44257) * np.long(group_sizze_44256))) != 0):
            self.mainDetailedzicopy_44253_var.set_args(np.int64(m_27551),
                                                       np.int64(i32_res_27699),
                                                       np.int64(ctx_param_ext_43040),
                                                       np.int64(ctx_param_ext_43041),
                                                       np.int64(ctx_param_ext_43043),
                                                       mem_param_43045,
                                                       mem_43050)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzicopy_44253_var,
                                       ((np.long(num_groups_44257) * np.long(group_sizze_44256)),),
                                       (np.long(group_sizze_44256),))
            if synchronous:
              sync(self)
          mem_43058 = opencl_alloc(self, bytes_43035, "mem_43058")
          if ((1 * (np.long(m_27551) * np.long(i32_res_27699))) != 0):
            self.mainDetailedzisegmap_intragroup_30561_var.set_args(self.global_failure,
                                                                    cl.LocalMemory(np.long(bytes_43012)),
                                                                    np.int64(m_27551),
                                                                    np.int32(k2p2zq_27564),
                                                                    np.int32(m_27697),
                                                                    np.int64(i32_res_27699),
                                                                    np.int32(i_30956),
                                                                    np.int64(i32_res_30958),
                                                                    np.int64(ctx_param_ext_43040),
                                                                    np.int64(ctx_param_ext_43041),
                                                                    np.int64(ctx_param_ext_43043),
                                                                    mem_param_43045,
                                                                    mem_43050,
                                                                    mem_43058)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_intragroup_30561_var,
                                       ((np.long(m_27551) * np.long(i32_res_27699)),),
                                       (np.long(i32_res_27699),))
            if synchronous:
              sync(self)
          mem_43050 = None
          gauss_jordan_res_mem_43074 = mem_43058
        else:
          mem_43061 = opencl_alloc(self, m_27551, "mem_43061")
          if ((1 * (np.long(segmap_usable_groups_31004) * np.long(segmap_group_sizze_31003))) != 0):
            self.mainDetailedzisegmap_30802_var.set_args(self.global_failure,
                                                         np.int64(m_27551),
                                                         np.int64(i32_res_30958),
                                                         np.int64(ctx_param_ext_43040),
                                                         np.int64(ctx_param_ext_43041),
                                                         np.int64(ctx_param_ext_43043),
                                                         mem_param_43045,
                                                         mem_43061)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30802_var,
                                       ((np.long(segmap_usable_groups_31004) * np.long(segmap_group_sizze_31003)),),
                                       (np.long(segmap_group_sizze_31003),))
            if synchronous:
              sync(self)
          mem_43065 = opencl_alloc(self, bytes_43035, "mem_43065")
          if ((1 * (np.long(segmap_usable_groups_31020) * np.long(segmap_group_sizze_31019))) != 0):
            self.mainDetailedzisegmap_30734_var.set_args(self.global_failure,
                                                         np.int64(m_27551),
                                                         np.int32(k2p2zq_27564),
                                                         np.int32(m_27697),
                                                         np.int64(i32_res_27699),
                                                         np.int32(i_30956),
                                                         np.int64(i32_res_30958),
                                                         np.int64(ctx_param_ext_43040),
                                                         np.int64(ctx_param_ext_43041),
                                                         np.int64(ctx_param_ext_43043),
                                                         mem_param_43045,
                                                         mem_43061, mem_43065)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30734_var,
                                       ((np.long(segmap_usable_groups_31020) * np.long(segmap_group_sizze_31019)),),
                                       (np.long(segmap_group_sizze_31019),))
            if synchronous:
              sync(self)
          mem_43061 = None
          if ((1 * (np.long(segmap_usable_groups_31054) * np.long(segmap_group_sizze_31053))) != 0):
            self.mainDetailedzisegmap_30680_var.set_args(self.global_failure,
                                                         np.int64(m_27551),
                                                         np.int64(i32_res_27699),
                                                         np.int64(ctx_param_ext_43040),
                                                         np.int64(ctx_param_ext_43041),
                                                         np.int64(ctx_param_ext_43043),
                                                         mem_param_43045,
                                                         mem_43065)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegmap_30680_var,
                                       ((np.long(segmap_usable_groups_31054) * np.long(segmap_group_sizze_31053)),),
                                       (np.long(segmap_group_sizze_31053),))
            if synchronous:
              sync(self)
          mem_43065 = None
          gauss_jordan_res_mem_43074 = mem_param_43045
        ctx_param_ext_tmp_44237 = gauss_jordan_res_ixfn_43069
        ctx_param_ext_tmp_44238 = gauss_jordan_res_ixfn_43070
        ctx_param_ext_tmp_44239 = gauss_jordan_res_ixfn_43073
        ctx_param_ext_tmp_44240 = gauss_jordan_res_ixfn_43071
        ctx_param_ext_tmp_44241 = gauss_jordan_res_ixfn_43067
        ctx_param_ext_tmp_44242 = gauss_jordan_res_ixfn_43072
        ctx_param_ext_tmp_44243 = gauss_jordan_res_ixfn_43068
        mem_param_tmp_44244 = gauss_jordan_res_mem_43074
        ctx_param_ext_43038 = ctx_param_ext_tmp_44237
        ctx_param_ext_43039 = ctx_param_ext_tmp_44238
        ctx_param_ext_43040 = ctx_param_ext_tmp_44239
        ctx_param_ext_43041 = ctx_param_ext_tmp_44240
        ctx_param_ext_43042 = ctx_param_ext_tmp_44241
        ctx_param_ext_43043 = ctx_param_ext_tmp_44242
        ctx_param_ext_43044 = ctx_param_ext_tmp_44243
        mem_param_43045 = mem_param_tmp_44244
        i_30956 += one_45245
      gauss_jordan_res_r_ixfn_43075 = ctx_param_ext_43038
      gauss_jordan_res_r_ixfn_43076 = ctx_param_ext_43039
      gauss_jordan_res_r_ixfn_43077 = ctx_param_ext_43040
      gauss_jordan_res_r_ixfn_43078 = ctx_param_ext_43041
      gauss_jordan_res_r_ixfn_43079 = ctx_param_ext_43042
      gauss_jordan_res_r_ixfn_43080 = ctx_param_ext_43043
      gauss_jordan_res_r_ixfn_43081 = ctx_param_ext_43044
      gauss_jordan_res_r_mem_43082 = mem_param_43045
      mem_43037 = None
      segmap_usable_groups_31066 = sdiv_up64(nest_sizze_31064,
                                             segmap_group_sizze_31065)
      mem_43087 = opencl_alloc(self, bytes_43084, "mem_43087")
      if ((1 * (np.long(segmap_usable_groups_31066) * np.long(segmap_group_sizze_31065))) != 0):
        self.mainDetailedzisegmap_30514_var.set_args(self.global_failure,
                                                     np.int64(m_27551),
                                                     np.int64(i32_res_27566),
                                                     np.int64(i32_res_27699),
                                                     np.int64(i32_res_27714),
                                                     np.int64(x_27715),
                                                     np.int64(j_m_i_27718),
                                                     np.int64(gauss_jordan_res_r_ixfn_43077),
                                                     np.int64(gauss_jordan_res_r_ixfn_43078),
                                                     np.int64(gauss_jordan_res_r_ixfn_43080),
                                                     gauss_jordan_res_r_mem_43082,
                                                     mem_43087)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_30514_var,
                                   ((np.long(segmap_usable_groups_31066) * np.long(segmap_group_sizze_31065)),),
                                   (np.long(segmap_group_sizze_31065),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43082 = None
      defunc_3_map_res_mem_43089 = mem_43087
    defunc_3_map_res_mem_43009 = None
    suff_outer_par_31074 = (self.sizes["mainDetailed.suff_outer_par_16"] <= m_27551)
    segmap_group_sizze_31096 = self.sizes["mainDetailed.segmap_group_size_31078"]
    max_num_groups_44287 = self.sizes["mainDetailed.segmap_num_groups_31080"]
    num_groups_31097 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27551,
                                                            segmap_group_sizze_31096),
                                                  sext_i32_i64(max_num_groups_44287))))
    suff_outer_par_31181 = (self.sizes["mainDetailed.suff_outer_par_17"] <= nest_sizze_30184)
    nest_sizze_31197 = (i32_res_27560 * nest_sizze_30184)
    segred_group_sizze_31198 = self.sizes["mainDetailed.segred_group_size_31140"]
    max_num_groups_44288 = self.sizes["mainDetailed.segred_num_groups_31142"]
    num_groups_31199 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31197,
                                                            segred_group_sizze_31198),
                                                  sext_i32_i64(max_num_groups_44288))))
    Ty_41194 = self.sizes["mainDetailed.Ty_41191"]
    Ry_41195 = self.sizes["mainDetailed.Ry_41193"]
    Tx_41196 = self.sizes["mainDetailed.Tx_41190"]
    Rx_41197 = self.sizes["mainDetailed.Rx_41192"]
    Tk_41198 = self.sizes["mainDetailed.Tk_41189"]
    TxRx_41201 = (Tx_41196 * Rx_41197)
    TyRy_41202 = (Ty_41194 * Ry_41195)
    a_loc_szz_41204 = (Tk_41198 * TyRy_41202)
    binop_x_41205 = (Tx_41196 * Tk_41198)
    b_loc_szz_41206 = (Rx_41197 * binop_x_41205)
    group_sizze_41210 = (Ty_41194 * Tx_41196)
    bytes_43108 = (np.int64(4) * nest_sizze_30184)
    binop_x_43122 = (Ry_41195 * group_sizze_41210)
    binop_x_43123 = (Rx_41197 * binop_x_43122)
    bytes_43120 = (np.int64(4) * binop_x_43123)
    binop_x_43114 = (Ry_41195 * Rx_41197)
    bytes_43113 = (np.int64(4) * binop_x_43114)
    bytes_43125 = (np.int64(4) * a_loc_szz_41204)
    bytes_43127 = (np.int64(4) * b_loc_szz_41206)
    bytes_43196 = (np.int64(4) * binop_x_43122)
    binop_x_43202 = (Rx_41197 * group_sizze_41210)
    bytes_43200 = (np.int64(4) * binop_x_43202)
    bytes_43188 = (np.int64(4) * Ry_41195)
    bytes_43190 = (np.int64(4) * Rx_41197)
    binop_x_43860 = (np.int64(4) * Ty_41194)
    binop_x_43861 = (Tx_41196 * binop_x_43860)
    binop_x_43862 = (Ry_41195 * binop_x_43861)
    sizze_43863 = (Rx_41197 * binop_x_43862)
    num_threads_43936 = (segmap_group_sizze_31096 * num_groups_31097)
    total_sizze_43937 = (bytes_42908 * num_threads_43936)
    local_memory_capacity_44418 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44418)) and suff_outer_par_31074):
      mem_43092 = opencl_alloc(self, bytes_42858, "mem_43092")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43092, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_27550, m_27551)
      mem_43110 = opencl_alloc(self, bytes_43108, "mem_43110")
      mem_43095 = opencl_alloc(self, total_sizze_43937, "mem_43095")
      if ((1 * (np.long(num_groups_31097) * np.long(segmap_group_sizze_31096))) != 0):
        self.mainDetailedzisegmap_31076_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.int64(m_27551),
                                                     np.int32(n_27554),
                                                     np.int32(k2p2zq_27564),
                                                     np.int64(i32_res_27566),
                                                     np.int64(num_groups_31097),
                                                     binop_p_mem_42850,
                                                     mem_43092, mem_43095,
                                                     mem_43110)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31076_var,
                                   ((np.long(num_groups_31097) * np.long(segmap_group_sizze_31096)),),
                                   (np.long(segmap_group_sizze_31096),))
        if synchronous:
          sync(self)
      mem_43092 = None
      mem_43095 = None
      mem_43308 = opencl_alloc(self, bytes_43108, "mem_43308")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43308, np.int64(0),
                                                  mem_43110, np.int64(0),
                                                  np.int64(1), m_27551,
                                                  i32_res_27566)
      mem_43110 = None
      defunc_3_map_res_mem_43310 = mem_43308
    else:
      local_memory_capacity_44417 = self.max_local_memory
      if (sle64(((bytes_43125 + srem64((np.int64(8) - srem64(bytes_43125,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43127 + srem64((np.int64(8) - srem64(bytes_43127,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44417)) and suff_outer_par_31181):
        tk_div_tx_41199 = sdiv_up64(Tk_41198, Tx_41196)
        tk_div_ty_41200 = sdiv_up64(Tk_41198, Ty_41194)
        gridDim_x_41207 = sdiv_up64(i32_res_27566, TxRx_41201)
        gridDim_y_41208 = sdiv_up64(m_27551, TyRy_41202)
        grid_sizze_41209 = (gridDim_x_41207 * gridDim_y_41208)
        full_tiles_41238 = squot64(i32_res_27560, Tk_41198)
        kk_41445 = (Tk_41198 * full_tiles_41238)
        mem_43300 = opencl_alloc(self, bytes_43108, "mem_43300")
        if ((1 * (np.long(grid_sizze_41209) * np.long(group_sizze_41210))) != 0):
          self.mainDetailedzisegmap_intragroup_41213_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43127)),
                                                                  cl.LocalMemory(np.long(bytes_43125)),
                                                                  np.int64(N_27550),
                                                                  np.int64(m_27551),
                                                                  np.int64(i32_res_27560),
                                                                  np.int64(i32_res_27566),
                                                                  np.int64(gridDim_x_41207),
                                                                  np.int64(full_tiles_41238),
                                                                  np.int64(kk_41445),
                                                                  images_mem_42841,
                                                                  mem_42853,
                                                                  mem_43300)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41213_var,
                                     ((np.long(grid_sizze_41209) * np.long(group_sizze_41210)),),
                                     (np.long(group_sizze_41210),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43305 = mem_43300
      else:
        mem_43304 = opencl_alloc(self, bytes_43108, "mem_43304")
        if slt64((i32_res_27560 * np.int64(2)), segred_group_sizze_31198):
          segment_sizze_nonzzero_44357 = smax64(np.int64(1), i32_res_27560)
          num_threads_44358 = (num_groups_31199 * segred_group_sizze_31198)
          if ((1 * (np.long(num_groups_31199) * np.long(segred_group_sizze_31198))) != 0):
            self.mainDetailedzisegred_small_31146_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31198))),
                                                               np.int64(N_27550),
                                                               np.int64(m_27551),
                                                               np.int64(i32_res_27560),
                                                               np.int64(i32_res_27566),
                                                               np.int64(num_groups_31199),
                                                               np.int64(segment_sizze_nonzzero_44357),
                                                               images_mem_42841,
                                                               binop_p_mem_42850,
                                                               mem_43304)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31146_var,
                                       ((np.long(num_groups_31199) * np.long(segred_group_sizze_31198)),),
                                       (np.long(segred_group_sizze_31198),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44378 = sdiv_up64(num_groups_31199,
                                               smax64(np.int64(1),
                                                      (m_27551 * i32_res_27566)))
          elements_per_thread_44379 = sdiv_up64(i32_res_27560,
                                                (segred_group_sizze_31198 * groups_per_segment_44378))
          virt_num_groups_44380 = (groups_per_segment_44378 * (m_27551 * i32_res_27566))
          num_threads_44381 = (num_groups_31199 * segred_group_sizze_31198)
          threads_per_segment_44382 = (groups_per_segment_44378 * segred_group_sizze_31198)
          group_res_arr_mem_44383 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31198 * virt_num_groups_44380)),
                                                 "group_res_arr_mem_44383")
          mainDetailedzicounter_mem_44385 = self.mainDetailedzicounter_mem_44385
          if ((1 * (np.long(num_groups_31199) * np.long(segred_group_sizze_31198))) != 0):
            self.mainDetailedzisegred_large_31146_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31198))),
                                                               np.int64(N_27550),
                                                               np.int64(i32_res_27560),
                                                               np.int64(i32_res_27566),
                                                               np.int64(num_groups_31199),
                                                               np.int64(groups_per_segment_44378),
                                                               np.int64(elements_per_thread_44379),
                                                               np.int64(virt_num_groups_44380),
                                                               np.int64(threads_per_segment_44382),
                                                               images_mem_42841,
                                                               binop_p_mem_42850,
                                                               mem_43304,
                                                               group_res_arr_mem_44383,
                                                               mainDetailedzicounter_mem_44385)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31146_var,
                                       ((np.long(num_groups_31199) * np.long(segred_group_sizze_31198)),),
                                       (np.long(segred_group_sizze_31198),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43305 = mem_43304
      defunc_3_map_res_mem_43310 = defunc_3_map_res_mem_43305
    binop_p_mem_42850 = None
    mem_42853 = None
    suff_outer_par_31215 = (self.sizes["mainDetailed.suff_outer_par_18"] <= m_27551)
    segmap_group_sizze_31236 = self.sizes["mainDetailed.segmap_group_size_31219"]
    max_num_groups_44419 = self.sizes["mainDetailed.segmap_num_groups_31221"]
    num_groups_31237 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27551,
                                                            segmap_group_sizze_31236),
                                                  sext_i32_i64(max_num_groups_44419))))
    suff_outer_par_31316 = (self.sizes["mainDetailed.suff_outer_par_19"] <= nest_sizze_30184)
    segred_group_sizze_31331 = self.sizes["mainDetailed.segred_group_size_31277"]
    max_num_groups_44420 = self.sizes["mainDetailed.segred_num_groups_31279"]
    num_groups_31332 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43006,
                                                            segred_group_sizze_31331),
                                                  sext_i32_i64(max_num_groups_44420))))
    tile_sizze_41657 = self.sizes["mainDetailed.tile_size_41656"]
    group_sizze_41658 = (tile_sizze_41657 * tile_sizze_41657)
    bytes_43342 = (np.int64(4) * group_sizze_41658)
    binop_x_43876 = (np.int64(4) * tile_sizze_41657)
    sizze_43877 = (tile_sizze_41657 * binop_x_43876)
    num_threads_43940 = (segmap_group_sizze_31236 * num_groups_31237)
    total_sizze_43941 = (bytes_42908 * num_threads_43940)
    local_memory_capacity_44506 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44506)) and suff_outer_par_31215):
      mem_43314 = opencl_alloc(self, bytes_42903, "mem_43314")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43314, np.int64(0),
                                                  defunc_3_map_res_mem_43089,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_27566 * i32_res_27566),
                                                  m_27551)
      mem_43317 = opencl_alloc(self, bytes_43108, "mem_43317")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43317, np.int64(0),
                                                  defunc_3_map_res_mem_43310,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27566, m_27551)
      mem_43335 = opencl_alloc(self, bytes_43108, "mem_43335")
      mem_43320 = opencl_alloc(self, total_sizze_43941, "mem_43320")
      if ((1 * (np.long(num_groups_31237) * np.long(segmap_group_sizze_31236))) != 0):
        self.mainDetailedzisegmap_31217_var.set_args(self.global_failure,
                                                     np.int64(m_27551),
                                                     np.int32(k2p2zq_27564),
                                                     np.int64(i32_res_27566),
                                                     np.int64(num_groups_31237),
                                                     mem_43314, mem_43317,
                                                     mem_43320, mem_43335)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31217_var,
                                   ((np.long(num_groups_31237) * np.long(segmap_group_sizze_31236)),),
                                   (np.long(segmap_group_sizze_31236),))
        if synchronous:
          sync(self)
      mem_43314 = None
      mem_43317 = None
      mem_43320 = None
      mem_43374 = opencl_alloc(self, bytes_43108, "mem_43374")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43374, np.int64(0),
                                                  mem_43335, np.int64(0),
                                                  np.int64(1), m_27551,
                                                  i32_res_27566)
      mem_43335 = None
      defunc_4_map_res_mem_43376 = mem_43374
    else:
      local_memory_capacity_44505 = self.max_local_memory
      if (sle64(((bytes_43342 + srem64((np.int64(8) - srem64(bytes_43342,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43342 + srem64((np.int64(8) - srem64(bytes_43342,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44505)) and suff_outer_par_31316):
        mem_43339 = opencl_alloc(self, bytes_43004, "mem_43339")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43339, np.int64(0),
                                                    defunc_3_map_res_mem_43089,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_27566,
                                                    (m_27551 * i32_res_27566))
        num_groups_x_41659 = sdiv_up64(m_27551, tile_sizze_41657)
        num_groups_y_41660 = sdiv_up64(i32_res_27566, tile_sizze_41657)
        num_groups_top_41661 = (num_groups_x_41659 * num_groups_y_41660)
        num_whole_tiles_41678 = squot64(i32_res_27566, tile_sizze_41657)
        residual_input_41805 = srem64(i32_res_27566, tile_sizze_41657)
        cond_41806 = (residual_input_41805 == np.int64(0))
        mem_43366 = opencl_alloc(self, bytes_43108, "mem_43366")
        if ((1 * (np.long(num_groups_top_41661) * np.long(group_sizze_41658))) != 0):
          self.mainDetailedzisegmap_intragroup_41662_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43342)),
                                                                  cl.LocalMemory(np.long(bytes_43342)),
                                                                  np.int64(m_27551),
                                                                  np.int64(i32_res_27566),
                                                                  np.int64(num_groups_y_41660),
                                                                  np.int64(num_whole_tiles_41678),
                                                                  np.int64(residual_input_41805),
                                                                  np.byte(cond_41806),
                                                                  defunc_3_map_res_mem_43310,
                                                                  mem_43339,
                                                                  mem_43366)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41662_var,
                                     ((np.long(num_groups_top_41661) * np.long(group_sizze_41658)),),
                                     (np.long(group_sizze_41658),))
          if synchronous:
            sync(self)
        mem_43339 = None
        defunc_4_map_res_mem_43371 = mem_43366
      else:
        mem_43370 = opencl_alloc(self, bytes_43108, "mem_43370")
        if slt64((i32_res_27566 * np.int64(2)), segred_group_sizze_31331):
          segment_sizze_nonzzero_44445 = smax64(np.int64(1), i32_res_27566)
          num_threads_44446 = (num_groups_31332 * segred_group_sizze_31331)
          if ((1 * (np.long(num_groups_31332) * np.long(segred_group_sizze_31331))) != 0):
            self.mainDetailedzisegred_small_31283_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31331))),
                                                               np.int64(m_27551),
                                                               np.int64(i32_res_27566),
                                                               np.int64(num_groups_31332),
                                                               np.int64(segment_sizze_nonzzero_44445),
                                                               defunc_3_map_res_mem_43089,
                                                               defunc_3_map_res_mem_43310,
                                                               mem_43370)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31283_var,
                                       ((np.long(num_groups_31332) * np.long(segred_group_sizze_31331)),),
                                       (np.long(segred_group_sizze_31331),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44466 = sdiv_up64(num_groups_31332,
                                               smax64(np.int64(1),
                                                      (m_27551 * i32_res_27566)))
          elements_per_thread_44467 = sdiv_up64(i32_res_27566,
                                                (segred_group_sizze_31331 * groups_per_segment_44466))
          virt_num_groups_44468 = (groups_per_segment_44466 * (m_27551 * i32_res_27566))
          num_threads_44469 = (num_groups_31332 * segred_group_sizze_31331)
          threads_per_segment_44470 = (groups_per_segment_44466 * segred_group_sizze_31331)
          group_res_arr_mem_44471 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31331 * virt_num_groups_44468)),
                                                 "group_res_arr_mem_44471")
          mainDetailedzicounter_mem_44473 = self.mainDetailedzicounter_mem_44473
          if ((1 * (np.long(num_groups_31332) * np.long(segred_group_sizze_31331))) != 0):
            self.mainDetailedzisegred_large_31283_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31331))),
                                                               np.int64(i32_res_27566),
                                                               np.int64(num_groups_31332),
                                                               np.int64(groups_per_segment_44466),
                                                               np.int64(elements_per_thread_44467),
                                                               np.int64(virt_num_groups_44468),
                                                               np.int64(threads_per_segment_44470),
                                                               defunc_3_map_res_mem_43089,
                                                               defunc_3_map_res_mem_43310,
                                                               mem_43370,
                                                               group_res_arr_mem_44471,
                                                               mainDetailedzicounter_mem_44473)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31283_var,
                                       ((np.long(num_groups_31332) * np.long(segred_group_sizze_31331)),),
                                       (np.long(segred_group_sizze_31331),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43371 = mem_43370
      defunc_4_map_res_mem_43376 = defunc_4_map_res_mem_43371
    defunc_3_map_res_mem_43089 = None
    defunc_3_map_res_mem_43310 = None
    suff_outer_par_31347 = (self.sizes["mainDetailed.suff_outer_par_20"] <= m_27551)
    segmap_group_sizze_31367 = self.sizes["mainDetailed.segmap_group_size_31351"]
    max_num_groups_44507 = self.sizes["mainDetailed.segmap_num_groups_31353"]
    num_groups_31368 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27551,
                                                            segmap_group_sizze_31367),
                                                  sext_i32_i64(max_num_groups_44507))))
    suff_outer_par_31444 = (self.sizes["mainDetailed.suff_outer_par_21"] <= binop_x_42859)
    nest_sizze_31458 = (i32_res_27566 * binop_x_42859)
    segred_group_sizze_31459 = self.sizes["mainDetailed.segred_group_size_31407"]
    max_num_groups_44508 = self.sizes["mainDetailed.segred_num_groups_31409"]
    num_groups_31460 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_31458,
                                                            segred_group_sizze_31459),
                                                  sext_i32_i64(max_num_groups_44508))))
    Ty_41935 = self.sizes["mainDetailed.Ty_41932"]
    Ry_41936 = self.sizes["mainDetailed.Ry_41934"]
    Tx_41937 = self.sizes["mainDetailed.Tx_41931"]
    Rx_41938 = self.sizes["mainDetailed.Rx_41933"]
    Tk_41939 = self.sizes["mainDetailed.Tk_41930"]
    TxRx_41942 = (Tx_41937 * Rx_41938)
    TyRy_41943 = (Ty_41935 * Ry_41936)
    a_loc_szz_41945 = (Tk_41939 * TyRy_41943)
    binop_x_41946 = (Tx_41937 * Tk_41939)
    b_loc_szz_41947 = (Rx_41938 * binop_x_41946)
    group_sizze_41951 = (Ty_41935 * Tx_41937)
    bytes_43381 = (np.int64(4) * N_27550)
    binop_x_43412 = (Ry_41936 * group_sizze_41951)
    binop_x_43413 = (Rx_41938 * binop_x_43412)
    bytes_43410 = (np.int64(4) * binop_x_43413)
    binop_x_43404 = (Ry_41936 * Rx_41938)
    bytes_43403 = (np.int64(4) * binop_x_43404)
    bytes_43415 = (np.int64(4) * a_loc_szz_41945)
    bytes_43417 = (np.int64(4) * b_loc_szz_41947)
    bytes_43486 = (np.int64(4) * binop_x_43412)
    binop_x_43492 = (Rx_41938 * group_sizze_41951)
    bytes_43490 = (np.int64(4) * binop_x_43492)
    bytes_43478 = (np.int64(4) * Ry_41936)
    bytes_43480 = (np.int64(4) * Rx_41938)
    binop_x_43890 = (np.int64(4) * Ty_41935)
    binop_x_43891 = (Tx_41937 * binop_x_43890)
    binop_x_43892 = (Ry_41936 * binop_x_43891)
    sizze_43893 = (Rx_41938 * binop_x_43892)
    num_threads_43944 = (segmap_group_sizze_31367 * num_groups_31368)
    total_sizze_43945 = (bytes_43381 * num_threads_43944)
    local_memory_capacity_44638 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44638)) and suff_outer_par_31347):
      mem_43379 = opencl_alloc(self, bytes_43108, "mem_43379")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43379, np.int64(0),
                                                  defunc_4_map_res_mem_43376,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_27566, m_27551)
      mem_43397 = opencl_alloc(self, bytes_42858, "mem_43397")
      mem_43382 = opencl_alloc(self, total_sizze_43945, "mem_43382")
      if ((1 * (np.long(num_groups_31368) * np.long(segmap_group_sizze_31367))) != 0):
        self.mainDetailedzisegmap_31349_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.int64(m_27551),
                                                     np.int32(k2p2zq_27564),
                                                     np.int64(i32_res_27566),
                                                     np.int64(num_groups_31368),
                                                     mem_42857, mem_43379,
                                                     mem_43382, mem_43397)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31349_var,
                                   ((np.long(num_groups_31368) * np.long(segmap_group_sizze_31367)),),
                                   (np.long(segmap_group_sizze_31367),))
        if synchronous:
          sync(self)
      mem_43379 = None
      mem_43382 = None
      mem_43598 = opencl_alloc(self, bytes_42858, "mem_43598")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43598, np.int64(0),
                                                  mem_43397, np.int64(0),
                                                  np.int64(1), m_27551, N_27550)
      mem_43397 = None
      defunc_3_map_res_mem_43600 = mem_43598
    else:
      local_memory_capacity_44637 = self.max_local_memory
      if (sle64(((bytes_43415 + srem64((np.int64(8) - srem64(bytes_43415,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43417 + srem64((np.int64(8) - srem64(bytes_43417,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44637)) and suff_outer_par_31444):
        mem_43400 = opencl_alloc(self, bytes_42843, "mem_43400")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43400, np.int64(0),
                                                    mem_42857, np.int64(0),
                                                    np.int64(1), i32_res_27566,
                                                    N_27550)
        tk_div_tx_41940 = sdiv_up64(Tk_41939, Tx_41937)
        tk_div_ty_41941 = sdiv_up64(Tk_41939, Ty_41935)
        gridDim_x_41948 = sdiv_up64(N_27550, TxRx_41942)
        gridDim_y_41949 = sdiv_up64(m_27551, TyRy_41943)
        grid_sizze_41950 = (gridDim_x_41948 * gridDim_y_41949)
        full_tiles_41979 = squot64(i32_res_27566, Tk_41939)
        kk_42182 = (Tk_41939 * full_tiles_41979)
        mem_43590 = opencl_alloc(self, bytes_42858, "mem_43590")
        if ((1 * (np.long(grid_sizze_41950) * np.long(group_sizze_41951))) != 0):
          self.mainDetailedzisegmap_intragroup_41954_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(bytes_43417)),
                                                                  cl.LocalMemory(np.long(bytes_43415)),
                                                                  np.int64(N_27550),
                                                                  np.int64(m_27551),
                                                                  np.int64(i32_res_27566),
                                                                  np.int64(gridDim_x_41948),
                                                                  np.int64(full_tiles_41979),
                                                                  np.int64(kk_42182),
                                                                  defunc_4_map_res_mem_43376,
                                                                  mem_43400,
                                                                  mem_43590)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_41954_var,
                                     ((np.long(grid_sizze_41950) * np.long(group_sizze_41951)),),
                                     (np.long(group_sizze_41951),))
          if synchronous:
            sync(self)
        mem_43400 = None
        defunc_3_map_res_mem_43595 = mem_43590
      else:
        mem_43594 = opencl_alloc(self, bytes_42858, "mem_43594")
        if slt64((i32_res_27566 * np.int64(2)), segred_group_sizze_31459):
          segment_sizze_nonzzero_44577 = smax64(np.int64(1), i32_res_27566)
          num_threads_44578 = (num_groups_31460 * segred_group_sizze_31459)
          if ((1 * (np.long(num_groups_31460) * np.long(segred_group_sizze_31459))) != 0):
            self.mainDetailedzisegred_small_31413_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31459))),
                                                               np.int64(N_27550),
                                                               np.int64(m_27551),
                                                               np.int64(i32_res_27566),
                                                               np.int64(num_groups_31460),
                                                               np.int64(segment_sizze_nonzzero_44577),
                                                               mem_42857,
                                                               defunc_4_map_res_mem_43376,
                                                               mem_43594)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31413_var,
                                       ((np.long(num_groups_31460) * np.long(segred_group_sizze_31459)),),
                                       (np.long(segred_group_sizze_31459),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44598 = sdiv_up64(num_groups_31460,
                                               smax64(np.int64(1),
                                                      (m_27551 * N_27550)))
          elements_per_thread_44599 = sdiv_up64(i32_res_27566,
                                                (segred_group_sizze_31459 * groups_per_segment_44598))
          virt_num_groups_44600 = (groups_per_segment_44598 * (m_27551 * N_27550))
          num_threads_44601 = (num_groups_31460 * segred_group_sizze_31459)
          threads_per_segment_44602 = (groups_per_segment_44598 * segred_group_sizze_31459)
          group_res_arr_mem_44603 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_31459 * virt_num_groups_44600)),
                                                 "group_res_arr_mem_44603")
          mainDetailedzicounter_mem_44605 = self.mainDetailedzicounter_mem_44605
          if ((1 * (np.long(num_groups_31460) * np.long(segred_group_sizze_31459))) != 0):
            self.mainDetailedzisegred_large_31413_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_31459))),
                                                               np.int64(N_27550),
                                                               np.int64(i32_res_27566),
                                                               np.int64(num_groups_31460),
                                                               np.int64(groups_per_segment_44598),
                                                               np.int64(elements_per_thread_44599),
                                                               np.int64(virt_num_groups_44600),
                                                               np.int64(threads_per_segment_44602),
                                                               mem_42857,
                                                               defunc_4_map_res_mem_43376,
                                                               mem_43594,
                                                               group_res_arr_mem_44603,
                                                               mainDetailedzicounter_mem_44605)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31413_var,
                                       ((np.long(num_groups_31460) * np.long(segred_group_sizze_31459)),),
                                       (np.long(segred_group_sizze_31459),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43595 = mem_43594
      defunc_3_map_res_mem_43600 = defunc_3_map_res_mem_43595
    mem_42857 = None
    defunc_4_map_res_mem_43376 = None
    i_27826 = (N_27550 - np.int64(1))
    x_27827 = sle64(np.int64(0), i_27826)
    y_27828 = slt64(i_27826, N_27550)
    bounds_check_27829 = (x_27827 and y_27828)
    index_certs_27830 = True
    assert bounds_check_27829, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:78:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:72:5-81:25\n   #6  bfastfinal.fut:178:3-56\n   #7  bfastfinal.fut:174:1-178:56\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_27826,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_27550,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_31589 = sle64(N_27550, max_group_sizze_30452)
    suff_intra_par_31587 = (self.sizes["mainDetailed.suff_intra_par_24"] <= N_27550)
    intra_suff_and_fits_31590 = (suff_intra_par_31587 and fits_31589)
    segscan_group_sizze_31739 = self.sizes["mainDetailed.segscan_group_size_31716"]
    max_num_groups_44639 = self.sizes["mainDetailed.segscan_num_groups_31718"]
    num_groups_31740 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42859,
                                                            segscan_group_sizze_31739),
                                                  sext_i32_i64(max_num_groups_44639))))
    segmap_group_sizze_31759 = self.sizes["mainDetailed.segmap_group_size_31707"]
    segmap_group_sizze_31795 = self.sizes["mainDetailed.segmap_group_size_31632"]
    bytes_43612 = (np.int64(4) * m_27551)
    bytes_43603 = (np.int64(8) * N_27550)
    bytes_43621 = (np.int64(8) * binop_x_42859)
    local_memory_capacity_44741 = self.max_local_memory
    if (sle64(((((bytes_43603 + srem64((np.int64(8) - srem64(bytes_43603,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44741)) and intra_suff_and_fits_31590):
      mem_43613 = opencl_alloc(self, bytes_43612, "mem_43613")
      mem_43616 = opencl_alloc(self, bytes_42858, "mem_43616")
      mem_43619 = opencl_alloc(self, bytes_42858, "mem_43619")
      if ((1 * (np.long(m_27551) * np.long(N_27550))) != 0):
        self.mainDetailedzisegmap_intragroup_31512_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43381)),
                                                                cl.LocalMemory(np.long(bytes_43381)),
                                                                cl.LocalMemory(np.long(bytes_43381)),
                                                                cl.LocalMemory(np.long(bytes_43603)),
                                                                np.int64(N_27550),
                                                                np.int64(i_27826),
                                                                images_mem_42841,
                                                                defunc_3_map_res_mem_43600,
                                                                mem_43613,
                                                                mem_43616,
                                                                mem_43619)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_31512_var,
                                   ((np.long(m_27551) * np.long(N_27550)),),
                                   (np.long(N_27550),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43637 = mem_43613
      defunc_4_map_res_mem_43638 = mem_43616
      defunc_4_map_res_mem_43639 = mem_43619
    else:
      mem_43623 = opencl_alloc(self, bytes_43621, "mem_43623")
      mem_43626 = opencl_alloc(self, bytes_42858, "mem_43626")
      if slt64(np.int64(0), (m_27551 * N_27550)):
        stage1_max_num_groups_44657 = self.max_group_size
        stage1_num_groups_44658 = smin64(stage1_max_num_groups_44657,
                                         num_groups_31740)
        num_threads_44659 = sext_i64_i32((stage1_num_groups_44658 * segscan_group_sizze_31739))
        if ((1 * (np.long(stage1_num_groups_44658) * np.long(segscan_group_sizze_31739))) != 0):
          self.mainDetailedziscan_stage1_31722_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * segscan_group_sizze_31739)))),
                                                            np.int64(N_27550),
                                                            np.int64(m_27551),
                                                            np.int32(num_threads_44659),
                                                            images_mem_42841,
                                                            defunc_3_map_res_mem_43600,
                                                            mem_43623,
                                                            mem_43626)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_31722_var,
                                     ((np.long(stage1_num_groups_44658) * np.long(segscan_group_sizze_31739)),),
                                     (np.long(segscan_group_sizze_31739),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44658))) != 0):
          self.mainDetailedziscan_stage2_31722_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(8) * stage1_num_groups_44658)))),
                                                            np.int64(N_27550),
                                                            np.int64(m_27551),
                                                            np.int64(stage1_num_groups_44658),
                                                            np.int32(num_threads_44659),
                                                            mem_43623)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_31722_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44658)),),
                                     (np.long(stage1_num_groups_44658),))
          if synchronous:
            sync(self)
        required_groups_44701 = sext_i64_i32(sdiv_up64((m_27551 * N_27550),
                                                       segscan_group_sizze_31739))
        if ((1 * (np.long(num_groups_31740) * np.long(segscan_group_sizze_31739))) != 0):
          self.mainDetailedziscan_stage3_31722_var.set_args(self.global_failure,
                                                            np.int64(N_27550),
                                                            np.int64(m_27551),
                                                            np.int64(num_groups_31740),
                                                            np.int32(num_threads_44659),
                                                            np.int32(required_groups_44701),
                                                            mem_43623)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_31722_var,
                                     ((np.long(num_groups_31740) * np.long(segscan_group_sizze_31739)),),
                                     (np.long(segscan_group_sizze_31739),))
          if synchronous:
            sync(self)
      segmap_usable_groups_31760 = sdiv_up64(m_27551, segmap_group_sizze_31759)
      mem_43629 = opencl_alloc(self, bytes_43612, "mem_43629")
      if ((1 * (np.long(segmap_usable_groups_31760) * np.long(segmap_group_sizze_31759))) != 0):
        self.mainDetailedzisegmap_31705_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.int64(m_27551),
                                                     np.int64(i_27826),
                                                     mem_43623, mem_43629)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31705_var,
                                   ((np.long(segmap_usable_groups_31760) * np.long(segmap_group_sizze_31759)),),
                                   (np.long(segmap_group_sizze_31759),))
        if synchronous:
          sync(self)
      mem_43632 = opencl_alloc(self, bytes_42858, "mem_43632")
      self.futhark_builtinzhreplicate_f32(mem_43632, (m_27551 * N_27550),
                                          np.nan)
      mem_43635 = opencl_alloc(self, bytes_42858, "mem_43635")
      self.futhark_builtinzhreplicate_i32(mem_43635, (m_27551 * N_27550),
                                          np.int32(0))
      segmap_usable_groups_31796 = sdiv_up64(binop_x_42859,
                                             segmap_group_sizze_31795)
      if ((1 * (np.long(segmap_usable_groups_31796) * np.long(segmap_group_sizze_31795))) != 0):
        self.mainDetailedzisegmap_31629_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.int64(m_27551),
                                                     mem_43623, mem_43626,
                                                     mem_43632, mem_43635)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_31629_var,
                                   ((np.long(segmap_usable_groups_31796) * np.long(segmap_group_sizze_31795)),),
                                   (np.long(segmap_group_sizze_31795),))
        if synchronous:
          sync(self)
      mem_43623 = None
      mem_43626 = None
      defunc_4_map_res_mem_43637 = mem_43629
      defunc_4_map_res_mem_43638 = mem_43632
      defunc_4_map_res_mem_43639 = mem_43635
    suff_outer_par_31844 = (self.sizes["mainDetailed.suff_outer_par_28"] <= m_27551)
    fits_31922 = sle64(i32_res_27560, max_group_sizze_30452)
    suff_intra_par_31920 = (self.sizes["mainDetailed.suff_intra_par_29"] <= i32_res_27560)
    intra_suff_and_fits_31923 = (suff_intra_par_31920 and fits_31922)
    segmap_group_sizze_31887 = self.sizes["mainDetailed.segmap_group_size_31856"]
    nest_sizze_32010 = (m_27551 * i32_res_27560)
    segred_group_sizze_32011 = self.sizes["mainDetailed.segred_group_size_31994"]
    max_num_groups_44742 = self.sizes["mainDetailed.segred_num_groups_31996"]
    num_groups_32012 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32010,
                                                            segred_group_sizze_32011),
                                                  sext_i32_i64(max_num_groups_44742))))
    segred_group_sizze_32025 = self.sizes["mainDetailed.segred_group_size_31973"]
    max_num_groups_44743 = self.sizes["mainDetailed.segred_num_groups_31975"]
    num_groups_32026 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32010,
                                                            segred_group_sizze_32025),
                                                  sext_i32_i64(max_num_groups_44743))))
    segmap_group_sizze_32041 = self.sizes["mainDetailed.segmap_group_size_31958"]
    bytes_43648 = (np.int64(4) * segmap_group_sizze_31887)
    local_memory_capacity_44895 = self.max_local_memory
    if (sle64(((bytes_43648 + srem64((np.int64(8) - srem64(bytes_43648,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43648 + srem64((np.int64(8) - srem64(bytes_43648,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44895)) and suff_outer_par_31844):
      segmap_usable_groups_31888 = sdiv_up64(m_27551, segmap_group_sizze_31887)
      mem_43642 = opencl_alloc(self, bytes_42858, "mem_43642")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43642, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_27550, m_27551)
      mem_43645 = opencl_alloc(self, bytes_42858, "mem_43645")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43645, np.int64(0),
                                                  defunc_4_map_res_mem_43638,
                                                  np.int64(0), np.int64(1),
                                                  N_27550, m_27551)
      num_whole_tiles_42410 = squot64(i32_res_27560, segmap_group_sizze_31887)
      residual_input_42499 = srem64(i32_res_27560, segmap_group_sizze_31887)
      cond_42500 = (residual_input_42499 == np.int64(0))
      mem_43676 = opencl_alloc(self, bytes_43612, "mem_43676")
      mem_43678 = opencl_alloc(self, bytes_43612, "mem_43678")
      mem_43680 = opencl_alloc(self, bytes_43612, "mem_43680")
      if ((1 * (np.long(segmap_usable_groups_31888) * np.long(segmap_group_sizze_31887))) != 0):
        self.mainDetailedzisegmap_intragroup_42388_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43648)),
                                                                cl.LocalMemory(np.long(bytes_43648)),
                                                                np.int64(m_27551),
                                                                np.int32(n_27554),
                                                                np.float32(hfrac_27556),
                                                                np.int64(i32_res_27560),
                                                                np.int32(k2p2_27562),
                                                                np.int64(num_whole_tiles_42410),
                                                                np.int64(residual_input_42499),
                                                                np.byte(cond_42500),
                                                                mem_43642,
                                                                mem_43645,
                                                                mem_43676,
                                                                mem_43678,
                                                                mem_43680)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42388_var,
                                   ((np.long(segmap_usable_groups_31888) * np.long(segmap_group_sizze_31887)),),
                                   (np.long(segmap_group_sizze_31887),))
        if synchronous:
          sync(self)
      mem_43642 = None
      mem_43645 = None
      defunc_3_map_res_mem_43704 = mem_43676
      defunc_3_map_res_mem_43705 = mem_43678
      defunc_3_map_res_mem_43706 = mem_43680
    else:
      local_memory_capacity_44894 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_27560) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_27560),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_27560) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_27560),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44894)) and intra_suff_and_fits_31923):
        mem_43685 = opencl_alloc(self, bytes_43612, "mem_43685")
        mem_43687 = opencl_alloc(self, bytes_43612, "mem_43687")
        mem_43689 = opencl_alloc(self, bytes_43612, "mem_43689")
        if ((1 * (np.long(m_27551) * np.long(i32_res_27560))) != 0):
          self.mainDetailedzisegmap_intragroup_31852_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27560))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * i32_res_27560))),
                                                                  np.int64(N_27550),
                                                                  np.float32(hfrac_27556),
                                                                  np.int64(i32_res_27560),
                                                                  np.int32(k2p2_27562),
                                                                  images_mem_42841,
                                                                  defunc_4_map_res_mem_43638,
                                                                  mem_43685,
                                                                  mem_43687,
                                                                  mem_43689)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_intragroup_31852_var,
                                     ((np.long(m_27551) * np.long(i32_res_27560)),),
                                     (np.long(i32_res_27560),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43701 = mem_43685
        defunc_3_map_res_mem_43702 = mem_43687
        defunc_3_map_res_mem_43703 = mem_43689
      else:
        mem_43692 = opencl_alloc(self, bytes_43612, "mem_43692")
        if slt64((i32_res_27560 * np.int64(2)), segred_group_sizze_32011):
          segment_sizze_nonzzero_44769 = smax64(np.int64(1), i32_res_27560)
          num_threads_44770 = (num_groups_32012 * segred_group_sizze_32011)
          if ((1 * (np.long(num_groups_32012) * np.long(segred_group_sizze_32011))) != 0):
            self.mainDetailedzisegred_small_32000_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32011))),
                                                               np.int64(N_27550),
                                                               np.int64(m_27551),
                                                               np.int64(i32_res_27560),
                                                               np.int64(num_groups_32012),
                                                               np.int64(segment_sizze_nonzzero_44769),
                                                               images_mem_42841,
                                                               mem_43692)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_32000_var,
                                       ((np.long(num_groups_32012) * np.long(segred_group_sizze_32011)),),
                                       (np.long(segred_group_sizze_32011),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44790 = sdiv_up64(num_groups_32012,
                                               smax64(np.int64(1), m_27551))
          elements_per_thread_44791 = sdiv_up64(i32_res_27560,
                                                (segred_group_sizze_32011 * groups_per_segment_44790))
          virt_num_groups_44792 = (groups_per_segment_44790 * m_27551)
          num_threads_44793 = (num_groups_32012 * segred_group_sizze_32011)
          threads_per_segment_44794 = (groups_per_segment_44790 * segred_group_sizze_32011)
          group_res_arr_mem_44795 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32011 * virt_num_groups_44792)),
                                                 "group_res_arr_mem_44795")
          mainDetailedzicounter_mem_44797 = self.mainDetailedzicounter_mem_44797
          if ((1 * (np.long(num_groups_32012) * np.long(segred_group_sizze_32011))) != 0):
            self.mainDetailedzisegred_large_32000_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32011))),
                                                               np.int64(N_27550),
                                                               np.int64(i32_res_27560),
                                                               np.int64(num_groups_32012),
                                                               np.int64(groups_per_segment_44790),
                                                               np.int64(elements_per_thread_44791),
                                                               np.int64(virt_num_groups_44792),
                                                               np.int64(threads_per_segment_44794),
                                                               images_mem_42841,
                                                               mem_43692,
                                                               group_res_arr_mem_44795,
                                                               mainDetailedzicounter_mem_44797)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_32000_var,
                                       ((np.long(num_groups_32012) * np.long(segred_group_sizze_32011)),),
                                       (np.long(segred_group_sizze_32011),))
            if synchronous:
              sync(self)
        mem_43695 = opencl_alloc(self, bytes_43612, "mem_43695")
        if slt64((i32_res_27560 * np.int64(2)), segred_group_sizze_32025):
          segment_sizze_nonzzero_44829 = smax64(np.int64(1), i32_res_27560)
          num_threads_44830 = (num_groups_32026 * segred_group_sizze_32025)
          if ((1 * (np.long(num_groups_32026) * np.long(segred_group_sizze_32025))) != 0):
            self.mainDetailedzisegred_small_31979_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32025))),
                                                               np.int64(N_27550),
                                                               np.int64(m_27551),
                                                               np.int64(i32_res_27560),
                                                               np.int64(num_groups_32026),
                                                               np.int64(segment_sizze_nonzzero_44829),
                                                               defunc_4_map_res_mem_43638,
                                                               mem_43692,
                                                               mem_43695)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_small_31979_var,
                                       ((np.long(num_groups_32026) * np.long(segred_group_sizze_32025)),),
                                       (np.long(segred_group_sizze_32025),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44850 = sdiv_up64(num_groups_32026,
                                               smax64(np.int64(1), m_27551))
          elements_per_thread_44851 = sdiv_up64(i32_res_27560,
                                                (segred_group_sizze_32025 * groups_per_segment_44850))
          virt_num_groups_44852 = (groups_per_segment_44850 * m_27551)
          num_threads_44853 = (num_groups_32026 * segred_group_sizze_32025)
          threads_per_segment_44854 = (groups_per_segment_44850 * segred_group_sizze_32025)
          group_res_arr_mem_44855 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_32025 * virt_num_groups_44852)),
                                                 "group_res_arr_mem_44855")
          mainDetailedzicounter_mem_44857 = self.mainDetailedzicounter_mem_44857
          if ((1 * (np.long(num_groups_32026) * np.long(segred_group_sizze_32025))) != 0):
            self.mainDetailedzisegred_large_31979_var.set_args(self.global_failure,
                                                               cl.LocalMemory(np.long(np.int32(1))),
                                                               cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32025))),
                                                               np.int64(N_27550),
                                                               np.int64(i32_res_27560),
                                                               np.int64(num_groups_32026),
                                                               np.int64(groups_per_segment_44850),
                                                               np.int64(elements_per_thread_44851),
                                                               np.int64(virt_num_groups_44852),
                                                               np.int64(threads_per_segment_44854),
                                                               defunc_4_map_res_mem_43638,
                                                               mem_43692,
                                                               mem_43695,
                                                               group_res_arr_mem_44855,
                                                               mainDetailedzicounter_mem_44857)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainDetailedzisegred_large_31979_var,
                                       ((np.long(num_groups_32026) * np.long(segred_group_sizze_32025)),),
                                       (np.long(segred_group_sizze_32025),))
            if synchronous:
              sync(self)
        segmap_usable_groups_32042 = sdiv_up64(m_27551,
                                               segmap_group_sizze_32041)
        mem_43698 = opencl_alloc(self, bytes_43612, "mem_43698")
        mem_43700 = opencl_alloc(self, bytes_43612, "mem_43700")
        if ((1 * (np.long(segmap_usable_groups_32042) * np.long(segmap_group_sizze_32041))) != 0):
          self.mainDetailedzisegmap_31956_var.set_args(self.global_failure,
                                                       np.int64(m_27551),
                                                       np.float32(hfrac_27556),
                                                       np.int32(k2p2_27562),
                                                       mem_43692, mem_43695,
                                                       mem_43698, mem_43700)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegmap_31956_var,
                                     ((np.long(segmap_usable_groups_32042) * np.long(segmap_group_sizze_32041)),),
                                     (np.long(segmap_group_sizze_32041),))
          if synchronous:
            sync(self)
        mem_43695 = None
        defunc_3_map_res_mem_43701 = mem_43698
        defunc_3_map_res_mem_43702 = mem_43692
        defunc_3_map_res_mem_43703 = mem_43700
      defunc_3_map_res_mem_43704 = defunc_3_map_res_mem_43701
      defunc_3_map_res_mem_43705 = defunc_3_map_res_mem_43702
      defunc_3_map_res_mem_43706 = defunc_3_map_res_mem_43703
    segred_group_sizze_32062 = self.sizes["mainDetailed.segred_group_size_32061"]
    max_num_groups_44896 = self.sizes["mainDetailed.segred_num_groups_32063"]
    num_groups_32064 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27551,
                                                            segred_group_sizze_32062),
                                                  sext_i32_i64(max_num_groups_44896))))
    mem_43709 = opencl_alloc(self, np.int64(4), "mem_43709")
    mainDetailedzicounter_mem_44897 = self.mainDetailedzicounter_mem_44897
    group_res_arr_mem_44899 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_32062 * num_groups_32064)),
                                           "group_res_arr_mem_44899")
    num_threads_44901 = (num_groups_32064 * segred_group_sizze_32062)
    if ((1 * (np.long(num_groups_32064) * np.long(segred_group_sizze_32062))) != 0):
      self.mainDetailedzisegred_nonseg_32069_var.set_args(self.global_failure,
                                                          cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32062))),
                                                          cl.LocalMemory(np.long(np.int32(1))),
                                                          np.int64(m_27551),
                                                          np.int64(num_groups_32064),
                                                          np.int64(num_threads_44901),
                                                          defunc_3_map_res_mem_43704,
                                                          mem_43709,
                                                          mainDetailedzicounter_mem_44897,
                                                          group_res_arr_mem_44899)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegred_nonseg_32069_var,
                                 ((np.long(num_groups_32064) * np.long(segred_group_sizze_32062)),),
                                 (np.long(segred_group_sizze_32062),))
      if synchronous:
        sync(self)
    read_res_45252 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45252, mem_43709,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_27916 = read_res_45252[0]
    mem_43709 = None
    i32_res_27921 = sext_i32_i64(defunc_2_reduce_comm_res_27916)
    bounds_invalid_upwards_27922 = slt64(i32_res_27921, np.int64(0))
    valid_27923 = not(bounds_invalid_upwards_27922)
    range_valid_c_27924 = True
    assert valid_27923, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:106:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:101:17-108:24\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_27921,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_32101 = (self.sizes["mainDetailed.suff_outer_par_31"] <= m_27551)
    segmap_group_sizze_32124 = self.sizes["mainDetailed.segmap_group_size_32105"]
    nest_sizze_32167 = (m_27551 * i32_res_27921)
    segred_group_sizze_32168 = self.sizes["mainDetailed.segred_group_size_32145"]
    max_num_groups_44927 = self.sizes["mainDetailed.segred_num_groups_32147"]
    num_groups_32169 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32167,
                                                            segred_group_sizze_32168),
                                                  sext_i32_i64(max_num_groups_44927))))
    bytes_43712 = (np.int64(4) * segmap_group_sizze_32124)
    local_memory_capacity_44998 = self.max_local_memory
    if (sle64(((bytes_43712 + srem64((np.int64(8) - srem64(bytes_43712,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43712 + srem64((np.int64(8) - srem64(bytes_43712,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44998)) and suff_outer_par_32101):
      segmap_usable_groups_32125 = sdiv_up64(m_27551, segmap_group_sizze_32124)
      num_whole_tiles_42598 = squot64(i32_res_27921, segmap_group_sizze_32124)
      residual_input_42697 = srem64(i32_res_27921, segmap_group_sizze_32124)
      cond_42698 = (residual_input_42697 == np.int64(0))
      mem_43735 = opencl_alloc(self, bytes_43612, "mem_43735")
      if ((1 * (np.long(segmap_usable_groups_32125) * np.long(segmap_group_sizze_32124))) != 0):
        self.mainDetailedzisegmap_intragroup_42578_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43712)),
                                                                cl.LocalMemory(np.long(bytes_43712)),
                                                                np.int64(N_27550),
                                                                np.int64(m_27551),
                                                                np.int64(i32_res_27921),
                                                                np.int64(num_whole_tiles_42598),
                                                                np.int64(residual_input_42697),
                                                                np.byte(cond_42698),
                                                                defunc_4_map_res_mem_43638,
                                                                defunc_3_map_res_mem_43704,
                                                                defunc_3_map_res_mem_43705,
                                                                mem_43735)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_42578_var,
                                   ((np.long(segmap_usable_groups_32125) * np.long(segmap_group_sizze_32124)),),
                                   (np.long(segmap_group_sizze_32124),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43739 = mem_43735
    else:
      mem_43738 = opencl_alloc(self, bytes_43612, "mem_43738")
      if slt64((i32_res_27921 * np.int64(2)), segred_group_sizze_32168):
        segment_sizze_nonzzero_44938 = smax64(np.int64(1), i32_res_27921)
        num_threads_44939 = (num_groups_32169 * segred_group_sizze_32168)
        if ((1 * (np.long(num_groups_32169) * np.long(segred_group_sizze_32168))) != 0):
          self.mainDetailedzisegred_small_32151_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32168))),
                                                             np.int64(N_27550),
                                                             np.int64(m_27551),
                                                             np.int64(i32_res_27921),
                                                             np.int64(num_groups_32169),
                                                             np.int64(segment_sizze_nonzzero_44938),
                                                             defunc_4_map_res_mem_43638,
                                                             defunc_3_map_res_mem_43704,
                                                             defunc_3_map_res_mem_43705,
                                                             mem_43738)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_32151_var,
                                     ((np.long(num_groups_32169) * np.long(segred_group_sizze_32168)),),
                                     (np.long(segred_group_sizze_32168),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44959 = sdiv_up64(num_groups_32169,
                                             smax64(np.int64(1), m_27551))
        elements_per_thread_44960 = sdiv_up64(i32_res_27921,
                                              (segred_group_sizze_32168 * groups_per_segment_44959))
        virt_num_groups_44961 = (groups_per_segment_44959 * m_27551)
        num_threads_44962 = (num_groups_32169 * segred_group_sizze_32168)
        threads_per_segment_44963 = (groups_per_segment_44959 * segred_group_sizze_32168)
        group_res_arr_mem_44964 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_32168 * virt_num_groups_44961)),
                                               "group_res_arr_mem_44964")
        mainDetailedzicounter_mem_44966 = self.mainDetailedzicounter_mem_44966
        if ((1 * (np.long(num_groups_32169) * np.long(segred_group_sizze_32168))) != 0):
          self.mainDetailedzisegred_large_32151_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_32168))),
                                                             np.int64(N_27550),
                                                             np.int64(i32_res_27921),
                                                             np.int64(num_groups_32169),
                                                             np.int64(groups_per_segment_44959),
                                                             np.int64(elements_per_thread_44960),
                                                             np.int64(virt_num_groups_44961),
                                                             np.int64(threads_per_segment_44963),
                                                             defunc_4_map_res_mem_43638,
                                                             defunc_3_map_res_mem_43704,
                                                             defunc_3_map_res_mem_43705,
                                                             mem_43738,
                                                             group_res_arr_mem_44964,
                                                             mainDetailedzicounter_mem_44966)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_32151_var,
                                     ((np.long(num_groups_32169) * np.long(segred_group_sizze_32168)),),
                                     (np.long(segred_group_sizze_32168),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43739 = mem_43738
    iota32_arg_27946 = (N_27550 - i32_res_27560)
    bounds_invalid_upwards_27947 = slt64(iota32_arg_27946, np.int64(0))
    valid_27948 = not(bounds_invalid_upwards_27947)
    range_valid_c_27949 = True
    assert valid_27948, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:114:22-35\n   #3  bfastfinal.fut:178:3-56\n   #4  bfastfinal.fut:174:1-178:56\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_27946,
                                                                                                                                                                                                                                      " is invalid."))
    x_27951 = (np.int32(1) + n_27554)
    i_27952 = (n_27554 - np.int32(1))
    i_27953 = sext_i32_i64(i_27952)
    x_27954 = sle64(np.int64(0), i_27953)
    y_27955 = slt64(i_27953, N_27550)
    bounds_check_27956 = (x_27954 and y_27955)
    index_certs_27957 = True
    assert bounds_check_27956, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:112:64-84\n   #1  bfastfinal.fut:110:15-114:36\n   #2  bfastfinal.fut:178:3-56\n   #3  bfastfinal.fut:174:1-178:56\n" % ("Index [",
                                                                                                                                                                                                                 i_27953,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_27550,
                                                                                                                                                                                                                 "]."))
    read_res_45254 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45254, mappingindices_mem_42840,
                    device_offset=(np.long(i_27953) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_27958 = read_res_45254[0]
    i32_res_27959 = sitofp_i32_f32(r32_arg_27958)
    range_valid_c_27960 = True
    assert valid_27948, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:124:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_27946,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_32246 = self.sizes["mainDetailed.segmap_group_size_32229"]
    segmap_usable_groups_32247 = sdiv_up64(iota32_arg_27946,
                                           segmap_group_sizze_32246)
    bytes_43741 = (np.int64(4) * iota32_arg_27946)
    mem_43742 = opencl_alloc(self, bytes_43741, "mem_43742")
    mem_43744 = opencl_alloc(self, bytes_43741, "mem_43744")
    if ((1 * (np.long(segmap_usable_groups_32247) * np.long(segmap_group_sizze_32246))) != 0):
      self.mainDetailedzisegmap_32227_var.set_args(self.global_failure,
                                                   np.float32(lam_27557),
                                                   np.int64(iota32_arg_27946),
                                                   np.int32(x_27951),
                                                   np.float32(i32_res_27959),
                                                   mappingindices_mem_42840,
                                                   mem_43742, mem_43744)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32227_var,
                                 ((np.long(segmap_usable_groups_32247) * np.long(segmap_group_sizze_32246)),),
                                 (np.long(segmap_group_sizze_32246),))
      if synchronous:
        sync(self)
    mem_43742 = None
    max_res_27976 = smax64(np.int64(1), iota32_arg_27946)
    bounds_invalid_upwards_27977 = slt64(max_res_27976, np.int64(1))
    distance_27978 = (max_res_27976 - np.int64(1))
    valid_27979 = not(bounds_invalid_upwards_27977)
    range_valid_c_27980 = True
    assert valid_27979, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:178:3-56\n   #6  bfastfinal.fut:174:1-178:56\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_27976,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    segmap_group_sizze_32666 = self.sizes["mainDetailed.segmap_group_size_32659"]
    segmap_usable_groups_32667 = sdiv_up64(m_27551, segmap_group_sizze_32666)
    mem_43747 = opencl_alloc(self, bytes_43612, "mem_43747")
    if ((1 * (np.long(segmap_usable_groups_32667) * np.long(segmap_group_sizze_32666))) != 0):
      self.mainDetailedzisegmap_32657_var.set_args(self.global_failure,
                                                   np.int64(m_27551),
                                                   defunc_4_map_res_mem_43637,
                                                   defunc_3_map_res_mem_43705,
                                                   mem_43747)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32657_var,
                                 ((np.long(segmap_usable_groups_32667) * np.long(segmap_group_sizze_32666)),),
                                 (np.long(segmap_group_sizze_32666),))
      if synchronous:
        sync(self)
    nest_sizze_32680 = (m_27551 * iota32_arg_27946)
    segmap_group_sizze_32681 = self.sizes["mainDetailed.segmap_group_size_32602"]
    segmap_usable_groups_32682 = sdiv_up64(nest_sizze_32680,
                                           segmap_group_sizze_32681)
    bytes_43749 = (np.int64(4) * nest_sizze_32680)
    mem_43751 = opencl_alloc(self, bytes_43749, "mem_43751")
    if ((1 * (np.long(segmap_usable_groups_32682) * np.long(segmap_group_sizze_32681))) != 0):
      self.mainDetailedzisegmap_32599_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(N_27550),
                                                   np.int64(m_27551),
                                                   np.int64(iota32_arg_27946),
                                                   defunc_4_map_res_mem_43638,
                                                   defunc_3_map_res_mem_43705,
                                                   mem_43747, mem_43751)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32599_var,
                                 ((np.long(segmap_usable_groups_32682) * np.long(segmap_group_sizze_32681)),),
                                 (np.long(segmap_group_sizze_32681),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_32710 = self.sizes["mainDetailed.segmap_group_size_32480"]
    segmap_usable_groups_32711 = sdiv_up64(m_27551, segmap_group_sizze_32710)
    mem_43754 = opencl_alloc(self, bytes_43749, "mem_43754")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43754, np.int64(0),
                                                mem_43751, np.int64(0),
                                                np.int64(1), iota32_arg_27946,
                                                m_27551)
    mem_43751 = None
    mem_43785 = opencl_alloc(self, bytes_43612, "mem_43785")
    num_threads_43963 = (segmap_group_sizze_32710 * segmap_usable_groups_32711)
    total_sizze_43964 = (bytes_43741 * num_threads_43963)
    mem_43765 = opencl_alloc(self, total_sizze_43964, "mem_43765")
    if ((1 * (np.long(segmap_usable_groups_32711) * np.long(segmap_group_sizze_32710))) != 0):
      self.mainDetailedzisegmap_32478_var.set_args(self.global_failure,
                                                   self.failure_is_an_option,
                                                   self.global_failure_args,
                                                   np.int64(m_27551),
                                                   np.int64(iota32_arg_27946),
                                                   np.int64(distance_27978),
                                                   np.int64(segmap_usable_groups_32711),
                                                   defunc_4_map_res_mem_43637,
                                                   defunc_3_map_res_mem_43705,
                                                   mem_43747, mem_43754,
                                                   mem_43765, mem_43785)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainDetailedzisegmap_32478_var,
                                 ((np.long(segmap_usable_groups_32711) * np.long(segmap_group_sizze_32710)),),
                                 (np.long(segmap_group_sizze_32710),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_43747 = None
    mem_43754 = None
    mem_43765 = None
    fits_33078 = sle64(iota32_arg_27946, max_group_sizze_30452)
    suff_intra_par_33076 = (self.sizes["mainDetailed.suff_intra_par_37"] <= iota32_arg_27946)
    intra_suff_and_fits_33079 = (suff_intra_par_33076 and fits_33078)
    segmap_group_sizze_33432 = self.sizes["mainDetailed.segmap_group_size_33412"]
    max_num_groups_45024 = self.sizes["mainDetailed.segmap_num_groups_33414"]
    num_groups_33433 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_27551,
                                                            segmap_group_sizze_33432),
                                                  sext_i32_i64(max_num_groups_45024))))
    segscan_group_sizze_33455 = self.sizes["mainDetailed.segscan_group_size_33371"]
    max_num_groups_45025 = self.sizes["mainDetailed.segscan_num_groups_33373"]
    num_groups_33456 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32680,
                                                            segscan_group_sizze_33455),
                                                  sext_i32_i64(max_num_groups_45025))))
    segred_group_sizze_33493 = self.sizes["mainDetailed.segred_group_size_33317"]
    max_num_groups_45026 = self.sizes["mainDetailed.segred_num_groups_33319"]
    num_groups_33494 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_32680,
                                                            segred_group_sizze_33493),
                                                  sext_i32_i64(max_num_groups_45026))))
    segmap_group_sizze_33533 = self.sizes["mainDetailed.segmap_group_size_33291"]
    segmap_group_sizze_33556 = self.sizes["mainDetailed.segmap_group_size_33256"]
    segmap_group_sizze_33600 = self.sizes["mainDetailed.segmap_group_size_33204"]
    local_memory_capacity_45229 = self.max_local_memory
    if (sle64(((((((bytes_43741 + srem64((np.int64(8) - srem64(bytes_43741,
                                                               np.int64(8))),
                                         np.int64(8))) + (bytes_43741 + srem64((np.int64(8) - srem64(bytes_43741,
                                                                                                     np.int64(8))),
                                                                               np.int64(8)))) + ((np.int32(1) * iota32_arg_27946) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_27946),
                                                                                                                                                                 np.int64(8))),
                                                                                                                                           np.int64(8)))) + ((np.int32(4) * iota32_arg_27946) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_27946),
                                                                                                                                                                                                                             np.int64(8))),
                                                                                                                                                                                                       np.int64(8)))) + ((np.int32(4) * iota32_arg_27946) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_27946),
                                                                                                                                                                                                                                                                                         np.int64(8))),
                                                                                                                                                                                                                                                                   np.int64(8)))) + (bytes_43741 + srem64((np.int64(8) - srem64(bytes_43741,
                                                                                                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_45229)) and intra_suff_and_fits_33079):
      mem_43798 = opencl_alloc(self, bytes_43749, "mem_43798")
      mem_43801 = opencl_alloc(self, bytes_43749, "mem_43801")
      mem_43803 = opencl_alloc(self, bytes_43612, "mem_43803")
      mem_43805 = opencl_alloc(self, bytes_43612, "mem_43805")
      if ((1 * (np.long(m_27551) * np.long(iota32_arg_27946))) != 0):
        self.mainDetailedzisegmap_intragroup_32832_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(bytes_43741)),
                                                                cl.LocalMemory(np.long((np.int32(4) * iota32_arg_27946))),
                                                                cl.LocalMemory(np.long((np.int32(4) * iota32_arg_27946))),
                                                                cl.LocalMemory(np.long((np.int32(1) * iota32_arg_27946))),
                                                                cl.LocalMemory(np.long(bytes_43741)),
                                                                cl.LocalMemory(np.long(bytes_43741)),
                                                                np.int64(N_27550),
                                                                np.int32(n_27554),
                                                                np.int64(iota32_arg_27946),
                                                                defunc_4_map_res_mem_43637,
                                                                defunc_4_map_res_mem_43638,
                                                                defunc_4_map_res_mem_43639,
                                                                defunc_3_map_res_mem_43704,
                                                                defunc_3_map_res_mem_43705,
                                                                defunc_3_map_res_mem_43706,
                                                                defunc_0_f_res_mem_43739,
                                                                mem_43744,
                                                                mem_43798,
                                                                mem_43801,
                                                                mem_43803,
                                                                mem_43805)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_intragroup_32832_var,
                                   ((np.long(m_27551) * np.long(iota32_arg_27946)),),
                                   (np.long(iota32_arg_27946),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43839 = mem_43798
      defunc_0_f_res_mem_43840 = mem_43801
      defunc_0_f_res_mem_43841 = mem_43803
      defunc_0_f_res_mem_43842 = mem_43805
    else:
      mem_43808 = opencl_alloc(self, bytes_43612, "mem_43808")
      mem_43810 = opencl_alloc(self, bytes_43612, "mem_43810")
      if ((1 * (np.long(num_groups_33433) * np.long(segmap_group_sizze_33432))) != 0):
        self.mainDetailedzisegmap_33410_var.set_args(self.global_failure,
                                                     np.int64(m_27551),
                                                     np.int64(num_groups_33433),
                                                     defunc_4_map_res_mem_43637,
                                                     defunc_3_map_res_mem_43705,
                                                     defunc_3_map_res_mem_43706,
                                                     mem_43808, mem_43810)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33410_var,
                                   ((np.long(num_groups_33433) * np.long(segmap_group_sizze_33432)),),
                                   (np.long(segmap_group_sizze_33432),))
        if synchronous:
          sync(self)
      mem_43814 = opencl_alloc(self, bytes_43749, "mem_43814")
      if slt64(np.int64(0), (m_27551 * iota32_arg_27946)):
        stage1_max_num_groups_45060 = self.max_group_size
        stage1_num_groups_45061 = smin64(stage1_max_num_groups_45060,
                                         num_groups_33456)
        num_threads_45062 = sext_i64_i32((stage1_num_groups_45061 * segscan_group_sizze_33455))
        if ((1 * (np.long(stage1_num_groups_45061) * np.long(segscan_group_sizze_33455))) != 0):
          self.mainDetailedziscan_stage1_33377_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(4) * segscan_group_sizze_33455)))),
                                                            np.int64(N_27550),
                                                            np.int64(m_27551),
                                                            np.int64(iota32_arg_27946),
                                                            np.int32(num_threads_45062),
                                                            defunc_4_map_res_mem_43638,
                                                            defunc_3_map_res_mem_43704,
                                                            defunc_3_map_res_mem_43705,
                                                            defunc_0_f_res_mem_43739,
                                                            mem_43810,
                                                            mem_43814)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage1_33377_var,
                                     ((np.long(stage1_num_groups_45061) * np.long(segscan_group_sizze_33455)),),
                                     (np.long(segscan_group_sizze_33455),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45061))) != 0):
          self.mainDetailedziscan_stage2_33377_var.set_args(self.global_failure,
                                                            cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                          (np.int32(4) * stage1_num_groups_45061)))),
                                                            np.int64(m_27551),
                                                            np.int64(iota32_arg_27946),
                                                            np.int64(stage1_num_groups_45061),
                                                            np.int32(num_threads_45062),
                                                            mem_43814)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage2_33377_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45061)),),
                                     (np.long(stage1_num_groups_45061),))
          if synchronous:
            sync(self)
        required_groups_45104 = sext_i64_i32(sdiv_up64((m_27551 * iota32_arg_27946),
                                                       segscan_group_sizze_33455))
        if ((1 * (np.long(num_groups_33456) * np.long(segscan_group_sizze_33455))) != 0):
          self.mainDetailedziscan_stage3_33377_var.set_args(self.global_failure,
                                                            np.int64(m_27551),
                                                            np.int64(iota32_arg_27946),
                                                            np.int64(num_groups_33456),
                                                            np.int32(num_threads_45062),
                                                            np.int32(required_groups_45104),
                                                            mem_43814)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedziscan_stage3_33377_var,
                                     ((np.long(num_groups_33456) * np.long(segscan_group_sizze_33455)),),
                                     (np.long(segscan_group_sizze_33455),))
          if synchronous:
            sync(self)
      mem_43817 = opencl_alloc(self, m_27551, "mem_43817")
      mem_43819 = opencl_alloc(self, bytes_43612, "mem_43819")
      mem_43821 = opencl_alloc(self, bytes_43612, "mem_43821")
      mem_43824 = opencl_alloc(self, bytes_43749, "mem_43824")
      if slt64((iota32_arg_27946 * np.int64(2)), segred_group_sizze_33493):
        segment_sizze_nonzzero_45116 = smax64(np.int64(1), iota32_arg_27946)
        num_threads_45117 = (num_groups_33494 * segred_group_sizze_33493)
        if ((1 * (np.long(num_groups_33494) * np.long(segred_group_sizze_33493))) != 0):
          self.mainDetailedzisegred_small_33323_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33493))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33493))),
                                                             cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33493))),
                                                             np.int64(m_27551),
                                                             np.int64(iota32_arg_27946),
                                                             np.int64(num_groups_33494),
                                                             np.int64(segment_sizze_nonzzero_45116),
                                                             mem_43744,
                                                             mem_43808,
                                                             mem_43810,
                                                             mem_43814,
                                                             mem_43817,
                                                             mem_43819,
                                                             mem_43821,
                                                             mem_43824)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_small_33323_var,
                                     ((np.long(num_groups_33494) * np.long(segred_group_sizze_33493)),),
                                     (np.long(segred_group_sizze_33493),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45152 = sdiv_up64(num_groups_33494,
                                             smax64(np.int64(1), m_27551))
        elements_per_thread_45153 = sdiv_up64(iota32_arg_27946,
                                              (segred_group_sizze_33493 * groups_per_segment_45152))
        virt_num_groups_45154 = (groups_per_segment_45152 * m_27551)
        num_threads_45155 = (num_groups_33494 * segred_group_sizze_33493)
        threads_per_segment_45156 = (groups_per_segment_45152 * segred_group_sizze_33493)
        group_res_arr_mem_45157 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_33493 * virt_num_groups_45154)),
                                               "group_res_arr_mem_45157")
        group_res_arr_mem_45159 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_33493 * virt_num_groups_45154)),
                                               "group_res_arr_mem_45159")
        group_res_arr_mem_45161 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_33493 * virt_num_groups_45154)),
                                               "group_res_arr_mem_45161")
        mainDetailedzicounter_mem_45163 = self.mainDetailedzicounter_mem_45163
        if ((1 * (np.long(num_groups_33494) * np.long(segred_group_sizze_33493))) != 0):
          self.mainDetailedzisegred_large_33323_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(np.int32(1))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33493))),
                                                             cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_33493))),
                                                             cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_33493))),
                                                             np.int64(iota32_arg_27946),
                                                             np.int64(num_groups_33494),
                                                             np.int64(groups_per_segment_45152),
                                                             np.int64(elements_per_thread_45153),
                                                             np.int64(virt_num_groups_45154),
                                                             mem_43744,
                                                             mem_43808,
                                                             mem_43810,
                                                             mem_43814,
                                                             mem_43817,
                                                             mem_43819,
                                                             mem_43821,
                                                             mem_43824,
                                                             group_res_arr_mem_45157,
                                                             group_res_arr_mem_45159,
                                                             group_res_arr_mem_45161,
                                                             mainDetailedzicounter_mem_45163)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainDetailedzisegred_large_33323_var,
                                     ((np.long(num_groups_33494) * np.long(segred_group_sizze_33493)),),
                                     (np.long(segred_group_sizze_33493),))
          if synchronous:
            sync(self)
      mem_43808 = None
      mem_43814 = None
      segmap_usable_groups_33534 = sdiv_up64(m_27551, segmap_group_sizze_33533)
      mem_43827 = opencl_alloc(self, m_27551, "mem_43827")
      mem_43829 = opencl_alloc(self, bytes_43612, "mem_43829")
      if ((1 * (np.long(segmap_usable_groups_33534) * np.long(segmap_group_sizze_33533))) != 0):
        self.mainDetailedzisegmap_33289_var.set_args(self.global_failure,
                                                     np.int64(m_27551),
                                                     mem_43817, mem_43819,
                                                     mem_43827, mem_43829)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33289_var,
                                   ((np.long(segmap_usable_groups_33534) * np.long(segmap_group_sizze_33533)),),
                                   (np.long(segmap_group_sizze_33533),))
        if synchronous:
          sync(self)
      mem_43817 = None
      mem_43819 = None
      segmap_usable_groups_33557 = sdiv_up64(m_27551, segmap_group_sizze_33556)
      mem_43832 = opencl_alloc(self, bytes_43612, "mem_43832")
      mem_43834 = opencl_alloc(self, bytes_43612, "mem_43834")
      if ((1 * (np.long(segmap_usable_groups_33557) * np.long(segmap_group_sizze_33556))) != 0):
        self.mainDetailedzisegmap_33254_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.int64(m_27551),
                                                     np.int32(n_27554),
                                                     defunc_4_map_res_mem_43639,
                                                     defunc_3_map_res_mem_43705,
                                                     mem_43810, mem_43821,
                                                     mem_43827, mem_43829,
                                                     mem_43832, mem_43834)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33254_var,
                                   ((np.long(segmap_usable_groups_33557) * np.long(segmap_group_sizze_33556)),),
                                   (np.long(segmap_group_sizze_33556),))
        if synchronous:
          sync(self)
      mem_43821 = None
      mem_43827 = None
      mem_43829 = None
      mem_43837 = opencl_alloc(self, bytes_43749, "mem_43837")
      self.futhark_builtinzhreplicate_f32(mem_43837,
                                          (m_27551 * iota32_arg_27946), np.nan)
      segmap_usable_groups_33601 = sdiv_up64(nest_sizze_32680,
                                             segmap_group_sizze_33600)
      if ((1 * (np.long(segmap_usable_groups_33601) * np.long(segmap_group_sizze_33600))) != 0):
        self.mainDetailedzisegmap_33201_var.set_args(self.global_failure,
                                                     np.int64(N_27550),
                                                     np.int64(m_27551),
                                                     np.int32(n_27554),
                                                     np.int64(iota32_arg_27946),
                                                     defunc_4_map_res_mem_43639,
                                                     defunc_3_map_res_mem_43705,
                                                     mem_43810, mem_43824,
                                                     mem_43837)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainDetailedzisegmap_33201_var,
                                   ((np.long(segmap_usable_groups_33601) * np.long(segmap_group_sizze_33600)),),
                                   (np.long(segmap_group_sizze_33600),))
        if synchronous:
          sync(self)
      mem_43810 = None
      defunc_0_f_res_mem_43839 = mem_43837
      defunc_0_f_res_mem_43840 = mem_43824
      defunc_0_f_res_mem_43841 = mem_43832
      defunc_0_f_res_mem_43842 = mem_43834
    defunc_4_map_res_mem_43639 = None
    defunc_3_map_res_mem_43704 = None
    out_arrsizze_44073 = iota32_arg_27946
    out_arrsizze_44075 = iota32_arg_27946
    out_arrsizze_44077 = iota32_arg_27946
    out_mem_44068 = defunc_0_f_res_mem_43739
    out_mem_44069 = defunc_4_map_res_mem_43637
    out_mem_44070 = defunc_3_map_res_mem_43705
    out_mem_44071 = defunc_3_map_res_mem_43706
    out_mem_44072 = defunc_0_f_res_mem_43839
    out_mem_44074 = defunc_0_f_res_mem_43840
    out_mem_44076 = mem_43744
    out_mem_44078 = defunc_0_f_res_mem_43841
    out_mem_44079 = defunc_0_f_res_mem_43842
    out_mem_44080 = mem_43785
    out_mem_44081 = defunc_4_map_res_mem_43638
    out_mem_44082 = defunc_3_map_res_mem_43600
    return (out_mem_44068, out_mem_44069, out_mem_44070, out_mem_44071,
            out_mem_44072, out_arrsizze_44073, out_mem_44074,
            out_arrsizze_44075, out_mem_44076, out_arrsizze_44077,
            out_mem_44078, out_mem_44079, out_mem_44080, out_mem_44081,
            out_mem_44082)
  def futhark_mainMagnitude(self, mappingindices_mem_42840, images_mem_42841,
                            N_28247, m_28248, trend_28249, k_28250, n_28251,
                            freq_28252, hfrac_28253, lam_28254):
    i32_res_28257 = sext_i32_i64(n_28251)
    x_28258 = (np.int32(2) * k_28250)
    k2p2_28259 = (np.int32(2) + x_28258)
    cond_28260 = slt32(np.int32(0), trend_28249)
    if cond_28260:
      k2p2zq_28261 = k2p2_28259
    else:
      k2p2zq_f_res_28262 = (k2p2_28259 - np.int32(1))
      k2p2zq_28261 = k2p2zq_f_res_28262
    i32_res_28263 = sext_i32_i64(k2p2zq_28261)
    binop_x_42844 = (N_28247 * i32_res_28263)
    bytes_42843 = (np.int64(4) * binop_x_42844)
    if cond_28260:
      bounds_invalid_upwards_28265 = slt64(i32_res_28263, np.int64(0))
      valid_28266 = not(bounds_invalid_upwards_28265)
      range_valid_c_28267 = True
      assert valid_28266, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:37:10-20\n   #3  bfastfinal.fut:29:17-66\n   #4  bfastfinal.fut:185:5-58\n   #5  bfastfinal.fut:180:1-186:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28263,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_33783 = self.sizes["mainMagnitude.segmap_group_size_33713"]
      segmap_usable_groups_33784 = sdiv_up64(binop_x_42844,
                                             segmap_group_sizze_33783)
      mem_42845 = opencl_alloc(self, bytes_42843, "mem_42845")
      if ((1 * (np.long(segmap_usable_groups_33784) * np.long(segmap_group_sizze_33783))) != 0):
        self.mainMagnitudezisegmap_33710_var.set_args(self.global_failure,
                                                      np.int64(N_28247),
                                                      np.float32(freq_28252),
                                                      np.int64(i32_res_28263),
                                                      mappingindices_mem_42840,
                                                      mem_42845)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33710_var,
                                   ((np.long(segmap_usable_groups_33784) * np.long(segmap_group_sizze_33783)),),
                                   (np.long(segmap_group_sizze_33783),))
        if synchronous:
          sync(self)
      binop_p_mem_42850 = mem_42845
    else:
      bounds_invalid_upwards_28291 = slt64(i32_res_28263, np.int64(0))
      valid_28292 = not(bounds_invalid_upwards_28291)
      range_valid_c_28293 = True
      assert valid_28292, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  helpers.fut:49:10-22\n   #3  bfastfinal.fut:30:17-64\n   #4  bfastfinal.fut:185:5-58\n   #5  bfastfinal.fut:180:1-186:32\n" % ("Range ",
                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                    i32_res_28263,
                                                                                                                                                                                                                                                                    " is invalid."))
      segmap_group_sizze_33957 = self.sizes["mainMagnitude.segmap_group_size_33891"]
      segmap_usable_groups_33958 = sdiv_up64(binop_x_42844,
                                             segmap_group_sizze_33957)
      mem_42849 = opencl_alloc(self, bytes_42843, "mem_42849")
      if ((1 * (np.long(segmap_usable_groups_33958) * np.long(segmap_group_sizze_33957))) != 0):
        self.mainMagnitudezisegmap_33888_var.set_args(self.global_failure,
                                                      np.int64(N_28247),
                                                      np.float32(freq_28252),
                                                      np.int64(i32_res_28263),
                                                      mappingindices_mem_42840,
                                                      mem_42849)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_33888_var,
                                   ((np.long(segmap_usable_groups_33958) * np.long(segmap_group_sizze_33957)),),
                                   (np.long(segmap_group_sizze_33957),))
        if synchronous:
          sync(self)
      binop_p_mem_42850 = mem_42849
    x_28316 = (N_28247 * N_28247)
    y_28317 = (np.int64(2) * N_28247)
    x_28318 = (x_28316 + y_28317)
    x_28319 = (np.int64(1) + x_28318)
    y_28320 = (np.int64(1) + N_28247)
    zzero_28321 = (y_28320 == np.int64(0))
    nonzzero_28322 = not(zzero_28321)
    nonzzero_cert_28323 = True
    assert nonzzero_28322, ("Error: %s\n\nBacktrace:\n-> #0  bfastfinal.fut:36:32-60\n   #1  bfastfinal.fut:185:5-58\n   #2  bfastfinal.fut:180:1-186:32\n" % ("division by zero",))
    x_28324 = sdiv64(x_28319, y_28320)
    x_28325 = (x_28324 - N_28247)
    binop_p_28326 = (x_28325 - np.int64(1))
    defunc_0_f_res_28327 = sext_i64_i32(binop_p_28326)
    i32_res_28328 = sitofp_i32_f32(defunc_0_f_res_28327)
    segmap_group_sizze_34040 = self.sizes["mainMagnitude.segmap_group_size_34019"]
    segmap_usable_groups_34041 = sdiv_up64(binop_x_42844,
                                           segmap_group_sizze_34040)
    mem_42853 = opencl_alloc(self, bytes_42843, "mem_42853")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42853, np.int64(0),
                                                binop_p_mem_42850, np.int64(0),
                                                np.int64(1), N_28247,
                                                i32_res_28263)
    mem_42857 = opencl_alloc(self, bytes_42843, "mem_42857")
    if ((1 * (np.long(segmap_usable_groups_34041) * np.long(segmap_group_sizze_34040))) != 0):
      self.mainMagnitudezisegmap_34016_var.set_args(self.global_failure,
                                                    np.int64(N_28247),
                                                    np.int64(i32_res_28263),
                                                    np.float32(i32_res_28328),
                                                    mem_42853, mem_42857)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_34016_var,
                                 ((np.long(segmap_usable_groups_34041) * np.long(segmap_group_sizze_34040)),),
                                 (np.long(segmap_group_sizze_34040),))
      if synchronous:
        sync(self)
    eq_x_y_28336 = (np.int64(0) == i32_res_28263)
    p_and_eq_x_y_28337 = (cond_28260 and eq_x_y_28336)
    not_p_28338 = not(cond_28260)
    p_and_eq_x_y_28339 = (eq_x_y_28336 and not_p_28338)
    empty_slice_28340 = (p_and_eq_x_y_28337 or p_and_eq_x_y_28339)
    m_28341 = (i32_res_28263 - np.int64(1))
    zzero_leq_i_p_m_t_s_28342 = sle64(np.int64(0), m_28341)
    i_p_m_t_s_leq_w_28343 = slt64(m_28341, i32_res_28263)
    i_lte_j_28344 = sle64(np.int64(0), i32_res_28263)
    y_28345 = (zzero_leq_i_p_m_t_s_28342 and i_p_m_t_s_leq_w_28343)
    y_28346 = (i_lte_j_28344 and y_28345)
    ok_or_empty_28347 = (empty_slice_28340 or y_28346)
    empty_slice_28348 = (i32_res_28257 == np.int64(0))
    m_28349 = (i32_res_28257 - np.int64(1))
    zzero_leq_i_p_m_t_s_28350 = sle64(np.int64(0), m_28349)
    i_p_m_t_s_leq_w_28351 = slt64(m_28349, N_28247)
    i_lte_j_28352 = sle64(np.int64(0), i32_res_28257)
    y_28353 = (zzero_leq_i_p_m_t_s_28350 and i_p_m_t_s_leq_w_28351)
    y_28354 = (i_lte_j_28352 and y_28353)
    ok_or_empty_28355 = (empty_slice_28348 or y_28354)
    index_ok_28356 = (ok_or_empty_28347 and ok_or_empty_28355)
    index_certs_28357 = True
    assert index_ok_28356, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:39:15-23\n   #1  bfastfinal.fut:185:5-58\n   #2  bfastfinal.fut:180:1-186:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28257,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               i32_res_28263,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28247,
                                                                                                                                                                               "]."))
    empty_slice_28359 = (i32_res_28263 == np.int64(0))
    ok_or_empty_28360 = (y_28346 or empty_slice_28359)
    index_ok_28361 = (ok_or_empty_28355 and ok_or_empty_28360)
    index_certs_28362 = True
    assert index_ok_28361, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:40:15-24\n   #1  bfastfinal.fut:185:5-58\n   #2  bfastfinal.fut:180:1-186:32\n" % ("Index [:",
                                                                                                                                                                               i32_res_28257,
                                                                                                                                                                               ", ",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":] out of bounds for array of shape [",
                                                                                                                                                                               N_28247,
                                                                                                                                                                               "][",
                                                                                                                                                                               i32_res_28263,
                                                                                                                                                                               "]."))
    empty_slice_28364 = (m_28248 == np.int64(0))
    m_28365 = (m_28248 - np.int64(1))
    zzero_leq_i_p_m_t_s_28366 = sle64(np.int64(0), m_28365)
    i_p_m_t_s_leq_w_28367 = slt64(m_28365, m_28248)
    i_lte_j_28368 = sle64(np.int64(0), m_28248)
    y_28369 = (zzero_leq_i_p_m_t_s_28366 and i_p_m_t_s_leq_w_28367)
    y_28370 = (i_lte_j_28368 and y_28369)
    ok_or_empty_28371 = (empty_slice_28364 or y_28370)
    index_ok_28372 = (ok_or_empty_28355 and ok_or_empty_28371)
    index_certs_28373 = True
    assert index_ok_28372, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:41:15-28\n   #1  bfastfinal.fut:185:5-58\n   #2  bfastfinal.fut:180:1-186:32\n" % ("Index [",
                                                                                                                                                                               np.int64(0),
                                                                                                                                                                               ":, :",
                                                                                                                                                                               i32_res_28257,
                                                                                                                                                                               "] out of bounds for array of shape [",
                                                                                                                                                                               m_28248,
                                                                                                                                                                               "][",
                                                                                                                                                                               N_28247,
                                                                                                                                                                               "]."))
    suff_outer_par_34047 = (self.sizes["mainMagnitude.suff_outer_par_6"] <= m_28248)
    segmap_group_sizze_34073 = self.sizes["mainMagnitude.segmap_group_size_34051"]
    max_num_groups_44086 = self.sizes["mainMagnitude.segmap_num_groups_34053"]
    num_groups_34074 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28248,
                                                            segmap_group_sizze_34073),
                                                  sext_i32_i64(max_num_groups_44086))))
    nest_sizze_34249 = (m_28248 * i32_res_28263)
    segmap_group_sizze_34250 = self.sizes["mainMagnitude.segmap_group_size_34098"]
    max_num_groups_44087 = self.sizes["mainMagnitude.segmap_num_groups_34100"]
    num_groups_34251 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34249,
                                                            segmap_group_sizze_34250),
                                                  sext_i32_i64(max_num_groups_44087))))
    suff_outer_par_34255 = (self.sizes["mainMagnitude.suff_outer_par_7"] <= nest_sizze_34249)
    y_34279 = (i32_res_28263 * i32_res_28263)
    comparatee_34280 = (m_28248 * y_34279)
    suff_outer_par_34281 = (self.sizes["mainMagnitude.suff_outer_par_8"] <= comparatee_34280)
    nest_sizze_34301 = (i32_res_28257 * comparatee_34280)
    segred_group_sizze_34302 = self.sizes["mainMagnitude.segred_group_size_34158"]
    max_num_groups_44088 = self.sizes["mainMagnitude.segred_num_groups_34160"]
    num_groups_34303 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_34301,
                                                            segred_group_sizze_34302),
                                                  sext_i32_i64(max_num_groups_44088))))
    Tx_41046 = self.sizes["mainMagnitude.Tx_41044"]
    Ty_41047 = self.sizes["mainMagnitude.Ty_41045"]
    Ty_41048 = smin64(i32_res_28263, Ty_41047)
    Tx_41049 = smin64(i32_res_28263, Tx_41046)
    gridDim_zz_41052 = sdiv_up64(m_28248, np.int64(30))
    group_sizze_tile3d_41055 = (Ty_41048 * Tx_41049)
    binop_x_42859 = (N_28247 * m_28248)
    bytes_42858 = (np.int64(4) * binop_x_42859)
    bytes_42903 = (np.int64(4) * comparatee_34280)
    bytes_42862 = (np.int64(4) * y_34279)
    binop_x_43006 = (i32_res_28263 * nest_sizze_34249)
    bytes_43004 = (np.int64(4) * binop_x_43006)
    bytes_42908 = (np.int64(4) * i32_res_28263)
    binop_x_42937 = (np.int64(30) * group_sizze_tile3d_41055)
    bytes_42935 = (np.int64(4) * binop_x_42937)
    binop_x_43843 = (np.int64(4) * Ty_41048)
    binop_x_43844 = (Tx_41049 * binop_x_43843)
    sizze_43845 = (np.int64(30) * binop_x_43844)
    num_threads_43975 = (segmap_group_sizze_34073 * num_groups_34074)
    total_sizze_43976 = (bytes_42862 * num_threads_43975)
    num_threads_43977 = (segmap_group_sizze_34250 * num_groups_34251)
    total_sizze_43978 = (bytes_42908 * num_threads_43977)
    local_memory_capacity_44210 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44210)) and suff_outer_par_34047):
      mem_42860 = opencl_alloc(self, bytes_42858, "mem_42860")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_42860, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_28247, m_28248)
      mem_42906 = opencl_alloc(self, bytes_42903, "mem_42906")
      mem_42864 = opencl_alloc(self, total_sizze_43976, "mem_42864")
      if ((1 * (np.long(num_groups_34074) * np.long(segmap_group_sizze_34073))) != 0):
        self.mainMagnitudezisegmap_34049_var.set_args(self.global_failure,
                                                      np.int64(N_28247),
                                                      np.int64(m_28248),
                                                      np.int32(n_28251),
                                                      np.int32(k2p2zq_28261),
                                                      np.int64(i32_res_28263),
                                                      np.int64(num_groups_34074),
                                                      binop_p_mem_42850,
                                                      mem_42857, mem_42860,
                                                      mem_42864, mem_42906)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34049_var,
                                   ((np.long(num_groups_34074) * np.long(segmap_group_sizze_34073)),),
                                   (np.long(segmap_group_sizze_34073),))
        if synchronous:
          sync(self)
      mem_42860 = None
      mem_42864 = None
      mem_43007 = opencl_alloc(self, bytes_43004, "mem_43007")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43007, np.int64(0),
                                                  mem_42906, np.int64(0),
                                                  np.int64(1), m_28248,
                                                  (i32_res_28263 * i32_res_28263))
      mem_42906 = None
      defunc_3_map_res_mem_43009 = mem_43007
    else:
      local_memory_capacity_44209 = self.max_local_memory
      if (sle64(np.int64(0),
                sext_i32_i64(local_memory_capacity_44209)) and suff_outer_par_34255):
        mem_42925 = opencl_alloc(self, bytes_43004, "mem_42925")
        mem_42909 = opencl_alloc(self, total_sizze_43978, "mem_42909")
        if ((1 * (np.long(num_groups_34251) * np.long(segmap_group_sizze_34250))) != 0):
          self.mainMagnitudezisegmap_34095_var.set_args(self.global_failure,
                                                        np.int64(N_28247),
                                                        np.int64(m_28248),
                                                        np.int32(n_28251),
                                                        np.int32(k2p2zq_28261),
                                                        np.int64(i32_res_28263),
                                                        np.int64(num_groups_34251),
                                                        images_mem_42841,
                                                        mem_42853, mem_42857,
                                                        mem_42909, mem_42925)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_34095_var,
                                     ((np.long(num_groups_34251) * np.long(segmap_group_sizze_34250)),),
                                     (np.long(segmap_group_sizze_34250),))
          if synchronous:
            sync(self)
        mem_42909 = None
        mem_43001 = opencl_alloc(self, bytes_43004, "mem_43001")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43001, np.int64(0),
                                                    mem_42925, np.int64(0),
                                                    np.int64(1),
                                                    (m_28248 * i32_res_28263),
                                                    i32_res_28263)
        mem_42925 = None
        defunc_3_map_res_mem_43003 = mem_43001
      else:
        local_memory_capacity_44208 = self.max_local_memory
        if (sle64(np.int64(120),
                  sext_i32_i64(local_memory_capacity_44208)) and suff_outer_par_34281):
          mem_42928 = opencl_alloc(self, bytes_42858, "mem_42928")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42928, np.int64(0),
                                                      images_mem_42841,
                                                      np.int64(0), np.int64(1),
                                                      N_28247, m_28248)
          gridDim_x_41050 = sdiv_up64(i32_res_28263, Tx_41049)
          gridDim_y_41051 = sdiv_up64(i32_res_28263, Ty_41048)
          binop_x_41053 = (gridDim_y_41051 * gridDim_zz_41052)
          grid_sizze_tile3d_41054 = (gridDim_x_41050 * binop_x_41053)
          count_shmem_41056 = sdiv_up64(np.int64(30), group_sizze_tile3d_41055)
          mem_42988 = opencl_alloc(self, bytes_43004, "mem_42988")
          if ((1 * (np.long(grid_sizze_tile3d_41054) * np.long(group_sizze_tile3d_41055))) != 0):
            self.mainMagnitudezisegmap_intragroup_41060_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(np.int64(120))),
                                                                     np.int64(m_28248),
                                                                     np.int32(n_28251),
                                                                     np.int64(i32_res_28263),
                                                                     np.int64(Ty_41048),
                                                                     np.int64(Tx_41049),
                                                                     np.int64(gridDim_x_41050),
                                                                     np.int64(gridDim_y_41051),
                                                                     np.int64(group_sizze_tile3d_41055),
                                                                     np.int64(count_shmem_41056),
                                                                     mem_42853,
                                                                     mem_42857,
                                                                     mem_42928,
                                                                     mem_42988)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_41060_var,
                                       ((np.long(grid_sizze_tile3d_41054) * np.long(group_sizze_tile3d_41055)),),
                                       (np.long(group_sizze_tile3d_41055),))
            if synchronous:
              sync(self)
          mem_42928 = None
          defunc_3_map_res_mem_42997 = mem_42988
        else:
          mem_42991 = opencl_alloc(self, bytes_42843, "mem_42991")
          self.futhark_builtinzhgpu_map_transpose_f32(mem_42991, np.int64(0),
                                                      mem_42857, np.int64(0),
                                                      np.int64(1),
                                                      i32_res_28263, N_28247)
          mem_42996 = opencl_alloc(self, bytes_43004, "mem_42996")
          if slt64((i32_res_28257 * np.int64(2)), segred_group_sizze_34302):
            segment_sizze_nonzzero_44148 = smax64(np.int64(1), i32_res_28257)
            num_threads_44149 = (num_groups_34303 * segred_group_sizze_34302)
            if ((1 * (np.long(num_groups_34303) * np.long(segred_group_sizze_34302))) != 0):
              self.mainMagnitudezisegred_small_34164_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34302))),
                                                                  np.int64(N_28247),
                                                                  np.int64(m_28248),
                                                                  np.int64(i32_res_28257),
                                                                  np.int64(i32_res_28263),
                                                                  np.int64(num_groups_34303),
                                                                  np.int64(segment_sizze_nonzzero_44148),
                                                                  images_mem_42841,
                                                                  binop_p_mem_42850,
                                                                  mem_42991,
                                                                  mem_42996)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_small_34164_var,
                                         ((np.long(num_groups_34303) * np.long(segred_group_sizze_34302)),),
                                         (np.long(segred_group_sizze_34302),))
              if synchronous:
                sync(self)
          else:
            groups_per_segment_44169 = sdiv_up64(num_groups_34303,
                                                 smax64(np.int64(1),
                                                        ((m_28248 * i32_res_28263) * i32_res_28263)))
            elements_per_thread_44170 = sdiv_up64(i32_res_28257,
                                                  (segred_group_sizze_34302 * groups_per_segment_44169))
            virt_num_groups_44171 = (groups_per_segment_44169 * ((m_28248 * i32_res_28263) * i32_res_28263))
            num_threads_44172 = (num_groups_34303 * segred_group_sizze_34302)
            threads_per_segment_44173 = (groups_per_segment_44169 * segred_group_sizze_34302)
            group_res_arr_mem_44174 = opencl_alloc(self,
                                                   (np.int32(4) * (segred_group_sizze_34302 * virt_num_groups_44171)),
                                                   "group_res_arr_mem_44174")
            mainMagnitudezicounter_mem_44176 = self.mainMagnitudezicounter_mem_44176
            if ((1 * (np.long(num_groups_34303) * np.long(segred_group_sizze_34302))) != 0):
              self.mainMagnitudezisegred_large_34164_var.set_args(self.global_failure,
                                                                  cl.LocalMemory(np.long(np.int32(1))),
                                                                  cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_34302))),
                                                                  np.int64(N_28247),
                                                                  np.int64(i32_res_28257),
                                                                  np.int64(i32_res_28263),
                                                                  np.int64(num_groups_34303),
                                                                  np.int64(groups_per_segment_44169),
                                                                  np.int64(elements_per_thread_44170),
                                                                  np.int64(virt_num_groups_44171),
                                                                  np.int64(threads_per_segment_44173),
                                                                  images_mem_42841,
                                                                  binop_p_mem_42850,
                                                                  mem_42991,
                                                                  mem_42996,
                                                                  group_res_arr_mem_44174,
                                                                  mainMagnitudezicounter_mem_44176)
              cl.enqueue_nd_range_kernel(self.queue,
                                         self.mainMagnitudezisegred_large_34164_var,
                                         ((np.long(num_groups_34303) * np.long(segred_group_sizze_34302)),),
                                         (np.long(segred_group_sizze_34302),))
              if synchronous:
                sync(self)
          mem_42991 = None
          defunc_3_map_res_mem_42997 = mem_42996
        defunc_3_map_res_mem_43003 = defunc_3_map_res_mem_42997
      defunc_3_map_res_mem_43009 = defunc_3_map_res_mem_43003
    m_28394 = (np.int32(2) * k2p2zq_28261)
    nm_28395 = (k2p2zq_28261 * m_28394)
    i32_res_28396 = sext_i32_i64(nm_28395)
    bounds_invalid_upwards_28397 = slt64(i32_res_28396, np.int64(0))
    valid_28398 = not(bounds_invalid_upwards_28397)
    range_valid_c_28399 = True
    assert valid_28398, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:78:34-50\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:185:5-58\n   #4  bfastfinal.fut:180:1-186:32\n" % ("Range ",
                                                                                                                                                                                                                                        np.int64(0),
                                                                                                                                                                                                                                        "..",
                                                                                                                                                                                                                                        np.int64(1),
                                                                                                                                                                                                                                        "..<",
                                                                                                                                                                                                                                        i32_res_28396,
                                                                                                                                                                                                                                        " is invalid."))
    zzero_28404 = (m_28394 == np.int32(0))
    nonzzero_28405 = not(zzero_28404)
    nonzzero_cert_28406 = True
    assert nonzzero_28405, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:73:41-47\n   #1  helpers.fut:73:14-78:52\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:185:5-58\n   #4  bfastfinal.fut:180:1-186:32\n" % ("division by zero",))
    loop_nonempty_28407 = slt32(np.int32(0), k2p2zq_28261)
    loop_not_taken_28408 = not(loop_nonempty_28407)
    protect_assert_disj_28409 = (nonzzero_28405 or loop_not_taken_28408)
    nonzzero_cert_28410 = True
    assert protect_assert_disj_28409, ("Error: %s\n\nBacktrace:\n-> #0  helpers.fut:59:43-49\n   #1  helpers.fut:59:16-65:44\n   #2  helpers.fut:79:15-33\n   #3  bfastfinal.fut:51:35-50\n   #4  bfastfinal.fut:185:5-58\n   #5  bfastfinal.fut:180:1-186:32\n" % ("division by zero",))
    i32_res_28411 = sext_i32_i64(m_28394)
    x_28412 = (i32_res_28263 * i32_res_28411)
    dim_ok_28413 = (x_28412 == i32_res_28396)
    dim_ok_cert_28414 = True
    assert dim_ok_28413, ("Error: %s\n\nBacktrace:\n-> #0  /prelude/array.fut:95:3-33\n   #1  helpers.fut:81:9-45\n   #2  bfastfinal.fut:51:35-50\n   #3  bfastfinal.fut:185:5-58\n   #4  bfastfinal.fut:180:1-186:32\n" % ("new shape has different number of elements than old shape",))
    j_m_i_28415 = (i32_res_28411 - i32_res_28263)
    empty_slice_28416 = (j_m_i_28415 == np.int64(0))
    m_28417 = (j_m_i_28415 - np.int64(1))
    i_p_m_t_s_28418 = (i32_res_28263 + m_28417)
    zzero_leq_i_p_m_t_s_28419 = sle64(np.int64(0), i_p_m_t_s_28418)
    i_p_m_t_s_leq_w_28420 = slt64(i_p_m_t_s_28418, i32_res_28411)
    i_lte_j_28421 = sle64(i32_res_28263, i32_res_28411)
    y_28422 = (i_lte_j_28344 and i_p_m_t_s_leq_w_28420)
    y_28423 = (zzero_leq_i_p_m_t_s_28419 and y_28422)
    y_28424 = (i_lte_j_28421 and y_28423)
    forwards_ok_28425 = (i_lte_j_28344 and y_28424)
    ok_or_empty_28426 = (empty_slice_28416 or forwards_ok_28425)
    index_ok_28427 = (ok_or_empty_28360 and ok_or_empty_28426)
    index_certs_28428 = True
    assert index_ok_28427, ("Error: %s%d%s%d%s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-88\n   #1  bfastfinal.fut:51:35-50\n   #2  bfastfinal.fut:185:5-58\n   #3  bfastfinal.fut:180:1-186:32\n" % ("Index [",
                                                                                                                                                                                                                   np.int64(0),
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28263,
                                                                                                                                                                                                                   ", ",
                                                                                                                                                                                                                   i32_res_28263,
                                                                                                                                                                                                                   ":",
                                                                                                                                                                                                                   i32_res_28411,
                                                                                                                                                                                                                   "] out of bounds for array of shape [",
                                                                                                                                                                                                                   i32_res_28263,
                                                                                                                                                                                                                   "][",
                                                                                                                                                                                                                   i32_res_28411,
                                                                                                                                                                                                                   "]."))
    dim_match_28429 = (i32_res_28263 == j_m_i_28415)
    empty_or_match_cert_28430 = True
    assert dim_match_28429, ("Error: %s%d%s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  helpers.fut:81:8-103\n   #1  bfastfinal.fut:51:35-50\n   #2  bfastfinal.fut:185:5-58\n   #3  bfastfinal.fut:180:1-186:32\n" % ("Value of (core language) shape (",
                                                                                                                                                                                                             i32_res_28263,
                                                                                                                                                                                                             ", ",
                                                                                                                                                                                                             j_m_i_28415,
                                                                                                                                                                                                             ") cannot match shape of type `[",
                                                                                                                                                                                                             i32_res_28263,
                                                                                                                                                                                                             "][",
                                                                                                                                                                                                             i32_res_28263,
                                                                                                                                                                                                             "]f32`."))
    max_group_sizze_34517 = self.max_group_size
    fits_34518 = sle64(i32_res_28396, max_group_sizze_34517)
    suff_intra_par_34516 = (self.sizes["mainMagnitude.suff_intra_par_11"] <= i32_res_28396)
    intra_suff_and_fits_34519 = (suff_intra_par_34516 and fits_34518)
    nest_sizze_35003 = (m_28248 * i32_res_28396)
    segmap_group_sizze_35004 = self.sizes["mainMagnitude.segmap_group_size_34963"]
    suff_intra_par_35031 = (self.sizes["mainMagnitude.suff_intra_par_13"] <= i32_res_28396)
    intra_suff_and_fits_35032 = (fits_34518 and suff_intra_par_35031)
    segmap_group_sizze_35068 = self.sizes["mainMagnitude.segmap_group_size_34869"]
    segmap_group_sizze_35084 = self.sizes["mainMagnitude.segmap_group_size_34802"]
    segmap_group_sizze_35118 = self.sizes["mainMagnitude.segmap_group_size_34748"]
    y_35128 = (i32_res_28263 * j_m_i_28415)
    nest_sizze_35129 = (m_28248 * y_35128)
    segmap_group_sizze_35130 = self.sizes["mainMagnitude.segmap_group_size_34583"]
    segmap_usable_groups_35069 = sdiv_up_safe64(m_28248,
                                                segmap_group_sizze_35068)
    segmap_usable_groups_35085 = sdiv_up_safe64(nest_sizze_35003,
                                                segmap_group_sizze_35084)
    segmap_usable_groups_35119 = sdiv_up_safe64(nest_sizze_35003,
                                                segmap_group_sizze_35118)
    bytes_43012 = (np.int64(4) * i32_res_28396)
    bytes_43035 = (np.int64(4) * nest_sizze_35003)
    binop_x_43086 = (j_m_i_28415 * nest_sizze_34249)
    bytes_43084 = (np.int64(4) * binop_x_43086)
    local_memory_capacity_44211 = self.max_local_memory
    if intra_suff_and_fits_34519:
      defunc_3_map_res_ixfn_43088 = i32_res_28263
    else:
      defunc_3_map_res_ixfn_43088 = j_m_i_28415
    local_memory_capacity_44274 = self.max_local_memory
    if (sle64(((bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44274)) and intra_suff_and_fits_34519):
      mem_43033 = opencl_alloc(self, bytes_43004, "mem_43033")
      if ((1 * (np.long(m_28248) * np.long(i32_res_28396))) != 0):
        self.mainMagnitudezisegmap_intragroup_34399_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43012)),
                                                                 cl.LocalMemory(np.long(bytes_43012)),
                                                                 np.int32(k2p2zq_28261),
                                                                 np.int64(i32_res_28263),
                                                                 np.int32(m_28394),
                                                                 np.int64(i32_res_28396),
                                                                 np.int64(i32_res_28411),
                                                                 defunc_3_map_res_mem_43009,
                                                                 mem_43033)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_34399_var,
                                   ((np.long(m_28248) * np.long(i32_res_28396)),),
                                   (np.long(i32_res_28396),))
        if synchronous:
          sync(self)
      defunc_3_map_res_mem_43089 = mem_43033
    else:
      segmap_usable_groups_35005 = sdiv_up64(nest_sizze_35003,
                                             segmap_group_sizze_35004)
      mem_43037 = opencl_alloc(self, bytes_43035, "mem_43037")
      if ((1 * (np.long(segmap_usable_groups_35005) * np.long(segmap_group_sizze_35004))) != 0):
        self.mainMagnitudezisegmap_34960_var.set_args(self.global_failure,
                                                      np.int64(m_28248),
                                                      np.int32(k2p2zq_28261),
                                                      np.int64(i32_res_28263),
                                                      np.int32(m_28394),
                                                      np.int64(i32_res_28396),
                                                      defunc_3_map_res_mem_43009,
                                                      mem_43037)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34960_var,
                                   ((np.long(segmap_usable_groups_35005) * np.long(segmap_group_sizze_35004)),),
                                   (np.long(segmap_group_sizze_35004),))
        if synchronous:
          sync(self)
      ctx_param_ext_43038 = m_28248
      ctx_param_ext_43039 = i32_res_28396
      ctx_param_ext_43040 = np.int64(0)
      ctx_param_ext_43041 = i32_res_28396
      ctx_param_ext_43042 = m_28248
      ctx_param_ext_43043 = np.int64(1)
      ctx_param_ext_43044 = i32_res_28396
      mem_param_43045 = mem_43037
      i_35021 = np.int32(0)
      one_45258 = np.int32(1)
      for counter_45257 in range(k2p2zq_28261):
        i32_res_35023 = sext_i32_i64(i_35021)
        local_memory_capacity_44234 = self.max_local_memory
        if intra_suff_and_fits_35032:
          gauss_jordan_res_ixfn_43067 = m_28248
        else:
          gauss_jordan_res_ixfn_43067 = ctx_param_ext_43042
        local_memory_capacity_44235 = self.max_local_memory
        if intra_suff_and_fits_35032:
          gauss_jordan_res_ixfn_43068 = i32_res_28396
        else:
          gauss_jordan_res_ixfn_43068 = ctx_param_ext_43044
        local_memory_capacity_44236 = self.max_local_memory
        if intra_suff_and_fits_35032:
          gauss_jordan_res_ixfn_43069 = m_28248
        else:
          gauss_jordan_res_ixfn_43069 = ctx_param_ext_43038
        local_memory_capacity_44237 = self.max_local_memory
        if intra_suff_and_fits_35032:
          gauss_jordan_res_ixfn_43070 = i32_res_28396
        else:
          gauss_jordan_res_ixfn_43070 = ctx_param_ext_43039
        local_memory_capacity_44238 = self.max_local_memory
        if intra_suff_and_fits_35032:
          gauss_jordan_res_ixfn_43071 = i32_res_28396
        else:
          gauss_jordan_res_ixfn_43071 = ctx_param_ext_43041
        local_memory_capacity_44239 = self.max_local_memory
        if intra_suff_and_fits_35032:
          gauss_jordan_res_ixfn_43072 = np.int64(1)
        else:
          gauss_jordan_res_ixfn_43072 = ctx_param_ext_43043
        local_memory_capacity_44240 = self.max_local_memory
        if intra_suff_and_fits_35032:
          gauss_jordan_res_ixfn_43073 = np.int64(0)
        else:
          gauss_jordan_res_ixfn_43073 = ctx_param_ext_43040
        local_memory_capacity_44268 = self.max_local_memory
        if ((sle64(np.int64(0),
                   sext_i32_i64(local_memory_capacity_44268)) and sle64((bytes_43012 + srem64((np.int64(8) - srem64(bytes_43012,
                                                                                                                    np.int64(8))),
                                                                                              np.int64(8))),
                                                                        sext_i32_i64(local_memory_capacity_44268))) and intra_suff_and_fits_35032):
          mem_43050 = opencl_alloc(self, bytes_43035, "mem_43050")
          group_sizze_44244 = self.sizes["mainMagnitude.group_size_44244"]
          num_groups_44245 = sdiv_up64((m_28248 * i32_res_28396),
                                       group_sizze_44244)
          if ((1 * (np.long(num_groups_44245) * np.long(group_sizze_44244))) != 0):
            self.mainMagnitudezicopy_44241_var.set_args(np.int64(m_28248),
                                                        np.int64(i32_res_28396),
                                                        np.int64(ctx_param_ext_43040),
                                                        np.int64(ctx_param_ext_43041),
                                                        np.int64(ctx_param_ext_43043),
                                                        mem_param_43045,
                                                        mem_43050)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezicopy_44241_var,
                                       ((np.long(num_groups_44245) * np.long(group_sizze_44244)),),
                                       (np.long(group_sizze_44244),))
            if synchronous:
              sync(self)
          mem_43058 = opencl_alloc(self, bytes_43035, "mem_43058")
          if ((1 * (np.long(m_28248) * np.long(i32_res_28396))) != 0):
            self.mainMagnitudezisegmap_intragroup_34626_var.set_args(self.global_failure,
                                                                     cl.LocalMemory(np.long(bytes_43012)),
                                                                     np.int64(m_28248),
                                                                     np.int32(k2p2zq_28261),
                                                                     np.int32(m_28394),
                                                                     np.int64(i32_res_28396),
                                                                     np.int32(i_35021),
                                                                     np.int64(i32_res_35023),
                                                                     np.int64(ctx_param_ext_43040),
                                                                     np.int64(ctx_param_ext_43041),
                                                                     np.int64(ctx_param_ext_43043),
                                                                     mem_param_43045,
                                                                     mem_43050,
                                                                     mem_43058)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_intragroup_34626_var,
                                       ((np.long(m_28248) * np.long(i32_res_28396)),),
                                       (np.long(i32_res_28396),))
            if synchronous:
              sync(self)
          mem_43050 = None
          gauss_jordan_res_mem_43074 = mem_43058
        else:
          mem_43061 = opencl_alloc(self, m_28248, "mem_43061")
          if ((1 * (np.long(segmap_usable_groups_35069) * np.long(segmap_group_sizze_35068))) != 0):
            self.mainMagnitudezisegmap_34867_var.set_args(self.global_failure,
                                                          np.int64(m_28248),
                                                          np.int64(i32_res_35023),
                                                          np.int64(ctx_param_ext_43040),
                                                          np.int64(ctx_param_ext_43041),
                                                          np.int64(ctx_param_ext_43043),
                                                          mem_param_43045,
                                                          mem_43061)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34867_var,
                                       ((np.long(segmap_usable_groups_35069) * np.long(segmap_group_sizze_35068)),),
                                       (np.long(segmap_group_sizze_35068),))
            if synchronous:
              sync(self)
          mem_43065 = opencl_alloc(self, bytes_43035, "mem_43065")
          if ((1 * (np.long(segmap_usable_groups_35085) * np.long(segmap_group_sizze_35084))) != 0):
            self.mainMagnitudezisegmap_34799_var.set_args(self.global_failure,
                                                          np.int64(m_28248),
                                                          np.int32(k2p2zq_28261),
                                                          np.int32(m_28394),
                                                          np.int64(i32_res_28396),
                                                          np.int32(i_35021),
                                                          np.int64(i32_res_35023),
                                                          np.int64(ctx_param_ext_43040),
                                                          np.int64(ctx_param_ext_43041),
                                                          np.int64(ctx_param_ext_43043),
                                                          mem_param_43045,
                                                          mem_43061, mem_43065)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34799_var,
                                       ((np.long(segmap_usable_groups_35085) * np.long(segmap_group_sizze_35084)),),
                                       (np.long(segmap_group_sizze_35084),))
            if synchronous:
              sync(self)
          mem_43061 = None
          if ((1 * (np.long(segmap_usable_groups_35119) * np.long(segmap_group_sizze_35118))) != 0):
            self.mainMagnitudezisegmap_34745_var.set_args(self.global_failure,
                                                          np.int64(m_28248),
                                                          np.int64(i32_res_28396),
                                                          np.int64(ctx_param_ext_43040),
                                                          np.int64(ctx_param_ext_43041),
                                                          np.int64(ctx_param_ext_43043),
                                                          mem_param_43045,
                                                          mem_43065)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegmap_34745_var,
                                       ((np.long(segmap_usable_groups_35119) * np.long(segmap_group_sizze_35118)),),
                                       (np.long(segmap_group_sizze_35118),))
            if synchronous:
              sync(self)
          mem_43065 = None
          gauss_jordan_res_mem_43074 = mem_param_43045
        ctx_param_ext_tmp_44225 = gauss_jordan_res_ixfn_43069
        ctx_param_ext_tmp_44226 = gauss_jordan_res_ixfn_43070
        ctx_param_ext_tmp_44227 = gauss_jordan_res_ixfn_43073
        ctx_param_ext_tmp_44228 = gauss_jordan_res_ixfn_43071
        ctx_param_ext_tmp_44229 = gauss_jordan_res_ixfn_43067
        ctx_param_ext_tmp_44230 = gauss_jordan_res_ixfn_43072
        ctx_param_ext_tmp_44231 = gauss_jordan_res_ixfn_43068
        mem_param_tmp_44232 = gauss_jordan_res_mem_43074
        ctx_param_ext_43038 = ctx_param_ext_tmp_44225
        ctx_param_ext_43039 = ctx_param_ext_tmp_44226
        ctx_param_ext_43040 = ctx_param_ext_tmp_44227
        ctx_param_ext_43041 = ctx_param_ext_tmp_44228
        ctx_param_ext_43042 = ctx_param_ext_tmp_44229
        ctx_param_ext_43043 = ctx_param_ext_tmp_44230
        ctx_param_ext_43044 = ctx_param_ext_tmp_44231
        mem_param_43045 = mem_param_tmp_44232
        i_35021 += one_45258
      gauss_jordan_res_r_ixfn_43075 = ctx_param_ext_43038
      gauss_jordan_res_r_ixfn_43076 = ctx_param_ext_43039
      gauss_jordan_res_r_ixfn_43077 = ctx_param_ext_43040
      gauss_jordan_res_r_ixfn_43078 = ctx_param_ext_43041
      gauss_jordan_res_r_ixfn_43079 = ctx_param_ext_43042
      gauss_jordan_res_r_ixfn_43080 = ctx_param_ext_43043
      gauss_jordan_res_r_ixfn_43081 = ctx_param_ext_43044
      gauss_jordan_res_r_mem_43082 = mem_param_43045
      mem_43037 = None
      segmap_usable_groups_35131 = sdiv_up64(nest_sizze_35129,
                                             segmap_group_sizze_35130)
      mem_43087 = opencl_alloc(self, bytes_43084, "mem_43087")
      if ((1 * (np.long(segmap_usable_groups_35131) * np.long(segmap_group_sizze_35130))) != 0):
        self.mainMagnitudezisegmap_34579_var.set_args(self.global_failure,
                                                      np.int64(m_28248),
                                                      np.int64(i32_res_28263),
                                                      np.int64(i32_res_28396),
                                                      np.int64(i32_res_28411),
                                                      np.int64(x_28412),
                                                      np.int64(j_m_i_28415),
                                                      np.int64(gauss_jordan_res_r_ixfn_43077),
                                                      np.int64(gauss_jordan_res_r_ixfn_43078),
                                                      np.int64(gauss_jordan_res_r_ixfn_43080),
                                                      gauss_jordan_res_r_mem_43082,
                                                      mem_43087)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_34579_var,
                                   ((np.long(segmap_usable_groups_35131) * np.long(segmap_group_sizze_35130)),),
                                   (np.long(segmap_group_sizze_35130),))
        if synchronous:
          sync(self)
      gauss_jordan_res_r_mem_43082 = None
      defunc_3_map_res_mem_43089 = mem_43087
    defunc_3_map_res_mem_43009 = None
    suff_outer_par_35139 = (self.sizes["mainMagnitude.suff_outer_par_16"] <= m_28248)
    segmap_group_sizze_35161 = self.sizes["mainMagnitude.segmap_group_size_35143"]
    max_num_groups_44275 = self.sizes["mainMagnitude.segmap_num_groups_35145"]
    num_groups_35162 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28248,
                                                            segmap_group_sizze_35161),
                                                  sext_i32_i64(max_num_groups_44275))))
    suff_outer_par_35246 = (self.sizes["mainMagnitude.suff_outer_par_17"] <= nest_sizze_34249)
    nest_sizze_35262 = (i32_res_28257 * nest_sizze_34249)
    segred_group_sizze_35263 = self.sizes["mainMagnitude.segred_group_size_35205"]
    max_num_groups_44276 = self.sizes["mainMagnitude.segred_num_groups_35207"]
    num_groups_35264 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35262,
                                                            segred_group_sizze_35263),
                                                  sext_i32_i64(max_num_groups_44276))))
    Ty_41194 = self.sizes["mainMagnitude.Ty_41191"]
    Ry_41195 = self.sizes["mainMagnitude.Ry_41193"]
    Tx_41196 = self.sizes["mainMagnitude.Tx_41190"]
    Rx_41197 = self.sizes["mainMagnitude.Rx_41192"]
    Tk_41198 = self.sizes["mainMagnitude.Tk_41189"]
    TxRx_41201 = (Tx_41196 * Rx_41197)
    TyRy_41202 = (Ty_41194 * Ry_41195)
    a_loc_szz_41204 = (Tk_41198 * TyRy_41202)
    binop_x_41205 = (Tx_41196 * Tk_41198)
    b_loc_szz_41206 = (Rx_41197 * binop_x_41205)
    group_sizze_41210 = (Ty_41194 * Tx_41196)
    bytes_43108 = (np.int64(4) * nest_sizze_34249)
    binop_x_43122 = (Ry_41195 * group_sizze_41210)
    binop_x_43123 = (Rx_41197 * binop_x_43122)
    bytes_43120 = (np.int64(4) * binop_x_43123)
    binop_x_43114 = (Ry_41195 * Rx_41197)
    bytes_43113 = (np.int64(4) * binop_x_43114)
    bytes_43125 = (np.int64(4) * a_loc_szz_41204)
    bytes_43127 = (np.int64(4) * b_loc_szz_41206)
    bytes_43196 = (np.int64(4) * binop_x_43122)
    binop_x_43202 = (Rx_41197 * group_sizze_41210)
    bytes_43200 = (np.int64(4) * binop_x_43202)
    bytes_43188 = (np.int64(4) * Ry_41195)
    bytes_43190 = (np.int64(4) * Rx_41197)
    binop_x_43860 = (np.int64(4) * Ty_41194)
    binop_x_43861 = (Tx_41196 * binop_x_43860)
    binop_x_43862 = (Ry_41195 * binop_x_43861)
    sizze_43863 = (Rx_41197 * binop_x_43862)
    num_threads_43988 = (segmap_group_sizze_35161 * num_groups_35162)
    total_sizze_43989 = (bytes_42908 * num_threads_43988)
    local_memory_capacity_44406 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44406)) and suff_outer_par_35139):
      mem_43092 = opencl_alloc(self, bytes_42858, "mem_43092")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43092, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_28247, m_28248)
      mem_43110 = opencl_alloc(self, bytes_43108, "mem_43110")
      mem_43095 = opencl_alloc(self, total_sizze_43989, "mem_43095")
      if ((1 * (np.long(num_groups_35162) * np.long(segmap_group_sizze_35161))) != 0):
        self.mainMagnitudezisegmap_35141_var.set_args(self.global_failure,
                                                      np.int64(N_28247),
                                                      np.int64(m_28248),
                                                      np.int32(n_28251),
                                                      np.int32(k2p2zq_28261),
                                                      np.int64(i32_res_28263),
                                                      np.int64(num_groups_35162),
                                                      binop_p_mem_42850,
                                                      mem_43092, mem_43095,
                                                      mem_43110)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35141_var,
                                   ((np.long(num_groups_35162) * np.long(segmap_group_sizze_35161)),),
                                   (np.long(segmap_group_sizze_35161),))
        if synchronous:
          sync(self)
      mem_43092 = None
      mem_43095 = None
      mem_43308 = opencl_alloc(self, bytes_43108, "mem_43308")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43308, np.int64(0),
                                                  mem_43110, np.int64(0),
                                                  np.int64(1), m_28248,
                                                  i32_res_28263)
      mem_43110 = None
      defunc_3_map_res_mem_43310 = mem_43308
    else:
      local_memory_capacity_44405 = self.max_local_memory
      if (sle64(((bytes_43125 + srem64((np.int64(8) - srem64(bytes_43125,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43127 + srem64((np.int64(8) - srem64(bytes_43127,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44405)) and suff_outer_par_35246):
        tk_div_tx_41199 = sdiv_up64(Tk_41198, Tx_41196)
        tk_div_ty_41200 = sdiv_up64(Tk_41198, Ty_41194)
        gridDim_x_41207 = sdiv_up64(i32_res_28263, TxRx_41201)
        gridDim_y_41208 = sdiv_up64(m_28248, TyRy_41202)
        grid_sizze_41209 = (gridDim_x_41207 * gridDim_y_41208)
        full_tiles_41238 = squot64(i32_res_28257, Tk_41198)
        kk_41445 = (Tk_41198 * full_tiles_41238)
        mem_43300 = opencl_alloc(self, bytes_43108, "mem_43300")
        if ((1 * (np.long(grid_sizze_41209) * np.long(group_sizze_41210))) != 0):
          self.mainMagnitudezisegmap_intragroup_41213_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43127)),
                                                                   cl.LocalMemory(np.long(bytes_43125)),
                                                                   np.int64(N_28247),
                                                                   np.int64(m_28248),
                                                                   np.int64(i32_res_28257),
                                                                   np.int64(i32_res_28263),
                                                                   np.int64(gridDim_x_41207),
                                                                   np.int64(full_tiles_41238),
                                                                   np.int64(kk_41445),
                                                                   images_mem_42841,
                                                                   mem_42853,
                                                                   mem_43300)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41213_var,
                                     ((np.long(grid_sizze_41209) * np.long(group_sizze_41210)),),
                                     (np.long(group_sizze_41210),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43305 = mem_43300
      else:
        mem_43304 = opencl_alloc(self, bytes_43108, "mem_43304")
        if slt64((i32_res_28257 * np.int64(2)), segred_group_sizze_35263):
          segment_sizze_nonzzero_44345 = smax64(np.int64(1), i32_res_28257)
          num_threads_44346 = (num_groups_35264 * segred_group_sizze_35263)
          if ((1 * (np.long(num_groups_35264) * np.long(segred_group_sizze_35263))) != 0):
            self.mainMagnitudezisegred_small_35211_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35263))),
                                                                np.int64(N_28247),
                                                                np.int64(m_28248),
                                                                np.int64(i32_res_28257),
                                                                np.int64(i32_res_28263),
                                                                np.int64(num_groups_35264),
                                                                np.int64(segment_sizze_nonzzero_44345),
                                                                images_mem_42841,
                                                                binop_p_mem_42850,
                                                                mem_43304)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35211_var,
                                       ((np.long(num_groups_35264) * np.long(segred_group_sizze_35263)),),
                                       (np.long(segred_group_sizze_35263),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44366 = sdiv_up64(num_groups_35264,
                                               smax64(np.int64(1),
                                                      (m_28248 * i32_res_28263)))
          elements_per_thread_44367 = sdiv_up64(i32_res_28257,
                                                (segred_group_sizze_35263 * groups_per_segment_44366))
          virt_num_groups_44368 = (groups_per_segment_44366 * (m_28248 * i32_res_28263))
          num_threads_44369 = (num_groups_35264 * segred_group_sizze_35263)
          threads_per_segment_44370 = (groups_per_segment_44366 * segred_group_sizze_35263)
          group_res_arr_mem_44371 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35263 * virt_num_groups_44368)),
                                                 "group_res_arr_mem_44371")
          mainMagnitudezicounter_mem_44373 = self.mainMagnitudezicounter_mem_44373
          if ((1 * (np.long(num_groups_35264) * np.long(segred_group_sizze_35263))) != 0):
            self.mainMagnitudezisegred_large_35211_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35263))),
                                                                np.int64(N_28247),
                                                                np.int64(i32_res_28257),
                                                                np.int64(i32_res_28263),
                                                                np.int64(num_groups_35264),
                                                                np.int64(groups_per_segment_44366),
                                                                np.int64(elements_per_thread_44367),
                                                                np.int64(virt_num_groups_44368),
                                                                np.int64(threads_per_segment_44370),
                                                                images_mem_42841,
                                                                binop_p_mem_42850,
                                                                mem_43304,
                                                                group_res_arr_mem_44371,
                                                                mainMagnitudezicounter_mem_44373)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35211_var,
                                       ((np.long(num_groups_35264) * np.long(segred_group_sizze_35263)),),
                                       (np.long(segred_group_sizze_35263),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43305 = mem_43304
      defunc_3_map_res_mem_43310 = defunc_3_map_res_mem_43305
    binop_p_mem_42850 = None
    mem_42853 = None
    suff_outer_par_35280 = (self.sizes["mainMagnitude.suff_outer_par_18"] <= m_28248)
    segmap_group_sizze_35301 = self.sizes["mainMagnitude.segmap_group_size_35284"]
    max_num_groups_44407 = self.sizes["mainMagnitude.segmap_num_groups_35286"]
    num_groups_35302 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28248,
                                                            segmap_group_sizze_35301),
                                                  sext_i32_i64(max_num_groups_44407))))
    suff_outer_par_35381 = (self.sizes["mainMagnitude.suff_outer_par_19"] <= nest_sizze_34249)
    segred_group_sizze_35396 = self.sizes["mainMagnitude.segred_group_size_35342"]
    max_num_groups_44408 = self.sizes["mainMagnitude.segred_num_groups_35344"]
    num_groups_35397 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_43006,
                                                            segred_group_sizze_35396),
                                                  sext_i32_i64(max_num_groups_44408))))
    tile_sizze_41657 = self.sizes["mainMagnitude.tile_size_41656"]
    group_sizze_41658 = (tile_sizze_41657 * tile_sizze_41657)
    bytes_43342 = (np.int64(4) * group_sizze_41658)
    binop_x_43876 = (np.int64(4) * tile_sizze_41657)
    sizze_43877 = (tile_sizze_41657 * binop_x_43876)
    num_threads_43992 = (segmap_group_sizze_35301 * num_groups_35302)
    total_sizze_43993 = (bytes_42908 * num_threads_43992)
    local_memory_capacity_44494 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44494)) and suff_outer_par_35280):
      mem_43314 = opencl_alloc(self, bytes_42903, "mem_43314")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43314, np.int64(0),
                                                  defunc_3_map_res_mem_43089,
                                                  np.int64(0), np.int64(1),
                                                  (i32_res_28263 * i32_res_28263),
                                                  m_28248)
      mem_43317 = opencl_alloc(self, bytes_43108, "mem_43317")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43317, np.int64(0),
                                                  defunc_3_map_res_mem_43310,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28263, m_28248)
      mem_43335 = opencl_alloc(self, bytes_43108, "mem_43335")
      mem_43320 = opencl_alloc(self, total_sizze_43993, "mem_43320")
      if ((1 * (np.long(num_groups_35302) * np.long(segmap_group_sizze_35301))) != 0):
        self.mainMagnitudezisegmap_35282_var.set_args(self.global_failure,
                                                      np.int64(m_28248),
                                                      np.int32(k2p2zq_28261),
                                                      np.int64(i32_res_28263),
                                                      np.int64(num_groups_35302),
                                                      mem_43314, mem_43317,
                                                      mem_43320, mem_43335)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35282_var,
                                   ((np.long(num_groups_35302) * np.long(segmap_group_sizze_35301)),),
                                   (np.long(segmap_group_sizze_35301),))
        if synchronous:
          sync(self)
      mem_43314 = None
      mem_43317 = None
      mem_43320 = None
      mem_43374 = opencl_alloc(self, bytes_43108, "mem_43374")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43374, np.int64(0),
                                                  mem_43335, np.int64(0),
                                                  np.int64(1), m_28248,
                                                  i32_res_28263)
      mem_43335 = None
      defunc_4_map_res_mem_43376 = mem_43374
    else:
      local_memory_capacity_44493 = self.max_local_memory
      if (sle64(((bytes_43342 + srem64((np.int64(8) - srem64(bytes_43342,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43342 + srem64((np.int64(8) - srem64(bytes_43342,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44493)) and suff_outer_par_35381):
        mem_43339 = opencl_alloc(self, bytes_43004, "mem_43339")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43339, np.int64(0),
                                                    defunc_3_map_res_mem_43089,
                                                    np.int64(0), np.int64(1),
                                                    i32_res_28263,
                                                    (m_28248 * i32_res_28263))
        num_groups_x_41659 = sdiv_up64(m_28248, tile_sizze_41657)
        num_groups_y_41660 = sdiv_up64(i32_res_28263, tile_sizze_41657)
        num_groups_top_41661 = (num_groups_x_41659 * num_groups_y_41660)
        num_whole_tiles_41678 = squot64(i32_res_28263, tile_sizze_41657)
        residual_input_41805 = srem64(i32_res_28263, tile_sizze_41657)
        cond_41806 = (residual_input_41805 == np.int64(0))
        mem_43366 = opencl_alloc(self, bytes_43108, "mem_43366")
        if ((1 * (np.long(num_groups_top_41661) * np.long(group_sizze_41658))) != 0):
          self.mainMagnitudezisegmap_intragroup_41662_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43342)),
                                                                   cl.LocalMemory(np.long(bytes_43342)),
                                                                   np.int64(m_28248),
                                                                   np.int64(i32_res_28263),
                                                                   np.int64(num_groups_y_41660),
                                                                   np.int64(num_whole_tiles_41678),
                                                                   np.int64(residual_input_41805),
                                                                   np.byte(cond_41806),
                                                                   defunc_3_map_res_mem_43310,
                                                                   mem_43339,
                                                                   mem_43366)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41662_var,
                                     ((np.long(num_groups_top_41661) * np.long(group_sizze_41658)),),
                                     (np.long(group_sizze_41658),))
          if synchronous:
            sync(self)
        mem_43339 = None
        defunc_4_map_res_mem_43371 = mem_43366
      else:
        mem_43370 = opencl_alloc(self, bytes_43108, "mem_43370")
        if slt64((i32_res_28263 * np.int64(2)), segred_group_sizze_35396):
          segment_sizze_nonzzero_44433 = smax64(np.int64(1), i32_res_28263)
          num_threads_44434 = (num_groups_35397 * segred_group_sizze_35396)
          if ((1 * (np.long(num_groups_35397) * np.long(segred_group_sizze_35396))) != 0):
            self.mainMagnitudezisegred_small_35348_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35396))),
                                                                np.int64(m_28248),
                                                                np.int64(i32_res_28263),
                                                                np.int64(num_groups_35397),
                                                                np.int64(segment_sizze_nonzzero_44433),
                                                                defunc_3_map_res_mem_43089,
                                                                defunc_3_map_res_mem_43310,
                                                                mem_43370)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35348_var,
                                       ((np.long(num_groups_35397) * np.long(segred_group_sizze_35396)),),
                                       (np.long(segred_group_sizze_35396),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44454 = sdiv_up64(num_groups_35397,
                                               smax64(np.int64(1),
                                                      (m_28248 * i32_res_28263)))
          elements_per_thread_44455 = sdiv_up64(i32_res_28263,
                                                (segred_group_sizze_35396 * groups_per_segment_44454))
          virt_num_groups_44456 = (groups_per_segment_44454 * (m_28248 * i32_res_28263))
          num_threads_44457 = (num_groups_35397 * segred_group_sizze_35396)
          threads_per_segment_44458 = (groups_per_segment_44454 * segred_group_sizze_35396)
          group_res_arr_mem_44459 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35396 * virt_num_groups_44456)),
                                                 "group_res_arr_mem_44459")
          mainMagnitudezicounter_mem_44461 = self.mainMagnitudezicounter_mem_44461
          if ((1 * (np.long(num_groups_35397) * np.long(segred_group_sizze_35396))) != 0):
            self.mainMagnitudezisegred_large_35348_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35396))),
                                                                np.int64(i32_res_28263),
                                                                np.int64(num_groups_35397),
                                                                np.int64(groups_per_segment_44454),
                                                                np.int64(elements_per_thread_44455),
                                                                np.int64(virt_num_groups_44456),
                                                                np.int64(threads_per_segment_44458),
                                                                defunc_3_map_res_mem_43089,
                                                                defunc_3_map_res_mem_43310,
                                                                mem_43370,
                                                                group_res_arr_mem_44459,
                                                                mainMagnitudezicounter_mem_44461)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35348_var,
                                       ((np.long(num_groups_35397) * np.long(segred_group_sizze_35396)),),
                                       (np.long(segred_group_sizze_35396),))
            if synchronous:
              sync(self)
        defunc_4_map_res_mem_43371 = mem_43370
      defunc_4_map_res_mem_43376 = defunc_4_map_res_mem_43371
    defunc_3_map_res_mem_43089 = None
    defunc_3_map_res_mem_43310 = None
    suff_outer_par_35412 = (self.sizes["mainMagnitude.suff_outer_par_20"] <= m_28248)
    segmap_group_sizze_35432 = self.sizes["mainMagnitude.segmap_group_size_35416"]
    max_num_groups_44495 = self.sizes["mainMagnitude.segmap_num_groups_35418"]
    num_groups_35433 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28248,
                                                            segmap_group_sizze_35432),
                                                  sext_i32_i64(max_num_groups_44495))))
    suff_outer_par_35509 = (self.sizes["mainMagnitude.suff_outer_par_21"] <= binop_x_42859)
    nest_sizze_35523 = (i32_res_28263 * binop_x_42859)
    segred_group_sizze_35524 = self.sizes["mainMagnitude.segred_group_size_35472"]
    max_num_groups_44496 = self.sizes["mainMagnitude.segred_num_groups_35474"]
    num_groups_35525 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_35523,
                                                            segred_group_sizze_35524),
                                                  sext_i32_i64(max_num_groups_44496))))
    Ty_41935 = self.sizes["mainMagnitude.Ty_41932"]
    Ry_41936 = self.sizes["mainMagnitude.Ry_41934"]
    Tx_41937 = self.sizes["mainMagnitude.Tx_41931"]
    Rx_41938 = self.sizes["mainMagnitude.Rx_41933"]
    Tk_41939 = self.sizes["mainMagnitude.Tk_41930"]
    TxRx_41942 = (Tx_41937 * Rx_41938)
    TyRy_41943 = (Ty_41935 * Ry_41936)
    a_loc_szz_41945 = (Tk_41939 * TyRy_41943)
    binop_x_41946 = (Tx_41937 * Tk_41939)
    b_loc_szz_41947 = (Rx_41938 * binop_x_41946)
    group_sizze_41951 = (Ty_41935 * Tx_41937)
    bytes_43381 = (np.int64(4) * N_28247)
    binop_x_43412 = (Ry_41936 * group_sizze_41951)
    binop_x_43413 = (Rx_41938 * binop_x_43412)
    bytes_43410 = (np.int64(4) * binop_x_43413)
    binop_x_43404 = (Ry_41936 * Rx_41938)
    bytes_43403 = (np.int64(4) * binop_x_43404)
    bytes_43415 = (np.int64(4) * a_loc_szz_41945)
    bytes_43417 = (np.int64(4) * b_loc_szz_41947)
    bytes_43486 = (np.int64(4) * binop_x_43412)
    binop_x_43492 = (Rx_41938 * group_sizze_41951)
    bytes_43490 = (np.int64(4) * binop_x_43492)
    bytes_43478 = (np.int64(4) * Ry_41936)
    bytes_43480 = (np.int64(4) * Rx_41938)
    binop_x_43890 = (np.int64(4) * Ty_41935)
    binop_x_43891 = (Tx_41937 * binop_x_43890)
    binop_x_43892 = (Ry_41936 * binop_x_43891)
    sizze_43893 = (Rx_41938 * binop_x_43892)
    num_threads_43996 = (segmap_group_sizze_35432 * num_groups_35433)
    total_sizze_43997 = (bytes_43381 * num_threads_43996)
    local_memory_capacity_44626 = self.max_local_memory
    if (sle64(np.int64(0),
              sext_i32_i64(local_memory_capacity_44626)) and suff_outer_par_35412):
      mem_43379 = opencl_alloc(self, bytes_43108, "mem_43379")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43379, np.int64(0),
                                                  defunc_4_map_res_mem_43376,
                                                  np.int64(0), np.int64(1),
                                                  i32_res_28263, m_28248)
      mem_43397 = opencl_alloc(self, bytes_42858, "mem_43397")
      mem_43382 = opencl_alloc(self, total_sizze_43997, "mem_43382")
      if ((1 * (np.long(num_groups_35433) * np.long(segmap_group_sizze_35432))) != 0):
        self.mainMagnitudezisegmap_35414_var.set_args(self.global_failure,
                                                      np.int64(N_28247),
                                                      np.int64(m_28248),
                                                      np.int32(k2p2zq_28261),
                                                      np.int64(i32_res_28263),
                                                      np.int64(num_groups_35433),
                                                      mem_42857, mem_43379,
                                                      mem_43382, mem_43397)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35414_var,
                                   ((np.long(num_groups_35433) * np.long(segmap_group_sizze_35432)),),
                                   (np.long(segmap_group_sizze_35432),))
        if synchronous:
          sync(self)
      mem_43379 = None
      mem_43382 = None
      mem_43598 = opencl_alloc(self, bytes_42858, "mem_43598")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43598, np.int64(0),
                                                  mem_43397, np.int64(0),
                                                  np.int64(1), m_28248, N_28247)
      mem_43397 = None
      defunc_3_map_res_mem_43600 = mem_43598
    else:
      local_memory_capacity_44625 = self.max_local_memory
      if (sle64(((bytes_43415 + srem64((np.int64(8) - srem64(bytes_43415,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43417 + srem64((np.int64(8) - srem64(bytes_43417,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44625)) and suff_outer_par_35509):
        mem_43400 = opencl_alloc(self, bytes_42843, "mem_43400")
        self.futhark_builtinzhgpu_map_transpose_f32(mem_43400, np.int64(0),
                                                    mem_42857, np.int64(0),
                                                    np.int64(1), i32_res_28263,
                                                    N_28247)
        tk_div_tx_41940 = sdiv_up64(Tk_41939, Tx_41937)
        tk_div_ty_41941 = sdiv_up64(Tk_41939, Ty_41935)
        gridDim_x_41948 = sdiv_up64(N_28247, TxRx_41942)
        gridDim_y_41949 = sdiv_up64(m_28248, TyRy_41943)
        grid_sizze_41950 = (gridDim_x_41948 * gridDim_y_41949)
        full_tiles_41979 = squot64(i32_res_28263, Tk_41939)
        kk_42182 = (Tk_41939 * full_tiles_41979)
        mem_43590 = opencl_alloc(self, bytes_42858, "mem_43590")
        if ((1 * (np.long(grid_sizze_41950) * np.long(group_sizze_41951))) != 0):
          self.mainMagnitudezisegmap_intragroup_41954_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long(bytes_43417)),
                                                                   cl.LocalMemory(np.long(bytes_43415)),
                                                                   np.int64(N_28247),
                                                                   np.int64(m_28248),
                                                                   np.int64(i32_res_28263),
                                                                   np.int64(gridDim_x_41948),
                                                                   np.int64(full_tiles_41979),
                                                                   np.int64(kk_42182),
                                                                   defunc_4_map_res_mem_43376,
                                                                   mem_43400,
                                                                   mem_43590)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_41954_var,
                                     ((np.long(grid_sizze_41950) * np.long(group_sizze_41951)),),
                                     (np.long(group_sizze_41951),))
          if synchronous:
            sync(self)
        mem_43400 = None
        defunc_3_map_res_mem_43595 = mem_43590
      else:
        mem_43594 = opencl_alloc(self, bytes_42858, "mem_43594")
        if slt64((i32_res_28263 * np.int64(2)), segred_group_sizze_35524):
          segment_sizze_nonzzero_44565 = smax64(np.int64(1), i32_res_28263)
          num_threads_44566 = (num_groups_35525 * segred_group_sizze_35524)
          if ((1 * (np.long(num_groups_35525) * np.long(segred_group_sizze_35524))) != 0):
            self.mainMagnitudezisegred_small_35478_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35524))),
                                                                np.int64(N_28247),
                                                                np.int64(m_28248),
                                                                np.int64(i32_res_28263),
                                                                np.int64(num_groups_35525),
                                                                np.int64(segment_sizze_nonzzero_44565),
                                                                mem_42857,
                                                                defunc_4_map_res_mem_43376,
                                                                mem_43594)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_35478_var,
                                       ((np.long(num_groups_35525) * np.long(segred_group_sizze_35524)),),
                                       (np.long(segred_group_sizze_35524),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44586 = sdiv_up64(num_groups_35525,
                                               smax64(np.int64(1),
                                                      (m_28248 * N_28247)))
          elements_per_thread_44587 = sdiv_up64(i32_res_28263,
                                                (segred_group_sizze_35524 * groups_per_segment_44586))
          virt_num_groups_44588 = (groups_per_segment_44586 * (m_28248 * N_28247))
          num_threads_44589 = (num_groups_35525 * segred_group_sizze_35524)
          threads_per_segment_44590 = (groups_per_segment_44586 * segred_group_sizze_35524)
          group_res_arr_mem_44591 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_35524 * virt_num_groups_44588)),
                                                 "group_res_arr_mem_44591")
          mainMagnitudezicounter_mem_44593 = self.mainMagnitudezicounter_mem_44593
          if ((1 * (np.long(num_groups_35525) * np.long(segred_group_sizze_35524))) != 0):
            self.mainMagnitudezisegred_large_35478_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_35524))),
                                                                np.int64(N_28247),
                                                                np.int64(i32_res_28263),
                                                                np.int64(num_groups_35525),
                                                                np.int64(groups_per_segment_44586),
                                                                np.int64(elements_per_thread_44587),
                                                                np.int64(virt_num_groups_44588),
                                                                np.int64(threads_per_segment_44590),
                                                                mem_42857,
                                                                defunc_4_map_res_mem_43376,
                                                                mem_43594,
                                                                group_res_arr_mem_44591,
                                                                mainMagnitudezicounter_mem_44593)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_35478_var,
                                       ((np.long(num_groups_35525) * np.long(segred_group_sizze_35524)),),
                                       (np.long(segred_group_sizze_35524),))
            if synchronous:
              sync(self)
        defunc_3_map_res_mem_43595 = mem_43594
      defunc_3_map_res_mem_43600 = defunc_3_map_res_mem_43595
    mem_42857 = None
    defunc_4_map_res_mem_43376 = None
    i_28523 = (N_28247 - np.int64(1))
    x_28524 = sle64(np.int64(0), i_28523)
    y_28525 = slt64(i_28523, N_28247)
    bounds_check_28526 = (x_28524 and y_28525)
    index_certs_28527 = True
    assert bounds_check_28526, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:18:29-34\n   #1  helpers.fut:20:13-20\n   #2  bfastfinal.fut:78:30-91\n   #3  /prelude/soacs.fut:56:19-23\n   #4  /prelude/soacs.fut:56:3-37\n   #5  bfastfinal.fut:72:5-81:25\n   #6  bfastfinal.fut:185:5-58\n   #7  bfastfinal.fut:180:1-186:32\n" % ("Index [",
                                                                                                                                                                                                                                                                                                                                                     i_28523,
                                                                                                                                                                                                                                                                                                                                                     "] out of bounds for array of shape [",
                                                                                                                                                                                                                                                                                                                                                     N_28247,
                                                                                                                                                                                                                                                                                                                                                     "]."))
    fits_35654 = sle64(N_28247, max_group_sizze_34517)
    suff_intra_par_35652 = (self.sizes["mainMagnitude.suff_intra_par_24"] <= N_28247)
    intra_suff_and_fits_35655 = (suff_intra_par_35652 and fits_35654)
    segscan_group_sizze_35804 = self.sizes["mainMagnitude.segscan_group_size_35781"]
    max_num_groups_44627 = self.sizes["mainMagnitude.segscan_num_groups_35783"]
    num_groups_35805 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(binop_x_42859,
                                                            segscan_group_sizze_35804),
                                                  sext_i32_i64(max_num_groups_44627))))
    segmap_group_sizze_35824 = self.sizes["mainMagnitude.segmap_group_size_35772"]
    segmap_group_sizze_35860 = self.sizes["mainMagnitude.segmap_group_size_35697"]
    bytes_43612 = (np.int64(4) * m_28248)
    bytes_43603 = (np.int64(8) * N_28247)
    bytes_43621 = (np.int64(8) * binop_x_42859)
    local_memory_capacity_44729 = self.max_local_memory
    if (sle64(((((bytes_43603 + srem64((np.int64(8) - srem64(bytes_43603,
                                                             np.int64(8))),
                                       np.int64(8))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                   np.int64(8))),
                                                                             np.int64(8)))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                                                          np.int64(8))),
                                                                                                                    np.int64(8)))) + (bytes_43381 + srem64((np.int64(8) - srem64(bytes_43381,
                                                                                                                                                                                 np.int64(8))),
                                                                                                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44729)) and intra_suff_and_fits_35655):
      mem_43613 = opencl_alloc(self, bytes_43612, "mem_43613")
      mem_43616 = opencl_alloc(self, bytes_42858, "mem_43616")
      mem_43619 = opencl_alloc(self, bytes_42858, "mem_43619")
      if ((1 * (np.long(m_28248) * np.long(N_28247))) != 0):
        self.mainMagnitudezisegmap_intragroup_35577_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43381)),
                                                                 cl.LocalMemory(np.long(bytes_43381)),
                                                                 cl.LocalMemory(np.long(bytes_43381)),
                                                                 cl.LocalMemory(np.long(bytes_43603)),
                                                                 np.int64(N_28247),
                                                                 np.int64(i_28523),
                                                                 images_mem_42841,
                                                                 defunc_3_map_res_mem_43600,
                                                                 mem_43613,
                                                                 mem_43616,
                                                                 mem_43619)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_35577_var,
                                   ((np.long(m_28248) * np.long(N_28247)),),
                                   (np.long(N_28247),))
        if synchronous:
          sync(self)
      defunc_4_map_res_mem_43637 = mem_43613
      defunc_4_map_res_mem_43638 = mem_43616
      defunc_4_map_res_mem_43639 = mem_43619
    else:
      mem_43623 = opencl_alloc(self, bytes_43621, "mem_43623")
      mem_43626 = opencl_alloc(self, bytes_42858, "mem_43626")
      if slt64(np.int64(0), (m_28248 * N_28247)):
        stage1_max_num_groups_44645 = self.max_group_size
        stage1_num_groups_44646 = smin64(stage1_max_num_groups_44645,
                                         num_groups_35805)
        num_threads_44647 = sext_i64_i32((stage1_num_groups_44646 * segscan_group_sizze_35804))
        if ((1 * (np.long(stage1_num_groups_44646) * np.long(segscan_group_sizze_35804))) != 0):
          self.mainMagnitudeziscan_stage1_35787_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * segscan_group_sizze_35804)))),
                                                             np.int64(N_28247),
                                                             np.int64(m_28248),
                                                             np.int32(num_threads_44647),
                                                             images_mem_42841,
                                                             defunc_3_map_res_mem_43600,
                                                             mem_43623,
                                                             mem_43626)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_35787_var,
                                     ((np.long(stage1_num_groups_44646) * np.long(segscan_group_sizze_35804)),),
                                     (np.long(segscan_group_sizze_35804),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_44646))) != 0):
          self.mainMagnitudeziscan_stage2_35787_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(8) * stage1_num_groups_44646)))),
                                                             np.int64(N_28247),
                                                             np.int64(m_28248),
                                                             np.int64(stage1_num_groups_44646),
                                                             np.int32(num_threads_44647),
                                                             mem_43623)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_35787_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_44646)),),
                                     (np.long(stage1_num_groups_44646),))
          if synchronous:
            sync(self)
        required_groups_44689 = sext_i64_i32(sdiv_up64((m_28248 * N_28247),
                                                       segscan_group_sizze_35804))
        if ((1 * (np.long(num_groups_35805) * np.long(segscan_group_sizze_35804))) != 0):
          self.mainMagnitudeziscan_stage3_35787_var.set_args(self.global_failure,
                                                             np.int64(N_28247),
                                                             np.int64(m_28248),
                                                             np.int64(num_groups_35805),
                                                             np.int32(num_threads_44647),
                                                             np.int32(required_groups_44689),
                                                             mem_43623)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_35787_var,
                                     ((np.long(num_groups_35805) * np.long(segscan_group_sizze_35804)),),
                                     (np.long(segscan_group_sizze_35804),))
          if synchronous:
            sync(self)
      segmap_usable_groups_35825 = sdiv_up64(m_28248, segmap_group_sizze_35824)
      mem_43629 = opencl_alloc(self, bytes_43612, "mem_43629")
      if ((1 * (np.long(segmap_usable_groups_35825) * np.long(segmap_group_sizze_35824))) != 0):
        self.mainMagnitudezisegmap_35770_var.set_args(self.global_failure,
                                                      np.int64(N_28247),
                                                      np.int64(m_28248),
                                                      np.int64(i_28523),
                                                      mem_43623, mem_43629)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35770_var,
                                   ((np.long(segmap_usable_groups_35825) * np.long(segmap_group_sizze_35824)),),
                                   (np.long(segmap_group_sizze_35824),))
        if synchronous:
          sync(self)
      mem_43632 = opencl_alloc(self, bytes_42858, "mem_43632")
      self.futhark_builtinzhreplicate_f32(mem_43632, (m_28248 * N_28247),
                                          np.nan)
      mem_43635 = opencl_alloc(self, bytes_42858, "mem_43635")
      self.futhark_builtinzhreplicate_i32(mem_43635, (m_28248 * N_28247),
                                          np.int32(0))
      segmap_usable_groups_35861 = sdiv_up64(binop_x_42859,
                                             segmap_group_sizze_35860)
      if ((1 * (np.long(segmap_usable_groups_35861) * np.long(segmap_group_sizze_35860))) != 0):
        self.mainMagnitudezisegmap_35694_var.set_args(self.global_failure,
                                                      np.int64(N_28247),
                                                      np.int64(m_28248),
                                                      mem_43623, mem_43626,
                                                      mem_43632, mem_43635)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_35694_var,
                                   ((np.long(segmap_usable_groups_35861) * np.long(segmap_group_sizze_35860)),),
                                   (np.long(segmap_group_sizze_35860),))
        if synchronous:
          sync(self)
      mem_43623 = None
      mem_43626 = None
      defunc_4_map_res_mem_43637 = mem_43629
      defunc_4_map_res_mem_43638 = mem_43632
      defunc_4_map_res_mem_43639 = mem_43635
    defunc_3_map_res_mem_43600 = None
    suff_outer_par_35909 = (self.sizes["mainMagnitude.suff_outer_par_28"] <= m_28248)
    fits_35987 = sle64(i32_res_28257, max_group_sizze_34517)
    suff_intra_par_35985 = (self.sizes["mainMagnitude.suff_intra_par_29"] <= i32_res_28257)
    intra_suff_and_fits_35988 = (suff_intra_par_35985 and fits_35987)
    segmap_group_sizze_35952 = self.sizes["mainMagnitude.segmap_group_size_35921"]
    nest_sizze_36075 = (m_28248 * i32_res_28257)
    segred_group_sizze_36076 = self.sizes["mainMagnitude.segred_group_size_36059"]
    max_num_groups_44730 = self.sizes["mainMagnitude.segred_num_groups_36061"]
    num_groups_36077 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36075,
                                                            segred_group_sizze_36076),
                                                  sext_i32_i64(max_num_groups_44730))))
    segred_group_sizze_36090 = self.sizes["mainMagnitude.segred_group_size_36038"]
    max_num_groups_44731 = self.sizes["mainMagnitude.segred_num_groups_36040"]
    num_groups_36091 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36075,
                                                            segred_group_sizze_36090),
                                                  sext_i32_i64(max_num_groups_44731))))
    segmap_group_sizze_36106 = self.sizes["mainMagnitude.segmap_group_size_36023"]
    bytes_43648 = (np.int64(4) * segmap_group_sizze_35952)
    local_memory_capacity_44883 = self.max_local_memory
    if (sle64(((bytes_43648 + srem64((np.int64(8) - srem64(bytes_43648,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43648 + srem64((np.int64(8) - srem64(bytes_43648,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44883)) and suff_outer_par_35909):
      segmap_usable_groups_35953 = sdiv_up64(m_28248, segmap_group_sizze_35952)
      mem_43642 = opencl_alloc(self, bytes_42858, "mem_43642")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43642, np.int64(0),
                                                  images_mem_42841, np.int64(0),
                                                  np.int64(1), N_28247, m_28248)
      mem_43645 = opencl_alloc(self, bytes_42858, "mem_43645")
      self.futhark_builtinzhgpu_map_transpose_f32(mem_43645, np.int64(0),
                                                  defunc_4_map_res_mem_43638,
                                                  np.int64(0), np.int64(1),
                                                  N_28247, m_28248)
      num_whole_tiles_42410 = squot64(i32_res_28257, segmap_group_sizze_35952)
      residual_input_42499 = srem64(i32_res_28257, segmap_group_sizze_35952)
      cond_42500 = (residual_input_42499 == np.int64(0))
      mem_43676 = opencl_alloc(self, bytes_43612, "mem_43676")
      mem_43678 = opencl_alloc(self, bytes_43612, "mem_43678")
      mem_43680 = opencl_alloc(self, bytes_43612, "mem_43680")
      if ((1 * (np.long(segmap_usable_groups_35953) * np.long(segmap_group_sizze_35952))) != 0):
        self.mainMagnitudezisegmap_intragroup_42388_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43648)),
                                                                 cl.LocalMemory(np.long(bytes_43648)),
                                                                 np.int64(m_28248),
                                                                 np.int32(n_28251),
                                                                 np.float32(hfrac_28253),
                                                                 np.int64(i32_res_28257),
                                                                 np.int32(k2p2_28259),
                                                                 np.int64(num_whole_tiles_42410),
                                                                 np.int64(residual_input_42499),
                                                                 np.byte(cond_42500),
                                                                 mem_43642,
                                                                 mem_43645,
                                                                 mem_43676,
                                                                 mem_43678,
                                                                 mem_43680)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42388_var,
                                   ((np.long(segmap_usable_groups_35953) * np.long(segmap_group_sizze_35952)),),
                                   (np.long(segmap_group_sizze_35952),))
        if synchronous:
          sync(self)
      mem_43642 = None
      mem_43645 = None
      defunc_3_map_res_mem_43704 = mem_43676
      defunc_3_map_res_mem_43705 = mem_43678
      defunc_3_map_res_mem_43706 = mem_43680
    else:
      local_memory_capacity_44882 = self.max_local_memory
      if (sle64((((np.int32(4) * i32_res_28257) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28257),
                                                                               np.int64(8))),
                                                         np.int64(8))) + ((np.int32(4) * i32_res_28257) + srem64((np.int64(8) - srem64((np.int32(4) * i32_res_28257),
                                                                                                                                       np.int64(8))),
                                                                                                                 np.int64(8)))),
                sext_i32_i64(local_memory_capacity_44882)) and intra_suff_and_fits_35988):
        mem_43685 = opencl_alloc(self, bytes_43612, "mem_43685")
        mem_43687 = opencl_alloc(self, bytes_43612, "mem_43687")
        mem_43689 = opencl_alloc(self, bytes_43612, "mem_43689")
        if ((1 * (np.long(m_28248) * np.long(i32_res_28257))) != 0):
          self.mainMagnitudezisegmap_intragroup_35917_var.set_args(self.global_failure,
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28257))),
                                                                   cl.LocalMemory(np.long((np.int32(4) * i32_res_28257))),
                                                                   np.int64(N_28247),
                                                                   np.float32(hfrac_28253),
                                                                   np.int64(i32_res_28257),
                                                                   np.int32(k2p2_28259),
                                                                   images_mem_42841,
                                                                   defunc_4_map_res_mem_43638,
                                                                   mem_43685,
                                                                   mem_43687,
                                                                   mem_43689)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_intragroup_35917_var,
                                     ((np.long(m_28248) * np.long(i32_res_28257)),),
                                     (np.long(i32_res_28257),))
          if synchronous:
            sync(self)
        defunc_3_map_res_mem_43701 = mem_43685
        defunc_3_map_res_mem_43702 = mem_43687
        defunc_3_map_res_mem_43703 = mem_43689
      else:
        mem_43692 = opencl_alloc(self, bytes_43612, "mem_43692")
        if slt64((i32_res_28257 * np.int64(2)), segred_group_sizze_36076):
          segment_sizze_nonzzero_44757 = smax64(np.int64(1), i32_res_28257)
          num_threads_44758 = (num_groups_36077 * segred_group_sizze_36076)
          if ((1 * (np.long(num_groups_36077) * np.long(segred_group_sizze_36076))) != 0):
            self.mainMagnitudezisegred_small_36065_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36076))),
                                                                np.int64(N_28247),
                                                                np.int64(m_28248),
                                                                np.int64(i32_res_28257),
                                                                np.int64(num_groups_36077),
                                                                np.int64(segment_sizze_nonzzero_44757),
                                                                images_mem_42841,
                                                                mem_43692)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36065_var,
                                       ((np.long(num_groups_36077) * np.long(segred_group_sizze_36076)),),
                                       (np.long(segred_group_sizze_36076),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44778 = sdiv_up64(num_groups_36077,
                                               smax64(np.int64(1), m_28248))
          elements_per_thread_44779 = sdiv_up64(i32_res_28257,
                                                (segred_group_sizze_36076 * groups_per_segment_44778))
          virt_num_groups_44780 = (groups_per_segment_44778 * m_28248)
          num_threads_44781 = (num_groups_36077 * segred_group_sizze_36076)
          threads_per_segment_44782 = (groups_per_segment_44778 * segred_group_sizze_36076)
          group_res_arr_mem_44783 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36076 * virt_num_groups_44780)),
                                                 "group_res_arr_mem_44783")
          mainMagnitudezicounter_mem_44785 = self.mainMagnitudezicounter_mem_44785
          if ((1 * (np.long(num_groups_36077) * np.long(segred_group_sizze_36076))) != 0):
            self.mainMagnitudezisegred_large_36065_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36076))),
                                                                np.int64(N_28247),
                                                                np.int64(i32_res_28257),
                                                                np.int64(num_groups_36077),
                                                                np.int64(groups_per_segment_44778),
                                                                np.int64(elements_per_thread_44779),
                                                                np.int64(virt_num_groups_44780),
                                                                np.int64(threads_per_segment_44782),
                                                                images_mem_42841,
                                                                mem_43692,
                                                                group_res_arr_mem_44783,
                                                                mainMagnitudezicounter_mem_44785)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36065_var,
                                       ((np.long(num_groups_36077) * np.long(segred_group_sizze_36076)),),
                                       (np.long(segred_group_sizze_36076),))
            if synchronous:
              sync(self)
        mem_43695 = opencl_alloc(self, bytes_43612, "mem_43695")
        if slt64((i32_res_28257 * np.int64(2)), segred_group_sizze_36090):
          segment_sizze_nonzzero_44817 = smax64(np.int64(1), i32_res_28257)
          num_threads_44818 = (num_groups_36091 * segred_group_sizze_36090)
          if ((1 * (np.long(num_groups_36091) * np.long(segred_group_sizze_36090))) != 0):
            self.mainMagnitudezisegred_small_36044_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36090))),
                                                                np.int64(N_28247),
                                                                np.int64(m_28248),
                                                                np.int64(i32_res_28257),
                                                                np.int64(num_groups_36091),
                                                                np.int64(segment_sizze_nonzzero_44817),
                                                                defunc_4_map_res_mem_43638,
                                                                mem_43692,
                                                                mem_43695)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_small_36044_var,
                                       ((np.long(num_groups_36091) * np.long(segred_group_sizze_36090)),),
                                       (np.long(segred_group_sizze_36090),))
            if synchronous:
              sync(self)
        else:
          groups_per_segment_44838 = sdiv_up64(num_groups_36091,
                                               smax64(np.int64(1), m_28248))
          elements_per_thread_44839 = sdiv_up64(i32_res_28257,
                                                (segred_group_sizze_36090 * groups_per_segment_44838))
          virt_num_groups_44840 = (groups_per_segment_44838 * m_28248)
          num_threads_44841 = (num_groups_36091 * segred_group_sizze_36090)
          threads_per_segment_44842 = (groups_per_segment_44838 * segred_group_sizze_36090)
          group_res_arr_mem_44843 = opencl_alloc(self,
                                                 (np.int32(4) * (segred_group_sizze_36090 * virt_num_groups_44840)),
                                                 "group_res_arr_mem_44843")
          mainMagnitudezicounter_mem_44845 = self.mainMagnitudezicounter_mem_44845
          if ((1 * (np.long(num_groups_36091) * np.long(segred_group_sizze_36090))) != 0):
            self.mainMagnitudezisegred_large_36044_var.set_args(self.global_failure,
                                                                cl.LocalMemory(np.long(np.int32(1))),
                                                                cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36090))),
                                                                np.int64(N_28247),
                                                                np.int64(i32_res_28257),
                                                                np.int64(num_groups_36091),
                                                                np.int64(groups_per_segment_44838),
                                                                np.int64(elements_per_thread_44839),
                                                                np.int64(virt_num_groups_44840),
                                                                np.int64(threads_per_segment_44842),
                                                                defunc_4_map_res_mem_43638,
                                                                mem_43692,
                                                                mem_43695,
                                                                group_res_arr_mem_44843,
                                                                mainMagnitudezicounter_mem_44845)
            cl.enqueue_nd_range_kernel(self.queue,
                                       self.mainMagnitudezisegred_large_36044_var,
                                       ((np.long(num_groups_36091) * np.long(segred_group_sizze_36090)),),
                                       (np.long(segred_group_sizze_36090),))
            if synchronous:
              sync(self)
        segmap_usable_groups_36107 = sdiv_up64(m_28248,
                                               segmap_group_sizze_36106)
        mem_43698 = opencl_alloc(self, bytes_43612, "mem_43698")
        mem_43700 = opencl_alloc(self, bytes_43612, "mem_43700")
        if ((1 * (np.long(segmap_usable_groups_36107) * np.long(segmap_group_sizze_36106))) != 0):
          self.mainMagnitudezisegmap_36021_var.set_args(self.global_failure,
                                                        np.int64(m_28248),
                                                        np.float32(hfrac_28253),
                                                        np.int32(k2p2_28259),
                                                        mem_43692, mem_43695,
                                                        mem_43698, mem_43700)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegmap_36021_var,
                                     ((np.long(segmap_usable_groups_36107) * np.long(segmap_group_sizze_36106)),),
                                     (np.long(segmap_group_sizze_36106),))
          if synchronous:
            sync(self)
        mem_43695 = None
        defunc_3_map_res_mem_43701 = mem_43698
        defunc_3_map_res_mem_43702 = mem_43692
        defunc_3_map_res_mem_43703 = mem_43700
      defunc_3_map_res_mem_43704 = defunc_3_map_res_mem_43701
      defunc_3_map_res_mem_43705 = defunc_3_map_res_mem_43702
      defunc_3_map_res_mem_43706 = defunc_3_map_res_mem_43703
    segred_group_sizze_36127 = self.sizes["mainMagnitude.segred_group_size_36126"]
    max_num_groups_44884 = self.sizes["mainMagnitude.segred_num_groups_36128"]
    num_groups_36129 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28248,
                                                            segred_group_sizze_36127),
                                                  sext_i32_i64(max_num_groups_44884))))
    mem_43709 = opencl_alloc(self, np.int64(4), "mem_43709")
    mainMagnitudezicounter_mem_44885 = self.mainMagnitudezicounter_mem_44885
    group_res_arr_mem_44887 = opencl_alloc(self,
                                           (np.int32(4) * (segred_group_sizze_36127 * num_groups_36129)),
                                           "group_res_arr_mem_44887")
    num_threads_44889 = (num_groups_36129 * segred_group_sizze_36127)
    if ((1 * (np.long(num_groups_36129) * np.long(segred_group_sizze_36127))) != 0):
      self.mainMagnitudezisegred_nonseg_36134_var.set_args(self.global_failure,
                                                           cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36127))),
                                                           cl.LocalMemory(np.long(np.int32(1))),
                                                           np.int64(m_28248),
                                                           np.int64(num_groups_36129),
                                                           np.int64(num_threads_44889),
                                                           defunc_3_map_res_mem_43704,
                                                           mem_43709,
                                                           mainMagnitudezicounter_mem_44885,
                                                           group_res_arr_mem_44887)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegred_nonseg_36134_var,
                                 ((np.long(num_groups_36129) * np.long(segred_group_sizze_36127)),),
                                 (np.long(segred_group_sizze_36127),))
      if synchronous:
        sync(self)
    read_res_45265 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45265, mem_43709,
                    device_offset=(np.long(np.int64(0)) * 4),
                    is_blocking=synchronous)
    sync(self)
    defunc_2_reduce_comm_res_28613 = read_res_45265[0]
    mem_43709 = None
    i32_res_28618 = sext_i32_i64(defunc_2_reduce_comm_res_28613)
    bounds_invalid_upwards_28619 = slt64(i32_res_28618, np.int64(0))
    valid_28620 = not(bounds_invalid_upwards_28619)
    range_valid_c_28621 = True
    assert valid_28620, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:5:3-18\n   #2  bfastfinal.fut:106:34-46\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:101:17-108:24\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                    np.int64(0),
                                                                                                                                                                                                                                                                                                                    "..",
                                                                                                                                                                                                                                                                                                                    np.int64(1),
                                                                                                                                                                                                                                                                                                                    "..<",
                                                                                                                                                                                                                                                                                                                    i32_res_28618,
                                                                                                                                                                                                                                                                                                                    " is invalid."))
    suff_outer_par_36166 = (self.sizes["mainMagnitude.suff_outer_par_31"] <= m_28248)
    segmap_group_sizze_36189 = self.sizes["mainMagnitude.segmap_group_size_36170"]
    nest_sizze_36232 = (m_28248 * i32_res_28618)
    segred_group_sizze_36233 = self.sizes["mainMagnitude.segred_group_size_36210"]
    max_num_groups_44915 = self.sizes["mainMagnitude.segred_num_groups_36212"]
    num_groups_36234 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36232,
                                                            segred_group_sizze_36233),
                                                  sext_i32_i64(max_num_groups_44915))))
    bytes_43712 = (np.int64(4) * segmap_group_sizze_36189)
    local_memory_capacity_44986 = self.max_local_memory
    if (sle64(((bytes_43712 + srem64((np.int64(8) - srem64(bytes_43712,
                                                           np.int64(8))),
                                     np.int64(8))) + (bytes_43712 + srem64((np.int64(8) - srem64(bytes_43712,
                                                                                                 np.int64(8))),
                                                                           np.int64(8)))),
              sext_i32_i64(local_memory_capacity_44986)) and suff_outer_par_36166):
      segmap_usable_groups_36190 = sdiv_up64(m_28248, segmap_group_sizze_36189)
      num_whole_tiles_42598 = squot64(i32_res_28618, segmap_group_sizze_36189)
      residual_input_42697 = srem64(i32_res_28618, segmap_group_sizze_36189)
      cond_42698 = (residual_input_42697 == np.int64(0))
      mem_43735 = opencl_alloc(self, bytes_43612, "mem_43735")
      if ((1 * (np.long(segmap_usable_groups_36190) * np.long(segmap_group_sizze_36189))) != 0):
        self.mainMagnitudezisegmap_intragroup_42578_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long(bytes_43712)),
                                                                 cl.LocalMemory(np.long(bytes_43712)),
                                                                 np.int64(N_28247),
                                                                 np.int64(m_28248),
                                                                 np.int64(i32_res_28618),
                                                                 np.int64(num_whole_tiles_42598),
                                                                 np.int64(residual_input_42697),
                                                                 np.byte(cond_42698),
                                                                 defunc_4_map_res_mem_43638,
                                                                 defunc_3_map_res_mem_43704,
                                                                 defunc_3_map_res_mem_43705,
                                                                 mem_43735)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_42578_var,
                                   ((np.long(segmap_usable_groups_36190) * np.long(segmap_group_sizze_36189)),),
                                   (np.long(segmap_group_sizze_36189),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43739 = mem_43735
    else:
      mem_43738 = opencl_alloc(self, bytes_43612, "mem_43738")
      if slt64((i32_res_28618 * np.int64(2)), segred_group_sizze_36233):
        segment_sizze_nonzzero_44926 = smax64(np.int64(1), i32_res_28618)
        num_threads_44927 = (num_groups_36234 * segred_group_sizze_36233)
        if ((1 * (np.long(num_groups_36234) * np.long(segred_group_sizze_36233))) != 0):
          self.mainMagnitudezisegred_small_36216_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36233))),
                                                              np.int64(N_28247),
                                                              np.int64(m_28248),
                                                              np.int64(i32_res_28618),
                                                              np.int64(num_groups_36234),
                                                              np.int64(segment_sizze_nonzzero_44926),
                                                              defunc_4_map_res_mem_43638,
                                                              defunc_3_map_res_mem_43704,
                                                              defunc_3_map_res_mem_43705,
                                                              mem_43738)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_36216_var,
                                     ((np.long(num_groups_36234) * np.long(segred_group_sizze_36233)),),
                                     (np.long(segred_group_sizze_36233),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_44947 = sdiv_up64(num_groups_36234,
                                             smax64(np.int64(1), m_28248))
        elements_per_thread_44948 = sdiv_up64(i32_res_28618,
                                              (segred_group_sizze_36233 * groups_per_segment_44947))
        virt_num_groups_44949 = (groups_per_segment_44947 * m_28248)
        num_threads_44950 = (num_groups_36234 * segred_group_sizze_36233)
        threads_per_segment_44951 = (groups_per_segment_44947 * segred_group_sizze_36233)
        group_res_arr_mem_44952 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_36233 * virt_num_groups_44949)),
                                               "group_res_arr_mem_44952")
        mainMagnitudezicounter_mem_44954 = self.mainMagnitudezicounter_mem_44954
        if ((1 * (np.long(num_groups_36234) * np.long(segred_group_sizze_36233))) != 0):
          self.mainMagnitudezisegred_large_36216_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_36233))),
                                                              np.int64(N_28247),
                                                              np.int64(i32_res_28618),
                                                              np.int64(num_groups_36234),
                                                              np.int64(groups_per_segment_44947),
                                                              np.int64(elements_per_thread_44948),
                                                              np.int64(virt_num_groups_44949),
                                                              np.int64(threads_per_segment_44951),
                                                              defunc_4_map_res_mem_43638,
                                                              defunc_3_map_res_mem_43704,
                                                              defunc_3_map_res_mem_43705,
                                                              mem_43738,
                                                              group_res_arr_mem_44952,
                                                              mainMagnitudezicounter_mem_44954)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_36216_var,
                                     ((np.long(num_groups_36234) * np.long(segred_group_sizze_36233)),),
                                     (np.long(segred_group_sizze_36233),))
          if synchronous:
            sync(self)
      defunc_0_f_res_mem_43739 = mem_43738
    iota32_arg_28643 = (N_28247 - i32_res_28257)
    bounds_invalid_upwards_28644 = slt64(iota32_arg_28643, np.int64(0))
    valid_28645 = not(bounds_invalid_upwards_28644)
    range_valid_c_28646 = True
    assert valid_28645, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:114:22-35\n   #3  bfastfinal.fut:185:5-58\n   #4  bfastfinal.fut:180:1-186:32\n" % ("Range ",
                                                                                                                                                                                                                                      np.int64(0),
                                                                                                                                                                                                                                      "..",
                                                                                                                                                                                                                                      np.int64(1),
                                                                                                                                                                                                                                      "..<",
                                                                                                                                                                                                                                      iota32_arg_28643,
                                                                                                                                                                                                                                      " is invalid."))
    x_28648 = (np.int32(1) + n_28251)
    i_28649 = (n_28251 - np.int32(1))
    i_28650 = sext_i32_i64(i_28649)
    x_28651 = sle64(np.int64(0), i_28650)
    y_28652 = slt64(i_28650, N_28247)
    bounds_check_28653 = (x_28651 and y_28652)
    index_certs_28654 = True
    assert bounds_check_28653, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  bfastfinal.fut:112:64-84\n   #1  bfastfinal.fut:110:15-114:36\n   #2  bfastfinal.fut:185:5-58\n   #3  bfastfinal.fut:180:1-186:32\n" % ("Index [",
                                                                                                                                                                                                                 i_28650,
                                                                                                                                                                                                                 "] out of bounds for array of shape [",
                                                                                                                                                                                                                 N_28247,
                                                                                                                                                                                                                 "]."))
    read_res_45267 = np.empty(1, dtype=ct.c_int32)
    cl.enqueue_copy(self.queue, read_res_45267, mappingindices_mem_42840,
                    device_offset=(np.long(i_28650) * 4),
                    is_blocking=synchronous)
    sync(self)
    r32_arg_28655 = read_res_45267[0]
    i32_res_28656 = sitofp_i32_f32(r32_arg_28655)
    range_valid_c_28657 = True
    assert valid_28645, ("Error: %s%d%s%d%s%d%s\n\nBacktrace:\n-> #0  /prelude/array.fut:60:3-10\n   #1  helpers.fut:2:3-8\n   #2  bfastfinal.fut:124:20-35\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                  np.int64(0),
                                                                                                                                                                                                                                                                                                                  "..",
                                                                                                                                                                                                                                                                                                                  np.int64(1),
                                                                                                                                                                                                                                                                                                                  "..<",
                                                                                                                                                                                                                                                                                                                  iota32_arg_28643,
                                                                                                                                                                                                                                                                                                                  " is invalid."))
    segmap_group_sizze_36311 = self.sizes["mainMagnitude.segmap_group_size_36294"]
    segmap_usable_groups_36312 = sdiv_up64(iota32_arg_28643,
                                           segmap_group_sizze_36311)
    bytes_43741 = (np.int64(4) * iota32_arg_28643)
    mem_43742 = opencl_alloc(self, bytes_43741, "mem_43742")
    mem_43744 = opencl_alloc(self, bytes_43741, "mem_43744")
    if ((1 * (np.long(segmap_usable_groups_36312) * np.long(segmap_group_sizze_36311))) != 0):
      self.mainMagnitudezisegmap_36292_var.set_args(self.global_failure,
                                                    np.float32(lam_28254),
                                                    np.int64(iota32_arg_28643),
                                                    np.int32(x_28648),
                                                    np.float32(i32_res_28656),
                                                    mappingindices_mem_42840,
                                                    mem_43742, mem_43744)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36292_var,
                                 ((np.long(segmap_usable_groups_36312) * np.long(segmap_group_sizze_36311)),),
                                 (np.long(segmap_group_sizze_36311),))
      if synchronous:
        sync(self)
    mem_43742 = None
    max_res_28673 = smax64(np.int64(1), iota32_arg_28643)
    bounds_invalid_upwards_28674 = slt64(max_res_28673, np.int64(1))
    distance_28675 = (max_res_28673 - np.int64(1))
    valid_28676 = not(bounds_invalid_upwards_28674)
    range_valid_c_28677 = True
    assert valid_28676, ("Error: %s%d%s%d%s\n\nBacktrace:\n-> #0  lib/github.com/diku-dk/sorts/insertion_sort.fut:16:30-45\n   #1  /prelude/functional.fut:9:42-44\n   #2  bfastfinal.fut:121:13-126:42\n   #3  /prelude/functional.fut:9:42-44\n   #4  bfastfinal.fut:119:20-135:9\n   #5  bfastfinal.fut:185:5-58\n   #6  bfastfinal.fut:180:1-186:32\n" % ("Range ",
                                                                                                                                                                                                                                                                                                                                                              np.int64(1),
                                                                                                                                                                                                                                                                                                                                                              "..<",
                                                                                                                                                                                                                                                                                                                                                              max_res_28673,
                                                                                                                                                                                                                                                                                                                                                              " is invalid."))
    segmap_group_sizze_36731 = self.sizes["mainMagnitude.segmap_group_size_36724"]
    segmap_usable_groups_36732 = sdiv_up64(m_28248, segmap_group_sizze_36731)
    mem_43747 = opencl_alloc(self, bytes_43612, "mem_43747")
    if ((1 * (np.long(segmap_usable_groups_36732) * np.long(segmap_group_sizze_36731))) != 0):
      self.mainMagnitudezisegmap_36722_var.set_args(self.global_failure,
                                                    np.int64(m_28248),
                                                    defunc_4_map_res_mem_43637,
                                                    defunc_3_map_res_mem_43705,
                                                    mem_43747)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36722_var,
                                 ((np.long(segmap_usable_groups_36732) * np.long(segmap_group_sizze_36731)),),
                                 (np.long(segmap_group_sizze_36731),))
      if synchronous:
        sync(self)
    nest_sizze_36745 = (m_28248 * iota32_arg_28643)
    segmap_group_sizze_36746 = self.sizes["mainMagnitude.segmap_group_size_36667"]
    segmap_usable_groups_36747 = sdiv_up64(nest_sizze_36745,
                                           segmap_group_sizze_36746)
    bytes_43749 = (np.int64(4) * nest_sizze_36745)
    mem_43751 = opencl_alloc(self, bytes_43749, "mem_43751")
    if ((1 * (np.long(segmap_usable_groups_36747) * np.long(segmap_group_sizze_36746))) != 0):
      self.mainMagnitudezisegmap_36664_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(N_28247),
                                                    np.int64(m_28248),
                                                    np.int64(iota32_arg_28643),
                                                    defunc_4_map_res_mem_43638,
                                                    defunc_3_map_res_mem_43705,
                                                    mem_43747, mem_43751)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36664_var,
                                 ((np.long(segmap_usable_groups_36747) * np.long(segmap_group_sizze_36746)),),
                                 (np.long(segmap_group_sizze_36746),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    segmap_group_sizze_36775 = self.sizes["mainMagnitude.segmap_group_size_36545"]
    segmap_usable_groups_36776 = sdiv_up64(m_28248, segmap_group_sizze_36775)
    mem_43754 = opencl_alloc(self, bytes_43749, "mem_43754")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_43754, np.int64(0),
                                                mem_43751, np.int64(0),
                                                np.int64(1), iota32_arg_28643,
                                                m_28248)
    mem_43751 = None
    mem_43785 = opencl_alloc(self, bytes_43612, "mem_43785")
    num_threads_44015 = (segmap_group_sizze_36775 * segmap_usable_groups_36776)
    total_sizze_44016 = (bytes_43741 * num_threads_44015)
    mem_43765 = opencl_alloc(self, total_sizze_44016, "mem_43765")
    if ((1 * (np.long(segmap_usable_groups_36776) * np.long(segmap_group_sizze_36775))) != 0):
      self.mainMagnitudezisegmap_36543_var.set_args(self.global_failure,
                                                    self.failure_is_an_option,
                                                    self.global_failure_args,
                                                    np.int64(m_28248),
                                                    np.int64(iota32_arg_28643),
                                                    np.int64(distance_28675),
                                                    np.int64(segmap_usable_groups_36776),
                                                    defunc_4_map_res_mem_43637,
                                                    defunc_3_map_res_mem_43705,
                                                    mem_43747, mem_43754,
                                                    mem_43765, mem_43785)
      cl.enqueue_nd_range_kernel(self.queue,
                                 self.mainMagnitudezisegmap_36543_var,
                                 ((np.long(segmap_usable_groups_36776) * np.long(segmap_group_sizze_36775)),),
                                 (np.long(segmap_group_sizze_36775),))
      if synchronous:
        sync(self)
    self.failure_is_an_option = np.int32(1)
    mem_43747 = None
    mem_43754 = None
    mem_43765 = None
    fits_37110 = sle64(iota32_arg_28643, max_group_sizze_34517)
    suff_intra_par_37108 = (self.sizes["mainMagnitude.suff_intra_par_37"] <= iota32_arg_28643)
    intra_suff_and_fits_37111 = (suff_intra_par_37108 and fits_37110)
    segmap_group_sizze_37384 = self.sizes["mainMagnitude.segmap_group_size_37364"]
    max_num_groups_45012 = self.sizes["mainMagnitude.segmap_num_groups_37366"]
    num_groups_37385 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(m_28248,
                                                            segmap_group_sizze_37384),
                                                  sext_i32_i64(max_num_groups_45012))))
    segscan_group_sizze_37407 = self.sizes["mainMagnitude.segscan_group_size_37323"]
    max_num_groups_45013 = self.sizes["mainMagnitude.segscan_num_groups_37325"]
    num_groups_37408 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36745,
                                                            segscan_group_sizze_37407),
                                                  sext_i32_i64(max_num_groups_45013))))
    segred_group_sizze_37445 = self.sizes["mainMagnitude.segred_group_size_37269"]
    max_num_groups_45014 = self.sizes["mainMagnitude.segred_num_groups_37271"]
    num_groups_37446 = sext_i64_i32(smax64(np.int64(1),
                                           smin64(sdiv_up64(nest_sizze_36745,
                                                            segred_group_sizze_37445),
                                                  sext_i32_i64(max_num_groups_45014))))
    segmap_group_sizze_37484 = self.sizes["mainMagnitude.segmap_group_size_37222"]
    local_memory_capacity_45207 = self.max_local_memory
    if (sle64(((((bytes_43741 + srem64((np.int64(8) - srem64(bytes_43741,
                                                             np.int64(8))),
                                       np.int64(8))) + ((np.int32(1) * iota32_arg_28643) + srem64((np.int64(8) - srem64((np.int32(1) * iota32_arg_28643),
                                                                                                                        np.int64(8))),
                                                                                                  np.int64(8)))) + ((np.int32(4) * iota32_arg_28643) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28643),
                                                                                                                                                                                    np.int64(8))),
                                                                                                                                                              np.int64(8)))) + ((np.int32(4) * iota32_arg_28643) + srem64((np.int64(8) - srem64((np.int32(4) * iota32_arg_28643),
                                                                                                                                                                                                                                                np.int64(8))),
                                                                                                                                                                                                                          np.int64(8)))),
              sext_i32_i64(local_memory_capacity_45207)) and intra_suff_and_fits_37111):
      mem_43792 = opencl_alloc(self, bytes_43612, "mem_43792")
      mem_43794 = opencl_alloc(self, bytes_43612, "mem_43794")
      if ((1 * (np.long(m_28248) * np.long(iota32_arg_28643))) != 0):
        self.mainMagnitudezisegmap_intragroup_36895_var.set_args(self.global_failure,
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28643))),
                                                                 cl.LocalMemory(np.long((np.int32(4) * iota32_arg_28643))),
                                                                 cl.LocalMemory(np.long((np.int32(1) * iota32_arg_28643))),
                                                                 cl.LocalMemory(np.long(bytes_43741)),
                                                                 np.int64(N_28247),
                                                                 np.int32(n_28251),
                                                                 np.int64(iota32_arg_28643),
                                                                 defunc_4_map_res_mem_43637,
                                                                 defunc_4_map_res_mem_43638,
                                                                 defunc_4_map_res_mem_43639,
                                                                 defunc_3_map_res_mem_43704,
                                                                 defunc_3_map_res_mem_43705,
                                                                 defunc_3_map_res_mem_43706,
                                                                 defunc_0_f_res_mem_43739,
                                                                 mem_43744,
                                                                 mem_43792,
                                                                 mem_43794)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_intragroup_36895_var,
                                   ((np.long(m_28248) * np.long(iota32_arg_28643)),),
                                   (np.long(iota32_arg_28643),))
        if synchronous:
          sync(self)
      defunc_0_f_res_mem_43816 = mem_43792
      defunc_0_f_res_mem_43817 = mem_43794
    else:
      mem_43797 = opencl_alloc(self, bytes_43612, "mem_43797")
      mem_43799 = opencl_alloc(self, bytes_43612, "mem_43799")
      if ((1 * (np.long(num_groups_37385) * np.long(segmap_group_sizze_37384))) != 0):
        self.mainMagnitudezisegmap_37362_var.set_args(self.global_failure,
                                                      np.int64(m_28248),
                                                      np.int64(num_groups_37385),
                                                      defunc_4_map_res_mem_43637,
                                                      defunc_3_map_res_mem_43705,
                                                      defunc_3_map_res_mem_43706,
                                                      mem_43797, mem_43799)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37362_var,
                                   ((np.long(num_groups_37385) * np.long(segmap_group_sizze_37384)),),
                                   (np.long(segmap_group_sizze_37384),))
        if synchronous:
          sync(self)
      mem_43803 = opencl_alloc(self, bytes_43749, "mem_43803")
      if slt64(np.int64(0), (m_28248 * iota32_arg_28643)):
        stage1_max_num_groups_45048 = self.max_group_size
        stage1_num_groups_45049 = smin64(stage1_max_num_groups_45048,
                                         num_groups_37408)
        num_threads_45050 = sext_i64_i32((stage1_num_groups_45049 * segscan_group_sizze_37407))
        if ((1 * (np.long(stage1_num_groups_45049) * np.long(segscan_group_sizze_37407))) != 0):
          self.mainMagnitudeziscan_stage1_37329_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * segscan_group_sizze_37407)))),
                                                             np.int64(N_28247),
                                                             np.int64(m_28248),
                                                             np.int64(iota32_arg_28643),
                                                             np.int32(num_threads_45050),
                                                             defunc_4_map_res_mem_43638,
                                                             defunc_3_map_res_mem_43704,
                                                             defunc_3_map_res_mem_43705,
                                                             defunc_0_f_res_mem_43739,
                                                             mem_43799,
                                                             mem_43803)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage1_37329_var,
                                     ((np.long(stage1_num_groups_45049) * np.long(segscan_group_sizze_37407)),),
                                     (np.long(segscan_group_sizze_37407),))
          if synchronous:
            sync(self)
        if ((1 * (np.long(np.int64(1)) * np.long(stage1_num_groups_45049))) != 0):
          self.mainMagnitudeziscan_stage2_37329_var.set_args(self.global_failure,
                                                             cl.LocalMemory(np.long(smax64(np.int64(1),
                                                                                           (np.int32(4) * stage1_num_groups_45049)))),
                                                             np.int64(m_28248),
                                                             np.int64(iota32_arg_28643),
                                                             np.int64(stage1_num_groups_45049),
                                                             np.int32(num_threads_45050),
                                                             mem_43803)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage2_37329_var,
                                     ((np.long(np.int64(1)) * np.long(stage1_num_groups_45049)),),
                                     (np.long(stage1_num_groups_45049),))
          if synchronous:
            sync(self)
        required_groups_45092 = sext_i64_i32(sdiv_up64((m_28248 * iota32_arg_28643),
                                                       segscan_group_sizze_37407))
        if ((1 * (np.long(num_groups_37408) * np.long(segscan_group_sizze_37407))) != 0):
          self.mainMagnitudeziscan_stage3_37329_var.set_args(self.global_failure,
                                                             np.int64(m_28248),
                                                             np.int64(iota32_arg_28643),
                                                             np.int64(num_groups_37408),
                                                             np.int32(num_threads_45050),
                                                             np.int32(required_groups_45092),
                                                             mem_43803)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudeziscan_stage3_37329_var,
                                     ((np.long(num_groups_37408) * np.long(segscan_group_sizze_37407)),),
                                     (np.long(segscan_group_sizze_37407),))
          if synchronous:
            sync(self)
      mem_43806 = opencl_alloc(self, m_28248, "mem_43806")
      mem_43808 = opencl_alloc(self, bytes_43612, "mem_43808")
      mem_43810 = opencl_alloc(self, bytes_43612, "mem_43810")
      if slt64((iota32_arg_28643 * np.int64(2)), segred_group_sizze_37445):
        segment_sizze_nonzzero_45104 = smax64(np.int64(1), iota32_arg_28643)
        num_threads_45105 = (num_groups_37446 * segred_group_sizze_37445)
        if ((1 * (np.long(num_groups_37446) * np.long(segred_group_sizze_37445))) != 0):
          self.mainMagnitudezisegred_small_37275_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37445))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37445))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37445))),
                                                              np.int64(m_28248),
                                                              np.int64(iota32_arg_28643),
                                                              np.int64(num_groups_37446),
                                                              np.int64(segment_sizze_nonzzero_45104),
                                                              mem_43744,
                                                              mem_43797,
                                                              mem_43799,
                                                              mem_43803,
                                                              mem_43806,
                                                              mem_43808,
                                                              mem_43810)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_small_37275_var,
                                     ((np.long(num_groups_37446) * np.long(segred_group_sizze_37445)),),
                                     (np.long(segred_group_sizze_37445),))
          if synchronous:
            sync(self)
      else:
        groups_per_segment_45140 = sdiv_up64(num_groups_37446,
                                             smax64(np.int64(1), m_28248))
        elements_per_thread_45141 = sdiv_up64(iota32_arg_28643,
                                              (segred_group_sizze_37445 * groups_per_segment_45140))
        virt_num_groups_45142 = (groups_per_segment_45140 * m_28248)
        num_threads_45143 = (num_groups_37446 * segred_group_sizze_37445)
        threads_per_segment_45144 = (groups_per_segment_45140 * segred_group_sizze_37445)
        group_res_arr_mem_45145 = opencl_alloc(self,
                                               (np.int32(1) * (segred_group_sizze_37445 * virt_num_groups_45142)),
                                               "group_res_arr_mem_45145")
        group_res_arr_mem_45147 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37445 * virt_num_groups_45142)),
                                               "group_res_arr_mem_45147")
        group_res_arr_mem_45149 = opencl_alloc(self,
                                               (np.int32(4) * (segred_group_sizze_37445 * virt_num_groups_45142)),
                                               "group_res_arr_mem_45149")
        mainMagnitudezicounter_mem_45151 = self.mainMagnitudezicounter_mem_45151
        if ((1 * (np.long(num_groups_37446) * np.long(segred_group_sizze_37445))) != 0):
          self.mainMagnitudezisegred_large_37275_var.set_args(self.global_failure,
                                                              cl.LocalMemory(np.long(np.int32(1))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37445))),
                                                              cl.LocalMemory(np.long((np.int32(4) * segred_group_sizze_37445))),
                                                              cl.LocalMemory(np.long((np.int32(1) * segred_group_sizze_37445))),
                                                              np.int64(iota32_arg_28643),
                                                              np.int64(num_groups_37446),
                                                              np.int64(groups_per_segment_45140),
                                                              np.int64(elements_per_thread_45141),
                                                              np.int64(virt_num_groups_45142),
                                                              mem_43744,
                                                              mem_43797,
                                                              mem_43799,
                                                              mem_43803,
                                                              mem_43806,
                                                              mem_43808,
                                                              mem_43810,
                                                              group_res_arr_mem_45145,
                                                              group_res_arr_mem_45147,
                                                              group_res_arr_mem_45149,
                                                              mainMagnitudezicounter_mem_45151)
          cl.enqueue_nd_range_kernel(self.queue,
                                     self.mainMagnitudezisegred_large_37275_var,
                                     ((np.long(num_groups_37446) * np.long(segred_group_sizze_37445)),),
                                     (np.long(segred_group_sizze_37445),))
          if synchronous:
            sync(self)
      mem_43797 = None
      mem_43803 = None
      segmap_usable_groups_37485 = sdiv_up64(m_28248, segmap_group_sizze_37484)
      mem_43813 = opencl_alloc(self, bytes_43612, "mem_43813")
      mem_43815 = opencl_alloc(self, bytes_43612, "mem_43815")
      if ((1 * (np.long(segmap_usable_groups_37485) * np.long(segmap_group_sizze_37484))) != 0):
        self.mainMagnitudezisegmap_37220_var.set_args(self.global_failure,
                                                      np.int64(N_28247),
                                                      np.int64(m_28248),
                                                      np.int32(n_28251),
                                                      defunc_4_map_res_mem_43639,
                                                      defunc_3_map_res_mem_43705,
                                                      mem_43799, mem_43806,
                                                      mem_43808, mem_43810,
                                                      mem_43813, mem_43815)
        cl.enqueue_nd_range_kernel(self.queue,
                                   self.mainMagnitudezisegmap_37220_var,
                                   ((np.long(segmap_usable_groups_37485) * np.long(segmap_group_sizze_37484)),),
                                   (np.long(segmap_group_sizze_37484),))
        if synchronous:
          sync(self)
      mem_43799 = None
      mem_43806 = None
      mem_43808 = None
      mem_43810 = None
      defunc_0_f_res_mem_43816 = mem_43813
      defunc_0_f_res_mem_43817 = mem_43815
    defunc_4_map_res_mem_43637 = None
    defunc_4_map_res_mem_43638 = None
    defunc_4_map_res_mem_43639 = None
    defunc_3_map_res_mem_43704 = None
    defunc_3_map_res_mem_43705 = None
    defunc_3_map_res_mem_43706 = None
    defunc_0_f_res_mem_43739 = None
    mem_43744 = None
    out_mem_44068 = defunc_0_f_res_mem_43816
    out_mem_44069 = defunc_0_f_res_mem_43817
    out_mem_44070 = mem_43785
    return (out_mem_44068, out_mem_44069, out_mem_44070)
  def futhark_remove_nans(self, images_mem_42840, m_27536, n_27537, p_27538,
                          nan_value_27539):
    y_29545 = (n_27537 * p_27538)
    nest_sizze_29546 = (m_27536 * y_29545)
    segmap_group_sizze_29547 = self.sizes["remove_nans.segmap_group_size_29490"]
    segmap_usable_groups_29548 = sdiv_up64(nest_sizze_29546,
                                           segmap_group_sizze_29547)
    binop_x_42843 = (m_27536 * n_27537)
    binop_x_42844 = (p_27538 * binop_x_42843)
    bytes_42842 = (np.int64(4) * binop_x_42844)
    mem_42845 = opencl_alloc(self, bytes_42842, "mem_42845")
    if ((1 * (np.long(segmap_usable_groups_29548) * np.long(segmap_group_sizze_29547))) != 0):
      self.remove_nanszisegmap_29486_var.set_args(self.global_failure,
                                                  np.int64(m_27536),
                                                  np.int64(n_27537),
                                                  np.int64(p_27538),
                                                  np.int16(nan_value_27539),
                                                  images_mem_42840, mem_42845)
      cl.enqueue_nd_range_kernel(self.queue, self.remove_nanszisegmap_29486_var,
                                 ((np.long(segmap_usable_groups_29548) * np.long(segmap_group_sizze_29547)),),
                                 (np.long(segmap_group_sizze_29547),))
      if synchronous:
        sync(self)
    out_mem_44068 = mem_42845
    return out_mem_44068
  def futhark_reshapeTransp(self, images_mem_42840, m_27529, n_27530, p_27531):
    flatten_to_arg_27533 = (n_27530 * p_27531)
    binop_x_42842 = (m_27529 * flatten_to_arg_27533)
    bytes_42841 = (np.int64(4) * binop_x_42842)
    mem_42843 = opencl_alloc(self, bytes_42841, "mem_42843")
    self.futhark_builtinzhgpu_map_transpose_f32(mem_42843, np.int64(0),
                                                images_mem_42840, np.int64(0),
                                                np.int64(1),
                                                flatten_to_arg_27533, m_27529)
    out_arrsizze_44069 = flatten_to_arg_27533
    out_mem_44068 = mem_42843
    return (out_mem_44068, out_arrsizze_44069)
  def main(self, trend_28887_ext, k_28888_ext, n_28889_ext, freq_28890_ext,
           hfrac_28891_ext, lam_28892_ext, mappingindices_mem_42840_ext,
           images_mem_42841_ext):
    N_28885 = None
    m_28886 = None
    N_28885 = None
    try:
      trend_28887 = np.int32(ct.c_int32(trend_28887_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28887_ext),
                                                                                                                            trend_28887_ext))
    try:
      k_28888 = np.int32(ct.c_int32(k_28888_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28888_ext),
                                                                                                                            k_28888_ext))
    try:
      n_28889 = np.int32(ct.c_int32(n_28889_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28889_ext),
                                                                                                                            n_28889_ext))
    try:
      freq_28890 = np.float32(ct.c_float(freq_28890_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28890_ext),
                                                                                                                            freq_28890_ext))
    try:
      hfrac_28891 = np.float32(ct.c_float(hfrac_28891_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28891_ext),
                                                                                                                            hfrac_28891_ext))
    try:
      lam_28892 = np.float32(ct.c_float(lam_28892_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28892_ext),
                                                                                                                            lam_28892_ext))
    try:
      assert ((type(mappingindices_mem_42840_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42840_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_28885 == None):
        N_28885 = np.int64(mappingindices_mem_42840_ext.shape[0])
      else:
        assert (N_28885 == mappingindices_mem_42840_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42840_ext) == cl.array.Array):
        mappingindices_mem_42840 = mappingindices_mem_42840_ext.data
      else:
        mappingindices_mem_42840 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42840_ext.nbytes),
                                                "mappingindices_mem_42840")
        if (np.int64(mappingindices_mem_42840_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42840,
                          normaliseArray(mappingindices_mem_42840_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42840_ext),
                                                                                                                            mappingindices_mem_42840_ext))
    try:
      assert ((type(images_mem_42841_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42841_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_28886 == None):
        m_28886 = np.int64(images_mem_42841_ext.shape[0])
      else:
        assert (m_28886 == images_mem_42841_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_28885 == None):
        N_28885 = np.int64(images_mem_42841_ext.shape[1])
      else:
        assert (N_28885 == images_mem_42841_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42841_ext) == cl.array.Array):
        images_mem_42841 = images_mem_42841_ext.data
      else:
        images_mem_42841 = opencl_alloc(self,
                                        np.int64(images_mem_42841_ext.nbytes),
                                        "images_mem_42841")
        if (np.int64(images_mem_42841_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42841,
                          normaliseArray(images_mem_42841_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42841_ext),
                                                                                                                            images_mem_42841_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44068,
       out_mem_44069) = self.futhark_main(mappingindices_mem_42840,
                                          images_mem_42841, N_28885, m_28886,
                                          trend_28887, k_28888, n_28889,
                                          freq_28890, hfrac_28891, lam_28892)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_28886,), ct.c_int32,
                           data=out_mem_44068), cl.array.Array(self.queue,
                                                               (m_28886,),
                                                               ct.c_float,
                                                               data=out_mem_44069))
  def mainDetailed(self, trend_27552_ext, k_27553_ext, n_27554_ext,
                   freq_27555_ext, hfrac_27556_ext, lam_27557_ext,
                   mappingindices_mem_42840_ext, images_mem_42841_ext):
    N_27550 = None
    m_27551 = None
    N_27550 = None
    try:
      trend_27552 = np.int32(ct.c_int32(trend_27552_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_27552_ext),
                                                                                                                            trend_27552_ext))
    try:
      k_27553 = np.int32(ct.c_int32(k_27553_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_27553_ext),
                                                                                                                            k_27553_ext))
    try:
      n_27554 = np.int32(ct.c_int32(n_27554_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_27554_ext),
                                                                                                                            n_27554_ext))
    try:
      freq_27555 = np.float32(ct.c_float(freq_27555_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_27555_ext),
                                                                                                                            freq_27555_ext))
    try:
      hfrac_27556 = np.float32(ct.c_float(hfrac_27556_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_27556_ext),
                                                                                                                            hfrac_27556_ext))
    try:
      lam_27557 = np.float32(ct.c_float(lam_27557_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_27557_ext),
                                                                                                                            lam_27557_ext))
    try:
      assert ((type(mappingindices_mem_42840_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42840_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_27550 == None):
        N_27550 = np.int64(mappingindices_mem_42840_ext.shape[0])
      else:
        assert (N_27550 == mappingindices_mem_42840_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42840_ext) == cl.array.Array):
        mappingindices_mem_42840 = mappingindices_mem_42840_ext.data
      else:
        mappingindices_mem_42840 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42840_ext.nbytes),
                                                "mappingindices_mem_42840")
        if (np.int64(mappingindices_mem_42840_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42840,
                          normaliseArray(mappingindices_mem_42840_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42840_ext),
                                                                                                                            mappingindices_mem_42840_ext))
    try:
      assert ((type(images_mem_42841_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42841_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_27551 == None):
        m_27551 = np.int64(images_mem_42841_ext.shape[0])
      else:
        assert (m_27551 == images_mem_42841_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_27550 == None):
        N_27550 = np.int64(images_mem_42841_ext.shape[1])
      else:
        assert (N_27550 == images_mem_42841_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42841_ext) == cl.array.Array):
        images_mem_42841 = images_mem_42841_ext.data
      else:
        images_mem_42841 = opencl_alloc(self,
                                        np.int64(images_mem_42841_ext.nbytes),
                                        "images_mem_42841")
        if (np.int64(images_mem_42841_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42841,
                          normaliseArray(images_mem_42841_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42841_ext),
                                                                                                                            images_mem_42841_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44068, out_mem_44069, out_mem_44070, out_mem_44071,
       out_mem_44072, out_arrsizze_44073, out_mem_44074, out_arrsizze_44075,
       out_mem_44076, out_arrsizze_44077, out_mem_44078, out_mem_44079,
       out_mem_44080, out_mem_44081,
       out_mem_44082) = self.futhark_mainDetailed(mappingindices_mem_42840,
                                                  images_mem_42841, N_27550,
                                                  m_27551, trend_27552, k_27553,
                                                  n_27554, freq_27555,
                                                  hfrac_27556, lam_27557)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_27551,), ct.c_float,
                           data=out_mem_44068), cl.array.Array(self.queue,
                                                               (m_27551,),
                                                               ct.c_int32,
                                                               data=out_mem_44069),
            cl.array.Array(self.queue, (m_27551,), ct.c_int32,
                           data=out_mem_44070), cl.array.Array(self.queue,
                                                               (m_27551,),
                                                               ct.c_float,
                                                               data=out_mem_44071),
            cl.array.Array(self.queue, (m_27551, out_arrsizze_44073),
                           ct.c_float, data=out_mem_44072),
            cl.array.Array(self.queue, (m_27551, out_arrsizze_44075),
                           ct.c_float, data=out_mem_44074),
            cl.array.Array(self.queue, (out_arrsizze_44077,), ct.c_float,
                           data=out_mem_44076), cl.array.Array(self.queue,
                                                               (m_27551,),
                                                               ct.c_int32,
                                                               data=out_mem_44078),
            cl.array.Array(self.queue, (m_27551,), ct.c_float,
                           data=out_mem_44079), cl.array.Array(self.queue,
                                                               (m_27551,),
                                                               ct.c_float,
                                                               data=out_mem_44080),
            cl.array.Array(self.queue, (m_27551, N_27550), ct.c_float,
                           data=out_mem_44081), cl.array.Array(self.queue,
                                                               (m_27551,
                                                                N_27550),
                                                               ct.c_float,
                                                               data=out_mem_44082))
  def mainMagnitude(self, trend_28249_ext, k_28250_ext, n_28251_ext,
                    freq_28252_ext, hfrac_28253_ext, lam_28254_ext,
                    mappingindices_mem_42840_ext, images_mem_42841_ext):
    N_28247 = None
    m_28248 = None
    N_28247 = None
    try:
      trend_28249 = np.int32(ct.c_int32(trend_28249_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(trend_28249_ext),
                                                                                                                            trend_28249_ext))
    try:
      k_28250 = np.int32(ct.c_int32(k_28250_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(k_28250_ext),
                                                                                                                            k_28250_ext))
    try:
      n_28251 = np.int32(ct.c_int32(n_28251_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #2 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i32",
                                                                                                                            type(n_28251_ext),
                                                                                                                            n_28251_ext))
    try:
      freq_28252 = np.float32(ct.c_float(freq_28252_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #3 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(freq_28252_ext),
                                                                                                                            freq_28252_ext))
    try:
      hfrac_28253 = np.float32(ct.c_float(hfrac_28253_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #4 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(hfrac_28253_ext),
                                                                                                                            hfrac_28253_ext))
    try:
      lam_28254 = np.float32(ct.c_float(lam_28254_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #5 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("f32",
                                                                                                                            type(lam_28254_ext),
                                                                                                                            lam_28254_ext))
    try:
      assert ((type(mappingindices_mem_42840_ext) in [np.ndarray,
                                                      cl.array.Array]) and (mappingindices_mem_42840_ext.dtype == np.int32)), "Parameter has unexpected type"
      if (N_28247 == None):
        N_28247 = np.int64(mappingindices_mem_42840_ext.shape[0])
      else:
        assert (N_28247 == mappingindices_mem_42840_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (type(mappingindices_mem_42840_ext) == cl.array.Array):
        mappingindices_mem_42840 = mappingindices_mem_42840_ext.data
      else:
        mappingindices_mem_42840 = opencl_alloc(self,
                                                np.int64(mappingindices_mem_42840_ext.nbytes),
                                                "mappingindices_mem_42840")
        if (np.int64(mappingindices_mem_42840_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, mappingindices_mem_42840,
                          normaliseArray(mappingindices_mem_42840_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #6 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[]i32",
                                                                                                                            type(mappingindices_mem_42840_ext),
                                                                                                                            mappingindices_mem_42840_ext))
    try:
      assert ((type(images_mem_42841_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42841_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_28248 == None):
        m_28248 = np.int64(images_mem_42841_ext.shape[0])
      else:
        assert (m_28248 == images_mem_42841_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (N_28247 == None):
        N_28247 = np.int64(images_mem_42841_ext.shape[1])
      else:
        assert (N_28247 == images_mem_42841_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42841_ext) == cl.array.Array):
        images_mem_42841 = images_mem_42841_ext.data
      else:
        images_mem_42841 = opencl_alloc(self,
                                        np.int64(images_mem_42841_ext.nbytes),
                                        "images_mem_42841")
        if (np.int64(images_mem_42841_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42841,
                          normaliseArray(images_mem_42841_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #7 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][]f32",
                                                                                                                            type(images_mem_42841_ext),
                                                                                                                            images_mem_42841_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44068, out_mem_44069,
       out_mem_44070) = self.futhark_mainMagnitude(mappingindices_mem_42840,
                                                   images_mem_42841, N_28247,
                                                   m_28248, trend_28249,
                                                   k_28250, n_28251, freq_28252,
                                                   hfrac_28253, lam_28254)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return (cl.array.Array(self.queue, (m_28248,), ct.c_int32,
                           data=out_mem_44068), cl.array.Array(self.queue,
                                                               (m_28248,),
                                                               ct.c_float,
                                                               data=out_mem_44069),
            cl.array.Array(self.queue, (m_28248,), ct.c_float,
                           data=out_mem_44070))
  def remove_nans(self, nan_value_27539_ext, images_mem_42840_ext):
    m_27536 = None
    n_27537 = None
    p_27538 = None
    try:
      nan_value_27539 = np.int16(ct.c_int16(nan_value_27539_ext))
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("i16",
                                                                                                                            type(nan_value_27539_ext),
                                                                                                                            nan_value_27539_ext))
    try:
      assert ((type(images_mem_42840_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42840_ext.dtype == np.int16)), "Parameter has unexpected type"
      if (m_27536 == None):
        m_27536 = np.int64(images_mem_42840_ext.shape[0])
      else:
        assert (m_27536 == images_mem_42840_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (n_27537 == None):
        n_27537 = np.int64(images_mem_42840_ext.shape[1])
      else:
        assert (n_27537 == images_mem_42840_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (p_27538 == None):
        p_27538 = np.int64(images_mem_42840_ext.shape[2])
      else:
        assert (p_27538 == images_mem_42840_ext.shape[2]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42840_ext) == cl.array.Array):
        images_mem_42840 = images_mem_42840_ext.data
      else:
        images_mem_42840 = opencl_alloc(self,
                                        np.int64(images_mem_42840_ext.nbytes),
                                        "images_mem_42840")
        if (np.int64(images_mem_42840_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42840,
                          normaliseArray(images_mem_42840_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #1 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]i16",
                                                                                                                            type(images_mem_42840_ext),
                                                                                                                            images_mem_42840_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      out_mem_44068 = self.futhark_remove_nans(images_mem_42840, m_27536,
                                               n_27537, p_27538,
                                               nan_value_27539)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return cl.array.Array(self.queue, (m_27536, n_27537, p_27538), ct.c_float,
                          data=out_mem_44068)
  def reshapeTransp(self, images_mem_42840_ext):
    m_27529 = None
    n_27530 = None
    p_27531 = None
    try:
      assert ((type(images_mem_42840_ext) in [np.ndarray,
                                              cl.array.Array]) and (images_mem_42840_ext.dtype == np.float32)), "Parameter has unexpected type"
      if (m_27529 == None):
        m_27529 = np.int64(images_mem_42840_ext.shape[0])
      else:
        assert (m_27529 == images_mem_42840_ext.shape[0]), "Error: entry point arguments have invalid sizes."
      if (n_27530 == None):
        n_27530 = np.int64(images_mem_42840_ext.shape[1])
      else:
        assert (n_27530 == images_mem_42840_ext.shape[1]), "Error: entry point arguments have invalid sizes."
      if (p_27531 == None):
        p_27531 = np.int64(images_mem_42840_ext.shape[2])
      else:
        assert (p_27531 == images_mem_42840_ext.shape[2]), "Error: entry point arguments have invalid sizes."
      if (type(images_mem_42840_ext) == cl.array.Array):
        images_mem_42840 = images_mem_42840_ext.data
      else:
        images_mem_42840 = opencl_alloc(self,
                                        np.int64(images_mem_42840_ext.nbytes),
                                        "images_mem_42840")
        if (np.int64(images_mem_42840_ext.nbytes) != 0):
          cl.enqueue_copy(self.queue, images_mem_42840,
                          normaliseArray(images_mem_42840_ext),
                          is_blocking=synchronous)
    except (TypeError, AssertionError) as e:
      raise TypeError("Argument #0 has invalid value\nFuthark type: {}\nArgument has Python type {} and value: {}\n".format("[][][]f32",
                                                                                                                            type(images_mem_42840_ext),
                                                                                                                            images_mem_42840_ext))
    time_start = time.time()
    with np.errstate(divide="ignore", over="ignore", under="ignore",
                     invalid="ignore"):
      (out_mem_44068,
       out_arrsizze_44069) = self.futhark_reshapeTransp(images_mem_42840,
                                                        m_27529, n_27530,
                                                        p_27531)
    runtime = (int((time.time() * 1000000)) - int((time_start * 1000000)))
    sync(self)
    return cl.array.Array(self.queue, (out_arrsizze_44069, m_27529), ct.c_float,
                          data=out_mem_44068)
