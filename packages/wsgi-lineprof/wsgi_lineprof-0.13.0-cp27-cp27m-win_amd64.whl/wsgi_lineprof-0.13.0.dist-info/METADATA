Metadata-Version: 2.1
Name: wsgi-lineprof
Version: 0.13.0
Summary: WSGI middleware for line-by-line profiling
Home-page: https://github.com/ymyzk/wsgi_lineprof
Author: Yusuke Miyazaki
Author-email: miyazaki.dev@gmail.com
License: MIT
Project-URL: Source, https://github.com/ymyzk/wsgi_lineprof
Project-URL: Bug Reports, https://github.com/ymyzk/wsgi_lineprof/issues
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: Unix
Classifier: Programming Language :: C
Classifier: Programming Language :: Cython
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware
Classifier: Topic :: Software Development
Classifier: Topic :: System :: Benchmark
Requires-Dist: colorama (>=0.4.1)
Requires-Dist: Jinja2
Requires-Dist: pytz
Requires-Dist: six (>=1.10.0)
Requires-Dist: typing-extensions
Requires-Dist: typing ; python_version < '3.5'
Provides-Extra: benchmark
Requires-Dist: asv (<0.4,>=0.3.1) ; extra == 'benchmark'
Requires-Dist: virtualenv ; extra == 'benchmark'
Provides-Extra: benchmark-deps
Requires-Dist: Jinja2 (==2.10) ; extra == 'benchmark-deps'
Requires-Dist: WebTest (==2.0.32) ; extra == 'benchmark-deps'
Provides-Extra: build
Requires-Dist: Cython (<0.30,>=0.28) ; extra == 'build'
Provides-Extra: docs
Requires-Dist: Sphinx (<2.2,>=2.1) ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme (<0.5,>=0.4.3) ; extra == 'docs'
Provides-Extra: test
Requires-Dist: codecov (<3.0.0,>=2.0.15) ; extra == 'test'
Requires-Dist: flake8 (<4.0.0,>=3.0.0) ; extra == 'test'
Requires-Dist: pytest-cov (<3.0.0,>=2.6.0) ; extra == 'test'
Requires-Dist: pytest-mock (>=1.11) ; extra == 'test'
Requires-Dist: pytest (<5.0.0,>=4.0.0) ; (python_version<'3.5') and extra == 'test'
Requires-Dist: mypy (<1.0,>=0.800) ; (python_version>='3.0') and extra == 'test'
Requires-Dist: pytest (<6.0.0,>=5.0.0) ; (python_version>='3.5') and extra == 'test'
Requires-Dist: pytest-randomly ; (python_version>='3.5') and extra == 'test'

wsgi_lineprof
=============
.. image:: https://badge.fury.io/py/wsgi-lineprof.svg
   :target: https://pypi.python.org/pypi/wsgi-lineprof/
   :alt: PyPI version
.. image:: https://img.shields.io/pypi/pyversions/wsgi_lineprof.svg
   :target: https://pypi.python.org/pypi/wsgi-lineprof/
   :alt: PyPI Supported Python Versions
.. image:: https://github.com/ymyzk/wsgi_lineprof/workflows/Tests/badge.svg
   :target: https://github.com/ymyzk/wsgi_lineprof/actions?workflow=Tests
   :alt: GitHub Actions (Tests)
.. image:: https://travis-ci.org/ymyzk/wsgi_lineprof.svg?branch=master
   :target: https://travis-ci.org/ymyzk/wsgi_lineprof
   :alt: Build Status
.. image:: https://readthedocs.org/projects/wsgi_lineprof/badge/?version=latest
   :target: https://wsgi_lineprof.readthedocs.io/
   :alt: Documentation Status

**wsgi_lineprof** is a WSGI middleware for line-by-line profiling.

wsgi_lineprof has the following features:

* *WSGI middleware*: It can be integrated with any WSGI-compatible applications and frameworks including Django, Pyramid, Flask, Bottle, and more.
* *Easily pluggable*: All configurations for profiling in one place. Users don't need to make any changes to their application.

wsgi_lineprof is *not recommended to be used in production environment* because of the overhead of profiling.

At a Glance
-----------
You can use wsgi_lineprof as a WSGI middleware of existing applications.

::

   $ pip install wsgi_lineprof

Apply wsgi_lineprof to the existing WSGI web application:

.. code-block:: python

   from wsgi_lineprof.middleware import LineProfilerMiddleware
   app = LineProfilerMiddleware(app)

Start the web application and access the application.
wsgi_lineprof writes results to stdout every time an HTTP request is processed by default.
You can see the output like this in your console:

::

   ... (snip) ...

   File: ./app.py
   Name: index
   Total time: 1.00518 [sec]
     Line      Hits         Time  Code
   ===================================
        9                         @app.route('/')
       10                         def index():
       11         1      1005175      time.sleep(1)
       12         1            4      return "Hello world!!"

   ... (snip) ...

Also, you can check the result on your web browser by accessing the special endpoint ``/wsgi_lineprof/``.

Please check `the documentation <https://wsgi-lineprof.readthedocs.io/en/latest/index.html>`_ for more details.


